digraph G {
charset="UTF-8";
	rankdir="LR";
	concentrate="true";
	"<PyiModuleGraph>" [label="<PyiModuleGraph>"];
	"anydbm" [label="<f0> MissingModule| <f1> anydbm",shape="record"];
	"whichdb" [label="<f0> MissingModule| <f1> whichdb",shape="record"];
	"dumbdbm" [label="<f0> MissingModule| <f1> dumbdbm",shape="record"];
	"dbm" [label="<f0> Package| <f1> dbm",shape="record"];
	"dbm.ndbm" [label="<f0> SourceModule| <f1> dbm.ndbm",shape="record"];
	"_dbm" [label="<f0> MissingModule| <f1> _dbm",shape="record"];
	"sys" [label="<f0> BuiltinModule| <f1> sys",shape="record"];
	"struct" [label="<f0> SourceModule| <f1> struct",shape="record"];
	"_struct" [label="<f0> BuiltinModule| <f1> _struct",shape="record"];
	"gdbm" [label="<f0> MissingModule| <f1> gdbm",shape="record"];
	"dbhash" [label="<f0> MissingModule| <f1> dbhash",shape="record"];
	"_elementtree" [label="<f0> Extension| <f1> _elementtree",shape="record"];
	"xml.etree.cElementTree" [label="<f0> SourceModule| <f1> xml.etree.cElementTree",shape="record"];
	"xml.etree" [label="<f0> Package| <f1> xml.etree",shape="record"];
	"xml" [label="<f0> Package| <f1> xml",shape="record"];
	"xml.sax.expatreader" [label="<f0> SourceModule| <f1> xml.sax.expatreader",shape="record"];
	"_weakref" [label="<f0> BuiltinModule| <f1> _weakref",shape="record"];
	"xml.sax.saxutils" [label="<f0> SourceModule| <f1> xml.sax.saxutils",shape="record"];
	"urllib.request" [label="<f0> SourceModule| <f1> urllib.request",shape="record"];
	"winreg" [label="<f0> BuiltinModule| <f1> winreg",shape="record"];
	"_scproxy" [label="<f0> MissingModule| <f1> _scproxy",shape="record"];
	"fnmatch" [label="<f0> SourceModule| <f1> fnmatch",shape="record"];
	"getpass" [label="<f0> SourceModule| <f1> getpass",shape="record"];
	"msvcrt" [label="<f0> BuiltinModule| <f1> msvcrt",shape="record"];
	"termios" [label="<f0> MissingModule| <f1> termios",shape="record"];
	"pwd" [label="<f0> MissingModule| <f1> pwd",shape="record"];
	"nturl2path" [label="<f0> SourceModule| <f1> nturl2path",shape="record"];
	"ftplib" [label="<f0> SourceModule| <f1> ftplib",shape="record"];
	"netrc" [label="<f0> SourceModule| <f1> netrc",shape="record"];
	"shlex" [label="<f0> SourceModule| <f1> shlex",shape="record"];
	"mimetypes" [label="<f0> SourceModule| <f1> mimetypes",shape="record"];
	"getopt" [label="<f0> SourceModule| <f1> getopt",shape="record"];
	"gettext" [label="<f0> SourceModule| <f1> gettext",shape="record"];
	"copy" [label="<f0> SourceModule| <f1> copy",shape="record"];
	"'org.python'" [label="<f0> MissingModule| <f1> 'org.python'",shape="record"];
	"errno" [label="<f0> BuiltinModule| <f1> errno",shape="record"];
	"builtins" [label="<f0> BuiltinModule| <f1> builtins",shape="record"];
	"_winapi" [label="<f0> BuiltinModule| <f1> _winapi",shape="record"];
	"email.utils" [label="<f0> SourceModule| <f1> email.utils",shape="record"];
	"email.charset" [label="<f0> SourceModule| <f1> email.charset",shape="record"];
	"email.encoders" [label="<f0> SourceModule| <f1> email.encoders",shape="record"];
	"quopri" [label="<f0> SourceModule| <f1> quopri",shape="record"];
	"binascii" [label="<f0> BuiltinModule| <f1> binascii",shape="record"];
	"email.errors" [label="<f0> SourceModule| <f1> email.errors",shape="record"];
	"email.quoprimime" [label="<f0> SourceModule| <f1> email.quoprimime",shape="record"];
	"email.base64mime" [label="<f0> SourceModule| <f1> email.base64mime",shape="record"];
	"email._parseaddr" [label="<f0> SourceModule| <f1> email._parseaddr",shape="record"];
	"calendar" [label="<f0> SourceModule| <f1> calendar",shape="record"];
	"argparse" [label="<f0> SourceModule| <f1> argparse",shape="record"];
	"textwrap" [label="<f0> SourceModule| <f1> textwrap",shape="record"];
	"shutil" [label="<f0> SourceModule| <f1> shutil",shape="record"];
	"zipfile" [label="<f0> SourceModule| <f1> zipfile",shape="record"];
	"py_compile" [label="<f0> SourceModule| <f1> py_compile",shape="record"];
	"os.path" [label="<f0> AliasNode| <f1> os.path",shape="record"];
	"importlib.machinery" [label="<f0> SourceModule| <f1> importlib.machinery",shape="record"];
	"importlib" [label="<f0> Package| <f1> importlib",shape="record"];
	"_frozen_importlib_external" [label="<f0> MissingModule| <f1> _frozen_importlib_external",shape="record"];
	"_frozen_importlib" [label="<f0> ExcludedModule| <f1> _frozen_importlib",shape="record"];
	"_imp" [label="<f0> BuiltinModule| <f1> _imp",shape="record"];
	"importlib._bootstrap" [label="<f0> SourceModule| <f1> importlib._bootstrap",shape="record"];
	"importlib._bootstrap_external" [label="<f0> SourceModule| <f1> importlib._bootstrap_external",shape="record"];
	"importlib.metadata" [label="<f0> Package| <f1> importlib.metadata",shape="record"];
	"typing" [label="<f0> SourceModule| <f1> typing",shape="record"];
	"_typing" [label="<f0> BuiltinModule| <f1> _typing",shape="record"];
	"importlib.abc" [label="<f0> SourceModule| <f1> importlib.abc",shape="record"];
	"importlib.resources.abc" [label="<f0> SourceModule| <f1> importlib.resources.abc",shape="record"];
	"importlib.resources" [label="<f0> Package| <f1> importlib.resources",shape="record"];
	"importlib.resources._legacy" [label="<f0> SourceModule| <f1> importlib.resources._legacy",shape="record"];
	"importlib.resources._common" [label="<f0> SourceModule| <f1> importlib.resources._common",shape="record"];
	"importlib.resources._adapters" [label="<f0> SourceModule| <f1> importlib.resources._adapters",shape="record"];
	"importlib._abc" [label="<f0> SourceModule| <f1> importlib._abc",shape="record"];
	"importlib.metadata._itertools" [label="<f0> SourceModule| <f1> importlib.metadata._itertools",shape="record"];
	"importlib.metadata._functools" [label="<f0> SourceModule| <f1> importlib.metadata._functools",shape="record"];
	"importlib.metadata._collections" [label="<f0> SourceModule| <f1> importlib.metadata._collections",shape="record"];
	"importlib.metadata._meta" [label="<f0> SourceModule| <f1> importlib.metadata._meta",shape="record"];
	"importlib.metadata._adapters" [label="<f0> SourceModule| <f1> importlib.metadata._adapters",shape="record"];
	"importlib.metadata._text" [label="<f0> SourceModule| <f1> importlib.metadata._text",shape="record"];
	"email.message" [label="<f0> SourceModule| <f1> email.message",shape="record"];
	"email.policy" [label="<f0> SourceModule| <f1> email.policy",shape="record"];
	"email.contentmanager" [label="<f0> SourceModule| <f1> email.contentmanager",shape="record"];
	"email.headerregistry" [label="<f0> SourceModule| <f1> email.headerregistry",shape="record"];
	"email._header_value_parser" [label="<f0> SourceModule| <f1> email._header_value_parser",shape="record"];
	"email.iterators" [label="<f0> SourceModule| <f1> email.iterators",shape="record"];
	"email.generator" [label="<f0> SourceModule| <f1> email.generator",shape="record"];
	"email._encoded_words" [label="<f0> SourceModule| <f1> email._encoded_words",shape="record"];
	"email._policybase" [label="<f0> SourceModule| <f1> email._policybase",shape="record"];
	"email.header" [label="<f0> SourceModule| <f1> email.header",shape="record"];
	"csv" [label="<f0> SourceModule| <f1> csv",shape="record"];
	"_csv" [label="<f0> BuiltinModule| <f1> _csv",shape="record"];
	"importlib.readers" [label="<f0> SourceModule| <f1> importlib.readers",shape="record"];
	"importlib.resources.readers" [label="<f0> SourceModule| <f1> importlib.resources.readers",shape="record"];
	"importlib.resources._itertools" [label="<f0> SourceModule| <f1> importlib.resources._itertools",shape="record"];
	"tokenize" [label="<f0> SourceModule| <f1> tokenize",shape="record"];
	"_tokenize" [label="<f0> BuiltinModule| <f1> _tokenize",shape="record"];
	"token" [label="<f0> SourceModule| <f1> token",shape="record"];
	"marshal" [label="<f0> BuiltinModule| <f1> marshal",shape="record"];
	"_warnings" [label="<f0> BuiltinModule| <f1> _warnings",shape="record"];
	"_io" [label="<f0> BuiltinModule| <f1> _io",shape="record"];
	"pathlib" [label="<f0> SourceModule| <f1> pathlib",shape="record"];
	"threading" [label="<f0> SourceModule| <f1> threading",shape="record"];
	"_threading_local" [label="<f0> SourceModule| <f1> _threading_local",shape="record"];
	"_collections" [label="<f0> BuiltinModule| <f1> _collections",shape="record"];
	"_thread" [label="<f0> BuiltinModule| <f1> _thread",shape="record"];
	"importlib.util" [label="<f0> SourceModule| <f1> importlib.util",shape="record"];
	"tarfile" [label="<f0> SourceModule| <f1> tarfile",shape="record"];
	"gzip" [label="<f0> SourceModule| <f1> gzip",shape="record"];
	"_compression" [label="<f0> SourceModule| <f1> _compression",shape="record"];
	"grp" [label="<f0> MissingModule| <f1> grp",shape="record"];
	"nt" [label="<f0> BuiltinModule| <f1> nt",shape="record"];
	"lzma" [label="<f0> SourceModule| <f1> lzma",shape="record"];
	"_lzma" [label="<f0> Extension| <f1> _lzma",shape="record"];
	"bz2" [label="<f0> SourceModule| <f1> bz2",shape="record"];
	"_bz2" [label="<f0> Extension| <f1> _bz2",shape="record"];
	"zlib" [label="<f0> BuiltinModule| <f1> zlib",shape="record"];
	"itertools" [label="<f0> BuiltinModule| <f1> itertools",shape="record"];
	"random" [label="<f0> SourceModule| <f1> random",shape="record"];
	"statistics" [label="<f0> SourceModule| <f1> statistics",shape="record"];
	"_statistics" [label="<f0> BuiltinModule| <f1> _statistics",shape="record"];
	"decimal" [label="<f0> SourceModule| <f1> decimal",shape="record"];
	"_pydecimal" [label="<f0> SourceModule| <f1> _pydecimal",shape="record"];
	"contextvars" [label="<f0> SourceModule| <f1> contextvars",shape="record"];
	"_contextvars" [label="<f0> BuiltinModule| <f1> _contextvars",shape="record"];
	"_decimal" [label="<f0> Extension| <f1> _decimal",shape="record"];
	"fractions" [label="<f0> SourceModule| <f1> fractions",shape="record"];
	"numbers" [label="<f0> SourceModule| <f1> numbers",shape="record"];
	"_sha512" [label="<f0> BuiltinModule| <f1> _sha512",shape="record"];
	"_random" [label="<f0> BuiltinModule| <f1> _random",shape="record"];
	"math" [label="<f0> BuiltinModule| <f1> math",shape="record"];
	"http.cookiejar" [label="<f0> SourceModule| <f1> http.cookiejar",shape="record"];
	"http" [label="<f0> Package| <f1> http",shape="record"];
	"logging" [label="<f0> Package| <f1> logging",shape="record"];
	"atexit" [label="<f0> BuiltinModule| <f1> atexit",shape="record"];
	"pickle" [label="<f0> SourceModule| <f1> pickle",shape="record"];
	"pprint" [label="<f0> SourceModule| <f1> pprint",shape="record"];
	"dataclasses" [label="<f0> SourceModule| <f1> dataclasses",shape="record"];
	"inspect" [label="<f0> SourceModule| <f1> inspect",shape="record"];
	"dis" [label="<f0> SourceModule| <f1> dis",shape="record"];
	"opcode" [label="<f0> SourceModule| <f1> opcode",shape="record"];
	"_opcode" [label="<f0> BuiltinModule| <f1> _opcode",shape="record"];
	"ast" [label="<f0> SourceModule| <f1> ast",shape="record"];
	"_ast" [label="<f0> BuiltinModule| <f1> _ast",shape="record"];
	"org" [label="<f0> MissingModule| <f1> org",shape="record"];
	"_compat_pickle" [label="<f0> SourceModule| <f1> _compat_pickle",shape="record"];
	"urllib" [label="<f0> Package| <f1> urllib",shape="record"];
	"urllib.pathname2url" [label="<f0> MissingModule| <f1> urllib.pathname2url",shape="record"];
	"ssl" [label="<f0> SourceModule| <f1> ssl",shape="record"];
	"urllib.response" [label="<f0> SourceModule| <f1> urllib.response",shape="record"];
	"urllib.error" [label="<f0> SourceModule| <f1> urllib.error",shape="record"];
	"contextlib" [label="<f0> SourceModule| <f1> contextlib",shape="record"];
	"tempfile" [label="<f0> SourceModule| <f1> tempfile",shape="record"];
	"string" [label="<f0> SourceModule| <f1> string",shape="record"];
	"_string" [label="<f0> BuiltinModule| <f1> _string",shape="record"];
	"socket" [label="<f0> SourceModule| <f1> socket",shape="record"];
	"array" [label="<f0> BuiltinModule| <f1> array",shape="record"];
	"selectors" [label="<f0> SourceModule| <f1> selectors",shape="record"];
	"select" [label="<f0> Extension| <f1> select",shape="record"];
	"_socket" [label="<f0> Extension| <f1> _socket",shape="record"];
	"http.client" [label="<f0> SourceModule| <f1> http.client",shape="record"];
	"email.parser" [label="<f0> SourceModule| <f1> email.parser",shape="record"];
	"email.feedparser" [label="<f0> SourceModule| <f1> email.feedparser",shape="record"];
	"hashlib" [label="<f0> SourceModule| <f1> hashlib",shape="record"];
	"_hashlib" [label="<f0> Extension| <f1> _hashlib",shape="record"];
	"_sha3" [label="<f0> BuiltinModule| <f1> _sha3",shape="record"];
	"_blake2" [label="<f0> BuiltinModule| <f1> _blake2",shape="record"];
	"_sha256" [label="<f0> BuiltinModule| <f1> _sha256",shape="record"];
	"_md5" [label="<f0> BuiltinModule| <f1> _md5",shape="record"];
	"_sha1" [label="<f0> BuiltinModule| <f1> _sha1",shape="record"];
	"email" [label="<f0> Package| <f1> email",shape="record"];
	"bisect" [label="<f0> SourceModule| <f1> bisect",shape="record"];
	"_bisect" [label="<f0> BuiltinModule| <f1> _bisect",shape="record"];
	"base64" [label="<f0> SourceModule| <f1> base64",shape="record"];
	"urllib.parse" [label="<f0> SourceModule| <f1> urllib.parse",shape="record"];
	"unicodedata" [label="<f0> Extension| <f1> unicodedata",shape="record"];
	"ipaddress" [label="<f0> SourceModule| <f1> ipaddress",shape="record"];
	"xml.sax" [label="<f0> Package| <f1> xml.sax",shape="record"];
	"xml.parsers.expat" [label="<f0> SourceModule| <f1> xml.parsers.expat",shape="record"];
	"xml.parsers" [label="<f0> Package| <f1> xml.parsers",shape="record"];
	"xml.sax.handler" [label="<f0> SourceModule| <f1> xml.sax.handler",shape="record"];
	"xml.sax._exceptions" [label="<f0> SourceModule| <f1> xml.sax._exceptions",shape="record"];
	"'java.lang'" [label="<f0> MissingModule| <f1> 'java.lang'",shape="record"];
	"xml.sax.xmlreader" [label="<f0> SourceModule| <f1> xml.sax.xmlreader",shape="record"];
	"xml.etree.ElementTree" [label="<f0> SourceModule| <f1> xml.etree.ElementTree",shape="record"];
	"xml.etree.ElementPath" [label="<f0> SourceModule| <f1> xml.etree.ElementPath",shape="record"];
	"xml.etree.ElementInclude" [label="<f0> SourceModule| <f1> xml.etree.ElementInclude",shape="record"];
	"pyexpat" [label="<f0> Extension| <f1> pyexpat",shape="record"];
	"setuptools._vendor.importlib_resources" [label="<f0> Package| <f1> setuptools._vendor.importlib_resources",shape="record"];
	"setuptools._vendor" [label="<f0> NamespacePackage| <f1> setuptools._vendor",shape="record"];
	"setuptools" [label="<f0> Package| <f1> setuptools",shape="record"];
	"setuptools._distutils.zosccompiler" [label="<f0> SourceModule| <f1> setuptools._distutils.zosccompiler",shape="record"];
	"setuptools._distutils.versionpredicate" [label="<f0> SourceModule| <f1> setuptools._distutils.versionpredicate",shape="record"];
	"setuptools._distutils.version" [label="<f0> SourceModule| <f1> setuptools._distutils.version",shape="record"];
	"setuptools._distutils.util" [label="<f0> SourceModule| <f1> setuptools._distutils.util",shape="record"];
	"distutils.sysconfig" [label="<f0> SourceModule| <f1> distutils.sysconfig",shape="record"];
	"_osx_support" [label="<f0> SourceModule| <f1> _osx_support",shape="record"];
	"distutils.text_file" [label="<f0> SourceModule| <f1> distutils.text_file",shape="record"];
	"distutils" [label="<f0> Package| <f1> distutils",shape="record"];
	"distutils.archive_util" [label="<f0> SourceModule| <f1> distutils.archive_util",shape="record"];
	"distutils.dir_util" [label="<f0> SourceModule| <f1> distutils.dir_util",shape="record"];
	"distutils.file_util" [label="<f0> SourceModule| <f1> distutils.file_util",shape="record"];
	"distutils.dep_util" [label="<f0> SourceModule| <f1> distutils.dep_util",shape="record"];
	"distutils.spawn" [label="<f0> SourceModule| <f1> distutils.spawn",shape="record"];
	"distutils.debug" [label="<f0> SourceModule| <f1> distutils.debug",shape="record"];
	"distutils.log" [label="<f0> SourceModule| <f1> distutils.log",shape="record"];
	"jaraco.functools" [label="<f0> AliasNode| <f1> jaraco.functools",shape="record"];
	"jaraco" [label="<f0> NamespacePackage| <f1> jaraco",shape="record"];
	"sysconfig" [label="<f0> SourceModule| <f1> sysconfig",shape="record"];
	"_aix_support" [label="<f0> SourceModule| <f1> _aix_support",shape="record"];
	"_bootsubprocess" [label="<f0> SourceModule| <f1> _bootsubprocess",shape="record"];
	"subprocess" [label="<f0> SourceModule| <f1> subprocess",shape="record"];
	"fcntl" [label="<f0> MissingModule| <f1> fcntl",shape="record"];
	"signal" [label="<f0> SourceModule| <f1> signal",shape="record"];
	"_signal" [label="<f0> BuiltinModule| <f1> _signal",shape="record"];
	"setuptools._distutils.unixccompiler" [label="<f0> SourceModule| <f1> setuptools._distutils.unixccompiler",shape="record"];
	"distutils.util" [label="<f0> SourceModule| <f1> distutils.util",shape="record"];
	"distutils.filelist" [label="<f0> SourceModule| <f1> distutils.filelist",shape="record"];
	"setuptools._distutils.text_file" [label="<f0> SourceModule| <f1> setuptools._distutils.text_file",shape="record"];
	"setuptools._distutils.sysconfig" [label="<f0> SourceModule| <f1> setuptools._distutils.sysconfig",shape="record"];
	"setuptools._distutils.spawn" [label="<f0> SourceModule| <f1> setuptools._distutils.spawn",shape="record"];
	"platform" [label="<f0> SourceModule| <f1> platform",shape="record"];
	"vms_lib" [label="<f0> MissingModule| <f1> vms_lib",shape="record"];
	"java" [label="<f0> MissingModule| <f1> java",shape="record"];
	"_winreg" [label="<f0> MissingModule| <f1> _winreg",shape="record"];
	"setuptools._distutils.log" [label="<f0> SourceModule| <f1> setuptools._distutils.log",shape="record"];
	"setuptools._distutils.filelist" [label="<f0> SourceModule| <f1> setuptools._distutils.filelist",shape="record"];
	"setuptools._distutils.file_util" [label="<f0> SourceModule| <f1> setuptools._distutils.file_util",shape="record"];
	"'distutils._modified'" [label="<f0> MissingModule| <f1> 'distutils._modified'",shape="record"];
	"setuptools._distutils.fancy_getopt" [label="<f0> SourceModule| <f1> setuptools._distutils.fancy_getopt",shape="record"];
	"setuptools._distutils.extension" [label="<f0> SourceModule| <f1> setuptools._distutils.extension",shape="record"];
	"setuptools._distutils.errors" [label="<f0> SourceModule| <f1> setuptools._distutils.errors",shape="record"];
	"setuptools._distutils.dist" [label="<f0> SourceModule| <f1> setuptools._distutils.dist",shape="record"];
	"distutils.versionpredicate" [label="<f0> SourceModule| <f1> distutils.versionpredicate",shape="record"];
	"distutils.version" [label="<f0> SourceModule| <f1> distutils.version",shape="record"];
	"distutils.command" [label="<f0> Package| <f1> distutils.command",shape="record"];
	"distutils.cmd" [label="<f0> SourceModule| <f1> distutils.cmd",shape="record"];
	"distutils.fancy_getopt" [label="<f0> SourceModule| <f1> distutils.fancy_getopt",shape="record"];
	"distutils.dist" [label="<f0> SourceModule| <f1> distutils.dist",shape="record"];
	"configparser" [label="<f0> SourceModule| <f1> configparser",shape="record"];
	"packaging.utils" [label="<f0> SourceModule| <f1> packaging.utils",shape="record"];
	"packaging" [label="<f0> Package| <f1> packaging",shape="record"];
	"pkg_resources" [label="<f0> Package| <f1> pkg_resources",shape="record"];
	"packaging.metadata" [label="<f0> SourceModule| <f1> packaging.metadata",shape="record"];
	"packaging._tokenizer" [label="<f0> SourceModule| <f1> packaging._tokenizer",shape="record"];
	"packaging._structures" [label="<f0> SourceModule| <f1> packaging._structures",shape="record"];
	"packaging._parser" [label="<f0> SourceModule| <f1> packaging._parser",shape="record"];
	"packaging._elffile" [label="<f0> SourceModule| <f1> packaging._elffile",shape="record"];
	"typing_extensions" [label="<f0> SourceModule| <f1> typing_extensions",shape="record"];
	"'_typeshed.importlib'" [label="<f0> MissingModule| <f1> '_typeshed.importlib'",shape="record"];
	"_typeshed" [label="<f0> MissingModule| <f1> _typeshed",shape="record"];
	"platformdirs" [label="<f0> Package| <f1> platformdirs",shape="record"];
	"platformdirs.android" [label="<f0> SourceModule| <f1> platformdirs.android",shape="record"];
	"jnius" [label="<f0> MissingModule| <f1> jnius",shape="record"];
	"android" [label="<f0> MissingModule| <f1> android",shape="record"];
	"platformdirs.unix" [label="<f0> SourceModule| <f1> platformdirs.unix",shape="record"];
	"platformdirs.macos" [label="<f0> SourceModule| <f1> platformdirs.macos",shape="record"];
	"platformdirs.windows" [label="<f0> SourceModule| <f1> platformdirs.windows",shape="record"];
	"ctypes" [label="<f0> Package| <f1> ctypes",shape="record"];
	"ctypes.wintypes" [label="<f0> SourceModule| <f1> ctypes.wintypes",shape="record"];
	"ctypes._endian" [label="<f0> SourceModule| <f1> ctypes._endian",shape="record"];
	"_ctypes" [label="<f0> Extension| <f1> _ctypes",shape="record"];
	"platformdirs.version" [label="<f0> SourceModule| <f1> platformdirs.version",shape="record"];
	"platformdirs.api" [label="<f0> SourceModule| <f1> platformdirs.api",shape="record"];
	"jaraco.text" [label="<f0> AliasNode| <f1> jaraco.text",shape="record"];
	"packaging.specifiers" [label="<f0> SourceModule| <f1> packaging.specifiers",shape="record"];
	"packaging.requirements" [label="<f0> SourceModule| <f1> packaging.requirements",shape="record"];
	"packaging.markers" [label="<f0> SourceModule| <f1> packaging.markers",shape="record"];
	"plistlib" [label="<f0> SourceModule| <f1> plistlib",shape="record"];
	"pkgutil" [label="<f0> SourceModule| <f1> pkgutil",shape="record"];
	"packaging._musllinux" [label="<f0> SourceModule| <f1> packaging._musllinux",shape="record"];
	"packaging._manylinux" [label="<f0> SourceModule| <f1> packaging._manylinux",shape="record"];
	"_manylinux" [label="<f0> MissingModule| <f1> _manylinux",shape="record"];
	"packaging.version" [label="<f0> SourceModule| <f1> packaging.version",shape="record"];
	"packaging.tags" [label="<f0> SourceModule| <f1> packaging.tags",shape="record"];
	"setuptools._distutils.dir_util" [label="<f0> SourceModule| <f1> setuptools._distutils.dir_util",shape="record"];
	"setuptools._distutils.dep_util" [label="<f0> SourceModule| <f1> setuptools._distutils.dep_util",shape="record"];
	"setuptools._distutils.debug" [label="<f0> SourceModule| <f1> setuptools._distutils.debug",shape="record"];
	"setuptools._distutils.cygwinccompiler" [label="<f0> SourceModule| <f1> setuptools._distutils.cygwinccompiler",shape="record"];
	"setuptools._distutils.core" [label="<f0> SourceModule| <f1> setuptools._distutils.core",shape="record"];
	"setuptools._distutils.compat.py39" [label="<f0> SourceModule| <f1> setuptools._distutils.compat.py39",shape="record"];
	"setuptools._distutils.compat.py38" [label="<f0> SourceModule| <f1> setuptools._distutils.compat.py38",shape="record"];
	"setuptools._distutils.compat" [label="<f0> Package| <f1> setuptools._distutils.compat",shape="record"];
	"setuptools._distutils.command.sdist" [label="<f0> SourceModule| <f1> setuptools._distutils.command.sdist",shape="record"];
	"glob" [label="<f0> SourceModule| <f1> glob",shape="record"];
	"'distutils._log'" [label="<f0> MissingModule| <f1> 'distutils._log'",shape="record"];
	"setuptools._distutils.command.install_scripts" [label="<f0> SourceModule| <f1> setuptools._distutils.command.install_scripts",shape="record"];
	"setuptools._distutils.command.install_lib" [label="<f0> SourceModule| <f1> setuptools._distutils.command.install_lib",shape="record"];
	"setuptools._distutils.command.install_headers" [label="<f0> SourceModule| <f1> setuptools._distutils.command.install_headers",shape="record"];
	"setuptools._distutils.command.install_egg_info" [label="<f0> SourceModule| <f1> setuptools._distutils.command.install_egg_info",shape="record"];
	"setuptools._distutils.command.install_data" [label="<f0> SourceModule| <f1> setuptools._distutils.command.install_data",shape="record"];
	"setuptools._distutils.command.install" [label="<f0> SourceModule| <f1> setuptools._distutils.command.install",shape="record"];
	"jaraco.collections" [label="<f0> Package| <f1> jaraco.collections",shape="record"];
	"_operator" [label="<f0> BuiltinModule| <f1> _operator",shape="record"];
	"site" [label="<f0> SourceModule| <f1> site",shape="record"];
	"usercustomize" [label="<f0> MissingModule| <f1> usercustomize",shape="record"];
	"sitecustomize" [label="<f0> MissingModule| <f1> sitecustomize",shape="record"];
	"rlcompleter" [label="<f0> SourceModule| <f1> rlcompleter",shape="record"];
	"readline" [label="<f0> MissingModule| <f1> readline",shape="record"];
	"_sitebuiltins" [label="<f0> SourceModule| <f1> _sitebuiltins",shape="record"];
	"pydoc" [label="<f0> SourceModule| <f1> pydoc",shape="record"];
	"webbrowser" [label="<f0> SourceModule| <f1> webbrowser",shape="record"];
	"http.server" [label="<f0> SourceModule| <f1> http.server",shape="record"];
	"socketserver" [label="<f0> SourceModule| <f1> socketserver",shape="record"];
	"html" [label="<f0> Package| <f1> html",shape="record"];
	"html.entities" [label="<f0> SourceModule| <f1> html.entities",shape="record"];
	"pydoc_data.topics" [label="<f0> SourceModule| <f1> pydoc_data.topics",shape="record"];
	"pydoc_data" [label="<f0> Package| <f1> pydoc_data",shape="record"];
	"tty" [label="<f0> SourceModule| <f1> tty",shape="record"];
	"setuptools._distutils.command.config" [label="<f0> SourceModule| <f1> setuptools._distutils.command.config",shape="record"];
	"setuptools._distutils.command.clean" [label="<f0> SourceModule| <f1> setuptools._distutils.command.clean",shape="record"];
	"setuptools._distutils.command.check" [label="<f0> SourceModule| <f1> setuptools._distutils.command.check",shape="record"];
	"setuptools._distutils.command.build_scripts" [label="<f0> SourceModule| <f1> setuptools._distutils.command.build_scripts",shape="record"];
	"setuptools._distutils.command.build_py" [label="<f0> SourceModule| <f1> setuptools._distutils.command.build_py",shape="record"];
	"setuptools._distutils.command.build_ext" [label="<f0> SourceModule| <f1> setuptools._distutils.command.build_ext",shape="record"];
	"concurrent.futures" [label="<f0> Package| <f1> concurrent.futures",shape="record"];
	"concurrent.futures.thread" [label="<f0> SourceModule| <f1> concurrent.futures.thread",shape="record"];
	"queue" [label="<f0> SourceModule| <f1> queue",shape="record"];
	"_queue" [label="<f0> Extension| <f1> _queue",shape="record"];
	"concurrent.futures.process" [label="<f0> SourceModule| <f1> concurrent.futures.process",shape="record"];
	"multiprocessing.synchronize" [label="<f0> SourceModule| <f1> multiprocessing.synchronize",shape="record"];
	"multiprocessing.heap" [label="<f0> SourceModule| <f1> multiprocessing.heap",shape="record"];
	"mmap" [label="<f0> BuiltinModule| <f1> mmap",shape="record"];
	"multiprocessing.resource_tracker" [label="<f0> SourceModule| <f1> multiprocessing.resource_tracker",shape="record"];
	"_posixshmem" [label="<f0> MissingModule| <f1> _posixshmem",shape="record"];
	"multiprocessing.spawn" [label="<f0> SourceModule| <f1> multiprocessing.spawn",shape="record"];
	"multiprocessing.set_start_method" [label="<f0> MissingModule| <f1> multiprocessing.set_start_method",shape="record"];
	"multiprocessing.get_start_method" [label="<f0> MissingModule| <f1> multiprocessing.get_start_method",shape="record"];
	"runpy" [label="<f0> SourceModule| <f1> runpy",shape="record"];
	"multiprocessing.util" [label="<f0> SourceModule| <f1> multiprocessing.util",shape="record"];
	"multiprocessing.forkserver" [label="<f0> SourceModule| <f1> multiprocessing.forkserver",shape="record"];
	"multiprocessing.process" [label="<f0> SourceModule| <f1> multiprocessing.process",shape="record"];
	"multiprocessing.context" [label="<f0> SourceModule| <f1> multiprocessing.context",shape="record"];
	"multiprocessing.popen_spawn_win32" [label="<f0> SourceModule| <f1> multiprocessing.popen_spawn_win32",shape="record"];
	"multiprocessing.popen_forkserver" [label="<f0> SourceModule| <f1> multiprocessing.popen_forkserver",shape="record"];
	"multiprocessing.popen_spawn_posix" [label="<f0> SourceModule| <f1> multiprocessing.popen_spawn_posix",shape="record"];
	"multiprocessing.popen_fork" [label="<f0> SourceModule| <f1> multiprocessing.popen_fork",shape="record"];
	"multiprocessing.sharedctypes" [label="<f0> SourceModule| <f1> multiprocessing.sharedctypes",shape="record"];
	"multiprocessing.get_context" [label="<f0> MissingModule| <f1> multiprocessing.get_context",shape="record"];
	"multiprocessing.pool" [label="<f0> SourceModule| <f1> multiprocessing.pool",shape="record"];
	"multiprocessing.dummy" [label="<f0> Package| <f1> multiprocessing.dummy",shape="record"];
	"multiprocessing.dummy.connection" [label="<f0> SourceModule| <f1> multiprocessing.dummy.connection",shape="record"];
	"multiprocessing.TimeoutError" [label="<f0> MissingModule| <f1> multiprocessing.TimeoutError",shape="record"];
	"multiprocessing.managers" [label="<f0> SourceModule| <f1> multiprocessing.managers",shape="record"];
	"multiprocessing.shared_memory" [label="<f0> SourceModule| <f1> multiprocessing.shared_memory",shape="record"];
	"secrets" [label="<f0> SourceModule| <f1> secrets",shape="record"];
	"hmac" [label="<f0> SourceModule| <f1> hmac",shape="record"];
	"multiprocessing.reduction" [label="<f0> SourceModule| <f1> multiprocessing.reduction",shape="record"];
	"multiprocessing.resource_sharer" [label="<f0> SourceModule| <f1> multiprocessing.resource_sharer",shape="record"];
	"_multiprocessing" [label="<f0> Extension| <f1> _multiprocessing",shape="record"];
	"multiprocessing.queues" [label="<f0> SourceModule| <f1> multiprocessing.queues",shape="record"];
	"multiprocessing.connection" [label="<f0> SourceModule| <f1> multiprocessing.connection",shape="record"];
	"xmlrpc.client" [label="<f0> SourceModule| <f1> xmlrpc.client",shape="record"];
	"xmlrpc" [label="<f0> Package| <f1> xmlrpc",shape="record"];
	"multiprocessing.BufferTooShort" [label="<f0> MissingModule| <f1> multiprocessing.BufferTooShort",shape="record"];
	"multiprocessing.AuthenticationError" [label="<f0> MissingModule| <f1> multiprocessing.AuthenticationError",shape="record"];
	"multiprocessing" [label="<f0> Package| <f1> multiprocessing",shape="record"];
	"multiprocessing.Queue" [label="<f0> MissingModule| <f1> multiprocessing.Queue",shape="record"];
	"multiprocessing.Process" [label="<f0> MissingModule| <f1> multiprocessing.Process",shape="record"];
	"multiprocessing.Pipe" [label="<f0> MissingModule| <f1> multiprocessing.Pipe",shape="record"];
	"multiprocessing.cpu_count" [label="<f0> MissingModule| <f1> multiprocessing.cpu_count",shape="record"];
	"multiprocessing.Pool" [label="<f0> MissingModule| <f1> multiprocessing.Pool",shape="record"];
	"multiprocessing.RLock" [label="<f0> MissingModule| <f1> multiprocessing.RLock",shape="record"];
	"concurrent.futures._base" [label="<f0> SourceModule| <f1> concurrent.futures._base",shape="record"];
	"concurrent" [label="<f0> Package| <f1> concurrent",shape="record"];
	"setuptools._distutils.command.build_clib" [label="<f0> SourceModule| <f1> setuptools._distutils.command.build_clib",shape="record"];
	"setuptools._distutils.command.build" [label="<f0> SourceModule| <f1> setuptools._distutils.command.build",shape="record"];
	"setuptools._distutils.command.bdist_rpm" [label="<f0> SourceModule| <f1> setuptools._distutils.command.bdist_rpm",shape="record"];
	"setuptools._distutils.command.bdist_dumb" [label="<f0> SourceModule| <f1> setuptools._distutils.command.bdist_dumb",shape="record"];
	"setuptools._distutils.command.bdist" [label="<f0> SourceModule| <f1> setuptools._distutils.command.bdist",shape="record"];
	"setuptools._distutils.command._framework_compat" [label="<f0> SourceModule| <f1> setuptools._distutils.command._framework_compat",shape="record"];
	"setuptools._distutils.command" [label="<f0> Package| <f1> setuptools._distutils.command",shape="record"];
	"setuptools._distutils.cmd" [label="<f0> SourceModule| <f1> setuptools._distutils.cmd",shape="record"];
	"setuptools._distutils.ccompiler" [label="<f0> SourceModule| <f1> setuptools._distutils.ccompiler",shape="record"];
	"more_itertools" [label="<f0> AliasNode| <f1> more_itertools",shape="record"];
	"setuptools._distutils.archive_util" [label="<f0> SourceModule| <f1> setuptools._distutils.archive_util",shape="record"];
	"setuptools._distutils._msvccompiler" [label="<f0> SourceModule| <f1> setuptools._distutils._msvccompiler",shape="record"];
	"unittest.mock" [label="<f0> SourceModule| <f1> unittest.mock",shape="record"];
	"unittest" [label="<f0> Package| <f1> unittest",shape="record"];
	"unittest.async_case" [label="<f0> SourceModule| <f1> unittest.async_case",shape="record"];
	"unittest.signals" [label="<f0> SourceModule| <f1> unittest.signals",shape="record"];
	"unittest.main" [label="<f0> SourceModule| <f1> unittest.main",shape="record"];
	"unittest.runner" [label="<f0> SourceModule| <f1> unittest.runner",shape="record"];
	"unittest.loader" [label="<f0> SourceModule| <f1> unittest.loader",shape="record"];
	"unittest.suite" [label="<f0> SourceModule| <f1> unittest.suite",shape="record"];
	"unittest.case" [label="<f0> SourceModule| <f1> unittest.case",shape="record"];
	"unittest._log" [label="<f0> SourceModule| <f1> unittest._log",shape="record"];
	"difflib" [label="<f0> SourceModule| <f1> difflib",shape="record"];
	"unittest.result" [label="<f0> SourceModule| <f1> unittest.result",shape="record"];
	"unittest.util" [label="<f0> SourceModule| <f1> unittest.util",shape="record"];
	"asyncio" [label="<f0> Package| <f1> asyncio",shape="record"];
	"asyncio.unix_events" [label="<f0> SourceModule| <f1> asyncio.unix_events",shape="record"];
	"asyncio.log" [label="<f0> SourceModule| <f1> asyncio.log",shape="record"];
	"asyncio.windows_events" [label="<f0> SourceModule| <f1> asyncio.windows_events",shape="record"];
	"_overlapped" [label="<f0> Extension| <f1> _overlapped",shape="record"];
	"asyncio.windows_utils" [label="<f0> SourceModule| <f1> asyncio.windows_utils",shape="record"];
	"asyncio.selector_events" [label="<f0> SourceModule| <f1> asyncio.selector_events",shape="record"];
	"asyncio.proactor_events" [label="<f0> SourceModule| <f1> asyncio.proactor_events",shape="record"];
	"asyncio.base_subprocess" [label="<f0> SourceModule| <f1> asyncio.base_subprocess",shape="record"];
	"asyncio.threads" [label="<f0> SourceModule| <f1> asyncio.threads",shape="record"];
	"asyncio.timeouts" [label="<f0> SourceModule| <f1> asyncio.timeouts",shape="record"];
	"asyncio.taskgroups" [label="<f0> SourceModule| <f1> asyncio.taskgroups",shape="record"];
	"asyncio.subprocess" [label="<f0> SourceModule| <f1> asyncio.subprocess",shape="record"];
	"asyncio.streams" [label="<f0> SourceModule| <f1> asyncio.streams",shape="record"];
	"asyncio.queues" [label="<f0> SourceModule| <f1> asyncio.queues",shape="record"];
	"asyncio.runners" [label="<f0> SourceModule| <f1> asyncio.runners",shape="record"];
	"asyncio.base_events" [label="<f0> SourceModule| <f1> asyncio.base_events",shape="record"];
	"asyncio.trsock" [label="<f0> SourceModule| <f1> asyncio.trsock",shape="record"];
	"asyncio.staggered" [label="<f0> SourceModule| <f1> asyncio.staggered",shape="record"];
	"asyncio.tasks" [label="<f0> SourceModule| <f1> asyncio.tasks",shape="record"];
	"_asyncio" [label="<f0> Extension| <f1> _asyncio",shape="record"];
	"asyncio.locks" [label="<f0> SourceModule| <f1> asyncio.locks",shape="record"];
	"asyncio.base_tasks" [label="<f0> SourceModule| <f1> asyncio.base_tasks",shape="record"];
	"asyncio.mixins" [label="<f0> SourceModule| <f1> asyncio.mixins",shape="record"];
	"asyncio.sslproto" [label="<f0> SourceModule| <f1> asyncio.sslproto",shape="record"];
	"asyncio.transports" [label="<f0> SourceModule| <f1> asyncio.transports",shape="record"];
	"asyncio.protocols" [label="<f0> SourceModule| <f1> asyncio.protocols",shape="record"];
	"asyncio.futures" [label="<f0> SourceModule| <f1> asyncio.futures",shape="record"];
	"asyncio.base_futures" [label="<f0> SourceModule| <f1> asyncio.base_futures",shape="record"];
	"asyncio.exceptions" [label="<f0> SourceModule| <f1> asyncio.exceptions",shape="record"];
	"asyncio.events" [label="<f0> SourceModule| <f1> asyncio.events",shape="record"];
	"asyncio.DefaultEventLoopPolicy" [label="<f0> MissingModule| <f1> asyncio.DefaultEventLoopPolicy",shape="record"];
	"asyncio.format_helpers" [label="<f0> SourceModule| <f1> asyncio.format_helpers",shape="record"];
	"asyncio.coroutines" [label="<f0> SourceModule| <f1> asyncio.coroutines",shape="record"];
	"asyncio.constants" [label="<f0> SourceModule| <f1> asyncio.constants",shape="record"];
	"setuptools._distutils._modified" [label="<f0> SourceModule| <f1> setuptools._distutils._modified",shape="record"];
	"setuptools._distutils._macos_compat" [label="<f0> SourceModule| <f1> setuptools._distutils._macos_compat",shape="record"];
	"setuptools._distutils._log" [label="<f0> SourceModule| <f1> setuptools._distutils._log",shape="record"];
	"setuptools._distutils" [label="<f0> Package| <f1> setuptools._distutils",shape="record"];
	"_distutils_hack" [label="<f0> Package| <f1> _distutils_hack",shape="record"];
	"setuptools.msvc" [label="<f0> SourceModule| <f1> setuptools.msvc",shape="record"];
	"json" [label="<f0> Package| <f1> json",shape="record"];
	"json.encoder" [label="<f0> SourceModule| <f1> json.encoder",shape="record"];
	"json.decoder" [label="<f0> SourceModule| <f1> json.decoder",shape="record"];
	"json.scanner" [label="<f0> SourceModule| <f1> json.scanner",shape="record"];
	"distutils.command.build_ext" [label="<f0> SourceModule| <f1> distutils.command.build_ext",shape="record"];
	"distutils._msvccompiler" [label="<f0> SourceModule| <f1> distutils._msvccompiler",shape="record"];
	"distutils.ccompiler" [label="<f0> SourceModule| <f1> distutils.ccompiler",shape="record"];
	"distutils.extension" [label="<f0> SourceModule| <f1> distutils.extension",shape="record"];
	"distutils.errors" [label="<f0> SourceModule| <f1> distutils.errors",shape="record"];
	"distutils.core" [label="<f0> SourceModule| <f1> distutils.core",shape="record"];
	"distutils.config" [label="<f0> SourceModule| <f1> distutils.config",shape="record"];
	"cgi" [label="<f0> SourceModule| <f1> cgi",shape="record"];
	"setuptools.warnings" [label="<f0> SourceModule| <f1> setuptools.warnings",shape="record"];
	"setuptools.version" [label="<f0> SourceModule| <f1> setuptools.version",shape="record"];
	"setuptools._importlib" [label="<f0> SourceModule| <f1> setuptools._importlib",shape="record"];
	"importlib_resources" [label="<f0> AliasNode| <f1> importlib_resources",shape="record"];
	"importlib_resources.files" [label="<f0> MissingModule| <f1> importlib_resources.files",shape="record"];
	"importlib_metadata" [label="<f0> AliasNode| <f1> importlib_metadata",shape="record"];
	"setuptools.extension" [label="<f0> SourceModule| <f1> setuptools.extension",shape="record"];
	"setuptools._path" [label="<f0> SourceModule| <f1> setuptools._path",shape="record"];
	"setuptools.dist" [label="<f0> SourceModule| <f1> setuptools.dist",shape="record"];
	"setuptools.command.bdist_wheel" [label="<f0> SourceModule| <f1> setuptools.command.bdist_wheel",shape="record"];
	"setuptools._vendor.wheel.macosx_libfile" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.macosx_libfile",shape="record"];
	"wheel" [label="<f0> AliasNode| <f1> wheel",shape="record"];
	"setuptools.command.egg_info" [label="<f0> SourceModule| <f1> setuptools.command.egg_info",shape="record"];
	"setuptools.command._requirestxt" [label="<f0> SourceModule| <f1> setuptools.command._requirestxt",shape="record"];
	"setuptools.glob" [label="<f0> SourceModule| <f1> setuptools.glob",shape="record"];
	"setuptools.command.setopt" [label="<f0> SourceModule| <f1> setuptools.command.setopt",shape="record"];
	"setuptools.command.sdist" [label="<f0> SourceModule| <f1> setuptools.command.sdist",shape="record"];
	"distutils.command.sdist" [label="<f0> SourceModule| <f1> distutils.command.sdist",shape="record"];
	"setuptools.command.build" [label="<f0> SourceModule| <f1> setuptools.command.build",shape="record"];
	"distutils.command.build" [label="<f0> SourceModule| <f1> distutils.command.build",shape="record"];
	"setuptools.command.bdist_egg" [label="<f0> SourceModule| <f1> setuptools.command.bdist_egg",shape="record"];
	"setuptools.unicode_utils" [label="<f0> SourceModule| <f1> setuptools.unicode_utils",shape="record"];
	"setuptools.compat.py39" [label="<f0> SourceModule| <f1> setuptools.compat.py39",shape="record"];
	"setuptools.compat" [label="<f0> Package| <f1> setuptools.compat",shape="record"];
	"setuptools._vendor.wheel.wheelfile" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.wheelfile",shape="record"];
	"setuptools._vendor.wheel.util" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.util",shape="record"];
	"setuptools._vendor.wheel._setuptools_logging" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel._setuptools_logging",shape="record"];
	"setuptools._vendor.wheel.cli" [label="<f0> Package| <f1> setuptools._vendor.wheel.cli",shape="record"];
	"setuptools._vendor.wheel.cli.tags" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.cli.tags",shape="record"];
	"setuptools._vendor.wheel.cli.convert" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.cli.convert",shape="record"];
	"setuptools._vendor.wheel.bdist_wheel" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.bdist_wheel",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.version" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.version",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._structures" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._structures",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.tags" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.tags",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._musllinux",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._elffile" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._elffile",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._manylinux",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging" [label="<f0> Package| <f1> setuptools._vendor.wheel.vendored.packaging",shape="record"];
	"setuptools._vendor.wheel.vendored" [label="<f0> Package| <f1> setuptools._vendor.wheel.vendored",shape="record"];
	"setuptools._vendor.wheel.cli.pack" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.cli.pack",shape="record"];
	"setuptools._vendor.wheel.cli.unpack" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.cli.unpack",shape="record"];
	"setuptools._vendor.wheel.metadata" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.metadata",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.requirements" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.requirements",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.utils" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.utils",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.specifiers",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging.markers" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging.markers",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._tokenizer",shape="record"];
	"setuptools._vendor.wheel.vendored.packaging._parser" [label="<f0> SourceModule| <f1> setuptools._vendor.wheel.vendored.packaging._parser",shape="record"];
	"setuptools.installer" [label="<f0> SourceModule| <f1> setuptools.installer",shape="record"];
	"setuptools.wheel" [label="<f0> SourceModule| <f1> setuptools.wheel",shape="record"];
	"setuptools.archive_util" [label="<f0> SourceModule| <f1> setuptools.archive_util",shape="record"];
	"setuptools.config.setupcfg" [label="<f0> SourceModule| <f1> setuptools.config.setupcfg",shape="record"];
	"setuptools.config.expand" [label="<f0> SourceModule| <f1> setuptools.config.expand",shape="record"];
	"setuptools.errors" [label="<f0> SourceModule| <f1> setuptools.errors",shape="record"];
	"setuptools.config.pyprojecttoml" [label="<f0> SourceModule| <f1> setuptools.config.pyprojecttoml",shape="record"];
	"setuptools.config._validate_pyproject" [label="<f0> Package| <f1> setuptools.config._validate_pyproject",shape="record"];
	"setuptools.config._validate_pyproject.fastjsonschema_validations" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.fastjsonschema_validations",shape="record"];
	"setuptools.config._validate_pyproject.fastjsonschema_exceptions" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.fastjsonschema_exceptions",shape="record"];
	"setuptools.config._validate_pyproject.extra_validations" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.extra_validations",shape="record"];
	"setuptools.config._validate_pyproject.error_reporting" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.error_reporting",shape="record"];
	"setuptools.config._validate_pyproject.formats" [label="<f0> SourceModule| <f1> setuptools.config._validate_pyproject.formats",shape="record"];
	"trove_classifiers" [label="<f0> MissingModule| <f1> trove_classifiers",shape="record"];
	"setuptools._vendor.packaging.requirements" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.requirements",shape="record"];
	"setuptools._vendor.packaging.utils" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.utils",shape="record"];
	"setuptools._vendor.packaging.version" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.version",shape="record"];
	"setuptools._vendor.packaging._structures" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._structures",shape="record"];
	"setuptools._vendor.packaging.tags" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.tags",shape="record"];
	"setuptools._vendor.packaging._musllinux" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._musllinux",shape="record"];
	"setuptools._vendor.packaging._elffile" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._elffile",shape="record"];
	"setuptools._vendor.packaging._manylinux" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._manylinux",shape="record"];
	"setuptools._vendor.packaging.specifiers" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.specifiers",shape="record"];
	"setuptools._vendor.packaging.markers" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.markers",shape="record"];
	"setuptools._vendor.packaging._tokenizer" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._tokenizer",shape="record"];
	"setuptools._vendor.packaging._parser" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._parser",shape="record"];
	"setuptools._vendor.packaging" [label="<f0> Package| <f1> setuptools._vendor.packaging",shape="record"];
	"setuptools.compat.py310" [label="<f0> SourceModule| <f1> setuptools.compat.py310",shape="record"];
	"tomli" [label="<f0> AliasNode| <f1> tomli",shape="record"];
	"tomllib" [label="<f0> Package| <f1> tomllib",shape="record"];
	"tomllib._parser" [label="<f0> SourceModule| <f1> tomllib._parser",shape="record"];
	"tomllib._types" [label="<f0> SourceModule| <f1> tomllib._types",shape="record"];
	"tomllib._re" [label="<f0> SourceModule| <f1> tomllib._re",shape="record"];
	"setuptools.config._apply_pyprojecttoml" [label="<f0> SourceModule| <f1> setuptools.config._apply_pyprojecttoml",shape="record"];
	"setuptools.config" [label="<f0> Package| <f1> setuptools.config",shape="record"];
	"setuptools.windows_support" [label="<f0> SourceModule| <f1> setuptools.windows_support",shape="record"];
	"setuptools.command" [label="<f0> Package| <f1> setuptools.command",shape="record"];
	"distutils.command.bdist" [label="<f0> SourceModule| <f1> distutils.command.bdist",shape="record"];
	"setuptools._entry_points" [label="<f0> SourceModule| <f1> setuptools._entry_points",shape="record"];
	"setuptools._itertools" [label="<f0> SourceModule| <f1> setuptools._itertools",shape="record"];
	"setuptools.discovery" [label="<f0> SourceModule| <f1> setuptools.discovery",shape="record"];
	"setuptools.depends" [label="<f0> SourceModule| <f1> setuptools.depends",shape="record"];
	"setuptools._imp" [label="<f0> SourceModule| <f1> setuptools._imp",shape="record"];
	"setuptools.logging" [label="<f0> SourceModule| <f1> setuptools.logging",shape="record"];
	"setuptools.monkey" [label="<f0> SourceModule| <f1> setuptools.monkey",shape="record"];
	"setuptools._core_metadata" [label="<f0> SourceModule| <f1> setuptools._core_metadata",shape="record"];
	"setuptools._reqs" [label="<f0> SourceModule| <f1> setuptools._reqs",shape="record"];
	"setuptools._normalization" [label="<f0> SourceModule| <f1> setuptools._normalization",shape="record"];
	"_distutils_hack.override" [label="<f0> SourceModule| <f1> _distutils_hack.override",shape="record"];
	"__future__" [label="<f0> SourceModule| <f1> __future__",shape="record"];
	"setuptools._vendor.importlib_resources.abc" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources.abc",shape="record"];
	"setuptools._vendor.importlib_resources.compat.py38" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources.compat.py38",shape="record"];
	"setuptools._vendor.importlib_resources.compat" [label="<f0> Package| <f1> setuptools._vendor.importlib_resources.compat",shape="record"];
	"setuptools._vendor.importlib_resources.functional" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources.functional",shape="record"];
	"setuptools._vendor.importlib_resources._common" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources._common",shape="record"];
	"setuptools._vendor.importlib_resources.future.adapters" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources.future.adapters",shape="record"];
	"setuptools._vendor.importlib_resources.future" [label="<f0> Package| <f1> setuptools._vendor.importlib_resources.future",shape="record"];
	"setuptools._vendor.importlib_resources._adapters" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources._adapters",shape="record"];
	"setuptools._vendor.importlib_resources.readers" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources.readers",shape="record"];
	"setuptools._vendor.importlib_resources.compat.py39" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources.compat.py39",shape="record"];
	"zipp" [label="<f0> AliasNode| <f1> zipp",shape="record"];
	"setuptools._vendor.importlib_resources._itertools" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_resources._itertools",shape="record"];
	"setuptools._vendor.wheel" [label="<f0> Package| <f1> setuptools._vendor.wheel",shape="record"];
	"setuptools._vendor.tomli" [label="<f0> Package| <f1> setuptools._vendor.tomli",shape="record"];
	"setuptools._vendor.tomli._parser" [label="<f0> SourceModule| <f1> setuptools._vendor.tomli._parser",shape="record"];
	"setuptools._vendor.tomli._types" [label="<f0> SourceModule| <f1> setuptools._vendor.tomli._types",shape="record"];
	"setuptools._vendor.tomli._re" [label="<f0> SourceModule| <f1> setuptools._vendor.tomli._re",shape="record"];
	"setuptools._vendor.importlib_metadata" [label="<f0> Package| <f1> setuptools._vendor.importlib_metadata",shape="record"];
	"setuptools._vendor.importlib_metadata._adapters" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._adapters",shape="record"];
	"setuptools._vendor.importlib_metadata._text" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._text",shape="record"];
	"setuptools._vendor.importlib_metadata._itertools" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._itertools",shape="record"];
	"setuptools._vendor.importlib_metadata._functools" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._functools",shape="record"];
	"setuptools._vendor.importlib_metadata._compat" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._compat",shape="record"];
	"setuptools._vendor.importlib_metadata._collections" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._collections",shape="record"];
	"setuptools._vendor.importlib_metadata.compat.py311" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata.compat.py311",shape="record"];
	"setuptools._vendor.importlib_metadata.compat.py39" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata.compat.py39",shape="record"];
	"setuptools._vendor.importlib_metadata.compat" [label="<f0> Package| <f1> setuptools._vendor.importlib_metadata.compat",shape="record"];
	"setuptools._vendor.importlib_metadata._meta" [label="<f0> SourceModule| <f1> setuptools._vendor.importlib_metadata._meta",shape="record"];
	"setuptools._vendor.zipp" [label="<f0> Package| <f1> setuptools._vendor.zipp",shape="record"];
	"setuptools._vendor.zipp.glob" [label="<f0> SourceModule| <f1> setuptools._vendor.zipp.glob",shape="record"];
	"setuptools._vendor.zipp.compat.py310" [label="<f0> SourceModule| <f1> setuptools._vendor.zipp.compat.py310",shape="record"];
	"setuptools._vendor.zipp.compat" [label="<f0> Package| <f1> setuptools._vendor.zipp.compat",shape="record"];
	"setuptools._vendor.jaraco.text" [label="<f0> Package| <f1> setuptools._vendor.jaraco.text",shape="record"];
	"setuptools._vendor.jaraco" [label="<f0> NamespacePackage| <f1> setuptools._vendor.jaraco",shape="record"];
	"jaraco.context" [label="<f0> AliasNode| <f1> jaraco.context",shape="record"];
	"setuptools._vendor.jaraco.context" [label="<f0> SourceModule| <f1> setuptools._vendor.jaraco.context",shape="record"];
	"backports.tarfile" [label="<f0> AliasNode| <f1> backports.tarfile",shape="record"];
	"backports" [label="<f0> Package| <f1> backports",shape="record"];
	"setuptools._vendor.backports.tarfile" [label="<f0> Package| <f1> setuptools._vendor.backports.tarfile",shape="record"];
	"setuptools._vendor.backports" [label="<f0> Package| <f1> setuptools._vendor.backports",shape="record"];
	"setuptools._vendor.backports.tarfile.compat.py38" [label="<f0> SourceModule| <f1> setuptools._vendor.backports.tarfile.compat.py38",shape="record"];
	"setuptools._vendor.backports.tarfile.compat" [label="<f0> Package| <f1> setuptools._vendor.backports.tarfile.compat",shape="record"];
	"setuptools._vendor.jaraco.functools" [label="<f0> Package| <f1> setuptools._vendor.jaraco.functools",shape="record"];
	"setuptools._vendor.more_itertools" [label="<f0> Package| <f1> setuptools._vendor.more_itertools",shape="record"];
	"setuptools._vendor.more_itertools.recipes" [label="<f0> SourceModule| <f1> setuptools._vendor.more_itertools.recipes",shape="record"];
	"setuptools._vendor.more_itertools.more" [label="<f0> SourceModule| <f1> setuptools._vendor.more_itertools.more",shape="record"];
	"_json" [label="<f0> BuiltinModule| <f1> _json",shape="record"];
	"_ssl" [label="<f0> Extension| <f1> _ssl",shape="record"];
	"zipimport" [label="<f0> SourceModule| <f1> zipimport",shape="record"];
	"D:\ai\main.py" [label="<f0> Script| <f1> D:\ai\main.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pythoncom.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pythoncom.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pywintypes.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pywintypes.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py",shape="record"];
	"pyimod02_importers" [label="<f0> MissingModule| <f1> pyimod02_importers",shape="record"];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth__tkinter.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth__tkinter.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_gstreamer.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_gstreamer.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_kivy.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_kivy.py",shape="record"];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" [label="<f0> Script| <f1> D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py",shape="record"];
	"kivy.core.window" [label="<f0> Package| <f1> kivy.core.window",shape="record"];
	"kivy.uix.vkeyboard" [label="<f0> SourceModule| <f1> kivy.uix.vkeyboard",shape="record"];
	"kivy.uix" [label="<f0> Package| <f1> kivy.uix",shape="record"];
	"kivy.resources" [label="<f0> SourceModule| <f1> kivy.resources",shape="record"];
	"kivy.core.image" [label="<f0> Package| <f1> kivy.core.image",shape="record"];
	"kivy.core.image._img_sdl2" [label="<f0> Extension| <f1> kivy.core.image._img_sdl2",shape="record"];
	"kivy.graphics.texture" [label="<f0> Extension| <f1> kivy.graphics.texture",shape="record"];
	"kivy.compat" [label="<f0> SourceModule| <f1> kivy.compat",shape="record"];
	"Queue" [label="<f0> MissingModule| <f1> Queue",shape="record"];
	"kivy.atlas" [label="<f0> SourceModule| <f1> kivy.atlas",shape="record"];
	"PIL" [label="<f0> MissingModule| <f1> PIL",shape="record"];
	"imghdr" [label="<f0> SourceModule| <f1> imghdr",shape="record"];
	"kivy.uix.scatter" [label="<f0> SourceModule| <f1> kivy.uix.scatter",shape="record"];
	"kivy.vector" [label="<f0> SourceModule| <f1> kivy.vector",shape="record"];
	"kivy" [label="<f0> Package| <f1> kivy",shape="record"];
	"kivy.graphics.scissor_instructions" [label="<f0> Extension| <f1> kivy.graphics.scissor_instructions",shape="record"];
	"kivy.uix.settings" [label="<f0> SourceModule| <f1> kivy.uix.settings",shape="record"];
	"kivy.uix.recycleview.views" [label="<f0> SourceModule| <f1> kivy.uix.recycleview.views",shape="record"];
	"kivy.uix.recycleview" [label="<f0> Package| <f1> kivy.uix.recycleview",shape="record"];
	"kivy.core.text.text_pygame" [label="<f0> SourceModule| <f1> kivy.core.text.text_pygame",shape="record"];
	"pygame" [label="<f0> MissingModule| <f1> pygame",shape="record"];
	"kivy.graphics.cgl_backend.cgl_mock" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_mock",shape="record"];
	"kivy.core.text.text_layout" [label="<f0> Extension| <f1> kivy.core.text.text_layout",shape="record"];
	"kivy.uix.camera" [label="<f0> SourceModule| <f1> kivy.uix.camera",shape="record"];
	"kivy.graphics.compiler" [label="<f0> Extension| <f1> kivy.graphics.compiler",shape="record"];
	"kivy.uix.recycleview.datamodel" [label="<f0> SourceModule| <f1> kivy.uix.recycleview.datamodel",shape="record"];
	"kivy.uix.splitter" [label="<f0> SourceModule| <f1> kivy.uix.splitter",shape="record"];
	"kivy.core.video" [label="<f0> Package| <f1> kivy.core.video",shape="record"];
	"kivy.lib.gstplayer" [label="<f0> Package| <f1> kivy.lib.gstplayer",shape="record"];
	"kivy.lib.gstplayer._gstplayer" [label="<f0> Extension| <f1> kivy.lib.gstplayer._gstplayer",shape="record"];
	"kivy.lib" [label="<f0> Package| <f1> kivy.lib",shape="record"];
	"kivy.core.text.text_pango" [label="<f0> SourceModule| <f1> kivy.core.text.text_pango",shape="record"];
	"'kivy.core.text._text_pango'" [label="<f0> MissingModule| <f1> 'kivy.core.text._text_pango'",shape="record"];
	"kivy.uix.screenmanager" [label="<f0> SourceModule| <f1> kivy.uix.screenmanager",shape="record"];
	"kivy.lang" [label="<f0> Package| <f1> kivy.lang",shape="record"];
	"kivy.lang.builder" [label="<f0> SourceModule| <f1> kivy.lang.builder",shape="record"];
	"kivy._event" [label="<f0> Extension| <f1> kivy._event",shape="record"];
	"kivy.core.image.img_pygame" [label="<f0> SourceModule| <f1> kivy.core.image.img_pygame",shape="record"];
	"kivy.core.clipboard._clipboard_sdl2" [label="<f0> Extension| <f1> kivy.core.clipboard._clipboard_sdl2",shape="record"];
	"kivy.uix.modalview" [label="<f0> SourceModule| <f1> kivy.uix.modalview",shape="record"];
	"kivy.core.image.img_pil" [label="<f0> SourceModule| <f1> kivy.core.image.img_pil",shape="record"];
	"Image" [label="<f0> MissingModule| <f1> Image",shape="record"];
	"kivy.core.image.img_tex" [label="<f0> SourceModule| <f1> kivy.core.image.img_tex",shape="record"];
	"kivy.uix.rst" [label="<f0> SourceModule| <f1> kivy.uix.rst",shape="record"];
	"docutils.parsers.rst.directives" [label="<f0> Package| <f1> docutils.parsers.rst.directives",shape="record"];
	"docutils.parsers.rst.languages.en" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.en",shape="record"];
	"docutils.parsers.rst.languages" [label="<f0> Package| <f1> docutils.parsers.rst.languages",shape="record"];
	"docutils.languages" [label="<f0> Package| <f1> docutils.languages",shape="record"];
	"docutils.utils" [label="<f0> Package| <f1> docutils.utils",shape="record"];
	"docutils.utils.smartquotes" [label="<f0> SourceModule| <f1> docutils.utils.smartquotes",shape="record"];
	"docutils.utils.urischemes" [label="<f0> SourceModule| <f1> docutils.utils.urischemes",shape="record"];
	"docutils.utils.roman" [label="<f0> SourceModule| <f1> docutils.utils.roman",shape="record"];
	"docutils.utils.punctuation_chars" [label="<f0> SourceModule| <f1> docutils.utils.punctuation_chars",shape="record"];
	"docutils.io" [label="<f0> SourceModule| <f1> docutils.io",shape="record"];
	"docutils.frontend" [label="<f0> SourceModule| <f1> docutils.frontend",shape="record"];
	"optparse" [label="<f0> SourceModule| <f1> optparse",shape="record"];
	"docutils.nodes" [label="<f0> SourceModule| <f1> docutils.nodes",shape="record"];
	"docutils.transforms" [label="<f0> Package| <f1> docutils.transforms",shape="record"];
	"docutils.transforms.parts" [label="<f0> SourceModule| <f1> docutils.transforms.parts",shape="record"];
	"docutils.transforms.misc" [label="<f0> SourceModule| <f1> docutils.transforms.misc",shape="record"];
	"docutils.transforms.references" [label="<f0> SourceModule| <f1> docutils.transforms.references",shape="record"];
	"docutils.transforms.frontmatter" [label="<f0> SourceModule| <f1> docutils.transforms.frontmatter",shape="record"];
	"docutils.transforms.writer_aux" [label="<f0> SourceModule| <f1> docutils.transforms.writer_aux",shape="record"];
	"docutils.transforms.universal" [label="<f0> SourceModule| <f1> docutils.transforms.universal",shape="record"];
	"xml.dom.minidom" [label="<f0> SourceModule| <f1> xml.dom.minidom",shape="record"];
	"xml.dom.pulldom" [label="<f0> SourceModule| <f1> xml.dom.pulldom",shape="record"];
	"xml.dom.expatbuilder" [label="<f0> SourceModule| <f1> xml.dom.expatbuilder",shape="record"];
	"xml.dom.NodeFilter" [label="<f0> SourceModule| <f1> xml.dom.NodeFilter",shape="record"];
	"xml.dom.xmlbuilder" [label="<f0> SourceModule| <f1> xml.dom.xmlbuilder",shape="record"];
	"xml.dom.minicompat" [label="<f0> SourceModule| <f1> xml.dom.minicompat",shape="record"];
	"xml.dom.domreg" [label="<f0> SourceModule| <f1> xml.dom.domreg",shape="record"];
	"xml.dom" [label="<f0> Package| <f1> xml.dom",shape="record"];
	"docutils" [label="<f0> Package| <f1> docutils",shape="record"];
	"docutils.parsers.rst.directives.tables" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.tables",shape="record"];
	"docutils.statemachine" [label="<f0> SourceModule| <f1> docutils.statemachine",shape="record"];
	"docutils.parsers.rst.directives.references" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.references",shape="record"];
	"docutils.parsers.rst.directives.parts" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.parts",shape="record"];
	"docutils.parsers.rst.directives.misc" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.misc",shape="record"];
	"docutils.parsers.rst.states" [label="<f0> SourceModule| <f1> docutils.parsers.rst.states",shape="record"];
	"docutils.parsers.rst.tableparser" [label="<f0> SourceModule| <f1> docutils.parsers.rst.tableparser",shape="record"];
	"docutils.parsers.rst.directives.images" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.images",shape="record"];
	"'PIL.Image'" [label="<f0> MissingModule| <f1> 'PIL.Image'",shape="record"];
	"docutils.parsers.rst.directives.html" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.html",shape="record"];
	"docutils.parsers.rst.directives.body" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.body",shape="record"];
	"docutils.utils.code_analyzer" [label="<f0> SourceModule| <f1> docutils.utils.code_analyzer",shape="record"];
	"pygments.formatters.html" [label="<f0> SourceModule| <f1> pygments.formatters.html",shape="record"];
	"pygments.formatters" [label="<f0> Package| <f1> pygments.formatters",shape="record"];
	"pygments.formatters.BBCodeFormatter" [label="<f0> MissingModule| <f1> pygments.formatters.BBCodeFormatter",shape="record"];
	"pygments.formatters.Terminal256Formatter" [label="<f0> MissingModule| <f1> pygments.formatters.Terminal256Formatter",shape="record"];
	"pygments.plugin" [label="<f0> SourceModule| <f1> pygments.plugin",shape="record"];
	"pygments.formatters._mapping" [label="<f0> SourceModule| <f1> pygments.formatters._mapping",shape="record"];
	"ctags" [label="<f0> MissingModule| <f1> ctags",shape="record"];
	"pygments.util" [label="<f0> SourceModule| <f1> pygments.util",shape="record"];
	"pygments.token" [label="<f0> SourceModule| <f1> pygments.token",shape="record"];
	"pygments.formatter" [label="<f0> SourceModule| <f1> pygments.formatter",shape="record"];
	"pygments.styles" [label="<f0> Package| <f1> pygments.styles",shape="record"];
	"pygments.styles._mapping" [label="<f0> SourceModule| <f1> pygments.styles._mapping",shape="record"];
	"pygments.lexers" [label="<f0> Package| <f1> pygments.lexers",shape="record"];
	"pygments.lexers.PrologLexer" [label="<f0> MissingModule| <f1> pygments.lexers.PrologLexer",shape="record"];
	"pygments.lexers.PythonLexer" [label="<f0> MissingModule| <f1> pygments.lexers.PythonLexer",shape="record"];
	"pygments.modeline" [label="<f0> SourceModule| <f1> pygments.modeline",shape="record"];
	"pygments.lexers._mapping" [label="<f0> SourceModule| <f1> pygments.lexers._mapping",shape="record"];
	"pygments" [label="<f0> Package| <f1> pygments",shape="record"];
	"pygments.styles.zenburn" [label="<f0> SourceModule| <f1> pygments.styles.zenburn",shape="record"];
	"pygments.style" [label="<f0> SourceModule| <f1> pygments.style",shape="record"];
	"pygments.styles.xcode" [label="<f0> SourceModule| <f1> pygments.styles.xcode",shape="record"];
	"pygments.styles.vs" [label="<f0> SourceModule| <f1> pygments.styles.vs",shape="record"];
	"pygments.styles.vim" [label="<f0> SourceModule| <f1> pygments.styles.vim",shape="record"];
	"pygments.styles.trac" [label="<f0> SourceModule| <f1> pygments.styles.trac",shape="record"];
	"pygments.styles.tango" [label="<f0> SourceModule| <f1> pygments.styles.tango",shape="record"];
	"pygments.styles.stata_light" [label="<f0> SourceModule| <f1> pygments.styles.stata_light",shape="record"];
	"pygments.styles.stata_dark" [label="<f0> SourceModule| <f1> pygments.styles.stata_dark",shape="record"];
	"pygments.styles.staroffice" [label="<f0> SourceModule| <f1> pygments.styles.staroffice",shape="record"];
	"pygments.styles.solarized" [label="<f0> SourceModule| <f1> pygments.styles.solarized",shape="record"];
	"pygments.styles.sas" [label="<f0> SourceModule| <f1> pygments.styles.sas",shape="record"];
	"pygments.styles.rrt" [label="<f0> SourceModule| <f1> pygments.styles.rrt",shape="record"];
	"pygments.styles.rainbow_dash" [label="<f0> SourceModule| <f1> pygments.styles.rainbow_dash",shape="record"];
	"pygments.styles.perldoc" [label="<f0> SourceModule| <f1> pygments.styles.perldoc",shape="record"];
	"pygments.styles.pastie" [label="<f0> SourceModule| <f1> pygments.styles.pastie",shape="record"];
	"pygments.styles.paraiso_light" [label="<f0> SourceModule| <f1> pygments.styles.paraiso_light",shape="record"];
	"pygments.styles.paraiso_dark" [label="<f0> SourceModule| <f1> pygments.styles.paraiso_dark",shape="record"];
	"pygments.styles.onedark" [label="<f0> SourceModule| <f1> pygments.styles.onedark",shape="record"];
	"pygments.styles.nord" [label="<f0> SourceModule| <f1> pygments.styles.nord",shape="record"];
	"pygments.styles.native" [label="<f0> SourceModule| <f1> pygments.styles.native",shape="record"];
	"pygments.styles.murphy" [label="<f0> SourceModule| <f1> pygments.styles.murphy",shape="record"];
	"pygments.styles.monokai" [label="<f0> SourceModule| <f1> pygments.styles.monokai",shape="record"];
	"pygments.styles.material" [label="<f0> SourceModule| <f1> pygments.styles.material",shape="record"];
	"pygments.styles.manni" [label="<f0> SourceModule| <f1> pygments.styles.manni",shape="record"];
	"pygments.styles.lovelace" [label="<f0> SourceModule| <f1> pygments.styles.lovelace",shape="record"];
	"pygments.styles.lilypond" [label="<f0> SourceModule| <f1> pygments.styles.lilypond",shape="record"];
	"pygments.styles.lightbulb" [label="<f0> SourceModule| <f1> pygments.styles.lightbulb",shape="record"];
	"pygments.styles.inkpot" [label="<f0> SourceModule| <f1> pygments.styles.inkpot",shape="record"];
	"pygments.styles.igor" [label="<f0> SourceModule| <f1> pygments.styles.igor",shape="record"];
	"pygments.styles.gruvbox" [label="<f0> SourceModule| <f1> pygments.styles.gruvbox",shape="record"];
	"pygments.styles.gh_dark" [label="<f0> SourceModule| <f1> pygments.styles.gh_dark",shape="record"];
	"pygments.styles.fruity" [label="<f0> SourceModule| <f1> pygments.styles.fruity",shape="record"];
	"pygments.styles.friendly_grayscale" [label="<f0> SourceModule| <f1> pygments.styles.friendly_grayscale",shape="record"];
	"pygments.styles.friendly" [label="<f0> SourceModule| <f1> pygments.styles.friendly",shape="record"];
	"pygments.styles.emacs" [label="<f0> SourceModule| <f1> pygments.styles.emacs",shape="record"];
	"pygments.styles.dracula" [label="<f0> SourceModule| <f1> pygments.styles.dracula",shape="record"];
	"pygments.styles.default" [label="<f0> SourceModule| <f1> pygments.styles.default",shape="record"];
	"pygments.styles.colorful" [label="<f0> SourceModule| <f1> pygments.styles.colorful",shape="record"];
	"pygments.styles.coffee" [label="<f0> SourceModule| <f1> pygments.styles.coffee",shape="record"];
	"pygments.styles.bw" [label="<f0> SourceModule| <f1> pygments.styles.bw",shape="record"];
	"pygments.styles.borland" [label="<f0> SourceModule| <f1> pygments.styles.borland",shape="record"];
	"pygments.styles.autumn" [label="<f0> SourceModule| <f1> pygments.styles.autumn",shape="record"];
	"pygments.styles.arduino" [label="<f0> SourceModule| <f1> pygments.styles.arduino",shape="record"];
	"pygments.styles.algol_nu" [label="<f0> SourceModule| <f1> pygments.styles.algol_nu",shape="record"];
	"pygments.styles.algol" [label="<f0> SourceModule| <f1> pygments.styles.algol",shape="record"];
	"pygments.styles.abap" [label="<f0> SourceModule| <f1> pygments.styles.abap",shape="record"];
	"pygments.lexers.zig" [label="<f0> SourceModule| <f1> pygments.lexers.zig",shape="record"];
	"pygments.lexers.yara" [label="<f0> SourceModule| <f1> pygments.lexers.yara",shape="record"];
	"pygments.lexers.yang" [label="<f0> SourceModule| <f1> pygments.lexers.yang",shape="record"];
	"pygments.lexers.xorg" [label="<f0> SourceModule| <f1> pygments.lexers.xorg",shape="record"];
	"pygments.lexers.x10" [label="<f0> SourceModule| <f1> pygments.lexers.x10",shape="record"];
	"pygments.lexers.wren" [label="<f0> SourceModule| <f1> pygments.lexers.wren",shape="record"];
	"pygments.lexers.wowtoc" [label="<f0> SourceModule| <f1> pygments.lexers.wowtoc",shape="record"];
	"pygments.lexers.whiley" [label="<f0> SourceModule| <f1> pygments.lexers.whiley",shape="record"];
	"pygments.lexers.wgsl" [label="<f0> SourceModule| <f1> pygments.lexers.wgsl",shape="record"];
	"pygments.lexers.webmisc" [label="<f0> SourceModule| <f1> pygments.lexers.webmisc",shape="record"];
	"pygments.lexers.webidl" [label="<f0> SourceModule| <f1> pygments.lexers.webidl",shape="record"];
	"pygments.lexers.webassembly" [label="<f0> SourceModule| <f1> pygments.lexers.webassembly",shape="record"];
	"pygments.lexers.web" [label="<f0> SourceModule| <f1> pygments.lexers.web",shape="record"];
	"pygments.lexers.vyper" [label="<f0> SourceModule| <f1> pygments.lexers.vyper",shape="record"];
	"pygments.lexers.vip" [label="<f0> SourceModule| <f1> pygments.lexers.vip",shape="record"];
	"pygments.lexers.verifpal" [label="<f0> SourceModule| <f1> pygments.lexers.verifpal",shape="record"];
	"pygments.lexers.verification" [label="<f0> SourceModule| <f1> pygments.lexers.verification",shape="record"];
	"pygments.lexers.varnish" [label="<f0> SourceModule| <f1> pygments.lexers.varnish",shape="record"];
	"pygments.lexers.usd" [label="<f0> SourceModule| <f1> pygments.lexers.usd",shape="record"];
	"pygments.lexers.urbi" [label="<f0> SourceModule| <f1> pygments.lexers.urbi",shape="record"];
	"pygments.lexers.unicon" [label="<f0> SourceModule| <f1> pygments.lexers.unicon",shape="record"];
	"pygments.lexers.ul4" [label="<f0> SourceModule| <f1> pygments.lexers.ul4",shape="record"];
	"pygments.lexers.typst" [label="<f0> SourceModule| <f1> pygments.lexers.typst",shape="record"];
	"pygments.lexers.typoscript" [label="<f0> SourceModule| <f1> pygments.lexers.typoscript",shape="record"];
	"pygments.lexers.trafficscript" [label="<f0> SourceModule| <f1> pygments.lexers.trafficscript",shape="record"];
	"pygments.lexers.tnt" [label="<f0> SourceModule| <f1> pygments.lexers.tnt",shape="record"];
	"pygments.lexers.tls" [label="<f0> SourceModule| <f1> pygments.lexers.tls",shape="record"];
	"pygments.lexers.tlb" [label="<f0> SourceModule| <f1> pygments.lexers.tlb",shape="record"];
	"pygments.lexers.thingsdb" [label="<f0> SourceModule| <f1> pygments.lexers.thingsdb",shape="record"];
	"pygments.lexers.theorem" [label="<f0> SourceModule| <f1> pygments.lexers.theorem",shape="record"];
	"pygments.lexers.textfmts" [label="<f0> SourceModule| <f1> pygments.lexers.textfmts",shape="record"];
	"pygments.lexers.textedit" [label="<f0> SourceModule| <f1> pygments.lexers.textedit",shape="record"];
	"pygments.lexers.text" [label="<f0> SourceModule| <f1> pygments.lexers.text",shape="record"];
	"pygments.lexers.testing" [label="<f0> SourceModule| <f1> pygments.lexers.testing",shape="record"];
	"pygments.lexers.teraterm" [label="<f0> SourceModule| <f1> pygments.lexers.teraterm",shape="record"];
	"pygments.lexers.templates" [label="<f0> SourceModule| <f1> pygments.lexers.templates",shape="record"];
	"pygments.lexers.teal" [label="<f0> SourceModule| <f1> pygments.lexers.teal",shape="record"];
	"pygments.lexers.tcl" [label="<f0> SourceModule| <f1> pygments.lexers.tcl",shape="record"];
	"pygments.lexers.tal" [label="<f0> SourceModule| <f1> pygments.lexers.tal",shape="record"];
	"pygments.lexers.tact" [label="<f0> SourceModule| <f1> pygments.lexers.tact",shape="record"];
	"pygments.lexers.supercollider" [label="<f0> SourceModule| <f1> pygments.lexers.supercollider",shape="record"];
	"pygments.lexers.stata" [label="<f0> SourceModule| <f1> pygments.lexers.stata",shape="record"];
	"pygments.lexers.srcinfo" [label="<f0> SourceModule| <f1> pygments.lexers.srcinfo",shape="record"];
	"pygments.lexers.sql" [label="<f0> SourceModule| <f1> pygments.lexers.sql",shape="record"];
	"pygments.lexers.spice" [label="<f0> SourceModule| <f1> pygments.lexers.spice",shape="record"];
	"pygments.lexers.special" [label="<f0> SourceModule| <f1> pygments.lexers.special",shape="record"];
	"pygments.lexers.sophia" [label="<f0> SourceModule| <f1> pygments.lexers.sophia",shape="record"];
	"pygments.lexers.soong" [label="<f0> SourceModule| <f1> pygments.lexers.soong",shape="record"];
	"pygments.lexers.solidity" [label="<f0> SourceModule| <f1> pygments.lexers.solidity",shape="record"];
	"pygments.lexers.snobol" [label="<f0> SourceModule| <f1> pygments.lexers.snobol",shape="record"];
	"pygments.lexers.smv" [label="<f0> SourceModule| <f1> pygments.lexers.smv",shape="record"];
	"pygments.lexers.smithy" [label="<f0> SourceModule| <f1> pygments.lexers.smithy",shape="record"];
	"pygments.lexers.smalltalk" [label="<f0> SourceModule| <f1> pygments.lexers.smalltalk",shape="record"];
	"pygments.lexers.slash" [label="<f0> SourceModule| <f1> pygments.lexers.slash",shape="record"];
	"pygments.lexers.sieve" [label="<f0> SourceModule| <f1> pygments.lexers.sieve",shape="record"];
	"pygments.lexers.shell" [label="<f0> SourceModule| <f1> pygments.lexers.shell",shape="record"];
	"pygments.lexers.sgf" [label="<f0> SourceModule| <f1> pygments.lexers.sgf",shape="record"];
	"pygments.lexers.scripting" [label="<f0> SourceModule| <f1> pygments.lexers.scripting",shape="record"];
	"pygments.lexers.scdoc" [label="<f0> SourceModule| <f1> pygments.lexers.scdoc",shape="record"];
	"pygments.lexers.savi" [label="<f0> SourceModule| <f1> pygments.lexers.savi",shape="record"];
	"pygments.lexers.sas" [label="<f0> SourceModule| <f1> pygments.lexers.sas",shape="record"];
	"pygments.lexers.rust" [label="<f0> SourceModule| <f1> pygments.lexers.rust",shape="record"];
	"pygments.lexers.ruby" [label="<f0> SourceModule| <f1> pygments.lexers.ruby",shape="record"];
	"pygments.lexers.robotframework" [label="<f0> SourceModule| <f1> pygments.lexers.robotframework",shape="record"];
	"pygments.lexers.roboconf" [label="<f0> SourceModule| <f1> pygments.lexers.roboconf",shape="record"];
	"pygments.lexers.rnc" [label="<f0> SourceModule| <f1> pygments.lexers.rnc",shape="record"];
	"pygments.lexers.rita" [label="<f0> SourceModule| <f1> pygments.lexers.rita",shape="record"];
	"pygments.lexers.ride" [label="<f0> SourceModule| <f1> pygments.lexers.ride",shape="record"];
	"pygments.lexers.resource" [label="<f0> SourceModule| <f1> pygments.lexers.resource",shape="record"];
	"pygments.lexers.rebol" [label="<f0> SourceModule| <f1> pygments.lexers.rebol",shape="record"];
	"pygments.lexers.rdf" [label="<f0> SourceModule| <f1> pygments.lexers.rdf",shape="record"];
	"pygments.lexers.r" [label="<f0> SourceModule| <f1> pygments.lexers.r",shape="record"];
	"pygments.lexers.qvt" [label="<f0> SourceModule| <f1> pygments.lexers.qvt",shape="record"];
	"pygments.lexers.qlik" [label="<f0> SourceModule| <f1> pygments.lexers.qlik",shape="record"];
	"pygments.lexers.q" [label="<f0> SourceModule| <f1> pygments.lexers.q",shape="record"];
	"pygments.lexers.python" [label="<f0> SourceModule| <f1> pygments.lexers.python",shape="record"];
	"pygments.lexers.ptx" [label="<f0> SourceModule| <f1> pygments.lexers.ptx",shape="record"];
	"pygments.lexers.prql" [label="<f0> SourceModule| <f1> pygments.lexers.prql",shape="record"];
	"pygments.lexers.promql" [label="<f0> SourceModule| <f1> pygments.lexers.promql",shape="record"];
	"pygments.lexers.prolog" [label="<f0> SourceModule| <f1> pygments.lexers.prolog",shape="record"];
	"pygments.lexers.procfile" [label="<f0> SourceModule| <f1> pygments.lexers.procfile",shape="record"];
	"pygments.lexers.praat" [label="<f0> SourceModule| <f1> pygments.lexers.praat",shape="record"];
	"pygments.lexers.pony" [label="<f0> SourceModule| <f1> pygments.lexers.pony",shape="record"];
	"pygments.lexers.pointless" [label="<f0> SourceModule| <f1> pygments.lexers.pointless",shape="record"];
	"pygments.lexers.php" [label="<f0> SourceModule| <f1> pygments.lexers.php",shape="record"];
	"pygments.lexers.phix" [label="<f0> SourceModule| <f1> pygments.lexers.phix",shape="record"];
	"pygments.lexers.perl" [label="<f0> SourceModule| <f1> pygments.lexers.perl",shape="record"];
	"pygments.lexers.pawn" [label="<f0> SourceModule| <f1> pygments.lexers.pawn",shape="record"];
	"pygments.lexers.pascal" [label="<f0> SourceModule| <f1> pygments.lexers.pascal",shape="record"];
	"pygments.scanner" [label="<f0> SourceModule| <f1> pygments.scanner",shape="record"];
	"pygments.lexers.parsers" [label="<f0> SourceModule| <f1> pygments.lexers.parsers",shape="record"];
	"pygments.lexers.parasail" [label="<f0> SourceModule| <f1> pygments.lexers.parasail",shape="record"];
	"pygments.lexers.other" [label="<f0> SourceModule| <f1> pygments.lexers.other",shape="record"];
	"pygments.lexers.openscad" [label="<f0> SourceModule| <f1> pygments.lexers.openscad",shape="record"];
	"pygments.lexers.ooc" [label="<f0> SourceModule| <f1> pygments.lexers.ooc",shape="record"];
	"pygments.lexers.objective" [label="<f0> SourceModule| <f1> pygments.lexers.objective",shape="record"];
	"pygments.lexers.oberon" [label="<f0> SourceModule| <f1> pygments.lexers.oberon",shape="record"];
	"pygments.lexers.nix" [label="<f0> SourceModule| <f1> pygments.lexers.nix",shape="record"];
	"pygments.lexers.nit" [label="<f0> SourceModule| <f1> pygments.lexers.nit",shape="record"];
	"pygments.lexers.nimrod" [label="<f0> SourceModule| <f1> pygments.lexers.nimrod",shape="record"];
	"pygments.lexers.ncl" [label="<f0> SourceModule| <f1> pygments.lexers.ncl",shape="record"];
	"pygments.lexers.mosel" [label="<f0> SourceModule| <f1> pygments.lexers.mosel",shape="record"];
	"pygments.lexers.monte" [label="<f0> SourceModule| <f1> pygments.lexers.monte",shape="record"];
	"pygments.lexers.mojo" [label="<f0> SourceModule| <f1> pygments.lexers.mojo",shape="record"];
	"pygments.lexers.modula2" [label="<f0> SourceModule| <f1> pygments.lexers.modula2",shape="record"];
	"pygments.lexers.modeling" [label="<f0> SourceModule| <f1> pygments.lexers.modeling",shape="record"];
	"pygments.lexers.ml" [label="<f0> SourceModule| <f1> pygments.lexers.ml",shape="record"];
	"pygments.lexers.mips" [label="<f0> SourceModule| <f1> pygments.lexers.mips",shape="record"];
	"pygments.lexers.minecraft" [label="<f0> SourceModule| <f1> pygments.lexers.minecraft",shape="record"];
	"pygments.lexers.mime" [label="<f0> SourceModule| <f1> pygments.lexers.mime",shape="record"];
	"pygments.lexers.meson" [label="<f0> SourceModule| <f1> pygments.lexers.meson",shape="record"];
	"pygments.lexers.maxima" [label="<f0> SourceModule| <f1> pygments.lexers.maxima",shape="record"];
	"pygments.lexers.matlab" [label="<f0> SourceModule| <f1> pygments.lexers.matlab",shape="record"];
	"pygments.lexers.math" [label="<f0> SourceModule| <f1> pygments.lexers.math",shape="record"];
	"pygments.lexers.markup" [label="<f0> SourceModule| <f1> pygments.lexers.markup",shape="record"];
	"pygments.lexers.make" [label="<f0> SourceModule| <f1> pygments.lexers.make",shape="record"];
	"pygments.lexers.macaulay2" [label="<f0> SourceModule| <f1> pygments.lexers.macaulay2",shape="record"];
	"pygments.lexers.lisp" [label="<f0> SourceModule| <f1> pygments.lexers.lisp",shape="record"];
	"pygments.lexers.lilypond" [label="<f0> SourceModule| <f1> pygments.lexers.lilypond",shape="record"];
	"pygments.lexers.lean" [label="<f0> SourceModule| <f1> pygments.lexers.lean",shape="record"];
	"pygments.lexers.ldap" [label="<f0> SourceModule| <f1> pygments.lexers.ldap",shape="record"];
	"pygments.lexers.kusto" [label="<f0> SourceModule| <f1> pygments.lexers.kusto",shape="record"];
	"pygments.lexers.kuin" [label="<f0> SourceModule| <f1> pygments.lexers.kuin",shape="record"];
	"pygments.lexers.jvm" [label="<f0> SourceModule| <f1> pygments.lexers.jvm",shape="record"];
	"pygments.lexers.julia" [label="<f0> SourceModule| <f1> pygments.lexers.julia",shape="record"];
	"pygments.lexers.jsx" [label="<f0> SourceModule| <f1> pygments.lexers.jsx",shape="record"];
	"pygments.lexers.jsonnet" [label="<f0> SourceModule| <f1> pygments.lexers.jsonnet",shape="record"];
	"pygments.lexers.jslt" [label="<f0> SourceModule| <f1> pygments.lexers.jslt",shape="record"];
	"pygments.lexers.jmespath" [label="<f0> SourceModule| <f1> pygments.lexers.jmespath",shape="record"];
	"pygments.lexers.javascript" [label="<f0> SourceModule| <f1> pygments.lexers.javascript",shape="record"];
	"pygments.lexers.j" [label="<f0> SourceModule| <f1> pygments.lexers.j",shape="record"];
	"pygments.lexers.iolang" [label="<f0> SourceModule| <f1> pygments.lexers.iolang",shape="record"];
	"pygments.lexers.int_fiction" [label="<f0> SourceModule| <f1> pygments.lexers.int_fiction",shape="record"];
	"pygments.lexers.installers" [label="<f0> SourceModule| <f1> pygments.lexers.installers",shape="record"];
	"pygments.lexers.inferno" [label="<f0> SourceModule| <f1> pygments.lexers.inferno",shape="record"];
	"pygments.lexers.igor" [label="<f0> SourceModule| <f1> pygments.lexers.igor",shape="record"];
	"pygments.lexers.idl" [label="<f0> SourceModule| <f1> pygments.lexers.idl",shape="record"];
	"pygments.lexers.html" [label="<f0> SourceModule| <f1> pygments.lexers.html",shape="record"];
	"pygments.lexers.hexdump" [label="<f0> SourceModule| <f1> pygments.lexers.hexdump",shape="record"];
	"pygments.lexers.hdl" [label="<f0> SourceModule| <f1> pygments.lexers.hdl",shape="record"];
	"pygments.lexers.haxe" [label="<f0> SourceModule| <f1> pygments.lexers.haxe",shape="record"];
	"pygments.lexers.haskell" [label="<f0> SourceModule| <f1> pygments.lexers.haskell",shape="record"];
	"pygments.lexers.gsql" [label="<f0> SourceModule| <f1> pygments.lexers.gsql",shape="record"];
	"pygments.lexers.graphviz" [label="<f0> SourceModule| <f1> pygments.lexers.graphviz",shape="record"];
	"pygments.lexers.graphql" [label="<f0> SourceModule| <f1> pygments.lexers.graphql",shape="record"];
	"pygments.lexers.graphics" [label="<f0> SourceModule| <f1> pygments.lexers.graphics",shape="record"];
	"pygments.lexers.graph" [label="<f0> SourceModule| <f1> pygments.lexers.graph",shape="record"];
	"pygments.lexers.grammar_notation" [label="<f0> SourceModule| <f1> pygments.lexers.grammar_notation",shape="record"];
	"pygments.lexers.go" [label="<f0> SourceModule| <f1> pygments.lexers.go",shape="record"];
	"pygments.lexers.gdscript" [label="<f0> SourceModule| <f1> pygments.lexers.gdscript",shape="record"];
	"pygments.lexers.gcodelexer" [label="<f0> SourceModule| <f1> pygments.lexers.gcodelexer",shape="record"];
	"pygments.lexers.futhark" [label="<f0> SourceModule| <f1> pygments.lexers.futhark",shape="record"];
	"pygments.lexers.functional" [label="<f0> SourceModule| <f1> pygments.lexers.functional",shape="record"];
	"pygments.lexers.func" [label="<f0> SourceModule| <f1> pygments.lexers.func",shape="record"];
	"pygments.lexers.freefem" [label="<f0> SourceModule| <f1> pygments.lexers.freefem",shape="record"];
	"pygments.lexers.foxpro" [label="<f0> SourceModule| <f1> pygments.lexers.foxpro",shape="record"];
	"pygments.lexers.fortran" [label="<f0> SourceModule| <f1> pygments.lexers.fortran",shape="record"];
	"pygments.lexers.forth" [label="<f0> SourceModule| <f1> pygments.lexers.forth",shape="record"];
	"pygments.lexers.floscript" [label="<f0> SourceModule| <f1> pygments.lexers.floscript",shape="record"];
	"pygments.lexers.fift" [label="<f0> SourceModule| <f1> pygments.lexers.fift",shape="record"];
	"pygments.lexers.felix" [label="<f0> SourceModule| <f1> pygments.lexers.felix",shape="record"];
	"pygments.lexers.fantom" [label="<f0> SourceModule| <f1> pygments.lexers.fantom",shape="record"];
	"pygments.lexers.factor" [label="<f0> SourceModule| <f1> pygments.lexers.factor",shape="record"];
	"pygments.lexers.ezhil" [label="<f0> SourceModule| <f1> pygments.lexers.ezhil",shape="record"];
	"pygments.lexers.esoteric" [label="<f0> SourceModule| <f1> pygments.lexers.esoteric",shape="record"];
	"pygments.lexers.erlang" [label="<f0> SourceModule| <f1> pygments.lexers.erlang",shape="record"];
	"pygments.lexers.email" [label="<f0> SourceModule| <f1> pygments.lexers.email",shape="record"];
	"pygments.lexers.elpi" [label="<f0> SourceModule| <f1> pygments.lexers.elpi",shape="record"];
	"pygments.lexers.elm" [label="<f0> SourceModule| <f1> pygments.lexers.elm",shape="record"];
	"pygments.lexers.eiffel" [label="<f0> SourceModule| <f1> pygments.lexers.eiffel",shape="record"];
	"pygments.lexers.ecl" [label="<f0> SourceModule| <f1> pygments.lexers.ecl",shape="record"];
	"pygments.lexers.dylan" [label="<f0> SourceModule| <f1> pygments.lexers.dylan",shape="record"];
	"pygments.lexers.dsls" [label="<f0> SourceModule| <f1> pygments.lexers.dsls",shape="record"];
	"pygments.lexers.dotnet" [label="<f0> SourceModule| <f1> pygments.lexers.dotnet",shape="record"];
	"pygments.lexers.dns" [label="<f0> SourceModule| <f1> pygments.lexers.dns",shape="record"];
	"pygments.lexers.diff" [label="<f0> SourceModule| <f1> pygments.lexers.diff",shape="record"];
	"pygments.lexers.devicetree" [label="<f0> SourceModule| <f1> pygments.lexers.devicetree",shape="record"];
	"pygments.lexers.dax" [label="<f0> SourceModule| <f1> pygments.lexers.dax",shape="record"];
	"pygments.lexers.data" [label="<f0> SourceModule| <f1> pygments.lexers.data",shape="record"];
	"pygments.lexers.dalvik" [label="<f0> SourceModule| <f1> pygments.lexers.dalvik",shape="record"];
	"pygments.lexers.d" [label="<f0> SourceModule| <f1> pygments.lexers.d",shape="record"];
	"pygments.lexers.css" [label="<f0> SourceModule| <f1> pygments.lexers.css",shape="record"];
	"pygments.lexers.csound" [label="<f0> SourceModule| <f1> pygments.lexers.csound",shape="record"];
	"pygments.lexers.crystal" [label="<f0> SourceModule| <f1> pygments.lexers.crystal",shape="record"];
	"pygments.lexers.cplint" [label="<f0> SourceModule| <f1> pygments.lexers.cplint",shape="record"];
	"pygments.lexers.console" [label="<f0> SourceModule| <f1> pygments.lexers.console",shape="record"];
	"pygments.lexers.configs" [label="<f0> SourceModule| <f1> pygments.lexers.configs",shape="record"];
	"pygments.lexers.compiled" [label="<f0> SourceModule| <f1> pygments.lexers.compiled",shape="record"];
	"pygments.lexers.comal" [label="<f0> SourceModule| <f1> pygments.lexers.comal",shape="record"];
	"pygments.lexers.clean" [label="<f0> SourceModule| <f1> pygments.lexers.clean",shape="record"];
	"pygments.lexers.chapel" [label="<f0> SourceModule| <f1> pygments.lexers.chapel",shape="record"];
	"pygments.lexers.cddl" [label="<f0> SourceModule| <f1> pygments.lexers.cddl",shape="record"];
	"pygments.lexers.carbon" [label="<f0> SourceModule| <f1> pygments.lexers.carbon",shape="record"];
	"pygments.lexers.capnproto" [label="<f0> SourceModule| <f1> pygments.lexers.capnproto",shape="record"];
	"pygments.lexers.c_like" [label="<f0> SourceModule| <f1> pygments.lexers.c_like",shape="record"];
	"pygments.lexers.c_cpp" [label="<f0> SourceModule| <f1> pygments.lexers.c_cpp",shape="record"];
	"pygments.lexers.business" [label="<f0> SourceModule| <f1> pygments.lexers.business",shape="record"];
	"pygments.lexers.bqn" [label="<f0> SourceModule| <f1> pygments.lexers.bqn",shape="record"];
	"pygments.lexers.boa" [label="<f0> SourceModule| <f1> pygments.lexers.boa",shape="record"];
	"pygments.lexers.blueprint" [label="<f0> SourceModule| <f1> pygments.lexers.blueprint",shape="record"];
	"pygments.lexers.bibtex" [label="<f0> SourceModule| <f1> pygments.lexers.bibtex",shape="record"];
	"pygments.lexers.berry" [label="<f0> SourceModule| <f1> pygments.lexers.berry",shape="record"];
	"pygments.lexers.bdd" [label="<f0> SourceModule| <f1> pygments.lexers.bdd",shape="record"];
	"pygments.lexers.basic" [label="<f0> SourceModule| <f1> pygments.lexers.basic",shape="record"];
	"pygments.lexers.bare" [label="<f0> SourceModule| <f1> pygments.lexers.bare",shape="record"];
	"pygments.lexers.automation" [label="<f0> SourceModule| <f1> pygments.lexers.automation",shape="record"];
	"pygments.lexers.asn1" [label="<f0> SourceModule| <f1> pygments.lexers.asn1",shape="record"];
	"pygments.lexers.asm" [label="<f0> SourceModule| <f1> pygments.lexers.asm",shape="record"];
	"pygments.lexers.asc" [label="<f0> SourceModule| <f1> pygments.lexers.asc",shape="record"];
	"pygments.lexers.arturo" [label="<f0> SourceModule| <f1> pygments.lexers.arturo",shape="record"];
	"pygments.lexers.arrow" [label="<f0> SourceModule| <f1> pygments.lexers.arrow",shape="record"];
	"pygments.lexers.archetype" [label="<f0> SourceModule| <f1> pygments.lexers.archetype",shape="record"];
	"pygments.lexers.apl" [label="<f0> SourceModule| <f1> pygments.lexers.apl",shape="record"];
	"pygments.lexers.apdlexer" [label="<f0> SourceModule| <f1> pygments.lexers.apdlexer",shape="record"];
	"pygments.lexers.ampl" [label="<f0> SourceModule| <f1> pygments.lexers.ampl",shape="record"];
	"pygments.lexers.amdgpu" [label="<f0> SourceModule| <f1> pygments.lexers.amdgpu",shape="record"];
	"pygments.lexers.ambient" [label="<f0> SourceModule| <f1> pygments.lexers.ambient",shape="record"];
	"pygments.lexers.algebra" [label="<f0> SourceModule| <f1> pygments.lexers.algebra",shape="record"];
	"pygments.lexers.agile" [label="<f0> SourceModule| <f1> pygments.lexers.agile",shape="record"];
	"pygments.lexers.ada" [label="<f0> SourceModule| <f1> pygments.lexers.ada",shape="record"];
	"pygments.lexers.actionscript" [label="<f0> SourceModule| <f1> pygments.lexers.actionscript",shape="record"];
	"pygments.lexers._vim_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._vim_builtins",shape="record"];
	"pygments.lexers._vbscript_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._vbscript_builtins",shape="record"];
	"pygments.lexers._usd_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._usd_builtins",shape="record"];
	"pygments.lexers._tsql_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._tsql_builtins",shape="record"];
	"pygments.lexers._stata_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._stata_builtins",shape="record"];
	"pygments.lexers._stan_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._stan_builtins",shape="record"];
	"pygments.lexers._sourcemod_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._sourcemod_builtins",shape="record"];
	"pygments.lexers._scilab_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._scilab_builtins",shape="record"];
	"pygments.lexers._scheme_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._scheme_builtins",shape="record"];
	"pygments.lexers._qlik_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._qlik_builtins",shape="record"];
	"pygments.lexers._postgres_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._postgres_builtins",shape="record"];
	"pygments.lexers._php_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._php_builtins",shape="record"];
	"pygments.lexers._openedge_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._openedge_builtins",shape="record"];
	"pygments.lexers._mysql_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._mysql_builtins",shape="record"];
	"pygments.lexers._mql_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._mql_builtins",shape="record"];
	"pygments.lexers._luau_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._luau_builtins",shape="record"];
	"pygments.lexers._lua_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._lua_builtins",shape="record"];
	"pygments.lexers._lilypond_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._lilypond_builtins",shape="record"];
	"pygments.lexers._lasso_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._lasso_builtins",shape="record"];
	"pygments.lexers._julia_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._julia_builtins",shape="record"];
	"pygments.lexers._css_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._css_builtins",shape="record"];
	"pygments.lexers._csound_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._csound_builtins",shape="record"];
	"pygments.lexers._cocoa_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._cocoa_builtins",shape="record"];
	"pygments.lexers._cl_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._cl_builtins",shape="record"];
	"pygments.lexers._asy_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._asy_builtins",shape="record"];
	"pygments.lexers._ada_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._ada_builtins",shape="record"];
	"pygments.formatters.terminal256" [label="<f0> SourceModule| <f1> pygments.formatters.terminal256",shape="record"];
	"pygments.console" [label="<f0> SourceModule| <f1> pygments.console",shape="record"];
	"pygments.formatters.terminal" [label="<f0> SourceModule| <f1> pygments.formatters.terminal",shape="record"];
	"pygments.formatters.svg" [label="<f0> SourceModule| <f1> pygments.formatters.svg",shape="record"];
	"pygments.formatters.rtf" [label="<f0> SourceModule| <f1> pygments.formatters.rtf",shape="record"];
	"pygments.formatters.pangomarkup" [label="<f0> SourceModule| <f1> pygments.formatters.pangomarkup",shape="record"];
	"pygments.formatters.other" [label="<f0> SourceModule| <f1> pygments.formatters.other",shape="record"];
	"pygments.formatters.latex" [label="<f0> SourceModule| <f1> pygments.formatters.latex",shape="record"];
	"pygments.formatters.irc" [label="<f0> SourceModule| <f1> pygments.formatters.irc",shape="record"];
	"pygments.formatters.img" [label="<f0> SourceModule| <f1> pygments.formatters.img",shape="record"];
	"pygments.formatters.groff" [label="<f0> SourceModule| <f1> pygments.formatters.groff",shape="record"];
	"pygments.formatters.bbcode" [label="<f0> SourceModule| <f1> pygments.formatters.bbcode",shape="record"];
	"pygments.unistring" [label="<f0> SourceModule| <f1> pygments.unistring",shape="record"];
	"pygments.lexer" [label="<f0> SourceModule| <f1> pygments.lexer",shape="record"];
	"chardet" [label="<f0> MissingModule| <f1> chardet",shape="record"];
	"pygments.regexopt" [label="<f0> SourceModule| <f1> pygments.regexopt",shape="record"];
	"pygments.filters" [label="<f0> Package| <f1> pygments.filters",shape="record"];
	"pygments.filter" [label="<f0> SourceModule| <f1> pygments.filter",shape="record"];
	"docutils.parsers.rst.directives.admonitions" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.admonitions",shape="record"];
	"docutils.parsers.rst.languages.zh_tw" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.zh_tw",shape="record"];
	"docutils.parsers.rst.languages.zh_cn" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.zh_cn",shape="record"];
	"docutils.parsers.rst.languages.uk" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.uk",shape="record"];
	"docutils.parsers.rst.languages.sv" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.sv",shape="record"];
	"docutils.parsers.rst.languages.sk" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.sk",shape="record"];
	"docutils.parsers.rst.languages.ru" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ru",shape="record"];
	"docutils.parsers.rst.languages.pt_br" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.pt_br",shape="record"];
	"docutils.parsers.rst.languages.pl" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.pl",shape="record"];
	"docutils.parsers.rst.languages.nl" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.nl",shape="record"];
	"docutils.parsers.rst.languages.lv" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.lv",shape="record"];
	"docutils.parsers.rst.languages.lt" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.lt",shape="record"];
	"docutils.parsers.rst.languages.ko" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ko",shape="record"];
	"docutils.parsers.rst.languages.ka" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ka",shape="record"];
	"docutils.parsers.rst.languages.ja" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ja",shape="record"];
	"docutils.parsers.rst.languages.it" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.it",shape="record"];
	"docutils.parsers.rst.languages.he" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.he",shape="record"];
	"docutils.parsers.rst.languages.gl" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.gl",shape="record"];
	"docutils.parsers.rst.languages.fr" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.fr",shape="record"];
	"docutils.parsers.rst.languages.fi" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.fi",shape="record"];
	"docutils.parsers.rst.languages.fa" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.fa",shape="record"];
	"docutils.parsers.rst.languages.es" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.es",shape="record"];
	"docutils.parsers.rst.languages.eo" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.eo",shape="record"];
	"docutils.parsers.rst.languages.de" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.de",shape="record"];
	"docutils.parsers.rst.languages.da" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.da",shape="record"];
	"docutils.parsers.rst.languages.cs" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.cs",shape="record"];
	"docutils.parsers.rst.languages.ca" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ca",shape="record"];
	"docutils.parsers.rst.languages.ar" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ar",shape="record"];
	"docutils.parsers.rst.languages.af" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.af",shape="record"];
	"docutils.writers.xetex" [label="<f0> Package| <f1> docutils.writers.xetex",shape="record"];
	"docutils.writers.s5_html" [label="<f0> Package| <f1> docutils.writers.s5_html",shape="record"];
	"docutils.writers.pseudoxml" [label="<f0> SourceModule| <f1> docutils.writers.pseudoxml",shape="record"];
	"docutils.writers.pep_html" [label="<f0> Package| <f1> docutils.writers.pep_html",shape="record"];
	"docutils.writers.odf_odt.pygmentsformatter" [label="<f0> SourceModule| <f1> docutils.writers.odf_odt.pygmentsformatter",shape="record"];
	"docutils.writers.odf_odt.prepstyles" [label="<f0> SourceModule| <f1> docutils.writers.odf_odt.prepstyles",shape="record"];
	"docutils.writers.odf_odt" [label="<f0> Package| <f1> docutils.writers.odf_odt",shape="record"];
	"docutils.readers.standalone" [label="<f0> SourceModule| <f1> docutils.readers.standalone",shape="record"];
	"docutils.readers" [label="<f0> Package| <f1> docutils.readers",shape="record"];
	"docutils.writers.null" [label="<f0> SourceModule| <f1> docutils.writers.null",shape="record"];
	"docutils.writers.manpage" [label="<f0> SourceModule| <f1> docutils.writers.manpage",shape="record"];
	"roman" [label="<f0> MissingModule| <f1> roman",shape="record"];
	"docutils.writers.latex2e" [label="<f0> Package| <f1> docutils.writers.latex2e",shape="record"];
	"docutils.utils.math.unichar2tex" [label="<f0> SourceModule| <f1> docutils.utils.math.unichar2tex",shape="record"];
	"docutils.utils.math" [label="<f0> Package| <f1> docutils.utils.math",shape="record"];
	"docutils.utils.math.tex2mathml_extern" [label="<f0> SourceModule| <f1> docutils.utils.math.tex2mathml_extern",shape="record"];
	"docutils.utils.math.math2html" [label="<f0> SourceModule| <f1> docutils.utils.math.math2html",shape="record"];
	"docutils.utils.math.latex2mathml" [label="<f0> SourceModule| <f1> docutils.utils.math.latex2mathml",shape="record"];
	"docutils.utils.math.mathml_elements" [label="<f0> SourceModule| <f1> docutils.utils.math.mathml_elements",shape="record"];
	"docutils.utils.math.tex2unichar" [label="<f0> SourceModule| <f1> docutils.utils.math.tex2unichar",shape="record"];
	"docutils.utils.math.mathalphabet2unichar" [label="<f0> SourceModule| <f1> docutils.utils.math.mathalphabet2unichar",shape="record"];
	"docutils.writers.html5_polyglot" [label="<f0> Package| <f1> docutils.writers.html5_polyglot",shape="record"];
	"docutils.writers.html4css1" [label="<f0> Package| <f1> docutils.writers.html4css1",shape="record"];
	"docutils.writers.docutils_xml" [label="<f0> SourceModule| <f1> docutils.writers.docutils_xml",shape="record"];
	"docutils.writers._html_base" [label="<f0> SourceModule| <f1> docutils.writers._html_base",shape="record"];
	"docutils.writers" [label="<f0> Package| <f1> docutils.writers",shape="record"];
	"docutils.languages.zh_tw" [label="<f0> SourceModule| <f1> docutils.languages.zh_tw",shape="record"];
	"docutils.languages.zh_cn" [label="<f0> SourceModule| <f1> docutils.languages.zh_cn",shape="record"];
	"docutils.languages.uk" [label="<f0> SourceModule| <f1> docutils.languages.uk",shape="record"];
	"docutils.languages.sv" [label="<f0> SourceModule| <f1> docutils.languages.sv",shape="record"];
	"docutils.languages.sk" [label="<f0> SourceModule| <f1> docutils.languages.sk",shape="record"];
	"docutils.languages.ru" [label="<f0> SourceModule| <f1> docutils.languages.ru",shape="record"];
	"docutils.languages.pt_br" [label="<f0> SourceModule| <f1> docutils.languages.pt_br",shape="record"];
	"docutils.languages.pl" [label="<f0> SourceModule| <f1> docutils.languages.pl",shape="record"];
	"docutils.languages.nl" [label="<f0> SourceModule| <f1> docutils.languages.nl",shape="record"];
	"docutils.languages.lv" [label="<f0> SourceModule| <f1> docutils.languages.lv",shape="record"];
	"docutils.languages.lt" [label="<f0> SourceModule| <f1> docutils.languages.lt",shape="record"];
	"docutils.languages.ko" [label="<f0> SourceModule| <f1> docutils.languages.ko",shape="record"];
	"docutils.languages.ka" [label="<f0> SourceModule| <f1> docutils.languages.ka",shape="record"];
	"docutils.languages.ja" [label="<f0> SourceModule| <f1> docutils.languages.ja",shape="record"];
	"docutils.languages.it" [label="<f0> SourceModule| <f1> docutils.languages.it",shape="record"];
	"docutils.languages.he" [label="<f0> SourceModule| <f1> docutils.languages.he",shape="record"];
	"docutils.languages.gl" [label="<f0> SourceModule| <f1> docutils.languages.gl",shape="record"];
	"docutils.languages.fr" [label="<f0> SourceModule| <f1> docutils.languages.fr",shape="record"];
	"docutils.languages.fi" [label="<f0> SourceModule| <f1> docutils.languages.fi",shape="record"];
	"docutils.languages.fa" [label="<f0> SourceModule| <f1> docutils.languages.fa",shape="record"];
	"docutils.languages.es" [label="<f0> SourceModule| <f1> docutils.languages.es",shape="record"];
	"docutils.languages.eo" [label="<f0> SourceModule| <f1> docutils.languages.eo",shape="record"];
	"docutils.languages.en" [label="<f0> SourceModule| <f1> docutils.languages.en",shape="record"];
	"docutils.languages.de" [label="<f0> SourceModule| <f1> docutils.languages.de",shape="record"];
	"docutils.languages.da" [label="<f0> SourceModule| <f1> docutils.languages.da",shape="record"];
	"docutils.languages.cs" [label="<f0> SourceModule| <f1> docutils.languages.cs",shape="record"];
	"docutils.languages.ca" [label="<f0> SourceModule| <f1> docutils.languages.ca",shape="record"];
	"docutils.languages.ar" [label="<f0> SourceModule| <f1> docutils.languages.ar",shape="record"];
	"docutils.languages.af" [label="<f0> SourceModule| <f1> docutils.languages.af",shape="record"];
	"docutils.parsers.rst.roles" [label="<f0> SourceModule| <f1> docutils.parsers.rst.roles",shape="record"];
	"docutils.parsers.rst" [label="<f0> Package| <f1> docutils.parsers.rst",shape="record"];
	"docutils.parsers" [label="<f0> Package| <f1> docutils.parsers",shape="record"];
	"kivy.core.clipboard.clipboard_winctypes" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_winctypes",shape="record"];
	"kivy.input.shape" [label="<f0> SourceModule| <f1> kivy.input.shape",shape="record"];
	"kivy.input" [label="<f0> Package| <f1> kivy.input",shape="record"];
	"kivy.input.postproc" [label="<f0> Package| <f1> kivy.input.postproc",shape="record"];
	"kivy.input.postproc.calibration" [label="<f0> SourceModule| <f1> kivy.input.postproc.calibration",shape="record"];
	"kivy.input.postproc.dejitter" [label="<f0> SourceModule| <f1> kivy.input.postproc.dejitter",shape="record"];
	"kivy.input.postproc.retaintouch" [label="<f0> SourceModule| <f1> kivy.input.postproc.retaintouch",shape="record"];
	"kivy.input.postproc.ignorelist" [label="<f0> SourceModule| <f1> kivy.input.postproc.ignorelist",shape="record"];
	"kivy.input.postproc.tripletap" [label="<f0> SourceModule| <f1> kivy.input.postproc.tripletap",shape="record"];
	"kivy.input.postproc.doubletap" [label="<f0> SourceModule| <f1> kivy.input.postproc.doubletap",shape="record"];
	"kivy.input.providers" [label="<f0> Package| <f1> kivy.input.providers",shape="record"];
	"kivy.input.providers.leapfinger" [label="<f0> SourceModule| <f1> kivy.input.providers.leapfinger",shape="record"];
	"Leap" [label="<f0> MissingModule| <f1> Leap",shape="record"];
	"kivy.input.providers.androidjoystick" [label="<f0> SourceModule| <f1> kivy.input.providers.androidjoystick",shape="record"];
	"kivy.input.providers.linuxwacom" [label="<f0> SourceModule| <f1> kivy.input.providers.linuxwacom",shape="record"];
	"kivy.input.providers.hidinput" [label="<f0> SourceModule| <f1> kivy.input.providers.hidinput",shape="record"];
	"kivy.input.providers.mtdev" [label="<f0> SourceModule| <f1> kivy.input.providers.mtdev",shape="record"];
	"kivy.lib.mtdev" [label="<f0> SourceModule| <f1> kivy.lib.mtdev",shape="record"];
	"kivy.input.providers.probesysfs" [label="<f0> SourceModule| <f1> kivy.input.providers.probesysfs",shape="record"];
	"kivy.input.providers.mactouch" [label="<f0> SourceModule| <f1> kivy.input.providers.mactouch",shape="record"];
	"kivy.input.providers.wm_pen" [label="<f0> SourceModule| <f1> kivy.input.providers.wm_pen",shape="record"];
	"kivy.input.providers.wm_common" [label="<f0> SourceModule| <f1> kivy.input.providers.wm_common",shape="record"];
	"kivy.input.providers.wm_touch" [label="<f0> SourceModule| <f1> kivy.input.providers.wm_touch",shape="record"];
	"kivy.input.providers.mouse" [label="<f0> SourceModule| <f1> kivy.input.providers.mouse",shape="record"];
	"kivy.input.providers.tuio" [label="<f0> SourceModule| <f1> kivy.input.providers.tuio",shape="record"];
	"oscpy" [label="<f0> MissingModule| <f1> oscpy",shape="record"];
	"kivy.input.motionevent" [label="<f0> SourceModule| <f1> kivy.input.motionevent",shape="record"];
	"kivy.eventmanager" [label="<f0> Package| <f1> kivy.eventmanager",shape="record"];
	"kivy.weakmethod" [label="<f0> SourceModule| <f1> kivy.weakmethod",shape="record"];
	"kivy.uix.tabbedpanel" [label="<f0> SourceModule| <f1> kivy.uix.tabbedpanel",shape="record"];
	"kivy.uix.togglebutton" [label="<f0> SourceModule| <f1> kivy.uix.togglebutton",shape="record"];
	"kivy.core.audio.audio_ffpyplayer" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_ffpyplayer",shape="record"];
	"'ffpyplayer.tools'" [label="<f0> MissingModule| <f1> 'ffpyplayer.tools'",shape="record"];
	"'ffpyplayer.player'" [label="<f0> MissingModule| <f1> 'ffpyplayer.player'",shape="record"];
	"ffpyplayer" [label="<f0> MissingModule| <f1> ffpyplayer",shape="record"];
	"kivy.uix.switch" [label="<f0> SourceModule| <f1> kivy.uix.switch",shape="record"];
	"kivy.uix.scrollview" [label="<f0> SourceModule| <f1> kivy.uix.scrollview",shape="record"];
	"kivy.uix.sandbox" [label="<f0> SourceModule| <f1> kivy.uix.sandbox",shape="record"];
	"kivy.uix.layout" [label="<f0> SourceModule| <f1> kivy.uix.layout",shape="record"];
	"kivy.core.clipboard._clipboard_ext" [label="<f0> SourceModule| <f1> kivy.core.clipboard._clipboard_ext",shape="record"];
	"kivy.input.factory" [label="<f0> SourceModule| <f1> kivy.input.factory",shape="record"];
	"kivy.core.camera.camera_gi" [label="<f0> SourceModule| <f1> kivy.core.camera.camera_gi",shape="record"];
	"kivy.support" [label="<f0> SourceModule| <f1> kivy.support",shape="record"];
	"gobject" [label="<f0> MissingModule| <f1> gobject",shape="record"];
	"gi" [label="<f0> MissingModule| <f1> gi",shape="record"];
	"'gi.repository'" [label="<f0> MissingModule| <f1> 'gi.repository'",shape="record"];
	"kivy.uix.behaviors.knspace" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.knspace",shape="record"];
	"kivy.core.clipboard.clipboard_dummy" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_dummy",shape="record"];
	"kivy.uix.accordion" [label="<f0> SourceModule| <f1> kivy.uix.accordion",shape="record"];
	"kivy.uix.video" [label="<f0> SourceModule| <f1> kivy.uix.video",shape="record"];
	"kivy.uix.gridlayout" [label="<f0> SourceModule| <f1> kivy.uix.gridlayout",shape="record"];
	"kivy.uix.stencilview" [label="<f0> SourceModule| <f1> kivy.uix.stencilview",shape="record"];
	"kivy.graphics.context_instructions" [label="<f0> Extension| <f1> kivy.graphics.context_instructions",shape="record"];
	"kivy.uix.behaviors.codenavigation" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.codenavigation",shape="record"];
	"kivy.core.text" [label="<f0> Package| <f1> kivy.core.text",shape="record"];
	"kivy.core.video.video_gstplayer" [label="<f0> SourceModule| <f1> kivy.core.video.video_gstplayer",shape="record"];
	"kivy.core.camera" [label="<f0> Package| <f1> kivy.core.camera",shape="record"];
	"kivy.uix.image" [label="<f0> SourceModule| <f1> kivy.uix.image",shape="record"];
	"kivy.uix.progressbar" [label="<f0> SourceModule| <f1> kivy.uix.progressbar",shape="record"];
	"kivy.graphics.gl_instructions" [label="<f0> Extension| <f1> kivy.graphics.gl_instructions",shape="record"];
	"kivy.core.clipboard.clipboard_xsel" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_xsel",shape="record"];
	"kivy.graphics.vertex_instructions" [label="<f0> Extension| <f1> kivy.graphics.vertex_instructions",shape="record"];
	"kivy.graphics.shader" [label="<f0> Extension| <f1> kivy.graphics.shader",shape="record"];
	"kivy.core.window.window_info" [label="<f0> Extension| <f1> kivy.core.window.window_info",shape="record"];
	"kivy.input.provider" [label="<f0> SourceModule| <f1> kivy.input.provider",shape="record"];
	"kivy.core.clipboard.clipboard_gtk3" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_gtk3",shape="record"];
	"kivy.uix.behaviors.focus" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.focus",shape="record"];
	"kivy.lang.parser" [label="<f0> SourceModule| <f1> kivy.lang.parser",shape="record"];
	"kivy.graphics.opengl_utils" [label="<f0> Extension| <f1> kivy.graphics.opengl_utils",shape="record"];
	"kivy.graphics.vertex" [label="<f0> Extension| <f1> kivy.graphics.vertex",shape="record"];
	"kivy.uix.popup" [label="<f0> SourceModule| <f1> kivy.uix.popup",shape="record"];
	"kivy.uix.pagelayout" [label="<f0> SourceModule| <f1> kivy.uix.pagelayout",shape="record"];
	"kivy.core.audio.audio_avplayer" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_avplayer",shape="record"];
	"'pyobjus.dylib_manager'" [label="<f0> MissingModule| <f1> 'pyobjus.dylib_manager'",shape="record"];
	"pyobjus" [label="<f0> MissingModule| <f1> pyobjus",shape="record"];
	"kivy.uix.recycleboxlayout" [label="<f0> SourceModule| <f1> kivy.uix.recycleboxlayout",shape="record"];
	"kivy.graphics.boxshadow" [label="<f0> Extension| <f1> kivy.graphics.boxshadow",shape="record"];
	"kivy.factory" [label="<f0> SourceModule| <f1> kivy.factory",shape="record"];
	"kivy.factory_registers" [label="<f0> SourceModule| <f1> kivy.factory_registers",shape="record"];
	"kivy.effects.kinetic" [label="<f0> SourceModule| <f1> kivy.effects.kinetic",shape="record"];
	"kivy.effects" [label="<f0> Package| <f1> kivy.effects",shape="record"];
	"kivy.uix.anchorlayout" [label="<f0> SourceModule| <f1> kivy.uix.anchorlayout",shape="record"];
	"kivy.graphics.fbo" [label="<f0> Extension| <f1> kivy.graphics.fbo",shape="record"];
	"kivy.core.clipboard.clipboard_nspaste" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_nspaste",shape="record"];
	"kivy.loader" [label="<f0> SourceModule| <f1> kivy.loader",shape="record"];
	"certifi" [label="<f0> Package| <f1> certifi",shape="record"];
	"certifi.core" [label="<f0> SourceModule| <f1> certifi.core",shape="record"];
	"smb" [label="<f0> MissingModule| <f1> smb",shape="record"];
	"kivy.graphics.cgl_backend.cgl_glew" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_glew",shape="record"];
	"kivy.uix.behaviors.cover" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.cover",shape="record"];
	"kivy.uix.floatlayout" [label="<f0> SourceModule| <f1> kivy.uix.floatlayout",shape="record"];
	"kivy.uix.filechooser" [label="<f0> SourceModule| <f1> kivy.uix.filechooser",shape="record"];
	"win32file" [label="<f0> Extension| <f1> win32file",shape="record"];
	"kivy.core.video.video_ffmpeg" [label="<f0> SourceModule| <f1> kivy.core.video.video_ffmpeg",shape="record"];
	"ffmpeg" [label="<f0> Package| <f1> ffmpeg",shape="record"];
	"ffmpeg._view" [label="<f0> SourceModule| <f1> ffmpeg._view",shape="record"];
	"graphviz" [label="<f0> MissingModule| <f1> graphviz",shape="record"];
	"ffmpeg.dag" [label="<f0> SourceModule| <f1> ffmpeg.dag",shape="record"];
	"ffmpeg._utils" [label="<f0> SourceModule| <f1> ffmpeg._utils",shape="record"];
	"past.builtins" [label="<f0> Package| <f1> past.builtins",shape="record"];
	"past.utils" [label="<f0> Package| <f1> past.utils",shape="record"];
	"past.builtins.misc" [label="<f0> SourceModule| <f1> past.builtins.misc",shape="record"];
	"imp" [label="<f0> SourceModule| <f1> imp",shape="record"];
	"collections.Mapping" [label="<f0> MissingModule| <f1> collections.Mapping",shape="record"];
	"__builtin__" [label="<f0> MissingModule| <f1> __builtin__",shape="record"];
	"past.types.oldstr" [label="<f0> SourceModule| <f1> past.types.oldstr",shape="record"];
	"collections.Iterable" [label="<f0> MissingModule| <f1> collections.Iterable",shape="record"];
	"past.types.olddict" [label="<f0> SourceModule| <f1> past.types.olddict",shape="record"];
	"past.types.basestring" [label="<f0> SourceModule| <f1> past.types.basestring",shape="record"];
	"past.types" [label="<f0> Package| <f1> past.types",shape="record"];
	"past.builtins.noniterators" [label="<f0> SourceModule| <f1> past.builtins.noniterators",shape="record"];
	"past" [label="<f0> Package| <f1> past",shape="record"];
	"future" [label="<f0> Package| <f1> future",shape="record"];
	"future.standard_library" [label="<f0> Package| <f1> future.standard_library",shape="record"];
	"future.moves.dbm.ndbm" [label="<f0> SourceModule| <f1> future.moves.dbm.ndbm",shape="record"];
	"future.moves.dbm.gnu" [label="<f0> SourceModule| <f1> future.moves.dbm.gnu",shape="record"];
	"dbm.gnu" [label="<f0> SourceModule| <f1> dbm.gnu",shape="record"];
	"_gdbm" [label="<f0> MissingModule| <f1> _gdbm",shape="record"];
	"future.moves.dbm.dumb" [label="<f0> SourceModule| <f1> future.moves.dbm.dumb",shape="record"];
	"dbm.dumb" [label="<f0> SourceModule| <f1> dbm.dumb",shape="record"];
	"future.moves.dbm" [label="<f0> Package| <f1> future.moves.dbm",shape="record"];
	"future.moves" [label="<f0> Package| <f1> future.moves",shape="record"];
	"future.moves.test.support" [label="<f0> SourceModule| <f1> future.moves.test.support",shape="record"];
	"test.test_support" [label="<f0> SourceModule| <f1> test.test_support",shape="record"];
	"sched" [label="<f0> SourceModule| <f1> sched",shape="record"];
	"test.support.socket_helper" [label="<f0> SourceModule| <f1> test.support.socket_helper",shape="record"];
	"test.support.script_helper" [label="<f0> SourceModule| <f1> test.support.script_helper",shape="record"];
	"test.support.import_helper" [label="<f0> SourceModule| <f1> test.support.import_helper",shape="record"];
	"test.support.warnings_helper" [label="<f0> SourceModule| <f1> test.support.warnings_helper",shape="record"];
	"test.support.os_helper" [label="<f0> SourceModule| <f1> test.support.os_helper",shape="record"];
	"test.support" [label="<f0> Package| <f1> test.support",shape="record"];
	"faulthandler" [label="<f0> BuiltinModule| <f1> faulthandler",shape="record"];
	"tracemalloc" [label="<f0> SourceModule| <f1> tracemalloc",shape="record"];
	"_tracemalloc" [label="<f0> BuiltinModule| <f1> _tracemalloc",shape="record"];
	"resource" [label="<f0> MissingModule| <f1> resource",shape="record"];
	"doctest" [label="<f0> SourceModule| <f1> doctest",shape="record"];
	"pdb" [label="<f0> SourceModule| <f1> pdb",shape="record"];
	"code" [label="<f0> SourceModule| <f1> code",shape="record"];
	"codeop" [label="<f0> SourceModule| <f1> codeop",shape="record"];
	"bdb" [label="<f0> SourceModule| <f1> bdb",shape="record"];
	"cmd" [label="<f0> SourceModule| <f1> cmd",shape="record"];
	"_testinternalcapi" [label="<f0> Extension| <f1> _testinternalcapi",shape="record"];
	"tkinter" [label="<f0> Package| <f1> tkinter",shape="record"];
	"tkinter.constants" [label="<f0> SourceModule| <f1> tkinter.constants",shape="record"];
	"_tkinter" [label="<f0> Extension| <f1> _tkinter",shape="record"];
	"ctypes.util" [label="<f0> SourceModule| <f1> ctypes.util",shape="record"];
	"ctypes._aix" [label="<f0> SourceModule| <f1> ctypes._aix",shape="record"];
	"ctypes.macholib.dyld" [label="<f0> SourceModule| <f1> ctypes.macholib.dyld",shape="record"];
	"ctypes.macholib" [label="<f0> Package| <f1> ctypes.macholib",shape="record"];
	"ctypes.macholib.dylib" [label="<f0> SourceModule| <f1> ctypes.macholib.dylib",shape="record"];
	"ctypes.macholib.framework" [label="<f0> SourceModule| <f1> ctypes.macholib.framework",shape="record"];
	"_testcapi" [label="<f0> Extension| <f1> _testcapi",shape="record"];
	"test.support.testresult" [label="<f0> SourceModule| <f1> test.support.testresult",shape="record"];
	"future.moves.test" [label="<f0> Package| <f1> future.moves.test",shape="record"];
	"test" [label="<f0> Package| <f1> test",shape="record"];
	"future.backports.urllib.robotparser" [label="<f0> SourceModule| <f1> future.backports.urllib.robotparser",shape="record"];
	"future.backports" [label="<f0> Package| <f1> future.backports",shape="record"];
	"future.backports.misc" [label="<f0> SourceModule| <f1> future.backports.misc",shape="record"];
	"dummy_thread" [label="<f0> MissingModule| <f1> dummy_thread",shape="record"];
	"thread" [label="<f0> MissingModule| <f1> thread",shape="record"];
	"_dummy_thread" [label="<f0> MissingModule| <f1> _dummy_thread",shape="record"];
	"collections.MutableMapping" [label="<f0> MissingModule| <f1> collections.MutableMapping",shape="record"];
	"future.backports.email" [label="<f0> Package| <f1> future.backports.email",shape="record"];
	"future.backports.email.parser" [label="<f0> SourceModule| <f1> future.backports.email.parser",shape="record"];
	"future.backports.email._policybase" [label="<f0> SourceModule| <f1> future.backports.email._policybase",shape="record"];
	"future.backports.email.charset" [label="<f0> SourceModule| <f1> future.backports.email.charset",shape="record"];
	"future.backports.email.encoders" [label="<f0> SourceModule| <f1> future.backports.email.encoders",shape="record"];
	"future.backports.email.feedparser" [label="<f0> SourceModule| <f1> future.backports.email.feedparser",shape="record"];
	"future.backports.email.message" [label="<f0> SourceModule| <f1> future.backports.email.message",shape="record"];
	"future.backports.email.iterators" [label="<f0> SourceModule| <f1> future.backports.email.iterators",shape="record"];
	"future.backports.email.generator" [label="<f0> SourceModule| <f1> future.backports.email.generator",shape="record"];
	"future.backports.email._encoded_words" [label="<f0> SourceModule| <f1> future.backports.email._encoded_words",shape="record"];
	"uu" [label="<f0> SourceModule| <f1> uu",shape="record"];
	"future.backports.email.header" [label="<f0> SourceModule| <f1> future.backports.email.header",shape="record"];
	"future.backports.email.quoprimime" [label="<f0> SourceModule| <f1> future.backports.email.quoprimime",shape="record"];
	"future.backports.email.base64mime" [label="<f0> SourceModule| <f1> future.backports.email.base64mime",shape="record"];
	"future.backports.email.utils" [label="<f0> SourceModule| <f1> future.backports.email.utils",shape="record"];
	"future.backports.email._parseaddr" [label="<f0> SourceModule| <f1> future.backports.email._parseaddr",shape="record"];
	"future.backports.email.errors" [label="<f0> SourceModule| <f1> future.backports.email.errors",shape="record"];
	"future.utils.surrogateescape" [label="<f0> SourceModule| <f1> future.utils.surrogateescape",shape="record"];
	"future.backports.datetime" [label="<f0> SourceModule| <f1> future.backports.datetime",shape="record"];
	"_strptime" [label="<f0> SourceModule| <f1> _strptime",shape="record"];
	"future.builtins" [label="<f0> Package| <f1> future.builtins",shape="record"];
	"future.types.newstr" [label="<f0> SourceModule| <f1> future.types.newstr",shape="record"];
	"future.types.newrange" [label="<f0> SourceModule| <f1> future.types.newrange",shape="record"];
	"collections.Iterator" [label="<f0> MissingModule| <f1> collections.Iterator",shape="record"];
	"collections.Sequence" [label="<f0> MissingModule| <f1> collections.Sequence",shape="record"];
	"future.types.newobject" [label="<f0> SourceModule| <f1> future.types.newobject",shape="record"];
	"future.types.newlist" [label="<f0> SourceModule| <f1> future.types.newlist",shape="record"];
	"future.types.newint" [label="<f0> SourceModule| <f1> future.types.newint",shape="record"];
	"future.types.newdict" [label="<f0> SourceModule| <f1> future.types.newdict",shape="record"];
	"future.types.newbytes" [label="<f0> SourceModule| <f1> future.types.newbytes",shape="record"];
	"future.types" [label="<f0> Package| <f1> future.types",shape="record"];
	"future.builtins.misc" [label="<f0> SourceModule| <f1> future.builtins.misc",shape="record"];
	"future.builtins.new_min_max" [label="<f0> SourceModule| <f1> future.builtins.new_min_max",shape="record"];
	"future.builtins.newsuper" [label="<f0> SourceModule| <f1> future.builtins.newsuper",shape="record"];
	"future.builtins.newround" [label="<f0> SourceModule| <f1> future.builtins.newround",shape="record"];
	"future.builtins.newnext" [label="<f0> SourceModule| <f1> future.builtins.newnext",shape="record"];
	"future_builtins" [label="<f0> MissingModule| <f1> future_builtins",shape="record"];
	"future.builtins.iterators" [label="<f0> SourceModule| <f1> future.builtins.iterators",shape="record"];
	"future.backports.urllib.error" [label="<f0> SourceModule| <f1> future.backports.urllib.error",shape="record"];
	"future.backports.urllib.parse" [label="<f0> SourceModule| <f1> future.backports.urllib.parse",shape="record"];
	"future.backports.urllib.response" [label="<f0> SourceModule| <f1> future.backports.urllib.response",shape="record"];
	"future.backports.urllib.request" [label="<f0> SourceModule| <f1> future.backports.urllib.request",shape="record"];
	"future.backports.http.cookiejar" [label="<f0> SourceModule| <f1> future.backports.http.cookiejar",shape="record"];
	"dummy_threading" [label="<f0> MissingModule| <f1> dummy_threading",shape="record"];
	"future.backports.http.client" [label="<f0> SourceModule| <f1> future.backports.http.client",shape="record"];
	"future.backports.http" [label="<f0> Package| <f1> future.backports.http",shape="record"];
	"future.backports.urllib" [label="<f0> Package| <f1> future.backports.urllib",shape="record"];
	"future.utils" [label="<f0> Package| <f1> future.utils",shape="record"];
	"ffmpeg._run" [label="<f0> SourceModule| <f1> ffmpeg._run",shape="record"];
	"ffmpeg._probe" [label="<f0> SourceModule| <f1> ffmpeg._probe",shape="record"];
	"ffmpeg._filters" [label="<f0> SourceModule| <f1> ffmpeg._filters",shape="record"];
	"ffmpeg._ffmpeg" [label="<f0> SourceModule| <f1> ffmpeg._ffmpeg",shape="record"];
	"ffmpeg.nodes" [label="<f0> SourceModule| <f1> ffmpeg.nodes",shape="record"];
	"kivy.graphics.cgl_backend.cgl_sdl2" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_sdl2",shape="record"];
	"kivy.effects.dampedscroll" [label="<f0> SourceModule| <f1> kivy.effects.dampedscroll",shape="record"];
	"kivy.uix.gesturesurface" [label="<f0> SourceModule| <f1> kivy.uix.gesturesurface",shape="record"];
	"colorsys" [label="<f0> SourceModule| <f1> colorsys",shape="record"];
	"kivy.uix.treeview" [label="<f0> SourceModule| <f1> kivy.uix.treeview",shape="record"];
	"kivy.core.window._window_sdl2" [label="<f0> Extension| <f1> kivy.core.window._window_sdl2",shape="record"];
	"kivy.core.text._text_sdl2" [label="<f0> Extension| <f1> kivy.core.text._text_sdl2",shape="record"];
	"kivy.uix.spinner" [label="<f0> SourceModule| <f1> kivy.uix.spinner",shape="record"];
	"kivy.core.camera.camera_opencv" [label="<f0> SourceModule| <f1> kivy.core.camera.camera_opencv",shape="record"];
	"cv2" [label="<f0> MissingModule| <f1> cv2",shape="record"];
	"'opencv.highgui'" [label="<f0> MissingModule| <f1> 'opencv.highgui'",shape="record"];
	"opencv" [label="<f0> MissingModule| <f1> opencv",shape="record"];
	"kivy.uix.checkbox" [label="<f0> SourceModule| <f1> kivy.uix.checkbox",shape="record"];
	"kivy.uix.codeinput" [label="<f0> SourceModule| <f1> kivy.uix.codeinput",shape="record"];
	"kivy.extras.highlight" [label="<f0> SourceModule| <f1> kivy.extras.highlight",shape="record"];
	"kivy.extras" [label="<f0> Package| <f1> kivy.extras",shape="record"];
	"kivy.uix.behaviors.emacs" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.emacs",shape="record"];
	"kivy.core.spelling.spelling_enchant" [label="<f0> SourceModule| <f1> kivy.core.spelling.spelling_enchant",shape="record"];
	"enchant" [label="<f0> MissingModule| <f1> enchant",shape="record"];
	"kivy.uix.bubble" [label="<f0> SourceModule| <f1> kivy.uix.bubble",shape="record"];
	"kivy.core.audio.audio_android" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_android",shape="record"];
	"kivy.graphics.buffer" [label="<f0> Extension| <f1> kivy.graphics.buffer",shape="record"];
	"kivy.graphics.stencil_instructions" [label="<f0> Extension| <f1> kivy.graphics.stencil_instructions",shape="record"];
	"kivy.core.text.markup" [label="<f0> SourceModule| <f1> kivy.core.text.markup",shape="record"];
	"kivy.parser" [label="<f0> SourceModule| <f1> kivy.parser",shape="record"];
	"kivy.core.audio" [label="<f0> Package| <f1> kivy.core.audio",shape="record"];
	"kivy.graphics.vbo" [label="<f0> Extension| <f1> kivy.graphics.vbo",shape="record"];
	"kivy.uix.recyclegridlayout" [label="<f0> SourceModule| <f1> kivy.uix.recyclegridlayout",shape="record"];
	"kivy.core.clipboard.clipboard_xclip" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_xclip",shape="record"];
	"kivy.core.camera.camera_android" [label="<f0> SourceModule| <f1> kivy.core.camera.camera_android",shape="record"];
	"kivy.uix.videoplayer" [label="<f0> SourceModule| <f1> kivy.uix.videoplayer",shape="record"];
	"kivy.core.text.text_pil" [label="<f0> SourceModule| <f1> kivy.core.text.text_pil",shape="record"];
	"kivy.uix.stacklayout" [label="<f0> SourceModule| <f1> kivy.uix.stacklayout",shape="record"];
	"kivy.core.audio.audio_pygame" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_pygame",shape="record"];
	"android_mixer" [label="<f0> MissingModule| <f1> android_mixer",shape="record"];
	"'android.mixer'" [label="<f0> MissingModule| <f1> 'android.mixer'",shape="record"];
	"kivy.uix.relativelayout" [label="<f0> SourceModule| <f1> kivy.uix.relativelayout",shape="record"];
	"kivy.uix.recyclelayout" [label="<f0> SourceModule| <f1> kivy.uix.recyclelayout",shape="record"];
	"kivy.uix.behaviors.button" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.button",shape="record"];
	"kivy.uix.behaviors.compoundselection" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.compoundselection",shape="record"];
	"kivy.core.spelling.spelling_osxappkit" [label="<f0> SourceModule| <f1> kivy.core.spelling.spelling_osxappkit",shape="record"];
	"AppKit" [label="<f0> MissingModule| <f1> AppKit",shape="record"];
	"kivy.graphics.tesselator" [label="<f0> Extension| <f1> kivy.graphics.tesselator",shape="record"];
	"kivy.uix.scatterlayout" [label="<f0> SourceModule| <f1> kivy.uix.scatterlayout",shape="record"];
	"kivy.core.video.video_ffpyplayer" [label="<f0> SourceModule| <f1> kivy.core.video.video_ffpyplayer",shape="record"];
	"kivy.graphics.instructions" [label="<f0> Extension| <f1> kivy.graphics.instructions",shape="record"];
	"kivy.core.clipboard.clipboard_android" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_android",shape="record"];
	"'android.runnable'" [label="<f0> MissingModule| <f1> 'android.runnable'",shape="record"];
	"kivy.effects.opacityscroll" [label="<f0> SourceModule| <f1> kivy.effects.opacityscroll",shape="record"];
	"kivy.graphics.cgl_backend" [label="<f0> Package| <f1> kivy.graphics.cgl_backend",shape="record"];
	"kivy.core.audio.audio_sdl2" [label="<f0> Extension| <f1> kivy.core.audio.audio_sdl2",shape="record"];
	"kivy.uix.slider" [label="<f0> SourceModule| <f1> kivy.uix.slider",shape="record"];
	"kivy.core.clipboard.clipboard_sdl2" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_sdl2",shape="record"];
	"kivy.graphics.svg" [label="<f0> Extension| <f1> kivy.graphics.svg",shape="record"];
	"kivy.graphics.cgl_backend.cgl_debug" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_debug",shape="record"];
	"kivy.core.audio.audio_gstplayer" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_gstplayer",shape="record"];
	"kivy.effects.scroll" [label="<f0> SourceModule| <f1> kivy.effects.scroll",shape="record"];
	"kivy.core.spelling" [label="<f0> Package| <f1> kivy.core.spelling",shape="record"];
	"kivy.uix.behaviors.drag" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.drag",shape="record"];
	"kivy.core.window.window_egl_rpi" [label="<f0> SourceModule| <f1> kivy.core.window.window_egl_rpi",shape="record"];
	"kivy.lib.vidcore_lite.egl" [label="<f0> MissingModule| <f1> kivy.lib.vidcore_lite.egl",shape="record"];
	"kivy.lib.vidcore_lite.bcm" [label="<f0> MissingModule| <f1> kivy.lib.vidcore_lite.bcm",shape="record"];
	"kivy.lib.vidcore_lite" [label="<f0> Package| <f1> kivy.lib.vidcore_lite",shape="record"];
	"kivy.core.window.window_pygame" [label="<f0> SourceModule| <f1> kivy.core.window.window_pygame",shape="record"];
	"win32con" [label="<f0> SourceModule| <f1> win32con",shape="record"];
	"win32gui" [label="<f0> Extension| <f1> win32gui",shape="record"];
	"win32api" [label="<f0> Extension| <f1> win32api",shape="record"];
	"kivy.core.text.text_sdl2" [label="<f0> SourceModule| <f1> kivy.core.text.text_sdl2",shape="record"];
	"kivy.core.clipboard.clipboard_pygame" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_pygame",shape="record"];
	"'pygame.scrap'" [label="<f0> MissingModule| <f1> 'pygame.scrap'",shape="record"];
	"kivy.uix.actionbar" [label="<f0> SourceModule| <f1> kivy.uix.actionbar",shape="record"];
	"kivy.gesture" [label="<f0> SourceModule| <f1> kivy.gesture",shape="record"];
	"kivy.core.camera.camera_picamera" [label="<f0> SourceModule| <f1> kivy.core.camera.camera_picamera",shape="record"];
	"picamera" [label="<f0> MissingModule| <f1> picamera",shape="record"];
	"kivy.core.clipboard.clipboard_dbusklipper" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_dbusklipper",shape="record"];
	"dbus" [label="<f0> MissingModule| <f1> dbus",shape="record"];
	"kivy.core.window.window_sdl2" [label="<f0> SourceModule| <f1> kivy.core.window.window_sdl2",shape="record"];
	"kivy.core.video.video_null" [label="<f0> SourceModule| <f1> kivy.core.video.video_null",shape="record"];
	"kivy.uix.recycleview.__init__" [label="<f0> SourceModule| <f1> kivy.uix.recycleview.__init__",shape="record"];
	"kivy.uix.colorpicker" [label="<f0> SourceModule| <f1> kivy.uix.colorpicker",shape="record"];
	"kivy.graphics.cgl_backend.cgl_gl" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_gl",shape="record"];
	"kivy.uix.behaviors.togglebutton" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.togglebutton",shape="record"];
	"kivy.uix.effectwidget" [label="<f0> SourceModule| <f1> kivy.uix.effectwidget",shape="record"];
	"kivy.core.image.img_dds" [label="<f0> SourceModule| <f1> kivy.core.image.img_dds",shape="record"];
	"kivy.lib.ddsfile" [label="<f0> SourceModule| <f1> kivy.lib.ddsfile",shape="record"];
	"kivy.uix.carousel" [label="<f0> SourceModule| <f1> kivy.uix.carousel",shape="record"];
	"kivy.uix.dropdown" [label="<f0> SourceModule| <f1> kivy.uix.dropdown",shape="record"];
	"kivy.uix.behaviors.touchripple" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.touchripple",shape="record"];
	"kivy.core.image.img_ffpyplayer" [label="<f0> SourceModule| <f1> kivy.core.image.img_ffpyplayer",shape="record"];
	"'ffpyplayer.pic'" [label="<f0> MissingModule| <f1> 'ffpyplayer.pic'",shape="record"];
	"kivy.core.clipboard" [label="<f0> Package| <f1> kivy.core.clipboard",shape="record"];
	"kivy.uix.recycleview.layout" [label="<f0> SourceModule| <f1> kivy.uix.recycleview.layout",shape="record"];
	"kivy.multistroke" [label="<f0> SourceModule| <f1> kivy.multistroke",shape="record"];
	"kivy.core.image.img_sdl2" [label="<f0> SourceModule| <f1> kivy.core.image.img_sdl2",shape="record"];
	"kivy_deps" [label="<f0> Package| <f1> kivy_deps",shape="record"];
	"kivy.deps" [label="<f0> Package| <f1> kivy.deps",shape="record"];
	"kivy._version" [label="<f0> SourceModule| <f1> kivy._version",shape="record"];
	"kivy.graphics.opengl" [label="<f0> Extension| <f1> kivy.graphics.opengl",shape="record"];
	"kivy.uix.widget" [label="<f0> SourceModule| <f1> kivy.uix.widget",shape="record"];
	"kivy.weakproxy" [label="<f0> Extension| <f1> kivy.weakproxy",shape="record"];
	"kivy.graphics" [label="<f0> Package| <f1> kivy.graphics",shape="record"];
	"kivy.graphics.context" [label="<f0> Extension| <f1> kivy.graphics.context",shape="record"];
	"kivy.cache" [label="<f0> SourceModule| <f1> kivy.cache",shape="record"];
	"kivy.metrics" [label="<f0> SourceModule| <f1> kivy.metrics",shape="record"];
	"kivy._metrics" [label="<f0> Extension| <f1> kivy._metrics",shape="record"];
	"kivy.core.gl" [label="<f0> Package| <f1> kivy.core.gl",shape="record"];
	"ios" [label="<f0> MissingModule| <f1> ios",shape="record"];
	"kivy.animation" [label="<f0> SourceModule| <f1> kivy.animation",shape="record"];
	"kivy.graphics.cgl" [label="<f0> Extension| <f1> kivy.graphics.cgl",shape="record"];
	"kivy.graphics.transformation" [label="<f0> Extension| <f1> kivy.graphics.transformation",shape="record"];
	"kivy.setupconfig" [label="<f0> SourceModule| <f1> kivy.setupconfig",shape="record"];
	"kivy.uix.behaviors" [label="<f0> Package| <f1> kivy.uix.behaviors",shape="record"];
	"kivy.context" [label="<f0> SourceModule| <f1> kivy.context",shape="record"];
	"kivy.utils" [label="<f0> SourceModule| <f1> kivy.utils",shape="record"];
	"kivy.properties" [label="<f0> Extension| <f1> kivy.properties",shape="record"];
	"kivy.event" [label="<f0> SourceModule| <f1> kivy.event",shape="record"];
	"kivy.modules" [label="<f0> Package| <f1> kivy.modules",shape="record"];
	"kivy.base" [label="<f0> SourceModule| <f1> kivy.base",shape="record"];
	"kivy.logger" [label="<f0> SourceModule| <f1> kivy.logger",shape="record"];
	"kivy.config" [label="<f0> SourceModule| <f1> kivy.config",shape="record"];
	"ConfigParser" [label="<f0> MissingModule| <f1> ConfigParser",shape="record"];
	"kivy.clock" [label="<f0> SourceModule| <f1> kivy.clock",shape="record"];
	"trio" [label="<f0> MissingModule| <f1> trio",shape="record"];
	"kivy._clock" [label="<f0> Extension| <f1> kivy._clock",shape="record"];
	"kivy.core" [label="<f0> Package| <f1> kivy.core",shape="record"];
	"kivy.uix.button" [label="<f0> SourceModule| <f1> kivy.uix.button",shape="record"];
	"kivy.uix.textinput" [label="<f0> SourceModule| <f1> kivy.uix.textinput",shape="record"];
	"kivy.uix.label" [label="<f0> SourceModule| <f1> kivy.uix.label",shape="record"];
	"kivy.uix.boxlayout" [label="<f0> SourceModule| <f1> kivy.uix.boxlayout",shape="record"];
	"kivy.app" [label="<f0> SourceModule| <f1> kivy.app",shape="record"];
	"simpleaudio" [label="<f0> Package| <f1> simpleaudio",shape="record"];
	"simpleaudio.shiny" [label="<f0> SourceModule| <f1> simpleaudio.shiny",shape="record"];
	"wave" [label="<f0> SourceModule| <f1> wave",shape="record"];
	"simpleaudio._simpleaudio" [label="<f0> Extension| <f1> simpleaudio._simpleaudio",shape="record"];
	"pydub" [label="<f0> Package| <f1> pydub",shape="record"];
	"pydub.audio_segment" [label="<f0> SourceModule| <f1> pydub.audio_segment",shape="record"];
	"pydub.exceptions" [label="<f0> SourceModule| <f1> pydub.exceptions",shape="record"];
	"StringIO" [label="<f0> MissingModule| <f1> StringIO",shape="record"];
	"pydub.utils" [label="<f0> SourceModule| <f1> pydub.utils",shape="record"];
	"pyaudioop" [label="<f0> MissingModule| <f1> pyaudioop",shape="record"];
	"audioop" [label="<f0> BuiltinModule| <f1> audioop",shape="record"];
	"pydub.logging_utils" [label="<f0> SourceModule| <f1> pydub.logging_utils",shape="record"];
	"pydub.effects" [label="<f0> SourceModule| <f1> pydub.effects",shape="record"];
	"pydub.silence" [label="<f0> SourceModule| <f1> pydub.silence",shape="record"];
	"gtts" [label="<f0> Package| <f1> gtts",shape="record"];
	"gtts.tts" [label="<f0> SourceModule| <f1> gtts.tts",shape="record"];
	"gtts.utils" [label="<f0> SourceModule| <f1> gtts.utils",shape="record"];
	"gtts.tokenizer.symbols" [label="<f0> SourceModule| <f1> gtts.tokenizer.symbols",shape="record"];
	"gtts.tokenizer.tokenizer_cases" [label="<f0> SourceModule| <f1> gtts.tokenizer.tokenizer_cases",shape="record"];
	"gtts.tokenizer.pre_processors" [label="<f0> SourceModule| <f1> gtts.tokenizer.pre_processors",shape="record"];
	"gtts.tokenizer" [label="<f0> Package| <f1> gtts.tokenizer",shape="record"];
	"gtts.tokenizer.core" [label="<f0> SourceModule| <f1> gtts.tokenizer.core",shape="record"];
	"gtts.lang" [label="<f0> SourceModule| <f1> gtts.lang",shape="record"];
	"gtts.langs" [label="<f0> SourceModule| <f1> gtts.langs",shape="record"];
	"requests" [label="<f0> Package| <f1> requests",shape="record"];
	"requests.status_codes" [label="<f0> SourceModule| <f1> requests.status_codes",shape="record"];
	"requests.structures" [label="<f0> SourceModule| <f1> requests.structures",shape="record"];
	"requests.compat" [label="<f0> SourceModule| <f1> requests.compat",shape="record"];
	"http.cookies" [label="<f0> SourceModule| <f1> http.cookies",shape="record"];
	"simplejson" [label="<f0> MissingModule| <f1> simplejson",shape="record"];
	"requests.models" [label="<f0> SourceModule| <f1> requests.models",shape="record"];
	"idna" [label="<f0> Package| <f1> idna",shape="record"];
	"idna.package_data" [label="<f0> SourceModule| <f1> idna.package_data",shape="record"];
	"idna.intranges" [label="<f0> SourceModule| <f1> idna.intranges",shape="record"];
	"idna.core" [label="<f0> SourceModule| <f1> idna.core",shape="record"];
	"idna.uts46data" [label="<f0> SourceModule| <f1> idna.uts46data",shape="record"];
	"idna.idnadata" [label="<f0> SourceModule| <f1> idna.idnadata",shape="record"];
	"requests.hooks" [label="<f0> SourceModule| <f1> requests.hooks",shape="record"];
	"requests.cookies" [label="<f0> SourceModule| <f1> requests.cookies",shape="record"];
	"requests.auth" [label="<f0> SourceModule| <f1> requests.auth",shape="record"];
	"requests._internal_utils" [label="<f0> SourceModule| <f1> requests._internal_utils",shape="record"];
	"urllib3.util" [label="<f0> Package| <f1> urllib3.util",shape="record"];
	"urllib3.util.wait" [label="<f0> SourceModule| <f1> urllib3.util.wait",shape="record"];
	"urllib3.util.url" [label="<f0> SourceModule| <f1> urllib3.util.url",shape="record"];
	"urllib3.util.util" [label="<f0> SourceModule| <f1> urllib3.util.util",shape="record"];
	"urllib3.util.timeout" [label="<f0> SourceModule| <f1> urllib3.util.timeout",shape="record"];
	"urllib3.util.ssl_" [label="<f0> SourceModule| <f1> urllib3.util.ssl_",shape="record"];
	"urllib3.util.ssltransport" [label="<f0> SourceModule| <f1> urllib3.util.ssltransport",shape="record"];
	"urllib3.util.retry" [label="<f0> SourceModule| <f1> urllib3.util.retry",shape="record"];
	"urllib3.response" [label="<f0> SourceModule| <f1> urllib3.response",shape="record"];
	"urllib3.connection" [label="<f0> SourceModule| <f1> urllib3.connection",shape="record"];
	"urllib3.util.ssl_match_hostname" [label="<f0> SourceModule| <f1> urllib3.util.ssl_match_hostname",shape="record"];
	"urllib3._version" [label="<f0> SourceModule| <f1> urllib3._version",shape="record"];
	"urllib3.http2.probe" [label="<f0> SourceModule| <f1> urllib3.http2.probe",shape="record"];
	"urllib3.http2" [label="<f0> Package| <f1> urllib3.http2",shape="record"];
	"urllib3.http2.connection" [label="<f0> SourceModule| <f1> urllib3.http2.connection",shape="record"];
	"'h2.events'" [label="<f0> MissingModule| <f1> 'h2.events'",shape="record"];
	"'h2.connection'" [label="<f0> MissingModule| <f1> 'h2.connection'",shape="record"];
	"h2" [label="<f0> MissingModule| <f1> h2",shape="record"];
	"urllib3._collections" [label="<f0> SourceModule| <f1> urllib3._collections",shape="record"];
	"zstandard" [label="<f0> MissingModule| <f1> zstandard",shape="record"];
	"brotli" [label="<f0> MissingModule| <f1> brotli",shape="record"];
	"brotlicffi" [label="<f0> MissingModule| <f1> brotlicffi",shape="record"];
	"urllib3._base_connection" [label="<f0> SourceModule| <f1> urllib3._base_connection",shape="record"];
	"urllib3.connectionpool" [label="<f0> SourceModule| <f1> urllib3.connectionpool",shape="record"];
	"urllib3.util.proxy" [label="<f0> SourceModule| <f1> urllib3.util.proxy",shape="record"];
	"urllib3._request_methods" [label="<f0> SourceModule| <f1> urllib3._request_methods",shape="record"];
	"urllib3.util.response" [label="<f0> SourceModule| <f1> urllib3.util.response",shape="record"];
	"urllib3.util.request" [label="<f0> SourceModule| <f1> urllib3.util.request",shape="record"];
	"urllib3.util.connection" [label="<f0> SourceModule| <f1> urllib3.util.connection",shape="record"];
	"urllib3.filepost" [label="<f0> SourceModule| <f1> urllib3.filepost",shape="record"];
	"urllib3.fields" [label="<f0> SourceModule| <f1> urllib3.fields",shape="record"];
	"requests.api" [label="<f0> SourceModule| <f1> requests.api",shape="record"];
	"requests.sessions" [label="<f0> SourceModule| <f1> requests.sessions",shape="record"];
	"requests.adapters" [label="<f0> SourceModule| <f1> requests.adapters",shape="record"];
	"urllib3.contrib.socks" [label="<f0> SourceModule| <f1> urllib3.contrib.socks",shape="record"];
	"socks" [label="<f0> MissingModule| <f1> socks",shape="record"];
	"urllib3.poolmanager" [label="<f0> SourceModule| <f1> urllib3.poolmanager",shape="record"];
	"requests.__version__" [label="<f0> SourceModule| <f1> requests.__version__",shape="record"];
	"requests.utils" [label="<f0> SourceModule| <f1> requests.utils",shape="record"];
	"requests.certs" [label="<f0> SourceModule| <f1> requests.certs",shape="record"];
	"requests.packages" [label="<f0> SourceModule| <f1> requests.packages",shape="record"];
	"urllib3.exceptions" [label="<f0> SourceModule| <f1> urllib3.exceptions",shape="record"];
	"cryptography" [label="<f0> MissingModule| <f1> cryptography",shape="record"];
	"urllib3.contrib.pyopenssl" [label="<f0> SourceModule| <f1> urllib3.contrib.pyopenssl",shape="record"];
	"'OpenSSL.crypto'" [label="<f0> MissingModule| <f1> 'OpenSSL.crypto'",shape="record"];
	"'cryptography.x509'" [label="<f0> MissingModule| <f1> 'cryptography.x509'",shape="record"];
	"OpenSSL" [label="<f0> MissingModule| <f1> OpenSSL",shape="record"];
	"urllib3.contrib" [label="<f0> Package| <f1> urllib3.contrib",shape="record"];
	"charset_normalizer" [label="<f0> Package| <f1> charset_normalizer",shape="record"];
	"charset_normalizer.md__mypyc" [label="<f0> Extension| <f1> charset_normalizer.md__mypyc",shape="record"];
	"charset_normalizer.version" [label="<f0> SourceModule| <f1> charset_normalizer.version",shape="record"];
	"charset_normalizer.utils" [label="<f0> SourceModule| <f1> charset_normalizer.utils",shape="record"];
	"charset_normalizer.constant" [label="<f0> SourceModule| <f1> charset_normalizer.constant",shape="record"];
	"_multibytecodec" [label="<f0> BuiltinModule| <f1> _multibytecodec",shape="record"];
	"charset_normalizer.models" [label="<f0> SourceModule| <f1> charset_normalizer.models",shape="record"];
	"charset_normalizer.cd" [label="<f0> SourceModule| <f1> charset_normalizer.cd",shape="record"];
	"charset_normalizer.md" [label="<f0> Extension| <f1> charset_normalizer.md",shape="record"];
	"charset_normalizer.legacy" [label="<f0> SourceModule| <f1> charset_normalizer.legacy",shape="record"];
	"charset_normalizer.api" [label="<f0> SourceModule| <f1> charset_normalizer.api",shape="record"];
	"requests.exceptions" [label="<f0> SourceModule| <f1> requests.exceptions",shape="record"];
	"urllib3" [label="<f0> Package| <f1> urllib3",shape="record"];
	"urllib3.contrib.emscripten" [label="<f0> Package| <f1> urllib3.contrib.emscripten",shape="record"];
	"urllib3.contrib.emscripten.connection" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.connection",shape="record"];
	"urllib3.contrib.emscripten.response" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.response",shape="record"];
	"urllib3.contrib.emscripten.request" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.request",shape="record"];
	"urllib3.contrib.emscripten.fetch" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.fetch",shape="record"];
	"pyodide" [label="<f0> MissingModule| <f1> pyodide",shape="record"];
	"js" [label="<f0> MissingModule| <f1> js",shape="record"];
	"gtts.version" [label="<f0> SourceModule| <f1> gtts.version",shape="record"];
	"ollama" [label="<f0> Package| <f1> ollama",shape="record"];
	"ollama._types" [label="<f0> SourceModule| <f1> ollama._types",shape="record"];
	"ollama._client" [label="<f0> SourceModule| <f1> ollama._client",shape="record"];
	"httpx" [label="<f0> Package| <f1> httpx",shape="record"];
	"httpx._main" [label="<f0> SourceModule| <f1> httpx._main",shape="record"];
	"'rich.table'" [label="<f0> MissingModule| <f1> 'rich.table'",shape="record"];
	"'rich.syntax'" [label="<f0> MissingModule| <f1> 'rich.syntax'",shape="record"];
	"'rich.progress'" [label="<f0> MissingModule| <f1> 'rich.progress'",shape="record"];
	"'rich.markup'" [label="<f0> MissingModule| <f1> 'rich.markup'",shape="record"];
	"rich" [label="<f0> MissingModule| <f1> rich",shape="record"];
	"httpcore" [label="<f0> Package| <f1> httpcore",shape="record"];
	"httpcore._backends.trio" [label="<f0> SourceModule| <f1> httpcore._backends.trio",shape="record"];
	"httpcore._backends" [label="<f0> Package| <f1> httpcore._backends",shape="record"];
	"httpcore._backends.anyio" [label="<f0> SourceModule| <f1> httpcore._backends.anyio",shape="record"];
	"httpcore._utils" [label="<f0> SourceModule| <f1> httpcore._utils",shape="record"];
	"anyio" [label="<f0> Package| <f1> anyio",shape="record"];
	"anyio._backends._trio" [label="<f0> SourceModule| <f1> anyio._backends._trio",shape="record"];
	"'trio.testing'" [label="<f0> MissingModule| <f1> 'trio.testing'",shape="record"];
	"exceptiongroup" [label="<f0> MissingModule| <f1> exceptiongroup",shape="record"];
	"anyio.streams.memory" [label="<f0> SourceModule| <f1> anyio.streams.memory",shape="record"];
	"anyio.streams" [label="<f0> Package| <f1> anyio.streams",shape="record"];
	"anyio.lowlevel" [label="<f0> SourceModule| <f1> anyio.lowlevel",shape="record"];
	"anyio.abc._eventloop" [label="<f0> SourceModule| <f1> anyio.abc._eventloop",shape="record"];
	"anyio.abc._testing" [label="<f0> SourceModule| <f1> anyio.abc._testing",shape="record"];
	"anyio.abc._tasks" [label="<f0> SourceModule| <f1> anyio.abc._tasks",shape="record"];
	"anyio.abc._subprocesses" [label="<f0> SourceModule| <f1> anyio.abc._subprocesses",shape="record"];
	"anyio.abc._streams" [label="<f0> SourceModule| <f1> anyio.abc._streams",shape="record"];
	"anyio.abc._resources" [label="<f0> SourceModule| <f1> anyio.abc._resources",shape="record"];
	"anyio.abc._sockets" [label="<f0> SourceModule| <f1> anyio.abc._sockets",shape="record"];
	"anyio.from_thread" [label="<f0> SourceModule| <f1> anyio.from_thread",shape="record"];
	"anyio._core" [label="<f0> Package| <f1> anyio._core",shape="record"];
	"anyio.abc" [label="<f0> Package| <f1> anyio.abc",shape="record"];
	"'trio.to_thread'" [label="<f0> MissingModule| <f1> 'trio.to_thread'",shape="record"];
	"'trio.socket'" [label="<f0> MissingModule| <f1> 'trio.socket'",shape="record"];
	"outcome" [label="<f0> MissingModule| <f1> outcome",shape="record"];
	"'trio.lowlevel'" [label="<f0> MissingModule| <f1> 'trio.lowlevel'",shape="record"];
	"'trio.from_thread'" [label="<f0> MissingModule| <f1> 'trio.from_thread'",shape="record"];
	"anyio._backends._asyncio" [label="<f0> SourceModule| <f1> anyio._backends._asyncio",shape="record"];
	"'_pytest.outcomes'" [label="<f0> MissingModule| <f1> '_pytest.outcomes'",shape="record"];
	"uvloop" [label="<f0> MissingModule| <f1> uvloop",shape="record"];
	"sniffio" [label="<f0> Package| <f1> sniffio",shape="record"];
	"sniffio._impl" [label="<f0> SourceModule| <f1> sniffio._impl",shape="record"];
	"curio" [label="<f0> MissingModule| <f1> curio",shape="record"];
	"sniffio._version" [label="<f0> SourceModule| <f1> sniffio._version",shape="record"];
	"anyio._backends" [label="<f0> Package| <f1> anyio._backends",shape="record"];
	"anyio._core._typedattr" [label="<f0> SourceModule| <f1> anyio._core._typedattr",shape="record"];
	"anyio._core._testing" [label="<f0> SourceModule| <f1> anyio._core._testing",shape="record"];
	"anyio._core._tasks" [label="<f0> SourceModule| <f1> anyio._core._tasks",shape="record"];
	"anyio._core._synchronization" [label="<f0> SourceModule| <f1> anyio._core._synchronization",shape="record"];
	"anyio._core._subprocesses" [label="<f0> SourceModule| <f1> anyio._core._subprocesses",shape="record"];
	"anyio._core._streams" [label="<f0> SourceModule| <f1> anyio._core._streams",shape="record"];
	"anyio._core._sockets" [label="<f0> SourceModule| <f1> anyio._core._sockets",shape="record"];
	"anyio.streams.tls" [label="<f0> SourceModule| <f1> anyio.streams.tls",shape="record"];
	"anyio.streams.stapled" [label="<f0> SourceModule| <f1> anyio.streams.stapled",shape="record"];
	"anyio._core._signals" [label="<f0> SourceModule| <f1> anyio._core._signals",shape="record"];
	"anyio._core._resources" [label="<f0> SourceModule| <f1> anyio._core._resources",shape="record"];
	"anyio._core._fileio" [label="<f0> SourceModule| <f1> anyio._core._fileio",shape="record"];
	"anyio._core._exceptions" [label="<f0> SourceModule| <f1> anyio._core._exceptions",shape="record"];
	"anyio._core._eventloop" [label="<f0> SourceModule| <f1> anyio._core._eventloop",shape="record"];
	"anyio.to_thread" [label="<f0> SourceModule| <f1> anyio.to_thread",shape="record"];
	"httpcore._sync" [label="<f0> Package| <f1> httpcore._sync",shape="record"];
	"httpcore._sync.socks_proxy" [label="<f0> SourceModule| <f1> httpcore._sync.socks_proxy",shape="record"];
	"httpcore._trace" [label="<f0> SourceModule| <f1> httpcore._trace",shape="record"];
	"httpcore._synchronization" [label="<f0> SourceModule| <f1> httpcore._synchronization",shape="record"];
	"socksio" [label="<f0> MissingModule| <f1> socksio",shape="record"];
	"httpcore._sync.http2" [label="<f0> SourceModule| <f1> httpcore._sync.http2",shape="record"];
	"'h2.settings'" [label="<f0> MissingModule| <f1> 'h2.settings'",shape="record"];
	"'h2.exceptions'" [label="<f0> MissingModule| <f1> 'h2.exceptions'",shape="record"];
	"'h2.config'" [label="<f0> MissingModule| <f1> 'h2.config'",shape="record"];
	"httpcore._sync.interfaces" [label="<f0> SourceModule| <f1> httpcore._sync.interfaces",shape="record"];
	"httpcore._sync.http_proxy" [label="<f0> SourceModule| <f1> httpcore._sync.http_proxy",shape="record"];
	"httpcore._sync.http11" [label="<f0> SourceModule| <f1> httpcore._sync.http11",shape="record"];
	"h11" [label="<f0> Package| <f1> h11",shape="record"];
	"h11._version" [label="<f0> SourceModule| <f1> h11._version",shape="record"];
	"h11._util" [label="<f0> SourceModule| <f1> h11._util",shape="record"];
	"h11._state" [label="<f0> SourceModule| <f1> h11._state",shape="record"];
	"h11._events" [label="<f0> SourceModule| <f1> h11._events",shape="record"];
	"h11._headers" [label="<f0> SourceModule| <f1> h11._headers",shape="record"];
	"h11._abnf" [label="<f0> SourceModule| <f1> h11._abnf",shape="record"];
	"h11._connection" [label="<f0> SourceModule| <f1> h11._connection",shape="record"];
	"h11._writers" [label="<f0> SourceModule| <f1> h11._writers",shape="record"];
	"h11._receivebuffer" [label="<f0> SourceModule| <f1> h11._receivebuffer",shape="record"];
	"h11._readers" [label="<f0> SourceModule| <f1> h11._readers",shape="record"];
	"httpcore._sync.connection_pool" [label="<f0> SourceModule| <f1> httpcore._sync.connection_pool",shape="record"];
	"httpcore._sync.connection" [label="<f0> SourceModule| <f1> httpcore._sync.connection",shape="record"];
	"httpcore._ssl" [label="<f0> SourceModule| <f1> httpcore._ssl",shape="record"];
	"httpcore._models" [label="<f0> SourceModule| <f1> httpcore._models",shape="record"];
	"httpcore._exceptions" [label="<f0> SourceModule| <f1> httpcore._exceptions",shape="record"];
	"httpcore._backends.sync" [label="<f0> SourceModule| <f1> httpcore._backends.sync",shape="record"];
	"httpcore._backends.mock" [label="<f0> SourceModule| <f1> httpcore._backends.mock",shape="record"];
	"httpcore._backends.base" [label="<f0> SourceModule| <f1> httpcore._backends.base",shape="record"];
	"httpcore._async" [label="<f0> Package| <f1> httpcore._async",shape="record"];
	"httpcore._async.socks_proxy" [label="<f0> SourceModule| <f1> httpcore._async.socks_proxy",shape="record"];
	"httpcore._backends.auto" [label="<f0> SourceModule| <f1> httpcore._backends.auto",shape="record"];
	"httpcore._async.http2" [label="<f0> SourceModule| <f1> httpcore._async.http2",shape="record"];
	"httpcore._async.interfaces" [label="<f0> SourceModule| <f1> httpcore._async.interfaces",shape="record"];
	"httpcore._async.http_proxy" [label="<f0> SourceModule| <f1> httpcore._async.http_proxy",shape="record"];
	"httpcore._async.http11" [label="<f0> SourceModule| <f1> httpcore._async.http11",shape="record"];
	"httpcore._async.connection_pool" [label="<f0> SourceModule| <f1> httpcore._async.connection_pool",shape="record"];
	"httpcore._async.connection" [label="<f0> SourceModule| <f1> httpcore._async.connection",shape="record"];
	"httpcore._api" [label="<f0> SourceModule| <f1> httpcore._api",shape="record"];
	"click" [label="<f0> Package| <f1> click",shape="record"];
	"click.utils" [label="<f0> SourceModule| <f1> click.utils",shape="record"];
	"click._compat" [label="<f0> SourceModule| <f1> click._compat",shape="record"];
	"colorama" [label="<f0> Package| <f1> colorama",shape="record"];
	"colorama.ansitowin32" [label="<f0> SourceModule| <f1> colorama.ansitowin32",shape="record"];
	"colorama.winterm" [label="<f0> SourceModule| <f1> colorama.winterm",shape="record"];
	"colorama.ansi" [label="<f0> SourceModule| <f1> colorama.ansi",shape="record"];
	"colorama.initialise" [label="<f0> SourceModule| <f1> colorama.initialise",shape="record"];
	"colorama.win32" [label="<f0> SourceModule| <f1> colorama.win32",shape="record"];
	"click._winconsole" [label="<f0> SourceModule| <f1> click._winconsole",shape="record"];
	"click.termui" [label="<f0> SourceModule| <f1> click.termui",shape="record"];
	"click._termui_impl" [label="<f0> SourceModule| <f1> click._termui_impl",shape="record"];
	"click.parser" [label="<f0> SourceModule| <f1> click.parser",shape="record"];
	"click.globals" [label="<f0> SourceModule| <f1> click.globals",shape="record"];
	"click.formatting" [label="<f0> SourceModule| <f1> click.formatting",shape="record"];
	"click._textwrap" [label="<f0> SourceModule| <f1> click._textwrap",shape="record"];
	"click.exceptions" [label="<f0> SourceModule| <f1> click.exceptions",shape="record"];
	"click.decorators" [label="<f0> SourceModule| <f1> click.decorators",shape="record"];
	"click.core" [label="<f0> SourceModule| <f1> click.core",shape="record"];
	"click.shell_completion" [label="<f0> SourceModule| <f1> click.shell_completion",shape="record"];
	"click.types" [label="<f0> SourceModule| <f1> click.types",shape="record"];
	"uuid" [label="<f0> SourceModule| <f1> uuid",shape="record"];
	"_uuid" [label="<f0> Extension| <f1> _uuid",shape="record"];
	"httpx._urls" [label="<f0> SourceModule| <f1> httpx._urls",shape="record"];
	"httpx._utils" [label="<f0> SourceModule| <f1> httpx._utils",shape="record"];
	"httpx._urlparse" [label="<f0> SourceModule| <f1> httpx._urlparse",shape="record"];
	"httpx._types" [label="<f0> SourceModule| <f1> httpx._types",shape="record"];
	"httpx._transports" [label="<f0> Package| <f1> httpx._transports",shape="record"];
	"httpx._transports.wsgi" [label="<f0> SourceModule| <f1> httpx._transports.wsgi",shape="record"];
	"'_typeshed.wsgi'" [label="<f0> MissingModule| <f1> '_typeshed.wsgi'",shape="record"];
	"httpx._transports.mock" [label="<f0> SourceModule| <f1> httpx._transports.mock",shape="record"];
	"httpx._transports.default" [label="<f0> SourceModule| <f1> httpx._transports.default",shape="record"];
	"httpx._transports.base" [label="<f0> SourceModule| <f1> httpx._transports.base",shape="record"];
	"httpx._transports.asgi" [label="<f0> SourceModule| <f1> httpx._transports.asgi",shape="record"];
	"httpx._status_codes" [label="<f0> SourceModule| <f1> httpx._status_codes",shape="record"];
	"httpx._models" [label="<f0> SourceModule| <f1> httpx._models",shape="record"];
	"httpx._multipart" [label="<f0> SourceModule| <f1> httpx._multipart",shape="record"];
	"httpx._decoders" [label="<f0> SourceModule| <f1> httpx._decoders",shape="record"];
	"httpx._compat" [label="<f0> SourceModule| <f1> httpx._compat",shape="record"];
	"httpx._exceptions" [label="<f0> SourceModule| <f1> httpx._exceptions",shape="record"];
	"httpx._content" [label="<f0> SourceModule| <f1> httpx._content",shape="record"];
	"httpx._config" [label="<f0> SourceModule| <f1> httpx._config",shape="record"];
	"httpx._client" [label="<f0> SourceModule| <f1> httpx._client",shape="record"];
	"httpx._auth" [label="<f0> SourceModule| <f1> httpx._auth",shape="record"];
	"httpx._api" [label="<f0> SourceModule| <f1> httpx._api",shape="record"];
	"httpx.__version__" [label="<f0> SourceModule| <f1> httpx.__version__",shape="record"];
	"keyboard" [label="<f0> Package| <f1> keyboard",shape="record"];
	"keyboard._canonical_names" [label="<f0> SourceModule| <f1> keyboard._canonical_names",shape="record"];
	"keyboard._generic" [label="<f0> SourceModule| <f1> keyboard._generic",shape="record"];
	"keyboard._keyboard_event" [label="<f0> SourceModule| <f1> keyboard._keyboard_event",shape="record"];
	"keyboard._darwinkeyboard" [label="<f0> SourceModule| <f1> keyboard._darwinkeyboard",shape="record"];
	"Quartz" [label="<f0> MissingModule| <f1> Quartz",shape="record"];
	"keyboard._nixkeyboard" [label="<f0> SourceModule| <f1> keyboard._nixkeyboard",shape="record"];
	"keyboard._nixcommon" [label="<f0> SourceModule| <f1> keyboard._nixcommon",shape="record"];
	"keyboard._winkeyboard" [label="<f0> SourceModule| <f1> keyboard._winkeyboard",shape="record"];
	"numpy" [label="<f0> Package| <f1> numpy",shape="record"];
	"numpy._core._multiarray_tests" [label="<f0> Extension| <f1> numpy._core._multiarray_tests",shape="record"];
	"numpy._core._dtype_ctypes" [label="<f0> SourceModule| <f1> numpy._core._dtype_ctypes",shape="record"];
	"numpy._pytesttester" [label="<f0> SourceModule| <f1> numpy._pytesttester",shape="record"];
	"numpy.strings" [label="<f0> Package| <f1> numpy.strings",shape="record"];
	"numpy._core.strings" [label="<f0> SourceModule| <f1> numpy._core.strings",shape="record"];
	"numpy._core.umath" [label="<f0> SourceModule| <f1> numpy._core.umath",shape="record"];
	"numpy._core._multiarray_umath" [label="<f0> Extension| <f1> numpy._core._multiarray_umath",shape="record"];
	"numpy._core.multiarray" [label="<f0> SourceModule| <f1> numpy._core.multiarray",shape="record"];
	"numpy._core.overrides" [label="<f0> SourceModule| <f1> numpy._core.overrides",shape="record"];
	"numpy._utils._inspect" [label="<f0> SourceModule| <f1> numpy._utils._inspect",shape="record"];
	"numpy._utils" [label="<f0> Package| <f1> numpy._utils",shape="record"];
	"numpy._utils._convertions" [label="<f0> SourceModule| <f1> numpy._utils._convertions",shape="record"];
	"numpy.core" [label="<f0> Package| <f1> numpy.core",shape="record"];
	"numpy.core._utils" [label="<f0> SourceModule| <f1> numpy.core._utils",shape="record"];
	"numpy.char" [label="<f0> Package| <f1> numpy.char",shape="record"];
	"numpy._core.defchararray" [label="<f0> SourceModule| <f1> numpy._core.defchararray",shape="record"];
	"numpy._core.numeric" [label="<f0> SourceModule| <f1> numpy._core.numeric",shape="record"];
	"numpy._core._asarray" [label="<f0> SourceModule| <f1> numpy._core._asarray",shape="record"];
	"numpy._core.arrayprint" [label="<f0> SourceModule| <f1> numpy._core.arrayprint",shape="record"];
	"numpy._core.fromnumeric" [label="<f0> SourceModule| <f1> numpy._core.fromnumeric",shape="record"];
	"numpy._core._methods" [label="<f0> SourceModule| <f1> numpy._core._methods",shape="record"];
	"numpy._core._exceptions" [label="<f0> SourceModule| <f1> numpy._core._exceptions",shape="record"];
	"numpy._core._ufunc_config" [label="<f0> SourceModule| <f1> numpy._core._ufunc_config",shape="record"];
	"numpy._core.shape_base" [label="<f0> SourceModule| <f1> numpy._core.shape_base",shape="record"];
	"numpy._core.numerictypes" [label="<f0> SourceModule| <f1> numpy._core.numerictypes",shape="record"];
	"numpy._core._dtype" [label="<f0> SourceModule| <f1> numpy._core._dtype",shape="record"];
	"numpy._core._type_aliases" [label="<f0> SourceModule| <f1> numpy._core._type_aliases",shape="record"];
	"numpy._core._string_helpers" [label="<f0> SourceModule| <f1> numpy._core._string_helpers",shape="record"];
	"numpy.rec" [label="<f0> Package| <f1> numpy.rec",shape="record"];
	"numpy._core.records" [label="<f0> SourceModule| <f1> numpy._core.records",shape="record"];
	"numpy.typing" [label="<f0> Package| <f1> numpy.typing",shape="record"];
	"numpy._typing._add_docstring" [label="<f0> SourceModule| <f1> numpy._typing._add_docstring",shape="record"];
	"numpy._typing._array_like" [label="<f0> SourceModule| <f1> numpy._typing._array_like",shape="record"];
	"numpy._typing._nested_sequence" [label="<f0> SourceModule| <f1> numpy._typing._nested_sequence",shape="record"];
	"numpy._typing" [label="<f0> Package| <f1> numpy._typing",shape="record"];
	"numpy._typing._ufunc" [label="<f0> MissingModule| <f1> numpy._typing._ufunc",shape="record"];
	"numpy._typing._dtype_like" [label="<f0> SourceModule| <f1> numpy._typing._dtype_like",shape="record"];
	"numpy._typing._shape" [label="<f0> SourceModule| <f1> numpy._typing._shape",shape="record"];
	"numpy._typing._scalars" [label="<f0> SourceModule| <f1> numpy._typing._scalars",shape="record"];
	"numpy._typing._char_codes" [label="<f0> SourceModule| <f1> numpy._typing._char_codes",shape="record"];
	"numpy._typing._nbit" [label="<f0> SourceModule| <f1> numpy._typing._nbit",shape="record"];
	"numpy.f2py" [label="<f0> Package| <f1> numpy.f2py",shape="record"];
	"numpy.f2py.diagnose" [label="<f0> SourceModule| <f1> numpy.f2py.diagnose",shape="record"];
	"'numpy_distutils.cpuinfo'" [label="<f0> MissingModule| <f1> 'numpy_distutils.cpuinfo'",shape="record"];
	"'numpy_distutils.fcompiler'" [label="<f0> MissingModule| <f1> 'numpy_distutils.fcompiler'",shape="record"];
	"'numpy_distutils.command'" [label="<f0> MissingModule| <f1> 'numpy_distutils.command'",shape="record"];
	"numpy_distutils" [label="<f0> MissingModule| <f1> numpy_distutils",shape="record"];
	"numpy.f2py.f2py2e" [label="<f0> SourceModule| <f1> numpy.f2py.f2py2e",shape="record"];
	"numpy.f2py._backends" [label="<f0> Package| <f1> numpy.f2py._backends",shape="record"];
	"numpy.f2py._backends._distutils" [label="<f0> SourceModule| <f1> numpy.f2py._backends._distutils",shape="record"];
	"numpy.f2py._backends._backend" [label="<f0> SourceModule| <f1> numpy.f2py._backends._backend",shape="record"];
	"numpy.f2py._backends._meson" [label="<f0> SourceModule| <f1> numpy.f2py._backends._meson",shape="record"];
	"numpy.f2py.auxfuncs" [label="<f0> SourceModule| <f1> numpy.f2py.auxfuncs",shape="record"];
	"numpy.f2py.f90mod_rules" [label="<f0> SourceModule| <f1> numpy.f2py.f90mod_rules",shape="record"];
	"numpy.f2py.rules" [label="<f0> SourceModule| <f1> numpy.f2py.rules",shape="record"];
	"numpy.f2py.use_rules" [label="<f0> SourceModule| <f1> numpy.f2py.use_rules",shape="record"];
	"numpy.f2py.common_rules" [label="<f0> SourceModule| <f1> numpy.f2py.common_rules",shape="record"];
	"numpy.f2py.func2subr" [label="<f0> SourceModule| <f1> numpy.f2py.func2subr",shape="record"];
	"numpy.f2py._isocbind" [label="<f0> SourceModule| <f1> numpy.f2py._isocbind",shape="record"];
	"numpy.f2py.crackfortran" [label="<f0> SourceModule| <f1> numpy.f2py.crackfortran",shape="record"];
	"fileinput" [label="<f0> SourceModule| <f1> fileinput",shape="record"];
	"numpy.f2py.symbolic" [label="<f0> SourceModule| <f1> numpy.f2py.symbolic",shape="record"];
	"numpy.f2py.cb_rules" [label="<f0> SourceModule| <f1> numpy.f2py.cb_rules",shape="record"];
	"numpy.f2py.capi_maps" [label="<f0> SourceModule| <f1> numpy.f2py.capi_maps",shape="record"];
	"numpy.f2py.cfuncs" [label="<f0> SourceModule| <f1> numpy.f2py.cfuncs",shape="record"];
	"numpy.f2py.__version__" [label="<f0> SourceModule| <f1> numpy.f2py.__version__",shape="record"];
	"numpy.matlib" [label="<f0> SourceModule| <f1> numpy.matlib",shape="record"];
	"numpy.matrixlib.defmatrix" [label="<f0> SourceModule| <f1> numpy.matrixlib.defmatrix",shape="record"];
	"numpy.testing" [label="<f0> Package| <f1> numpy.testing",shape="record"];
	"numpy.testing.overrides" [label="<f0> SourceModule| <f1> numpy.testing.overrides",shape="record"];
	"numpy.lib.recfunctions" [label="<f0> SourceModule| <f1> numpy.lib.recfunctions",shape="record"];
	"numpy.lib._iotools" [label="<f0> SourceModule| <f1> numpy.lib._iotools",shape="record"];
	"numpy.ma.mrecords" [label="<f0> SourceModule| <f1> numpy.ma.mrecords",shape="record"];
	"numpy.testing._private.extbuild" [label="<f0> SourceModule| <f1> numpy.testing._private.extbuild",shape="record"];
	"numpy.testing._private.utils" [label="<f0> SourceModule| <f1> numpy.testing._private.utils",shape="record"];
	"psutil" [label="<f0> MissingModule| <f1> psutil",shape="record"];
	"win32pdh" [label="<f0> Extension| <f1> win32pdh",shape="record"];
	"numpy.linalg._umath_linalg" [label="<f0> Extension| <f1> numpy.linalg._umath_linalg",shape="record"];
	"numpy.testing._private" [label="<f0> Package| <f1> numpy.testing._private",shape="record"];
	"numpy.exceptions" [label="<f0> SourceModule| <f1> numpy.exceptions",shape="record"];
	"numpy.ctypeslib" [label="<f0> SourceModule| <f1> numpy.ctypeslib",shape="record"];
	"numpy._core._internal" [label="<f0> SourceModule| <f1> numpy._core._internal",shape="record"];
	"numpy.ma" [label="<f0> Package| <f1> numpy.ma",shape="record"];
	"numpy.ma.extras" [label="<f0> SourceModule| <f1> numpy.ma.extras",shape="record"];
	"numpy.lib.array_utils" [label="<f0> SourceModule| <f1> numpy.lib.array_utils",shape="record"];
	"numpy.lib._array_utils_impl" [label="<f0> SourceModule| <f1> numpy.lib._array_utils_impl",shape="record"];
	"numpy.ma.core" [label="<f0> SourceModule| <f1> numpy.ma.core",shape="record"];
	"numpy.polynomial" [label="<f0> Package| <f1> numpy.polynomial",shape="record"];
	"numpy.polynomial._polybase" [label="<f0> SourceModule| <f1> numpy.polynomial._polybase",shape="record"];
	"numpy.polynomial.laguerre" [label="<f0> SourceModule| <f1> numpy.polynomial.laguerre",shape="record"];
	"numpy.polynomial.hermite_e" [label="<f0> SourceModule| <f1> numpy.polynomial.hermite_e",shape="record"];
	"numpy.polynomial.hermite" [label="<f0> SourceModule| <f1> numpy.polynomial.hermite",shape="record"];
	"numpy.polynomial.legendre" [label="<f0> SourceModule| <f1> numpy.polynomial.legendre",shape="record"];
	"numpy.polynomial.chebyshev" [label="<f0> SourceModule| <f1> numpy.polynomial.chebyshev",shape="record"];
	"numpy.polynomial.polynomial" [label="<f0> SourceModule| <f1> numpy.polynomial.polynomial",shape="record"];
	"numpy.polynomial.polyutils" [label="<f0> SourceModule| <f1> numpy.polynomial.polyutils",shape="record"];
	"numpy.random" [label="<f0> Package| <f1> numpy.random",shape="record"];
	"numpy.random.RandomState" [label="<f0> MissingModule| <f1> numpy.random.RandomState",shape="record"];
	"numpy.random.mtrand" [label="<f0> Extension| <f1> numpy.random.mtrand",shape="record"];
	"numpy.random._sfc64" [label="<f0> Extension| <f1> numpy.random._sfc64",shape="record"];
	"numpy.random._philox" [label="<f0> Extension| <f1> numpy.random._philox",shape="record"];
	"numpy.random._pcg64" [label="<f0> Extension| <f1> numpy.random._pcg64",shape="record"];
	"numpy.random._mt19937" [label="<f0> Extension| <f1> numpy.random._mt19937",shape="record"];
	"numpy.random.bit_generator" [label="<f0> Extension| <f1> numpy.random.bit_generator",shape="record"];
	"numpy.random._generator" [label="<f0> Extension| <f1> numpy.random._generator",shape="record"];
	"numpy.random._bounded_integers" [label="<f0> Extension| <f1> numpy.random._bounded_integers",shape="record"];
	"numpy.random._common" [label="<f0> Extension| <f1> numpy.random._common",shape="record"];
	"numpy.random._pickle" [label="<f0> SourceModule| <f1> numpy.random._pickle",shape="record"];
	"numpy.dtypes" [label="<f0> SourceModule| <f1> numpy.dtypes",shape="record"];
	"numpy.fft" [label="<f0> Package| <f1> numpy.fft",shape="record"];
	"numpy.fft.helper" [label="<f0> SourceModule| <f1> numpy.fft.helper",shape="record"];
	"numpy.fft._helper" [label="<f0> SourceModule| <f1> numpy.fft._helper",shape="record"];
	"numpy.fft._pocketfft" [label="<f0> SourceModule| <f1> numpy.fft._pocketfft",shape="record"];
	"numpy.fft._pocketfft_umath" [label="<f0> Extension| <f1> numpy.fft._pocketfft_umath",shape="record"];
	"numpy.linalg" [label="<f0> Package| <f1> numpy.linalg",shape="record"];
	"numpy.linalg.linalg" [label="<f0> SourceModule| <f1> numpy.linalg.linalg",shape="record"];
	"numpy.linalg._linalg" [label="<f0> SourceModule| <f1> numpy.linalg._linalg",shape="record"];
	"numpy._array_api_info" [label="<f0> SourceModule| <f1> numpy._array_api_info",shape="record"];
	"numpy.matrixlib" [label="<f0> Package| <f1> numpy.matrixlib",shape="record"];
	"numpy.lib._index_tricks_impl" [label="<f0> SourceModule| <f1> numpy.lib._index_tricks_impl",shape="record"];
	"numpy.lib.stride_tricks" [label="<f0> SourceModule| <f1> numpy.lib.stride_tricks",shape="record"];
	"numpy.lib._npyio_impl" [label="<f0> SourceModule| <f1> numpy.lib._npyio_impl",shape="record"];
	"numpy.lib._datasource" [label="<f0> SourceModule| <f1> numpy.lib._datasource",shape="record"];
	"numpy.lib.format" [label="<f0> SourceModule| <f1> numpy.lib.format",shape="record"];
	"numpy.lib._polynomial_impl" [label="<f0> SourceModule| <f1> numpy.lib._polynomial_impl",shape="record"];
	"numpy.lib._stride_tricks_impl" [label="<f0> SourceModule| <f1> numpy.lib._stride_tricks_impl",shape="record"];
	"numpy.lib._utils_impl" [label="<f0> SourceModule| <f1> numpy.lib._utils_impl",shape="record"];
	"threadpoolctl" [label="<f0> MissingModule| <f1> threadpoolctl",shape="record"];
	"numpy.lib._arraypad_impl" [label="<f0> SourceModule| <f1> numpy.lib._arraypad_impl",shape="record"];
	"numpy.lib._ufunclike_impl" [label="<f0> SourceModule| <f1> numpy.lib._ufunclike_impl",shape="record"];
	"numpy.lib._arraysetops_impl" [label="<f0> SourceModule| <f1> numpy.lib._arraysetops_impl",shape="record"];
	"numpy.lib._type_check_impl" [label="<f0> SourceModule| <f1> numpy.lib._type_check_impl",shape="record"];
	"numpy._core.getlimits" [label="<f0> SourceModule| <f1> numpy._core.getlimits",shape="record"];
	"numpy._core._machar" [label="<f0> SourceModule| <f1> numpy._core._machar",shape="record"];
	"numpy.lib._shape_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._shape_base_impl",shape="record"];
	"numpy.lib._twodim_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._twodim_base_impl",shape="record"];
	"numpy.lib._function_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._function_base_impl",shape="record"];
	"numpy.lib._nanfunctions_impl" [label="<f0> SourceModule| <f1> numpy.lib._nanfunctions_impl",shape="record"];
	"numpy.lib._histograms_impl" [label="<f0> SourceModule| <f1> numpy.lib._histograms_impl",shape="record"];
	"numpy.lib.scimath" [label="<f0> SourceModule| <f1> numpy.lib.scimath",shape="record"];
	"numpy.lib._scimath_impl" [label="<f0> SourceModule| <f1> numpy.lib._scimath_impl",shape="record"];
	"numpy.lib" [label="<f0> Package| <f1> numpy.lib",shape="record"];
	"numpy._core.function_base" [label="<f0> SourceModule| <f1> numpy._core.function_base",shape="record"];
	"numpy.lib._version" [label="<f0> SourceModule| <f1> numpy.lib._version",shape="record"];
	"numpy.lib._arrayterator_impl" [label="<f0> SourceModule| <f1> numpy.lib._arrayterator_impl",shape="record"];
	"numpy.lib.npyio" [label="<f0> SourceModule| <f1> numpy.lib.npyio",shape="record"];
	"numpy.lib.mixins" [label="<f0> SourceModule| <f1> numpy.lib.mixins",shape="record"];
	"numpy.lib.introspect" [label="<f0> SourceModule| <f1> numpy.lib.introspect",shape="record"];
	"numpy._core.zeros" [label="<f0> MissingModule| <f1> numpy._core.zeros",shape="record"];
	"numpy._core.vstack" [label="<f0> MissingModule| <f1> numpy._core.vstack",shape="record"];
	"numpy._core.void" [label="<f0> MissingModule| <f1> numpy._core.void",shape="record"];
	"numpy._core.vecdot" [label="<f0> MissingModule| <f1> numpy._core.vecdot",shape="record"];
	"numpy._core.ushort" [label="<f0> MissingModule| <f1> numpy._core.ushort",shape="record"];
	"numpy._core.unsignedinteger" [label="<f0> MissingModule| <f1> numpy._core.unsignedinteger",shape="record"];
	"numpy._core.ulonglong" [label="<f0> MissingModule| <f1> numpy._core.ulonglong",shape="record"];
	"numpy._core.ulong" [label="<f0> MissingModule| <f1> numpy._core.ulong",shape="record"];
	"numpy._core.uintp" [label="<f0> MissingModule| <f1> numpy._core.uintp",shape="record"];
	"numpy._core.uintc" [label="<f0> MissingModule| <f1> numpy._core.uintc",shape="record"];
	"numpy._core.uint64" [label="<f0> MissingModule| <f1> numpy._core.uint64",shape="record"];
	"numpy._core.uint32" [label="<f0> MissingModule| <f1> numpy._core.uint32",shape="record"];
	"numpy._core.uint16" [label="<f0> MissingModule| <f1> numpy._core.uint16",shape="record"];
	"numpy._core.uint" [label="<f0> MissingModule| <f1> numpy._core.uint",shape="record"];
	"numpy._core.ubyte" [label="<f0> MissingModule| <f1> numpy._core.ubyte",shape="record"];
	"numpy._core.trunc" [label="<f0> MissingModule| <f1> numpy._core.trunc",shape="record"];
	"numpy._core.true_divide" [label="<f0> MissingModule| <f1> numpy._core.true_divide",shape="record"];
	"numpy._core.transpose" [label="<f0> MissingModule| <f1> numpy._core.transpose",shape="record"];
	"numpy._core.trace" [label="<f0> MissingModule| <f1> numpy._core.trace",shape="record"];
	"numpy._core.timedelta64" [label="<f0> MissingModule| <f1> numpy._core.timedelta64",shape="record"];
	"numpy._core.tensordot" [label="<f0> MissingModule| <f1> numpy._core.tensordot",shape="record"];
	"numpy._core.tanh" [label="<f0> MissingModule| <f1> numpy._core.tanh",shape="record"];
	"numpy._core.tan" [label="<f0> MissingModule| <f1> numpy._core.tan",shape="record"];
	"numpy._core.swapaxes" [label="<f0> MissingModule| <f1> numpy._core.swapaxes",shape="record"];
	"numpy._core.sum" [label="<f0> MissingModule| <f1> numpy._core.sum",shape="record"];
	"numpy._core.subtract" [label="<f0> MissingModule| <f1> numpy._core.subtract",shape="record"];
	"numpy._core.str_" [label="<f0> MissingModule| <f1> numpy._core.str_",shape="record"];
	"numpy._core.square" [label="<f0> MissingModule| <f1> numpy._core.square",shape="record"];
	"numpy._core.sqrt" [label="<f0> MissingModule| <f1> numpy._core.sqrt",shape="record"];
	"numpy._core.spacing" [label="<f0> MissingModule| <f1> numpy._core.spacing",shape="record"];
	"numpy._core.sort" [label="<f0> MissingModule| <f1> numpy._core.sort",shape="record"];
	"numpy._core.sinh" [label="<f0> MissingModule| <f1> numpy._core.sinh",shape="record"];
	"numpy._core.single" [label="<f0> MissingModule| <f1> numpy._core.single",shape="record"];
	"numpy._core.signedinteger" [label="<f0> MissingModule| <f1> numpy._core.signedinteger",shape="record"];
	"numpy._core.signbit" [label="<f0> MissingModule| <f1> numpy._core.signbit",shape="record"];
	"numpy._core.sign" [label="<f0> MissingModule| <f1> numpy._core.sign",shape="record"];
	"numpy._core.short" [label="<f0> MissingModule| <f1> numpy._core.short",shape="record"];
	"numpy._core.rint" [label="<f0> MissingModule| <f1> numpy._core.rint",shape="record"];
	"numpy._core.right_shift" [label="<f0> MissingModule| <f1> numpy._core.right_shift",shape="record"];
	"numpy._core.result_type" [label="<f0> MissingModule| <f1> numpy._core.result_type",shape="record"];
	"numpy._core.remainder" [label="<f0> MissingModule| <f1> numpy._core.remainder",shape="record"];
	"numpy._core.reciprocal" [label="<f0> MissingModule| <f1> numpy._core.reciprocal",shape="record"];
	"numpy._core.radians" [label="<f0> MissingModule| <f1> numpy._core.radians",shape="record"];
	"numpy._core.rad2deg" [label="<f0> MissingModule| <f1> numpy._core.rad2deg",shape="record"];
	"numpy._core.prod" [label="<f0> MissingModule| <f1> numpy._core.prod",shape="record"];
	"numpy._core.printoptions" [label="<f0> SourceModule| <f1> numpy._core.printoptions",shape="record"];
	"numpy._core.power" [label="<f0> MissingModule| <f1> numpy._core.power",shape="record"];
	"numpy._core.positive" [label="<f0> MissingModule| <f1> numpy._core.positive",shape="record"];
	"numpy._core.pi" [label="<f0> MissingModule| <f1> numpy._core.pi",shape="record"];
	"numpy._core.outer" [label="<f0> MissingModule| <f1> numpy._core.outer",shape="record"];
	"numpy._core.ones" [label="<f0> MissingModule| <f1> numpy._core.ones",shape="record"];
	"numpy._core.object_" [label="<f0> MissingModule| <f1> numpy._core.object_",shape="record"];
	"numpy._core.number" [label="<f0> MissingModule| <f1> numpy._core.number",shape="record"];
	"numpy._core.not_equal" [label="<f0> MissingModule| <f1> numpy._core.not_equal",shape="record"];
	"numpy._core.newaxis" [label="<f0> MissingModule| <f1> numpy._core.newaxis",shape="record"];
	"numpy._core.negative" [label="<f0> MissingModule| <f1> numpy._core.negative",shape="record"];
	"numpy._core.ndarray" [label="<f0> MissingModule| <f1> numpy._core.ndarray",shape="record"];
	"numpy._core.multiply" [label="<f0> MissingModule| <f1> numpy._core.multiply",shape="record"];
	"numpy._core.moveaxis" [label="<f0> MissingModule| <f1> numpy._core.moveaxis",shape="record"];
	"numpy._core.modf" [label="<f0> MissingModule| <f1> numpy._core.modf",shape="record"];
	"numpy._core.mod" [label="<f0> MissingModule| <f1> numpy._core.mod",shape="record"];
	"numpy._core.minimum" [label="<f0> MissingModule| <f1> numpy._core.minimum",shape="record"];
	"numpy._core.memmap" [label="<f0> SourceModule| <f1> numpy._core.memmap",shape="record"];
	"numpy._core.maximum" [label="<f0> MissingModule| <f1> numpy._core.maximum",shape="record"];
	"numpy._core.max" [label="<f0> MissingModule| <f1> numpy._core.max",shape="record"];
	"numpy._core.matrix_transpose" [label="<f0> MissingModule| <f1> numpy._core.matrix_transpose",shape="record"];
	"numpy._core.matmul" [label="<f0> MissingModule| <f1> numpy._core.matmul",shape="record"];
	"numpy._core.longdouble" [label="<f0> MissingModule| <f1> numpy._core.longdouble",shape="record"];
	"numpy._core.long" [label="<f0> MissingModule| <f1> numpy._core.long",shape="record"];
	"numpy._core.logical_xor" [label="<f0> MissingModule| <f1> numpy._core.logical_xor",shape="record"];
	"numpy._core.logical_or" [label="<f0> MissingModule| <f1> numpy._core.logical_or",shape="record"];
	"numpy._core.logical_not" [label="<f0> MissingModule| <f1> numpy._core.logical_not",shape="record"];
	"numpy._core.logical_and" [label="<f0> MissingModule| <f1> numpy._core.logical_and",shape="record"];
	"numpy._core.logaddexp2" [label="<f0> MissingModule| <f1> numpy._core.logaddexp2",shape="record"];
	"numpy._core.logaddexp" [label="<f0> MissingModule| <f1> numpy._core.logaddexp",shape="record"];
	"numpy._core.log2" [label="<f0> MissingModule| <f1> numpy._core.log2",shape="record"];
	"numpy._core.log1p" [label="<f0> MissingModule| <f1> numpy._core.log1p",shape="record"];
	"numpy._core.log" [label="<f0> MissingModule| <f1> numpy._core.log",shape="record"];
	"numpy._core.linspace" [label="<f0> MissingModule| <f1> numpy._core.linspace",shape="record"];
	"numpy._core.less_equal" [label="<f0> MissingModule| <f1> numpy._core.less_equal",shape="record"];
	"numpy._core.less" [label="<f0> MissingModule| <f1> numpy._core.less",shape="record"];
	"numpy._core.left_shift" [label="<f0> MissingModule| <f1> numpy._core.left_shift",shape="record"];
	"numpy._core.ldexp" [label="<f0> MissingModule| <f1> numpy._core.ldexp",shape="record"];
	"numpy._core.lcm" [label="<f0> MissingModule| <f1> numpy._core.lcm",shape="record"];
	"numpy._core.isscalar" [label="<f0> MissingModule| <f1> numpy._core.isscalar",shape="record"];
	"numpy._core.isnat" [label="<f0> MissingModule| <f1> numpy._core.isnat",shape="record"];
	"numpy._core.isnan" [label="<f0> MissingModule| <f1> numpy._core.isnan",shape="record"];
	"numpy._core.isfinite" [label="<f0> MissingModule| <f1> numpy._core.isfinite",shape="record"];
	"numpy._core.intp" [label="<f0> MissingModule| <f1> numpy._core.intp",shape="record"];
	"numpy._core.integer" [label="<f0> MissingModule| <f1> numpy._core.integer",shape="record"];
	"numpy._core.intc" [label="<f0> MissingModule| <f1> numpy._core.intc",shape="record"];
	"numpy._core.int8" [label="<f0> MissingModule| <f1> numpy._core.int8",shape="record"];
	"numpy._core.int64" [label="<f0> MissingModule| <f1> numpy._core.int64",shape="record"];
	"numpy._core.int32" [label="<f0> MissingModule| <f1> numpy._core.int32",shape="record"];
	"numpy._core.int16" [label="<f0> MissingModule| <f1> numpy._core.int16",shape="record"];
	"numpy._core.inf" [label="<f0> MissingModule| <f1> numpy._core.inf",shape="record"];
	"numpy._core.inexact" [label="<f0> MissingModule| <f1> numpy._core.inexact",shape="record"];
	"numpy._core.iinfo" [label="<f0> MissingModule| <f1> numpy._core.iinfo",shape="record"];
	"numpy._core.hypot" [label="<f0> MissingModule| <f1> numpy._core.hypot",shape="record"];
	"numpy._core.hstack" [label="<f0> MissingModule| <f1> numpy._core.hstack",shape="record"];
	"numpy._core.heaviside" [label="<f0> MissingModule| <f1> numpy._core.heaviside",shape="record"];
	"numpy._core.half" [label="<f0> MissingModule| <f1> numpy._core.half",shape="record"];
	"numpy._core.greater_equal" [label="<f0> MissingModule| <f1> numpy._core.greater_equal",shape="record"];
	"numpy._core.greater" [label="<f0> MissingModule| <f1> numpy._core.greater",shape="record"];
	"numpy._core.gcd" [label="<f0> MissingModule| <f1> numpy._core.gcd",shape="record"];
	"numpy._core.frompyfunc" [label="<f0> MissingModule| <f1> numpy._core.frompyfunc",shape="record"];
	"numpy._core.frexp" [label="<f0> MissingModule| <f1> numpy._core.frexp",shape="record"];
	"numpy._core.fmod" [label="<f0> MissingModule| <f1> numpy._core.fmod",shape="record"];
	"numpy._core.fmin" [label="<f0> MissingModule| <f1> numpy._core.fmin",shape="record"];
	"numpy._core.fmax" [label="<f0> MissingModule| <f1> numpy._core.fmax",shape="record"];
	"numpy._core.floor_divide" [label="<f0> MissingModule| <f1> numpy._core.floor_divide",shape="record"];
	"numpy._core.floor" [label="<f0> MissingModule| <f1> numpy._core.floor",shape="record"];
	"numpy._core.floating" [label="<f0> MissingModule| <f1> numpy._core.floating",shape="record"];
	"numpy._core.float_power" [label="<f0> MissingModule| <f1> numpy._core.float_power",shape="record"];
	"numpy._core.float32" [label="<f0> MissingModule| <f1> numpy._core.float32",shape="record"];
	"numpy._core.float16" [label="<f0> MissingModule| <f1> numpy._core.float16",shape="record"];
	"numpy._core.finfo" [label="<f0> MissingModule| <f1> numpy._core.finfo",shape="record"];
	"numpy._core.fabs" [label="<f0> MissingModule| <f1> numpy._core.fabs",shape="record"];
	"numpy._core.expm1" [label="<f0> MissingModule| <f1> numpy._core.expm1",shape="record"];
	"numpy._core.exp" [label="<f0> MissingModule| <f1> numpy._core.exp",shape="record"];
	"numpy._core.euler_gamma" [label="<f0> MissingModule| <f1> numpy._core.euler_gamma",shape="record"];
	"numpy._core.errstate" [label="<f0> MissingModule| <f1> numpy._core.errstate",shape="record"];
	"numpy._core.equal" [label="<f0> MissingModule| <f1> numpy._core.equal",shape="record"];
	"numpy._core.empty_like" [label="<f0> MissingModule| <f1> numpy._core.empty_like",shape="record"];
	"numpy._core.empty" [label="<f0> MissingModule| <f1> numpy._core.empty",shape="record"];
	"numpy._core.e" [label="<f0> MissingModule| <f1> numpy._core.e",shape="record"];
	"numpy._core.double" [label="<f0> MissingModule| <f1> numpy._core.double",shape="record"];
	"numpy._core.dot" [label="<f0> MissingModule| <f1> numpy._core.dot",shape="record"];
	"numpy._core.divmod" [label="<f0> MissingModule| <f1> numpy._core.divmod",shape="record"];
	"numpy._core.divide" [label="<f0> MissingModule| <f1> numpy._core.divide",shape="record"];
	"numpy._core.diagonal" [label="<f0> MissingModule| <f1> numpy._core.diagonal",shape="record"];
	"numpy._core.degrees" [label="<f0> MissingModule| <f1> numpy._core.degrees",shape="record"];
	"numpy._core.deg2rad" [label="<f0> MissingModule| <f1> numpy._core.deg2rad",shape="record"];
	"numpy._core.datetime64" [label="<f0> MissingModule| <f1> numpy._core.datetime64",shape="record"];
	"numpy._core.csingle" [label="<f0> MissingModule| <f1> numpy._core.csingle",shape="record"];
	"numpy._core.cross" [label="<f0> MissingModule| <f1> numpy._core.cross",shape="record"];
	"numpy._core.count_nonzero" [label="<f0> MissingModule| <f1> numpy._core.count_nonzero",shape="record"];
	"numpy._core.cosh" [label="<f0> MissingModule| <f1> numpy._core.cosh",shape="record"];
	"numpy._core.cos" [label="<f0> MissingModule| <f1> numpy._core.cos",shape="record"];
	"numpy._core.copysign" [label="<f0> MissingModule| <f1> numpy._core.copysign",shape="record"];
	"numpy._core.conjugate" [label="<f0> MissingModule| <f1> numpy._core.conjugate",shape="record"];
	"numpy._core.conj" [label="<f0> MissingModule| <f1> numpy._core.conj",shape="record"];
	"numpy._core.complexfloating" [label="<f0> MissingModule| <f1> numpy._core.complexfloating",shape="record"];
	"numpy._core.complex64" [label="<f0> MissingModule| <f1> numpy._core.complex64",shape="record"];
	"numpy._core.clongdouble" [label="<f0> MissingModule| <f1> numpy._core.clongdouble",shape="record"];
	"numpy._core.character" [label="<f0> MissingModule| <f1> numpy._core.character",shape="record"];
	"numpy._core.ceil" [label="<f0> MissingModule| <f1> numpy._core.ceil",shape="record"];
	"numpy._core.cdouble" [label="<f0> MissingModule| <f1> numpy._core.cdouble",shape="record"];
	"numpy._core.cbrt" [label="<f0> MissingModule| <f1> numpy._core.cbrt",shape="record"];
	"numpy._core.bytes_" [label="<f0> MissingModule| <f1> numpy._core.bytes_",shape="record"];
	"numpy._core.byte" [label="<f0> MissingModule| <f1> numpy._core.byte",shape="record"];
	"numpy._core.bool_" [label="<f0> MissingModule| <f1> numpy._core.bool_",shape="record"];
	"numpy._core.bitwise_xor" [label="<f0> MissingModule| <f1> numpy._core.bitwise_xor",shape="record"];
	"numpy._core.bitwise_or" [label="<f0> MissingModule| <f1> numpy._core.bitwise_or",shape="record"];
	"numpy._core.bitwise_count" [label="<f0> MissingModule| <f1> numpy._core.bitwise_count",shape="record"];
	"numpy._core.bitwise_and" [label="<f0> MissingModule| <f1> numpy._core.bitwise_and",shape="record"];
	"numpy._core.atleast_3d" [label="<f0> MissingModule| <f1> numpy._core.atleast_3d",shape="record"];
	"numpy._core.atleast_2d" [label="<f0> MissingModule| <f1> numpy._core.atleast_2d",shape="record"];
	"numpy._core.atleast_1d" [label="<f0> MissingModule| <f1> numpy._core.atleast_1d",shape="record"];
	"numpy._core.asarray" [label="<f0> MissingModule| <f1> numpy._core.asarray",shape="record"];
	"numpy._core.asanyarray" [label="<f0> MissingModule| <f1> numpy._core.asanyarray",shape="record"];
	"numpy._core.array_repr" [label="<f0> MissingModule| <f1> numpy._core.array_repr",shape="record"];
	"numpy._core.array2string" [label="<f0> MissingModule| <f1> numpy._core.array2string",shape="record"];
	"numpy._core.array" [label="<f0> MissingModule| <f1> numpy._core.array",shape="record"];
	"numpy._core.argsort" [label="<f0> MissingModule| <f1> numpy._core.argsort",shape="record"];
	"numpy._core.arctanh" [label="<f0> MissingModule| <f1> numpy._core.arctanh",shape="record"];
	"numpy._core.arctan2" [label="<f0> MissingModule| <f1> numpy._core.arctan2",shape="record"];
	"numpy._core.arctan" [label="<f0> MissingModule| <f1> numpy._core.arctan",shape="record"];
	"numpy._core.arcsinh" [label="<f0> MissingModule| <f1> numpy._core.arcsinh",shape="record"];
	"numpy._core.arcsin" [label="<f0> MissingModule| <f1> numpy._core.arcsin",shape="record"];
	"numpy._core.arccosh" [label="<f0> MissingModule| <f1> numpy._core.arccosh",shape="record"];
	"numpy._core.arccos" [label="<f0> MissingModule| <f1> numpy._core.arccos",shape="record"];
	"numpy._core.arange" [label="<f0> MissingModule| <f1> numpy._core.arange",shape="record"];
	"numpy._core.amin" [label="<f0> MissingModule| <f1> numpy._core.amin",shape="record"];
	"numpy._core.amax" [label="<f0> MissingModule| <f1> numpy._core.amax",shape="record"];
	"numpy._core.all" [label="<f0> MissingModule| <f1> numpy._core.all",shape="record"];
	"numpy._core.add" [label="<f0> MissingModule| <f1> numpy._core.add",shape="record"];
	"numpy._core" [label="<f0> Package| <f1> numpy._core",shape="record"];
	"numpy._core._add_newdocs_scalars" [label="<f0> SourceModule| <f1> numpy._core._add_newdocs_scalars",shape="record"];
	"numpy._core._add_newdocs" [label="<f0> SourceModule| <f1> numpy._core._add_newdocs",shape="record"];
	"numpy._core.einsumfunc" [label="<f0> SourceModule| <f1> numpy._core.einsumfunc",shape="record"];
	"numpy.__config__" [label="<f0> SourceModule| <f1> numpy.__config__",shape="record"];
	"yaml" [label="<f0> Package| <f1> yaml",shape="record"];
	"yaml.cyaml" [label="<f0> SourceModule| <f1> yaml.cyaml",shape="record"];
	"yaml.resolver" [label="<f0> SourceModule| <f1> yaml.resolver",shape="record"];
	"yaml.representer" [label="<f0> SourceModule| <f1> yaml.representer",shape="record"];
	"yaml.serializer" [label="<f0> SourceModule| <f1> yaml.serializer",shape="record"];
	"yaml.constructor" [label="<f0> SourceModule| <f1> yaml.constructor",shape="record"];
	"yaml._yaml" [label="<f0> Extension| <f1> yaml._yaml",shape="record"];
	"yaml.dumper" [label="<f0> SourceModule| <f1> yaml.dumper",shape="record"];
	"yaml.emitter" [label="<f0> SourceModule| <f1> yaml.emitter",shape="record"];
	"yaml.loader" [label="<f0> SourceModule| <f1> yaml.loader",shape="record"];
	"yaml.composer" [label="<f0> SourceModule| <f1> yaml.composer",shape="record"];
	"yaml.parser" [label="<f0> SourceModule| <f1> yaml.parser",shape="record"];
	"yaml.scanner" [label="<f0> SourceModule| <f1> yaml.scanner",shape="record"];
	"yaml.reader" [label="<f0> SourceModule| <f1> yaml.reader",shape="record"];
	"yaml.nodes" [label="<f0> SourceModule| <f1> yaml.nodes",shape="record"];
	"yaml.events" [label="<f0> SourceModule| <f1> yaml.events",shape="record"];
	"yaml.tokens" [label="<f0> SourceModule| <f1> yaml.tokens",shape="record"];
	"yaml.error" [label="<f0> SourceModule| <f1> yaml.error",shape="record"];
	"numpy._distributor_init" [label="<f0> SourceModule| <f1> numpy._distributor_init",shape="record"];
	"numpy._distributor_init_local" [label="<f0> MissingModule| <f1> numpy._distributor_init_local",shape="record"];
	"numpy.version" [label="<f0> SourceModule| <f1> numpy.version",shape="record"];
	"numpy._expired_attrs_2_0" [label="<f0> SourceModule| <f1> numpy._expired_attrs_2_0",shape="record"];
	"numpy._globals" [label="<f0> SourceModule| <f1> numpy._globals",shape="record"];
	"pyaudio" [label="<f0> Package| <f1> pyaudio",shape="record"];
	"pyaudio._portaudio" [label="<f0> Extension| <f1> pyaudio._portaudio",shape="record"];
	"transformers" [label="<f0> Package| <f1> transformers",shape="record"];
	"transformers.modeling_flax_utils" [label="<f0> SourceModule| <f1> transformers.modeling_flax_utils",shape="record"];
	"safetensors.flax" [label="<f0> SourceModule| <f1> safetensors.flax",shape="record"];
	"safetensors.numpy" [label="<f0> SourceModule| <f1> safetensors.numpy",shape="record"];
	"safetensors" [label="<f0> Package| <f1> safetensors",shape="record"];
	"safetensors._safetensors_rust" [label="<f0> Extension| <f1> safetensors._safetensors_rust",shape="record"];
	"transformers.utils.import_utils" [label="<f0> SourceModule| <f1> transformers.utils.import_utils",shape="record"];
	"torch.fx" [label="<f0> Package| <f1> torch.fx",shape="record"];
	"torch.fx.interpreter" [label="<f0> SourceModule| <f1> torch.fx.interpreter",shape="record"];
	"torch.hub" [label="<f0> SourceModule| <f1> torch.hub",shape="record"];
	"tqdm" [label="<f0> Package| <f1> tqdm",shape="record"];
	"tqdm.notebook" [label="<f0> SourceModule| <f1> tqdm.notebook",shape="record"];
	"'IPython.display'" [label="<f0> MissingModule| <f1> 'IPython.display'",shape="record"];
	"'IPython.html'" [label="<f0> MissingModule| <f1> 'IPython.html'",shape="record"];
	"ipywidgets" [label="<f0> MissingModule| <f1> ipywidgets",shape="record"];
	"tqdm.version" [label="<f0> SourceModule| <f1> tqdm.version",shape="record"];
	"setuptools_scm" [label="<f0> MissingModule| <f1> setuptools_scm",shape="record"];
	"tqdm._dist_ver" [label="<f0> SourceModule| <f1> tqdm._dist_ver",shape="record"];
	"tqdm.std" [label="<f0> SourceModule| <f1> tqdm.std",shape="record"];
	"'pandas.core'" [label="<f0> MissingModule| <f1> 'pandas.core'",shape="record"];
	"pandas" [label="<f0> MissingModule| <f1> pandas",shape="record"];
	"tqdm.utils" [label="<f0> SourceModule| <f1> tqdm.utils",shape="record"];
	"tqdm.gui" [label="<f0> SourceModule| <f1> tqdm.gui",shape="record"];
	"'matplotlib.pyplot'" [label="<f0> MissingModule| <f1> 'matplotlib.pyplot'",shape="record"];
	"matplotlib" [label="<f0> MissingModule| <f1> matplotlib",shape="record"];
	"tqdm.cli" [label="<f0> SourceModule| <f1> tqdm.cli",shape="record"];
	"tqdm._tqdm_pandas" [label="<f0> SourceModule| <f1> tqdm._tqdm_pandas",shape="record"];
	"tqdm._monitor" [label="<f0> SourceModule| <f1> tqdm._monitor",shape="record"];
	"torch.serialization" [label="<f0> SourceModule| <f1> torch.serialization",shape="record"];
	"torch.nn" [label="<f0> Package| <f1> torch.nn",shape="record"];
	"torch.nn.utils" [label="<f0> Package| <f1> torch.nn.utils",shape="record"];
	"torch.nn.utils.weight_norm" [label="<f0> SourceModule| <f1> torch.nn.utils.weight_norm",shape="record"];
	"torch.norm_except_dim" [label="<f0> MissingModule| <f1> torch.norm_except_dim",shape="record"];
	"torch._weight_norm" [label="<f0> MissingModule| <f1> torch._weight_norm",shape="record"];
	"torch.nn.utils.spectral_norm" [label="<f0> SourceModule| <f1> torch.nn.utils.spectral_norm",shape="record"];
	"torch.nn.utils.memory_format" [label="<f0> SourceModule| <f1> torch.nn.utils.memory_format",shape="record"];
	"torch.nn.utils.init" [label="<f0> SourceModule| <f1> torch.nn.utils.init",shape="record"];
	"torch.nn.utils.fusion" [label="<f0> SourceModule| <f1> torch.nn.utils.fusion",shape="record"];
	"torch.nn.utils.convert_parameters" [label="<f0> SourceModule| <f1> torch.nn.utils.convert_parameters",shape="record"];
	"torch.nn.utils.clip_grad" [label="<f0> SourceModule| <f1> torch.nn.utils.clip_grad",shape="record"];
	"torch.utils._foreach_utils" [label="<f0> SourceModule| <f1> torch.utils._foreach_utils",shape="record"];
	"torch.utils" [label="<f0> Package| <f1> torch.utils",shape="record"];
	"torch.utils.throughput_benchmark" [label="<f0> SourceModule| <f1> torch.utils.throughput_benchmark",shape="record"];
	"torch._C" [label="<f0> Extension| <f1> torch._C",shape="record"];
	"torch.utils.backend_registration" [label="<f0> SourceModule| <f1> torch.utils.backend_registration",shape="record"];
	"torch.overrides" [label="<f0> SourceModule| <f1> torch.overrides",shape="record"];
	"torch.utils.hooks" [label="<f0> SourceModule| <f1> torch.utils.hooks",shape="record"];
	"torch.utils.deterministic" [label="<f0> SourceModule| <f1> torch.utils.deterministic",shape="record"];
	"torch.utils.data" [label="<f0> Package| <f1> torch.utils.data",shape="record"];
	"torch.utils.data.sampler" [label="<f0> SourceModule| <f1> torch.utils.data.sampler",shape="record"];
	"torch.utils.data.distributed" [label="<f0> SourceModule| <f1> torch.utils.data.distributed",shape="record"];
	"torch.distributed" [label="<f0> Package| <f1> torch.distributed",shape="record"];
	"torch.distributed._functional_collectives_impl" [label="<f0> SourceModule| <f1> torch.distributed._functional_collectives_impl",shape="record"];
	"torch.distributed.rendezvous" [label="<f0> SourceModule| <f1> torch.distributed.rendezvous",shape="record"];
	"torch.distributed.constants" [label="<f0> SourceModule| <f1> torch.distributed.constants",shape="record"];
	"torch.distributed.remote_device" [label="<f0> SourceModule| <f1> torch.distributed.remote_device",shape="record"];
	"torch.distributed.distributed_c10d" [label="<f0> SourceModule| <f1> torch.distributed.distributed_c10d",shape="record"];
	"torch.distributed.c10d_logger" [label="<f0> SourceModule| <f1> torch.distributed.c10d_logger",shape="record"];
	"torch.distributed.logging_handlers" [label="<f0> SourceModule| <f1> torch.distributed.logging_handlers",shape="record"];
	"torch.utils._typing_utils" [label="<f0> SourceModule| <f1> torch.utils._typing_utils",shape="record"];
	"torch._utils_internal" [label="<f0> SourceModule| <f1> torch._utils_internal",shape="record"];
	"triton" [label="<f0> MissingModule| <f1> triton",shape="record"];
	"torch._strobelight.compile_time_profiler" [label="<f0> SourceModule| <f1> torch._strobelight.compile_time_profiler",shape="record"];
	"torch._strobelight" [label="<f0> Package| <f1> torch._strobelight",shape="record"];
	"torch._strobelight.cli_function_profiler" [label="<f0> SourceModule| <f1> torch._strobelight.cli_function_profiler",shape="record"];
	"timeit" [label="<f0> SourceModule| <f1> timeit",shape="record"];
	"torch.distributed.device_mesh" [label="<f0> SourceModule| <f1> torch.distributed.device_mesh",shape="record"];
	"'torch._C._distributed_c10d'" [label="<f0> MissingModule| <f1> 'torch._C._distributed_c10d'",shape="record"];
	"torch.utils.data.dataset" [label="<f0> SourceModule| <f1> torch.utils.data.dataset",shape="record"];
	"torch.randperm" [label="<f0> MissingModule| <f1> torch.randperm",shape="record"];
	"torch.Generator" [label="<f0> MissingModule| <f1> torch.Generator",shape="record"];
	"torch.default_generator" [label="<f0> MissingModule| <f1> torch.default_generator",shape="record"];
	"torch.utils.data.datapipes.datapipe" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.datapipe",shape="record"];
	"torch.utils.data.datapipes" [label="<f0> Package| <f1> torch.utils.data.datapipes",shape="record"];
	"torch.utils.data.datapipes.map" [label="<f0> Package| <f1> torch.utils.data.datapipes.map",shape="record"];
	"torch.utils.data.datapipes.map.utils" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.map.utils",shape="record"];
	"torch.utils.data.datapipes.map.grouping" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.map.grouping",shape="record"];
	"torch.utils.data.datapipes.map.combining" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.map.combining",shape="record"];
	"torch.utils.data.datapipes.map.combinatorics" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.map.combinatorics",shape="record"];
	"torch.utils.data.datapipes.map.callable" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.map.callable",shape="record"];
	"torch.utils.data.datapipes.iter" [label="<f0> Package| <f1> torch.utils.data.datapipes.iter",shape="record"];
	"torch.utils.data.datapipes.iter.utils" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.utils",shape="record"];
	"torch.utils.data.datapipes.iter.streamreader" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.streamreader",shape="record"];
	"torch.utils.data.datapipes.iter.sharding" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.sharding",shape="record"];
	"torch.utils.data.datapipes.iter.selecting" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.selecting",shape="record"];
	"torch.utils.data.datapipes.dataframe.dataframe_wrapper" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.dataframe.dataframe_wrapper",shape="record"];
	"torch.utils.data.datapipes.iter.routeddecoder" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.routeddecoder",shape="record"];
	"torch.utils.data.datapipes.utils.decoder" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.utils.decoder",shape="record"];
	"torch.utils.data.datapipes.utils" [label="<f0> Package| <f1> torch.utils.data.datapipes.utils",shape="record"];
	"'scipy.io'" [label="<f0> MissingModule| <f1> 'scipy.io'",shape="record"];
	"torchaudio" [label="<f0> MissingModule| <f1> torchaudio",shape="record"];
	"'torchvision.io'" [label="<f0> MissingModule| <f1> 'torchvision.io'",shape="record"];
	"torch.utils.data.datapipes.iter.grouping" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.grouping",shape="record"];
	"torch.utils.data.datapipes.iter.fileopener" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.fileopener",shape="record"];
	"torch.utils.data.datapipes.iter.filelister" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.filelister",shape="record"];
	"torch.utils.data.datapipes.iter.combining" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.combining",shape="record"];
	"torch.utils.data.datapipes.iter.combinatorics" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.combinatorics",shape="record"];
	"torch.utils.data.datapipes.iter.callable" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.iter.callable",shape="record"];
	"torcharrow" [label="<f0> MissingModule| <f1> torcharrow",shape="record"];
	"torch.utils.data._utils.collate" [label="<f0> SourceModule| <f1> torch.utils.data._utils.collate",shape="record"];
	"torch.utils.data._utils" [label="<f0> Package| <f1> torch.utils.data._utils",shape="record"];
	"torch.utils.data._utils.worker" [label="<f0> SourceModule| <f1> torch.utils.data._utils.worker",shape="record"];
	"torch.utils.data.graph_settings" [label="<f0> SourceModule| <f1> torch.utils.data.graph_settings",shape="record"];
	"torch.utils.data.graph" [label="<f0> SourceModule| <f1> torch.utils.data.graph",shape="record"];
	"dill" [label="<f0> MissingModule| <f1> dill",shape="record"];
	"torch.utils.data._utils.signal_handling" [label="<f0> SourceModule| <f1> torch.utils.data._utils.signal_handling",shape="record"];
	"torch.utils.data._utils.pin_memory" [label="<f0> SourceModule| <f1> torch.utils.data._utils.pin_memory",shape="record"];
	"torch.utils.data._utils.fetch" [label="<f0> SourceModule| <f1> torch.utils.data._utils.fetch",shape="record"];
	"torch.utils.data.datapipes.dataframe" [label="<f0> Package| <f1> torch.utils.data.datapipes.dataframe",shape="record"];
	"torch.utils.data.datapipes.dataframe.datapipes" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.dataframe.datapipes",shape="record"];
	"torch.utils.data.datapipes.dataframe.dataframes" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.dataframe.dataframes",shape="record"];
	"torch.utils.data.datapipes.dataframe.structures" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.dataframe.structures",shape="record"];
	"torch.utils.data.datapipes.utils.common" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.utils.common",shape="record"];
	"torch.utils.data.datapipes._typing" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes._typing",shape="record"];
	"torch.utils.data.datapipes._hook_iterator" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes._hook_iterator",shape="record"];
	"torch.utils._import_utils" [label="<f0> SourceModule| <f1> torch.utils._import_utils",shape="record"];
	"torch.utils.data.datapipes._decorator" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes._decorator",shape="record"];
	"torch.utils.data.dataloader" [label="<f0> SourceModule| <f1> torch.utils.data.dataloader",shape="record"];
	"torch.utils.collect_env" [label="<f0> SourceModule| <f1> torch.utils.collect_env",shape="record"];
	"torch.backends.xnnpack" [label="<f0> Package| <f1> torch.backends.xnnpack",shape="record"];
	"torch.backends" [label="<f0> Package| <f1> torch.backends",shape="record"];
	"torch.backends.quantized" [label="<f0> Package| <f1> torch.backends.quantized",shape="record"];
	"torch.backends.openmp" [label="<f0> Package| <f1> torch.backends.openmp",shape="record"];
	"torch.backends.nnpack" [label="<f0> Package| <f1> torch.backends.nnpack",shape="record"];
	"torch.backends.mps" [label="<f0> Package| <f1> torch.backends.mps",shape="record"];
	"torch._refs" [label="<f0> Package| <f1> torch._refs",shape="record"];
	"torch._refs.special" [label="<f0> Package| <f1> torch._refs.special",shape="record"];
	"torch._refs.nn.functional" [label="<f0> Package| <f1> torch._refs.nn.functional",shape="record"];
	"torch._refs.nn" [label="<f0> Package| <f1> torch._refs.nn",shape="record"];
	"torch._meta_registrations" [label="<f0> SourceModule| <f1> torch._meta_registrations",shape="record"];
	"torch._ops" [label="<f0> SourceModule| <f1> torch._ops",shape="record"];
	"torch._higher_order_ops.effects" [label="<f0> SourceModule| <f1> torch._higher_order_ops.effects",shape="record"];
	"torch._higher_order_ops.torchbind" [label="<f0> SourceModule| <f1> torch._higher_order_ops.torchbind",shape="record"];
	"torch._library.fake_class_registry" [label="<f0> SourceModule| <f1> torch._library.fake_class_registry",shape="record"];
	"torch._library" [label="<f0> Package| <f1> torch._library",shape="record"];
	"torch._library.triton" [label="<f0> SourceModule| <f1> torch._library.triton",shape="record"];
	"torch._higher_order_ops.triton_kernel_wrap" [label="<f0> SourceModule| <f1> torch._higher_order_ops.triton_kernel_wrap",shape="record"];
	"torch._inductor.codegen.wrapper" [label="<f0> SourceModule| <f1> torch._inductor.codegen.wrapper",shape="record"];
	"'triton.language'" [label="<f0> MissingModule| <f1> 'triton.language'",shape="record"];
	"torch._inductor.codegen.triton" [label="<f0> SourceModule| <f1> torch._inductor.codegen.triton",shape="record"];
	"torch._inductor.scheduler" [label="<f0> SourceModule| <f1> torch._inductor.scheduler",shape="record"];
	"torch._inductor.codegen.cuda_combined_scheduling" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda_combined_scheduling",shape="record"];
	"torch._inductor.codegen.rocm.rocm_cpp_scheduling" [label="<f0> SourceModule| <f1> torch._inductor.codegen.rocm.rocm_cpp_scheduling",shape="record"];
	"torch._inductor.codegen.rocm" [label="<f0> Package| <f1> torch._inductor.codegen.rocm",shape="record"];
	"torch._inductor.codegen.rocm.rocm_template_buffer" [label="<f0> SourceModule| <f1> torch._inductor.codegen.rocm.rocm_template_buffer",shape="record"];
	"torch._inductor.codegen.cuda.cuda_cpp_scheduling" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.cuda_cpp_scheduling",shape="record"];
	"torch._inductor.codegen.cuda" [label="<f0> Package| <f1> torch._inductor.codegen.cuda",shape="record"];
	"torch._inductor.codegen.cuda.device_op_overrides" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.device_op_overrides",shape="record"];
	"torch._inductor.codegen.cuda.cutlass_utils" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.cutlass_utils",shape="record"];
	"'cutlass_library.generator'" [label="<f0> MissingModule| <f1> 'cutlass_library.generator'",shape="record"];
	"'cutlass_library.manifest'" [label="<f0> MissingModule| <f1> 'cutlass_library.manifest'",shape="record"];
	"'cutlass_library.library'" [label="<f0> MissingModule| <f1> 'cutlass_library.library'",shape="record"];
	"cutlass_library" [label="<f0> MissingModule| <f1> cutlass_library",shape="record"];
	"torch._inductor.codegen.cuda.cuda_env" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.cuda_env",shape="record"];
	"torch._dynamo.convert_frame" [label="<f0> SourceModule| <f1> torch._dynamo.convert_frame",shape="record"];
	"torch._dynamo.backends.distributed" [label="<f0> SourceModule| <f1> torch._dynamo.backends.distributed",shape="record"];
	"torch._dynamo.backends" [label="<f0> Package| <f1> torch._dynamo.backends",shape="record"];
	"tabulate" [label="<f0> MissingModule| <f1> tabulate",shape="record"];
	"torch._dynamo.backends.debugging" [label="<f0> SourceModule| <f1> torch._dynamo.backends.debugging",shape="record"];
	"torch._dynamo.backends.common" [label="<f0> SourceModule| <f1> torch._dynamo.backends.common",shape="record"];
	"torch._functorch.aot_autograd" [label="<f0> SourceModule| <f1> torch._functorch.aot_autograd",shape="record"];
	"torch._dynamo.source" [label="<f0> SourceModule| <f1> torch._dynamo.source",shape="record"];
	"torch._dynamo.variables.torch_function" [label="<f0> SourceModule| <f1> torch._dynamo.variables.torch_function",shape="record"];
	"torch._dynamo.variables" [label="<f0> Package| <f1> torch._dynamo.variables",shape="record"];
	"torch._dynamo.variables.torch" [label="<f0> SourceModule| <f1> torch._dynamo.variables.torch",shape="record"];
	"torch._dynamo.tensor_version_op" [label="<f0> SourceModule| <f1> torch._dynamo.tensor_version_op",shape="record"];
	"torch.distributed.tensor" [label="<f0> Package| <f1> torch.distributed.tensor",shape="record"];
	"torch.optim.optimizer" [label="<f0> SourceModule| <f1> torch.optim.optimizer",shape="record"];
	"torch.optim" [label="<f0> Package| <f1> torch.optim",shape="record"];
	"torch.optim.sparse_adam" [label="<f0> SourceModule| <f1> torch.optim.sparse_adam",shape="record"];
	"torch.optim._functional" [label="<f0> SourceModule| <f1> torch.optim._functional",shape="record"];
	"torch.optim.sgd" [label="<f0> SourceModule| <f1> torch.optim.sgd",shape="record"];
	"torch.optim.rprop" [label="<f0> SourceModule| <f1> torch.optim.rprop",shape="record"];
	"torch.optim.rmsprop" [label="<f0> SourceModule| <f1> torch.optim.rmsprop",shape="record"];
	"torch.optim.radam" [label="<f0> SourceModule| <f1> torch.optim.radam",shape="record"];
	"torch.optim.nadam" [label="<f0> SourceModule| <f1> torch.optim.nadam",shape="record"];
	"torch.optim.lbfgs" [label="<f0> SourceModule| <f1> torch.optim.lbfgs",shape="record"];
	"torch.optim.asgd" [label="<f0> SourceModule| <f1> torch.optim.asgd",shape="record"];
	"torch.optim.adamw" [label="<f0> SourceModule| <f1> torch.optim.adamw",shape="record"];
	"torch.optim.adamax" [label="<f0> SourceModule| <f1> torch.optim.adamax",shape="record"];
	"torch.optim.adam" [label="<f0> SourceModule| <f1> torch.optim.adam",shape="record"];
	"torch.optim.adagrad" [label="<f0> SourceModule| <f1> torch.optim.adagrad",shape="record"];
	"torch.optim.adadelta" [label="<f0> SourceModule| <f1> torch.optim.adadelta",shape="record"];
	"torch.optim._adafactor" [label="<f0> SourceModule| <f1> torch.optim._adafactor",shape="record"];
	"torch.optim.swa_utils" [label="<f0> SourceModule| <f1> torch.optim.swa_utils",shape="record"];
	"torch.optim.lr_scheduler" [label="<f0> SourceModule| <f1> torch.optim.lr_scheduler",shape="record"];
	"torch.distributed.tensor.placement_types" [label="<f0> SourceModule| <f1> torch.distributed.tensor.placement_types",shape="record"];
	"torch.distributed.tensor._collective_utils" [label="<f0> SourceModule| <f1> torch.distributed.tensor._collective_utils",shape="record"];
	"torch.distributed.tensor._dtensor_spec" [label="<f0> SourceModule| <f1> torch.distributed.tensor._dtensor_spec",shape="record"];
	"torch.distributed._functional_collectives" [label="<f0> SourceModule| <f1> torch.distributed._functional_collectives",shape="record"];
	"torch.compiler" [label="<f0> Package| <f1> torch.compiler",shape="record"];
	"torch._dynamo.external_utils" [label="<f0> SourceModule| <f1> torch._dynamo.external_utils",shape="record"];
	"torch._inductor.cudagraph_trees" [label="<f0> SourceModule| <f1> torch._inductor.cudagraph_trees",shape="record"];
	"torch.utils.weak" [label="<f0> SourceModule| <f1> torch.utils.weak",shape="record"];
	"torch.multiprocessing.reductions" [label="<f0> SourceModule| <f1> torch.multiprocessing.reductions",shape="record"];
	"torch.nested._internal.nested_tensor" [label="<f0> SourceModule| <f1> torch.nested._internal.nested_tensor",shape="record"];
	"torch.nested._internal.ops" [label="<f0> SourceModule| <f1> torch.nested._internal.ops",shape="record"];
	"torch.nested._internal.sdpa" [label="<f0> SourceModule| <f1> torch.nested._internal.sdpa",shape="record"];
	"torch.fx.operator_schemas" [label="<f0> SourceModule| <f1> torch.fx.operator_schemas",shape="record"];
	"torch._jit_internal" [label="<f0> SourceModule| <f1> torch._jit_internal",shape="record"];
	"'torch._C._distributed_rpc'" [label="<f0> MissingModule| <f1> 'torch._C._distributed_rpc'",shape="record"];
	"torch.futures" [label="<f0> Package| <f1> torch.futures",shape="record"];
	"torch._awaits" [label="<f0> Package| <f1> torch._awaits",shape="record"];
	"torch.package._mangling" [label="<f0> SourceModule| <f1> torch.package._mangling",shape="record"];
	"torch.package" [label="<f0> Package| <f1> torch.package",shape="record"];
	"torch.package.package_importer" [label="<f0> SourceModule| <f1> torch.package.package_importer",shape="record"];
	"torch.package._package_unpickler" [label="<f0> SourceModule| <f1> torch.package._package_unpickler",shape="record"];
	"torch.package._importlib" [label="<f0> SourceModule| <f1> torch.package._importlib",shape="record"];
	"torch.package._directory_reader" [label="<f0> SourceModule| <f1> torch.package._directory_reader",shape="record"];
	"torch.package.package_exporter" [label="<f0> SourceModule| <f1> torch.package.package_exporter",shape="record"];
	"torch.package.find_file_dependencies" [label="<f0> SourceModule| <f1> torch.package.find_file_dependencies",shape="record"];
	"torch.package._stdlib" [label="<f0> SourceModule| <f1> torch.package._stdlib",shape="record"];
	"torch.package._package_pickler" [label="<f0> SourceModule| <f1> torch.package._package_pickler",shape="record"];
	"torch.package._digraph" [label="<f0> SourceModule| <f1> torch.package._digraph",shape="record"];
	"pickletools" [label="<f0> SourceModule| <f1> pickletools",shape="record"];
	"torch.package.importer" [label="<f0> SourceModule| <f1> torch.package.importer",shape="record"];
	"torch.package.glob_group" [label="<f0> SourceModule| <f1> torch.package.glob_group",shape="record"];
	"torch.package.file_structure_representation" [label="<f0> SourceModule| <f1> torch.package.file_structure_representation",shape="record"];
	"torch.package.analyze.is_from_package" [label="<f0> SourceModule| <f1> torch.package.analyze.is_from_package",shape="record"];
	"torch.package.analyze" [label="<f0> Package| <f1> torch.package.analyze",shape="record"];
	"torch.package.analyze.trace_dependencies" [label="<f0> SourceModule| <f1> torch.package.analyze.trace_dependencies",shape="record"];
	"torch.package.analyze.find_first_use_of_broken_modules" [label="<f0> SourceModule| <f1> torch.package.analyze.find_first_use_of_broken_modules",shape="record"];
	"torch.distributed.rpc" [label="<f0> Package| <f1> torch.distributed.rpc",shape="record"];
	"torch.distributed.rpc.server_process_global_profiler" [label="<f0> SourceModule| <f1> torch.distributed.rpc.server_process_global_profiler",shape="record"];
	"torch.autograd.profiler_legacy" [label="<f0> SourceModule| <f1> torch.autograd.profiler_legacy",shape="record"];
	"torch.autograd.profiler_util" [label="<f0> SourceModule| <f1> torch.autograd.profiler_util",shape="record"];
	"torch.autograd" [label="<f0> Package| <f1> torch.autograd",shape="record"];
	"torch.autograd.profiler" [label="<f0> SourceModule| <f1> torch.autograd.profiler",shape="record"];
	"sqlite3" [label="<f0> Package| <f1> sqlite3",shape="record"];
	"sqlite3.dump" [label="<f0> SourceModule| <f1> sqlite3.dump",shape="record"];
	"sqlite3.dbapi2" [label="<f0> SourceModule| <f1> sqlite3.dbapi2",shape="record"];
	"_sqlite3" [label="<f0> Extension| <f1> _sqlite3",shape="record"];
	"'torch._C._profiler'" [label="<f0> MissingModule| <f1> 'torch._C._profiler'",shape="record"];
	"'torch._C._autograd'" [label="<f0> MissingModule| <f1> 'torch._C._autograd'",shape="record"];
	"torch.autograd.variable" [label="<f0> SourceModule| <f1> torch.autograd.variable",shape="record"];
	"torch.autograd.gradcheck" [label="<f0> SourceModule| <f1> torch.autograd.gradcheck",shape="record"];
	"torch.testing" [label="<f0> Package| <f1> torch.testing",shape="record"];
	"torch.testing._creation" [label="<f0> SourceModule| <f1> torch.testing._creation",shape="record"];
	"torch.testing._comparison" [label="<f0> SourceModule| <f1> torch.testing._comparison",shape="record"];
	"cmath" [label="<f0> BuiltinModule| <f1> cmath",shape="record"];
	"torch.testing._utils" [label="<f0> SourceModule| <f1> torch.testing._utils",shape="record"];
	"torch.autograd.anomaly_mode" [label="<f0> SourceModule| <f1> torch.autograd.anomaly_mode",shape="record"];
	"torch.autograd.graph" [label="<f0> SourceModule| <f1> torch.autograd.graph",shape="record"];
	"torch.testing._internal.common_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.common_utils",shape="record"];
	"torch.testing._internal.dynamo_test_failures" [label="<f0> SourceModule| <f1> torch.testing._internal.dynamo_test_failures",shape="record"];
	"torch.testing._internal.common_device_type" [label="<f0> SourceModule| <f1> torch.testing._internal.common_device_type",shape="record"];
	"torch._lazy.ts_backend" [label="<f0> SourceModule| <f1> torch._lazy.ts_backend",shape="record"];
	"'torch._C._lazy_ts_backend'" [label="<f0> MissingModule| <f1> 'torch._C._lazy_ts_backend'",shape="record"];
	"torch._lazy.metrics" [label="<f0> SourceModule| <f1> torch._lazy.metrics",shape="record"];
	"'torch._C._lazy'" [label="<f0> MissingModule| <f1> 'torch._C._lazy'",shape="record"];
	"torch._lazy" [label="<f0> Package| <f1> torch._lazy",shape="record"];
	"torch._lazy.closure" [label="<f0> SourceModule| <f1> torch._lazy.closure",shape="record"];
	"torch._lazy.device_context" [label="<f0> SourceModule| <f1> torch._lazy.device_context",shape="record"];
	"hypothesis" [label="<f0> MissingModule| <f1> hypothesis",shape="record"];
	"torch.testing._internal.common_cuda" [label="<f0> SourceModule| <f1> torch.testing._internal.common_cuda",shape="record"];
	"numba" [label="<f0> MissingModule| <f1> numba",shape="record"];
	"torch.testing._internal" [label="<f0> Package| <f1> torch.testing._internal",shape="record"];
	"'xmlrunner.result'" [label="<f0> MissingModule| <f1> 'xmlrunner.result'",shape="record"];
	"xmlrunner" [label="<f0> MissingModule| <f1> xmlrunner",shape="record"];
	"pytest" [label="<f0> MissingModule| <f1> pytest",shape="record"];
	"torch.testing._internal.common_dtype" [label="<f0> SourceModule| <f1> torch.testing._internal.common_dtype",shape="record"];
	"torch.onnx" [label="<f0> Package| <f1> torch.onnx",shape="record"];
	"torch.onnx._flags" [label="<f0> SourceModule| <f1> torch.onnx._flags",shape="record"];
	"torch.onnx._internal.exporter" [label="<f0> Package| <f1> torch.onnx._internal.exporter",shape="record"];
	"torch.onnx._internal.exporter._compat" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._compat",shape="record"];
	"torch.onnx._internal._lazy_import" [label="<f0> SourceModule| <f1> torch.onnx._internal._lazy_import",shape="record"];
	"'onnxscript._framework_apis'" [label="<f0> MissingModule| <f1> 'onnxscript._framework_apis'",shape="record"];
	"onnxscript" [label="<f0> MissingModule| <f1> onnxscript",shape="record"];
	"onnx" [label="<f0> MissingModule| <f1> onnx",shape="record"];
	"torch.onnx._internal.exporter._testing" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._testing",shape="record"];
	"torch.onnx._internal.exporter._core" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._core",shape="record"];
	"pyinstrument" [label="<f0> MissingModule| <f1> pyinstrument",shape="record"];
	"torch.export.graph_signature" [label="<f0> SourceModule| <f1> torch.export.graph_signature",shape="record"];
	"torch.ScriptObject" [label="<f0> MissingModule| <f1> torch.ScriptObject",shape="record"];
	"torch.export" [label="<f0> Package| <f1> torch.export",shape="record"];
	"torch._export.utils" [label="<f0> SourceModule| <f1> torch._export.utils",shape="record"];
	"torch._export" [label="<f0> Package| <f1> torch._export",shape="record"];
	"torch._inductor.decomposition" [label="<f0> SourceModule| <f1> torch._inductor.decomposition",shape="record"];
	"torch._inductor.inductor_prims" [label="<f0> SourceModule| <f1> torch._inductor.inductor_prims",shape="record"];
	"torch._higher_order_ops.out_dtype" [label="<f0> SourceModule| <f1> torch._higher_order_ops.out_dtype",shape="record"];
	"torch.ao.quantization.fx._decomposed" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx._decomposed",shape="record"];
	"torch.ao.quantization.fx" [label="<f0> Package| <f1> torch.ao.quantization.fx",shape="record"];
	"torch.ao.quantization.fx.prepare" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.prepare",shape="record"];
	"torch.ao.quantization.fx.utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.utils",shape="record"];
	"torch.ao.quantization.stubs" [label="<f0> SourceModule| <f1> torch.ao.quantization.stubs",shape="record"];
	"torch.ao.quantization.fake_quantize" [label="<f0> SourceModule| <f1> torch.ao.quantization.fake_quantize",shape="record"];
	"torch.ao.quantization.QuantType" [label="<f0> MissingModule| <f1> torch.ao.quantization.QuantType",shape="record"];
	"torch.ao.quantization.QConfigAny" [label="<f0> MissingModule| <f1> torch.ao.quantization.QConfigAny",shape="record"];
	"torch.ao.quantization.fx.quantize_handler" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.quantize_handler",shape="record"];
	"torch.ao.quantization.fx.qconfig_mapping_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.qconfig_mapping_utils",shape="record"];
	"torch.ao.quantization.QConfig" [label="<f0> MissingModule| <f1> torch.ao.quantization.QConfig",shape="record"];
	"torch.ao.nn.intrinsic" [label="<f0> Package| <f1> torch.ao.nn.intrinsic",shape="record"];
	"torch.ao.nn" [label="<f0> Package| <f1> torch.ao.nn",shape="record"];
	"torch.ao" [label="<f0> Package| <f1> torch.ao",shape="record"];
	"torch.ao.nn.intrinsic.modules.fused" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.modules.fused",shape="record"];
	"torch.ao.nn.intrinsic.modules" [label="<f0> Package| <f1> torch.ao.nn.intrinsic.modules",shape="record"];
	"torch.ao.quantization.fx.pattern_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.pattern_utils",shape="record"];
	"torch.ao.quantization.fx.match_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.match_utils",shape="record"];
	"torch.ao.quantization.fx.graph_module" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.graph_module",shape="record"];
	"torch.ao.quantization.fx.custom_config" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.custom_config",shape="record"];
	"torch.ao.quantization.quant_type" [label="<f0> SourceModule| <f1> torch.ao.quantization.quant_type",shape="record"];
	"torch.ao.quantization.QConfigMapping" [label="<f0> MissingModule| <f1> torch.ao.quantization.QConfigMapping",shape="record"];
	"torch.ao.quantization.fx._equalize" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx._equalize",shape="record"];
	"torch.ao.ns.fx.mappings" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.mappings",shape="record"];
	"torch.ao.ns.fx" [label="<f0> Package| <f1> torch.ao.ns.fx",shape="record"];
	"torch.ao.ns" [label="<f0> Package| <f1> torch.ao.ns",shape="record"];
	"torch.ao.ns.fx.ns_types" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.ns_types",shape="record"];
	"torch.ao.quantization.quantization_mappings" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantization_mappings",shape="record"];
	"torch.ao.nn.sparse" [label="<f0> Package| <f1> torch.ao.nn.sparse",shape="record"];
	"torch.ao.nn.sparse.quantized" [label="<f0> Package| <f1> torch.ao.nn.sparse.quantized",shape="record"];
	"torch.ao.nn.sparse.quantized.dynamic" [label="<f0> Package| <f1> torch.ao.nn.sparse.quantized.dynamic",shape="record"];
	"torch.ao.nn.sparse.quantized.dynamic.linear" [label="<f0> SourceModule| <f1> torch.ao.nn.sparse.quantized.dynamic.linear",shape="record"];
	"torch.ao.nn.sparse.quantized.utils" [label="<f0> SourceModule| <f1> torch.ao.nn.sparse.quantized.utils",shape="record"];
	"torch.ao.nn.quantized.modules.utils" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.utils",shape="record"];
	"torch.ao.nn.quantized.modules" [label="<f0> Package| <f1> torch.ao.nn.quantized.modules",shape="record"];
	"torch.ao.nn.quantized.modules.rnn" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.rnn",shape="record"];
	"torch.ao.nn.quantized.modules.normalization" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.normalization",shape="record"];
	"torch.ao.nn.quantized.modules.linear" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.linear",shape="record"];
	"torch.ao.nn.quantized.modules.functional_modules" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.functional_modules",shape="record"];
	"torch.ao.nn.quantized.modules.embedding_ops" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.embedding_ops",shape="record"];
	"torch.ao.quantization.float_qparams_weight_only_qconfig" [label="<f0> MissingModule| <f1> torch.ao.quantization.float_qparams_weight_only_qconfig",shape="record"];
	"torch.ao.nn.quantized.modules.dropout" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.dropout",shape="record"];
	"torch.ao.nn.quantized.modules.conv" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.conv",shape="record"];
	"torch.nn.modules.utils" [label="<f0> SourceModule| <f1> torch.nn.modules.utils",shape="record"];
	"torch.nn.common_types" [label="<f0> SourceModule| <f1> torch.nn.common_types",shape="record"];
	"torch.ao.nn.quantized.modules.batchnorm" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.batchnorm",shape="record"];
	"torch.ao.nn.quantized.modules.activation" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.modules.activation",shape="record"];
	"torch.nn.modules.pooling" [label="<f0> SourceModule| <f1> torch.nn.modules.pooling",shape="record"];
	"torch.ao.nn.quantizable" [label="<f0> Package| <f1> torch.ao.nn.quantizable",shape="record"];
	"torch.ao.nn.quantizable.modules" [label="<f0> Package| <f1> torch.ao.nn.quantizable.modules",shape="record"];
	"torch.ao.nn.quantizable.modules.rnn" [label="<f0> SourceModule| <f1> torch.ao.nn.quantizable.modules.rnn",shape="record"];
	"torch.ao.nn.quantizable.modules.activation" [label="<f0> SourceModule| <f1> torch.ao.nn.quantizable.modules.activation",shape="record"];
	"torch.jit" [label="<f0> Package| <f1> torch.jit",shape="record"];
	"torch.jit._trace" [label="<f0> SourceModule| <f1> torch.jit._trace",shape="record"];
	"torch.jit._state" [label="<f0> SourceModule| <f1> torch.jit._state",shape="record"];
	"torch.jit._serialization" [label="<f0> SourceModule| <f1> torch.jit._serialization",shape="record"];
	"torch.jit._recursive" [label="<f0> SourceModule| <f1> torch.jit._recursive",shape="record"];
	"torch.jit.frontend" [label="<f0> SourceModule| <f1> torch.jit.frontend",shape="record"];
	"astunparse" [label="<f0> MissingModule| <f1> astunparse",shape="record"];
	"torch.jit._monkeytype_config" [label="<f0> SourceModule| <f1> torch.jit._monkeytype_config",shape="record"];
	"'monkeytype.tracing'" [label="<f0> MissingModule| <f1> 'monkeytype.tracing'",shape="record"];
	"'monkeytype.db'" [label="<f0> MissingModule| <f1> 'monkeytype.db'",shape="record"];
	"'monkeytype.config'" [label="<f0> MissingModule| <f1> 'monkeytype.config'",shape="record"];
	"monkeytype" [label="<f0> MissingModule| <f1> monkeytype",shape="record"];
	"torch.jit._dataclass_impls" [label="<f0> SourceModule| <f1> torch.jit._dataclass_impls",shape="record"];
	"'torch._C._jit_tree_views'" [label="<f0> MissingModule| <f1> 'torch._C._jit_tree_views'",shape="record"];
	"torch.jit.annotations" [label="<f0> SourceModule| <f1> torch.jit.annotations",shape="record"];
	"torch.jit._check" [label="<f0> SourceModule| <f1> torch.jit._check",shape="record"];
	"torch.jit._builtins" [label="<f0> SourceModule| <f1> torch.jit._builtins",shape="record"];
	"torch.jit._script" [label="<f0> SourceModule| <f1> torch.jit._script",shape="record"];
	"torch._classes" [label="<f0> SourceModule| <f1> torch._classes",shape="record"];
	"torch.jit._ir_utils" [label="<f0> SourceModule| <f1> torch.jit._ir_utils",shape="record"];
	"torch.jit._fuser" [label="<f0> SourceModule| <f1> torch.jit._fuser",shape="record"];
	"torch.jit._freeze" [label="<f0> SourceModule| <f1> torch.jit._freeze",shape="record"];
	"torch.jit._decomposition_utils" [label="<f0> SourceModule| <f1> torch.jit._decomposition_utils",shape="record"];
	"torch.jit._await" [label="<f0> SourceModule| <f1> torch.jit._await",shape="record"];
	"torch.jit._async" [label="<f0> SourceModule| <f1> torch.jit._async",shape="record"];
	"torch.nn.modules.module" [label="<f0> SourceModule| <f1> torch.nn.modules.module",shape="record"];
	"torch.device" [label="<f0> MissingModule| <f1> torch.device",shape="record"];
	"torch.ao.nn.sparse.quantized.linear" [label="<f0> SourceModule| <f1> torch.ao.nn.sparse.quantized.linear",shape="record"];
	"torch.ao.nn.quantized.reference" [label="<f0> Package| <f1> torch.ao.nn.quantized.reference",shape="record"];
	"torch.ao.nn.quantized.reference.modules" [label="<f0> Package| <f1> torch.ao.nn.quantized.reference.modules",shape="record"];
	"torch.ao.nn.quantized.reference.modules.sparse" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.reference.modules.sparse",shape="record"];
	"torch.ao.nn.quantized.reference.modules.utils" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.reference.modules.utils",shape="record"];
	"torch.ao.nn.quantized.reference.modules.rnn" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.reference.modules.rnn",shape="record"];
	"torch._VF" [label="<f0> SourceModule| <f1> torch._VF",shape="record"];
	"torch.ao.nn.quantized.reference.modules.linear" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.reference.modules.linear",shape="record"];
	"torch.ao.nn.quantized.reference.modules.conv" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.reference.modules.conv",shape="record"];
	"torch.ao.quantization.fx._lower_to_native_backend" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx._lower_to_native_backend",shape="record"];
	"torch.ao.nn.quantized.dynamic" [label="<f0> Package| <f1> torch.ao.nn.quantized.dynamic",shape="record"];
	"torch.ao.nn.quantized.dynamic.modules" [label="<f0> Package| <f1> torch.ao.nn.quantized.dynamic.modules",shape="record"];
	"torch.ao.nn.quantized.dynamic.modules.rnn" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.dynamic.modules.rnn",shape="record"];
	"torch.ao.nn.quantized.dynamic.modules.linear" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.dynamic.modules.linear",shape="record"];
	"torch.ao.nn.quantized.dynamic.modules.conv" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.dynamic.modules.conv",shape="record"];
	"torch.ao.nn.quantized" [label="<f0> Package| <f1> torch.ao.nn.quantized",shape="record"];
	"torch.ao.nn.quantized.functional" [label="<f0> SourceModule| <f1> torch.ao.nn.quantized.functional",shape="record"];
	"torch.ao.nn.qat.dynamic" [label="<f0> Package| <f1> torch.ao.nn.qat.dynamic",shape="record"];
	"torch.ao.nn.qat.dynamic.modules" [label="<f0> Package| <f1> torch.ao.nn.qat.dynamic.modules",shape="record"];
	"torch.ao.nn.qat.dynamic.modules.linear" [label="<f0> SourceModule| <f1> torch.ao.nn.qat.dynamic.modules.linear",shape="record"];
	"torch.ao.nn.qat" [label="<f0> Package| <f1> torch.ao.nn.qat",shape="record"];
	"torch.ao.nn.qat.modules" [label="<f0> Package| <f1> torch.ao.nn.qat.modules",shape="record"];
	"torch.ao.nn.qat.modules.linear" [label="<f0> SourceModule| <f1> torch.ao.nn.qat.modules.linear",shape="record"];
	"torch.ao.nn.qat.modules.embedding_ops" [label="<f0> SourceModule| <f1> torch.ao.nn.qat.modules.embedding_ops",shape="record"];
	"torch.ao.nn.qat.modules.conv" [label="<f0> SourceModule| <f1> torch.ao.nn.qat.modules.conv",shape="record"];
	"torch.ao.nn.intrinsic.quantized.dynamic" [label="<f0> Package| <f1> torch.ao.nn.intrinsic.quantized.dynamic",shape="record"];
	"torch.ao.nn.intrinsic.quantized.dynamic.modules" [label="<f0> Package| <f1> torch.ao.nn.intrinsic.quantized.dynamic.modules",shape="record"];
	"torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu",shape="record"];
	"torch.ao.nn.intrinsic.quantized" [label="<f0> Package| <f1> torch.ao.nn.intrinsic.quantized",shape="record"];
	"torch.ao.nn.intrinsic.quantized.modules" [label="<f0> Package| <f1> torch.ao.nn.intrinsic.quantized.modules",shape="record"];
	"torch.ao.nn.intrinsic.quantized.modules.linear_relu" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.quantized.modules.linear_relu",shape="record"];
	"torch.ao.nn.intrinsic.quantized.modules.conv_relu" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.quantized.modules.conv_relu",shape="record"];
	"torch.ao.nn.intrinsic.quantized.modules.conv_add" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.quantized.modules.conv_add",shape="record"];
	"torch.ao.nn.intrinsic.quantized.modules.bn_relu" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.quantized.modules.bn_relu",shape="record"];
	"torch.ao.nn.intrinsic.qat" [label="<f0> Package| <f1> torch.ao.nn.intrinsic.qat",shape="record"];
	"torch.ao.nn.intrinsic.qat.modules" [label="<f0> Package| <f1> torch.ao.nn.intrinsic.qat.modules",shape="record"];
	"torch.ao.nn.intrinsic.qat.modules.linear_relu" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.qat.modules.linear_relu",shape="record"];
	"torch.ao.nn.intrinsic.qat.modules.linear_fused" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.qat.modules.linear_fused",shape="record"];
	"torch.ao.nn.intrinsic.qat.modules.conv_fused" [label="<f0> SourceModule| <f1> torch.ao.nn.intrinsic.qat.modules.conv_fused",shape="record"];
	"torch.ao.ns._numeric_suite_fx" [label="<f0> SourceModule| <f1> torch.ao.ns._numeric_suite_fx",shape="record"];
	"torch.ao.ns.fx.weight_utils" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.weight_utils",shape="record"];
	"torch.ao.ns.fx.utils" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.utils",shape="record"];
	"torch.ao.ns.fx.graph_passes" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.graph_passes",shape="record"];
	"torch.ao.ns.fx.qconfig_multi_mapping" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.qconfig_multi_mapping",shape="record"];
	"torch.ao.ns.fx.n_shadows_utils" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.n_shadows_utils",shape="record"];
	"torch.ao.ns.fx.graph_matcher" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.graph_matcher",shape="record"];
	"torch.ao.ns.fx.pattern_utils" [label="<f0> SourceModule| <f1> torch.ao.ns.fx.pattern_utils",shape="record"];
	"torch.ao.quantization.quantize_fx" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantize_fx",shape="record"];
	"torch.ao.quantization.fx.tracer" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.tracer",shape="record"];
	"torch.ao.quantization.quantizer" [label="<f0> Package| <f1> torch.ao.quantization.quantizer",shape="record"];
	"torch.ao.quantization.quantizer.quantizer" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantizer.quantizer",shape="record"];
	"torch.ao.quantization.quantize" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantize",shape="record"];
	"torch.ao.quantization.qconfig_mapping" [label="<f0> SourceModule| <f1> torch.ao.quantization.qconfig_mapping",shape="record"];
	"torch.ao.quantization.qconfig" [label="<f0> SourceModule| <f1> torch.ao.quantization.qconfig",shape="record"];
	"torch.ao.quantization.observer" [label="<f0> SourceModule| <f1> torch.ao.quantization.observer",shape="record"];
	"torch.ao.quantization.backend_config.utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.utils",shape="record"];
	"torch.ao.quantization.backend_config.backend_config" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.backend_config",shape="record"];
	"torch.ao.quantization.fuser_method_mappings" [label="<f0> SourceModule| <f1> torch.ao.quantization.fuser_method_mappings",shape="record"];
	"torch.ao.quantization.backend_config" [label="<f0> Package| <f1> torch.ao.quantization.backend_config",shape="record"];
	"torch.ao.quantization.backend_config.tensorrt" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.tensorrt",shape="record"];
	"torch.ao.quantization.backend_config._common_operator_config_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config._common_operator_config_utils",shape="record"];
	"torch.ao.quantization.backend_config.qnnpack" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.qnnpack",shape="record"];
	"torch.ao.quantization.backend_config.onednn" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.onednn",shape="record"];
	"torch.ao.quantization.backend_config.native" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.native",shape="record"];
	"torch.ao.quantization.backend_config.fbgemm" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.fbgemm",shape="record"];
	"torch.ao.quantization.backend_config.executorch" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.executorch",shape="record"];
	"torch.ao.quantization.fx.fuse" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.fuse",shape="record"];
	"torch.ao.quantization.fx.fuse_handler" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.fuse_handler",shape="record"];
	"torch.ao.quantization.fx.convert" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.convert",shape="record"];
	"torch.ao.quantization.fx.lower_to_fbgemm" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.lower_to_fbgemm",shape="record"];
	"torch.ao.quantization" [label="<f0> Package| <f1> torch.ao.quantization",shape="record"];
	"torch.ao.quantization.quantize_jit" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantize_jit",shape="record"];
	"torch.ao.quantization.pt2e.export_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e.export_utils",shape="record"];
	"torch.ao.quantization.pt2e" [label="<f0> Package| <f1> torch.ao.quantization.pt2e",shape="record"];
	"torch.ao.quantization.pt2e.utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e.utils",shape="record"];
	"torch.ao.quantization.pt2e._numeric_debugger" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e._numeric_debugger",shape="record"];
	"torch.ao.quantization.fuse_modules" [label="<f0> SourceModule| <f1> torch.ao.quantization.fuse_modules",shape="record"];
	"torch.ao.quantization.utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.utils",shape="record"];
	"torch.export._unlift" [label="<f0> SourceModule| <f1> torch.export._unlift",shape="record"];
	"torch.export._remove_effect_tokens_pass" [label="<f0> SourceModule| <f1> torch.export._remove_effect_tokens_pass",shape="record"];
	"torch._export.non_strict_utils" [label="<f0> SourceModule| <f1> torch._export.non_strict_utils",shape="record"];
	"torch.fx.experimental._config" [label="<f0> SourceModule| <f1> torch.fx.experimental._config",shape="record"];
	"torch.utils._config_module" [label="<f0> SourceModule| <f1> torch.utils._config_module",shape="record"];
	"torch.fx.experimental" [label="<f0> Package| <f1> torch.fx.experimental",shape="record"];
	"torch.fx.experimental.const_fold" [label="<f0> SourceModule| <f1> torch.fx.experimental.const_fold",shape="record"];
	"torch._export.wrappers" [label="<f0> SourceModule| <f1> torch._export.wrappers",shape="record"];
	"torch._higher_order_ops.strict_mode" [label="<f0> SourceModule| <f1> torch._higher_order_ops.strict_mode",shape="record"];
	"torch._functorch.utils" [label="<f0> SourceModule| <f1> torch._functorch.utils",shape="record"];
	"torch.utils._exposed_in" [label="<f0> SourceModule| <f1> torch.utils._exposed_in",shape="record"];
	"'torch._C._functorch'" [label="<f0> MissingModule| <f1> 'torch._C._functorch'",shape="record"];
	"torch._custom_ops" [label="<f0> SourceModule| <f1> torch._custom_ops",shape="record"];
	"torch._custom_op.impl" [label="<f0> SourceModule| <f1> torch._custom_op.impl",shape="record"];
	"torch._custom_op" [label="<f0> Package| <f1> torch._custom_op",shape="record"];
	"torch._custom_op.autograd" [label="<f0> SourceModule| <f1> torch._custom_op.autograd",shape="record"];
	"torchgen.model" [label="<f0> SourceModule| <f1> torchgen.model",shape="record"];
	"torchgen.api.ufunc" [label="<f0> SourceModule| <f1> torchgen.api.ufunc",shape="record"];
	"torchgen.api.structured" [label="<f0> SourceModule| <f1> torchgen.api.structured",shape="record"];
	"torchgen.api.types" [label="<f0> Package| <f1> torchgen.api.types",shape="record"];
	"torchgen.api.types.signatures" [label="<f0> SourceModule| <f1> torchgen.api.types.signatures",shape="record"];
	"torchgen.api.translate" [label="<f0> SourceModule| <f1> torchgen.api.translate",shape="record"];
	"torchgen.api.native" [label="<f0> SourceModule| <f1> torchgen.api.native",shape="record"];
	"torchgen.local" [label="<f0> SourceModule| <f1> torchgen.local",shape="record"];
	"torchgen.api.functionalization" [label="<f0> SourceModule| <f1> torchgen.api.functionalization",shape="record"];
	"torchgen.api.dispatcher" [label="<f0> SourceModule| <f1> torchgen.api.dispatcher",shape="record"];
	"torchgen.api.types.types_base" [label="<f0> SourceModule| <f1> torchgen.api.types.types_base",shape="record"];
	"torchgen.api.types.types" [label="<f0> SourceModule| <f1> torchgen.api.types.types",shape="record"];
	"torchgen.api.cpp" [label="<f0> SourceModule| <f1> torchgen.api.cpp",shape="record"];
	"torchgen" [label="<f0> Package| <f1> torchgen",shape="record"];
	"torchgen.api" [label="<f0> Package| <f1> torchgen.api",shape="record"];
	"torchgen.utils" [label="<f0> SourceModule| <f1> torchgen.utils",shape="record"];
	"torchgen.code_template" [label="<f0> SourceModule| <f1> torchgen.code_template",shape="record"];
	"torch.export._tree_utils" [label="<f0> SourceModule| <f1> torch.export._tree_utils",shape="record"];
	"torch._export.converter" [label="<f0> SourceModule| <f1> torch._export.converter",shape="record"];
	"torch._export.passes.replace_quantized_ops_with_standard_ops_pass" [label="<f0> SourceModule| <f1> torch._export.passes.replace_quantized_ops_with_standard_ops_pass",shape="record"];
	"torch._export.passes" [label="<f0> Package| <f1> torch._export.passes",shape="record"];
	"torch._export.passes.replace_view_ops_with_view_copy_ops_pass" [label="<f0> SourceModule| <f1> torch._export.passes.replace_view_ops_with_view_copy_ops_pass",shape="record"];
	"torch._export.pass_base" [label="<f0> SourceModule| <f1> torch._export.pass_base",shape="record"];
	"torch.fx.passes.shape_prop" [label="<f0> SourceModule| <f1> torch.fx.passes.shape_prop",shape="record"];
	"torch.fx.passes" [label="<f0> Package| <f1> torch.fx.passes",shape="record"];
	"torch.fx.passes.tools_common" [label="<f0> SourceModule| <f1> torch.fx.passes.tools_common",shape="record"];
	"torch.fx.passes.splitter_base" [label="<f0> SourceModule| <f1> torch.fx.passes.splitter_base",shape="record"];
	"torch.fx.passes.split_utils" [label="<f0> SourceModule| <f1> torch.fx.passes.split_utils",shape="record"];
	"torch.fx.passes.utils" [label="<f0> Package| <f1> torch.fx.passes.utils",shape="record"];
	"torch.fx.passes.utils.common" [label="<f0> SourceModule| <f1> torch.fx.passes.utils.common",shape="record"];
	"torch.fx.passes.utils.matcher_utils" [label="<f0> SourceModule| <f1> torch.fx.passes.utils.matcher_utils",shape="record"];
	"torch.fx.passes.utils.fuser_utils" [label="<f0> SourceModule| <f1> torch.fx.passes.utils.fuser_utils",shape="record"];
	"torch.fx.passes.runtime_assert" [label="<f0> SourceModule| <f1> torch.fx.passes.runtime_assert",shape="record"];
	"torch.utils._sympy.interp" [label="<f0> SourceModule| <f1> torch.utils._sympy.interp",shape="record"];
	"torch.utils._sympy" [label="<f0> Package| <f1> torch.utils._sympy",shape="record"];
	"sympy.logic.boolalg" [label="<f0> SourceModule| <f1> sympy.logic.boolalg",shape="record"];
	"sympy.functions.elementary.complexes" [label="<f0> SourceModule| <f1> sympy.functions.elementary.complexes",shape="record"];
	"sympy.integrals.integrals" [label="<f0> SourceModule| <f1> sympy.integrals.integrals",shape="record"];
	"sympy.integrals.trigonometry" [label="<f0> SourceModule| <f1> sympy.integrals.trigonometry",shape="record"];
	"sympy.integrals.meijerint" [label="<f0> SourceModule| <f1> sympy.integrals.meijerint",shape="record"];
	"sympy.simplify.radsimp" [label="<f0> SourceModule| <f1> sympy.simplify.radsimp",shape="record"];
	"sympy.simplify.sqrtdenest" [label="<f0> SourceModule| <f1> sympy.simplify.sqrtdenest",shape="record"];
	"sympy.core.parameters" [label="<f0> SourceModule| <f1> sympy.core.parameters",shape="record"];
	"sympy.core.assumptions" [label="<f0> SourceModule| <f1> sympy.core.assumptions",shape="record"];
	"sympy.core.assumptions_generated" [label="<f0> SourceModule| <f1> sympy.core.assumptions_generated",shape="record"];
	"sympy.core.random" [label="<f0> SourceModule| <f1> sympy.core.random",shape="record"];
	"sympy.core.facts" [label="<f0> SourceModule| <f1> sympy.core.facts",shape="record"];
	"sympy.simplify.hyperexpand" [label="<f0> SourceModule| <f1> sympy.simplify.hyperexpand",shape="record"];
	"sympy.solvers" [label="<f0> Package| <f1> sympy.solvers",shape="record"];
	"sympy.solvers.simplex" [label="<f0> SourceModule| <f1> sympy.solvers.simplex",shape="record"];
	"sympy.matrices.dense" [label="<f0> SourceModule| <f1> sympy.matrices.dense",shape="record"];
	"sympy.matrices.immutable" [label="<f0> SourceModule| <f1> sympy.matrices.immutable",shape="record"];
	"sympy.multipledispatch" [label="<f0> Package| <f1> sympy.multipledispatch",shape="record"];
	"sympy.multipledispatch.dispatcher" [label="<f0> SourceModule| <f1> sympy.multipledispatch.dispatcher",shape="record"];
	"sympy.multipledispatch.utils" [label="<f0> SourceModule| <f1> sympy.multipledispatch.utils",shape="record"];
	"sympy.multipledispatch.conflict" [label="<f0> SourceModule| <f1> sympy.multipledispatch.conflict",shape="record"];
	"sympy.multipledispatch.core" [label="<f0> SourceModule| <f1> sympy.multipledispatch.core",shape="record"];
	"sympy.matrices.sparse" [label="<f0> SourceModule| <f1> sympy.matrices.sparse",shape="record"];
	"sympy.matrices.utilities" [label="<f0> SourceModule| <f1> sympy.matrices.utilities",shape="record"];
	"sympy.matrices.expressions" [label="<f0> Package| <f1> sympy.matrices.expressions",shape="record"];
	"sympy.matrices.expressions.special" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.special",shape="record"];
	"sympy.functions.special.tensor_functions" [label="<f0> SourceModule| <f1> sympy.functions.special.tensor_functions",shape="record"];
	"sympy.functions.special" [label="<f0> Package| <f1> sympy.functions.special",shape="record"];
	"sympy.external.gmpy" [label="<f0> SourceModule| <f1> sympy.external.gmpy",shape="record"];
	"flint" [label="<f0> MissingModule| <f1> flint",shape="record"];
	"sympy.external.ntheory" [label="<f0> SourceModule| <f1> sympy.external.ntheory",shape="record"];
	"mpmath.libmp" [label="<f0> Package| <f1> mpmath.libmp",shape="record"];
	"mpmath" [label="<f0> Package| <f1> mpmath",shape="record"];
	"mpmath.tests.runtests" [label="<f0> SourceModule| <f1> mpmath.tests.runtests",shape="record"];
	"trace" [label="<f0> SourceModule| <f1> trace",shape="record"];
	"py" [label="<f0> MissingModule| <f1> py",shape="record"];
	"mpmath.tests" [label="<f0> Package| <f1> mpmath.tests",shape="record"];
	"mpmath.ctx_iv" [label="<f0> SourceModule| <f1> mpmath.ctx_iv",shape="record"];
	"mpmath.ctx_base" [label="<f0> SourceModule| <f1> mpmath.ctx_base",shape="record"];
	"mpmath.visualization" [label="<f0> SourceModule| <f1> mpmath.visualization",shape="record"];
	"mpl_toolkits" [label="<f0> MissingModule| <f1> mpl_toolkits",shape="record"];
	"pylab" [label="<f0> MissingModule| <f1> pylab",shape="record"];
	"mpmath.identification" [label="<f0> SourceModule| <f1> mpmath.identification",shape="record"];
	"mpmath.matrices.eigen" [label="<f0> SourceModule| <f1> mpmath.matrices.eigen",shape="record"];
	"mpmath.matrices" [label="<f0> Package| <f1> mpmath.matrices",shape="record"];
	"mpmath.matrices.eigen_symmetric" [label="<f0> SourceModule| <f1> mpmath.matrices.eigen_symmetric",shape="record"];
	"mpmath.matrices.linalg" [label="<f0> SourceModule| <f1> mpmath.matrices.linalg",shape="record"];
	"mpmath.matrices.calculus" [label="<f0> SourceModule| <f1> mpmath.matrices.calculus",shape="record"];
	"mpmath.calculus.odes" [label="<f0> SourceModule| <f1> mpmath.calculus.odes",shape="record"];
	"mpmath.calculus" [label="<f0> Package| <f1> mpmath.calculus",shape="record"];
	"mpmath.calculus.polynomials" [label="<f0> SourceModule| <f1> mpmath.calculus.polynomials",shape="record"];
	"mpmath.calculus.extrapolation" [label="<f0> SourceModule| <f1> mpmath.calculus.extrapolation",shape="record"];
	"mpmath.calculus.differentiation" [label="<f0> SourceModule| <f1> mpmath.calculus.differentiation",shape="record"];
	"mpmath.calculus.approximation" [label="<f0> SourceModule| <f1> mpmath.calculus.approximation",shape="record"];
	"mpmath.calculus.optimization" [label="<f0> SourceModule| <f1> mpmath.calculus.optimization",shape="record"];
	"mpmath.calculus.calculus" [label="<f0> SourceModule| <f1> mpmath.calculus.calculus",shape="record"];
	"mpmath.calculus.inverselaplace" [label="<f0> SourceModule| <f1> mpmath.calculus.inverselaplace",shape="record"];
	"mpmath.calculus.quadrature" [label="<f0> SourceModule| <f1> mpmath.calculus.quadrature",shape="record"];
	"mpmath.functions.rszeta" [label="<f0> SourceModule| <f1> mpmath.functions.rszeta",shape="record"];
	"mpmath.functions" [label="<f0> Package| <f1> mpmath.functions",shape="record"];
	"mpmath.functions.qfunctions" [label="<f0> SourceModule| <f1> mpmath.functions.qfunctions",shape="record"];
	"mpmath.functions.zetazeros" [label="<f0> SourceModule| <f1> mpmath.functions.zetazeros",shape="record"];
	"mpmath.functions.zeta" [label="<f0> SourceModule| <f1> mpmath.functions.zeta",shape="record"];
	"mpmath.functions.signals" [label="<f0> SourceModule| <f1> mpmath.functions.signals",shape="record"];
	"mpmath.functions.elliptic" [label="<f0> SourceModule| <f1> mpmath.functions.elliptic",shape="record"];
	"mpmath.functions.theta" [label="<f0> SourceModule| <f1> mpmath.functions.theta",shape="record"];
	"mpmath.functions.orthogonal" [label="<f0> SourceModule| <f1> mpmath.functions.orthogonal",shape="record"];
	"mpmath.functions.bessel" [label="<f0> SourceModule| <f1> mpmath.functions.bessel",shape="record"];
	"mpmath.functions.expintegrals" [label="<f0> SourceModule| <f1> mpmath.functions.expintegrals",shape="record"];
	"mpmath.functions.hypergeometric" [label="<f0> SourceModule| <f1> mpmath.functions.hypergeometric",shape="record"];
	"mpmath.functions.factorials" [label="<f0> SourceModule| <f1> mpmath.functions.factorials",shape="record"];
	"mpmath.functions.functions" [label="<f0> SourceModule| <f1> mpmath.functions.functions",shape="record"];
	"mpmath.ctx_mp" [label="<f0> SourceModule| <f1> mpmath.ctx_mp",shape="record"];
	"mpmath.ctx_mp_python" [label="<f0> SourceModule| <f1> mpmath.ctx_mp_python",shape="record"];
	"'sage.libs'" [label="<f0> MissingModule| <f1> 'sage.libs'",shape="record"];
	"mpmath.rational" [label="<f0> SourceModule| <f1> mpmath.rational",shape="record"];
	"mpmath.ctx_fp" [label="<f0> SourceModule| <f1> mpmath.ctx_fp",shape="record"];
	"mpmath.function_docs" [label="<f0> SourceModule| <f1> mpmath.function_docs",shape="record"];
	"mpmath.math2" [label="<f0> SourceModule| <f1> mpmath.math2",shape="record"];
	"mpmath.usertools" [label="<f0> SourceModule| <f1> mpmath.usertools",shape="record"];
	"mpmath.libmp.backend" [label="<f0> SourceModule| <f1> mpmath.libmp.backend",shape="record"];
	"sage" [label="<f0> MissingModule| <f1> sage",shape="record"];
	"gmpy" [label="<f0> MissingModule| <f1> gmpy",shape="record"];
	"gmpy2" [label="<f0> MissingModule| <f1> gmpy2",shape="record"];
	"mpmath.libmp.libintmath" [label="<f0> SourceModule| <f1> mpmath.libmp.libintmath",shape="record"];
	"mpmath.libmp.libmpi" [label="<f0> SourceModule| <f1> mpmath.libmp.libmpi",shape="record"];
	"mpmath.libmp.gammazeta" [label="<f0> SourceModule| <f1> mpmath.libmp.gammazeta",shape="record"];
	"mpmath.libmp.libhyper" [label="<f0> SourceModule| <f1> mpmath.libmp.libhyper",shape="record"];
	"mpmath.libmp.libelefun" [label="<f0> SourceModule| <f1> mpmath.libmp.libelefun",shape="record"];
	"mpmath.libmp.libmpc" [label="<f0> SourceModule| <f1> mpmath.libmp.libmpc",shape="record"];
	"mpmath.libmp.libmpf" [label="<f0> SourceModule| <f1> mpmath.libmp.libmpf",shape="record"];
	"sympy.external.pythonmpq" [label="<f0> SourceModule| <f1> sympy.external.pythonmpq",shape="record"];
	"sympy.external" [label="<f0> Package| <f1> sympy.external",shape="record"];
	"sympy.external.importtools" [label="<f0> SourceModule| <f1> sympy.external.importtools",shape="record"];
	"sympy.matrices.expressions.sets" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.sets",shape="record"];
	"sympy.matrices.kind" [label="<f0> SourceModule| <f1> sympy.matrices.kind",shape="record"];
	"sympy.matrices.expressions.permutation" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.permutation",shape="record"];
	"sympy.combinatorics.permutations" [label="<f0> SourceModule| <f1> sympy.combinatorics.permutations",shape="record"];
	"sympy.combinatorics.perm_groups" [label="<f0> SourceModule| <f1> sympy.combinatorics.perm_groups",shape="record"];
	"sympy.combinatorics.pc_groups" [label="<f0> SourceModule| <f1> sympy.combinatorics.pc_groups",shape="record"];
	"sympy.printing.defaults" [label="<f0> SourceModule| <f1> sympy.printing.defaults",shape="record"];
	"sympy.core._print_helpers" [label="<f0> SourceModule| <f1> sympy.core._print_helpers",shape="record"];
	"sympy.printing.latex" [label="<f0> SourceModule| <f1> sympy.printing.latex",shape="record"];
	"sympy.categories" [label="<f0> Package| <f1> sympy.categories",shape="record"];
	"sympy.categories.diagram_drawing" [label="<f0> SourceModule| <f1> sympy.categories.diagram_drawing",shape="record"];
	"sympy.printing.preview" [label="<f0> SourceModule| <f1> sympy.printing.preview",shape="record"];
	"'pyglet.image'" [label="<f0> MissingModule| <f1> 'pyglet.image'",shape="record"];
	"'pyglet.window'" [label="<f0> MissingModule| <f1> 'pyglet.window'",shape="record"];
	"pyglet" [label="<f0> MissingModule| <f1> pyglet",shape="record"];
	"sympy.sets" [label="<f0> Package| <f1> sympy.sets",shape="record"];
	"sympy.sets.handlers.comparison" [label="<f0> SourceModule| <f1> sympy.sets.handlers.comparison",shape="record"];
	"sympy.sets.handlers" [label="<f0> Package| <f1> sympy.sets.handlers",shape="record"];
	"sympy.sets.powerset" [label="<f0> SourceModule| <f1> sympy.sets.powerset",shape="record"];
	"sympy.sets.ordinals" [label="<f0> SourceModule| <f1> sympy.sets.ordinals",shape="record"];
	"sympy.sets.conditionset" [label="<f0> SourceModule| <f1> sympy.sets.conditionset",shape="record"];
	"sympy.sets.contains" [label="<f0> SourceModule| <f1> sympy.sets.contains",shape="record"];
	"sympy.sets.fancysets" [label="<f0> SourceModule| <f1> sympy.sets.fancysets",shape="record"];
	"sympy.sets.setexpr" [label="<f0> SourceModule| <f1> sympy.sets.setexpr",shape="record"];
	"sympy.categories.baseclasses" [label="<f0> SourceModule| <f1> sympy.categories.baseclasses",shape="record"];
	"sympy.physics.control" [label="<f0> Package| <f1> sympy.physics.control",shape="record"];
	"sympy.physics.control.control_plots" [label="<f0> SourceModule| <f1> sympy.physics.control.control_plots",shape="record"];
	"sympy.plotting.series" [label="<f0> SourceModule| <f1> sympy.plotting.series",shape="record"];
	"sympy.plotting" [label="<f0> Package| <f1> sympy.plotting",shape="record"];
	"sympy.plotting.pygletplot" [label="<f0> Package| <f1> sympy.plotting.pygletplot",shape="record"];
	"sympy.plotting.pygletplot.plot" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot",shape="record"];
	"sympy.plotting.pygletplot.util" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.util",shape="record"];
	"'pyglet.gl'" [label="<f0> MissingModule| <f1> 'pyglet.gl'",shape="record"];
	"sympy.plotting.pygletplot.plot_window" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_window",shape="record"];
	"sympy.plotting.pygletplot.plot_controller" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_controller",shape="record"];
	"sympy.plotting.pygletplot.plot_camera" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_camera",shape="record"];
	"sympy.plotting.pygletplot.plot_rotation" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_rotation",shape="record"];
	"sympy.plotting.pygletplot.managed_window" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.managed_window",shape="record"];
	"'pyglet.clock'" [label="<f0> MissingModule| <f1> 'pyglet.clock'",shape="record"];
	"sympy.plotting.pygletplot.plot_object" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_object",shape="record"];
	"sympy.plotting.pygletplot.plot_mode" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_mode",shape="record"];
	"sympy.plotting.pygletplot.plot_interval" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_interval",shape="record"];
	"sympy.plotting.pygletplot.plot_axes" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_axes",shape="record"];
	"sympy.geometry.entity" [label="<f0> SourceModule| <f1> sympy.geometry.entity",shape="record"];
	"sympy.geometry.polygon" [label="<f0> SourceModule| <f1> sympy.geometry.polygon",shape="record"];
	"sympy.geometry.exceptions" [label="<f0> SourceModule| <f1> sympy.geometry.exceptions",shape="record"];
	"sympy.geometry.ellipse" [label="<f0> SourceModule| <f1> sympy.geometry.ellipse",shape="record"];
	"sympy.polys.polyutils" [label="<f0> SourceModule| <f1> sympy.polys.polyutils",shape="record"];
	"sympy.polys.domains.modularinteger" [label="<f0> SourceModule| <f1> sympy.polys.domains.modularinteger",shape="record"];
	"sympy.polys.domains" [label="<f0> Package| <f1> sympy.polys.domains",shape="record"];
	"sympy.polys.domains.gmpyrationalfield" [label="<f0> SourceModule| <f1> sympy.polys.domains.gmpyrationalfield",shape="record"];
	"sympy.polys.domains.groundtypes" [label="<f0> SourceModule| <f1> sympy.polys.domains.groundtypes",shape="record"];
	"sympy.polys.domains.pythonrationalfield" [label="<f0> SourceModule| <f1> sympy.polys.domains.pythonrationalfield",shape="record"];
	"sympy.polys.domains.gmpyintegerring" [label="<f0> SourceModule| <f1> sympy.polys.domains.gmpyintegerring",shape="record"];
	"sympy.polys.domains.pythonintegerring" [label="<f0> SourceModule| <f1> sympy.polys.domains.pythonintegerring",shape="record"];
	"sympy.polys.domains.gmpyfinitefield" [label="<f0> SourceModule| <f1> sympy.polys.domains.gmpyfinitefield",shape="record"];
	"sympy.polys.domains.pythonfinitefield" [label="<f0> SourceModule| <f1> sympy.polys.domains.pythonfinitefield",shape="record"];
	"sympy.polys.domains.pythonrational" [label="<f0> SourceModule| <f1> sympy.polys.domains.pythonrational",shape="record"];
	"sympy.polys.domains.expressionrawdomain" [label="<f0> SourceModule| <f1> sympy.polys.domains.expressionrawdomain",shape="record"];
	"sympy.polys.domains.simpledomain" [label="<f0> SourceModule| <f1> sympy.polys.domains.simpledomain",shape="record"];
	"sympy.polys.domains.field" [label="<f0> SourceModule| <f1> sympy.polys.domains.field",shape="record"];
	"sympy.polys.domains.ring" [label="<f0> SourceModule| <f1> sympy.polys.domains.ring",shape="record"];
	"sympy.polys.domains.quotientring" [label="<f0> SourceModule| <f1> sympy.polys.domains.quotientring",shape="record"];
	"sympy.polys.agca.modules" [label="<f0> SourceModule| <f1> sympy.polys.agca.modules",shape="record"];
	"sympy.polys.distributedmodules" [label="<f0> SourceModule| <f1> sympy.polys.distributedmodules",shape="record"];
	"sympy.polys.monomials" [label="<f0> SourceModule| <f1> sympy.polys.monomials",shape="record"];
	"sympy.polys.domains.old_polynomialring" [label="<f0> SourceModule| <f1> sympy.polys.domains.old_polynomialring",shape="record"];
	"sympy.polys.domains.old_fractionfield" [label="<f0> SourceModule| <f1> sympy.polys.domains.old_fractionfield",shape="record"];
	"sympy.polys.domains.compositedomain" [label="<f0> SourceModule| <f1> sympy.polys.domains.compositedomain",shape="record"];
	"sympy.polys.agca" [label="<f0> Package| <f1> sympy.polys.agca",shape="record"];
	"sympy.polys.agca.homomorphisms" [label="<f0> SourceModule| <f1> sympy.polys.agca.homomorphisms",shape="record"];
	"sympy.polys.polyclasses" [label="<f0> SourceModule| <f1> sympy.polys.polyclasses",shape="record"];
	"sympy.polys.rootisolation" [label="<f0> SourceModule| <f1> sympy.polys.rootisolation",shape="record"];
	"sympy.polys.factortools" [label="<f0> SourceModule| <f1> sympy.polys.factortools",shape="record"];
	"sympy.polys.polyconfig" [label="<f0> SourceModule| <f1> sympy.polys.polyconfig",shape="record"];
	"sympy.polys.galoistools" [label="<f0> SourceModule| <f1> sympy.polys.galoistools",shape="record"];
	"sympy.polys.sqfreetools" [label="<f0> SourceModule| <f1> sympy.polys.sqfreetools",shape="record"];
	"sympy.polys.euclidtools" [label="<f0> SourceModule| <f1> sympy.polys.euclidtools",shape="record"];
	"sympy.polys.densetools" [label="<f0> SourceModule| <f1> sympy.polys.densetools",shape="record"];
	"sympy.polys.densearith" [label="<f0> SourceModule| <f1> sympy.polys.densearith",shape="record"];
	"sympy.polys.densebasic" [label="<f0> SourceModule| <f1> sympy.polys.densebasic",shape="record"];
	"sympy.polys.orderings" [label="<f0> SourceModule| <f1> sympy.polys.orderings",shape="record"];
	"sympy.polys.agca.ideals" [label="<f0> SourceModule| <f1> sympy.polys.agca.ideals",shape="record"];
	"sympy.polys.domains.characteristiczero" [label="<f0> SourceModule| <f1> sympy.polys.domains.characteristiczero",shape="record"];
	"sympy.polys.domains.expressiondomain" [label="<f0> SourceModule| <f1> sympy.polys.domains.expressiondomain",shape="record"];
	"sympy.polys.domains.fractionfield" [label="<f0> SourceModule| <f1> sympy.polys.domains.fractionfield",shape="record"];
	"sympy.polys.fields" [label="<f0> SourceModule| <f1> sympy.polys.fields",shape="record"];
	"sympy.utilities.magic" [label="<f0> SourceModule| <f1> sympy.utilities.magic",shape="record"];
	"sympy.polys.rings" [label="<f0> SourceModule| <f1> sympy.polys.rings",shape="record"];
	"sympy.polys.heuristicgcd" [label="<f0> SourceModule| <f1> sympy.polys.heuristicgcd",shape="record"];
	"sympy.polys.compatibility" [label="<f0> SourceModule| <f1> sympy.polys.compatibility",shape="record"];
	"sympy.polys.specialpolys" [label="<f0> SourceModule| <f1> sympy.polys.specialpolys",shape="record"];
	"sympy.polys.numberfields" [label="<f0> Package| <f1> sympy.polys.numberfields",shape="record"];
	"sympy.polys.numberfields.galoisgroups" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.galoisgroups",shape="record"];
	"sympy.combinatorics.galois" [label="<f0> SourceModule| <f1> sympy.combinatorics.galois",shape="record"];
	"sympy.combinatorics.named_groups" [label="<f0> SourceModule| <f1> sympy.combinatorics.named_groups",shape="record"];
	"sympy.combinatorics.generators" [label="<f0> SourceModule| <f1> sympy.combinatorics.generators",shape="record"];
	"sympy.combinatorics.group_constructs" [label="<f0> SourceModule| <f1> sympy.combinatorics.group_constructs",shape="record"];
	"sympy.polys.numberfields.galois_resolvents" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.galois_resolvents",shape="record"];
	"sympy.polys.numberfields.resolvent_lookup" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.resolvent_lookup",shape="record"];
	"sympy.polys.polyroots" [label="<f0> SourceModule| <f1> sympy.polys.polyroots",shape="record"];
	"sympy.polys.rationaltools" [label="<f0> SourceModule| <f1> sympy.polys.rationaltools",shape="record"];
	"sympy.polys.polyquinticconst" [label="<f0> SourceModule| <f1> sympy.polys.polyquinticconst",shape="record"];
	"sympy.polys.numberfields.primes" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.primes",shape="record"];
	"sympy.polys.numberfields.modules" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.modules",shape="record"];
	"sympy.polys.matrices.normalforms" [label="<f0> SourceModule| <f1> sympy.polys.matrices.normalforms",shape="record"];
	"sympy.polys.matrices" [label="<f0> Package| <f1> sympy.polys.matrices",shape="record"];
	"sympy.ntheory.modular" [label="<f0> SourceModule| <f1> sympy.ntheory.modular",shape="record"];
	"sympy.polys.matrices.exceptions" [label="<f0> SourceModule| <f1> sympy.polys.matrices.exceptions",shape="record"];
	"sympy.polys.numberfields.exceptions" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.exceptions",shape="record"];
	"sympy.polys.matrices.domainmatrix" [label="<f0> SourceModule| <f1> sympy.polys.matrices.domainmatrix",shape="record"];
	"sympy.polys.matrices.rref" [label="<f0> SourceModule| <f1> sympy.polys.matrices.rref",shape="record"];
	"sympy.polys.matrices.dense" [label="<f0> SourceModule| <f1> sympy.polys.matrices.dense",shape="record"];
	"sympy.polys.matrices._typing" [label="<f0> SourceModule| <f1> sympy.polys.matrices._typing",shape="record"];
	"sympy.polys.matrices.dfm" [label="<f0> SourceModule| <f1> sympy.polys.matrices.dfm",shape="record"];
	"sympy.polys.matrices._dfm" [label="<f0> SourceModule| <f1> sympy.polys.matrices._dfm",shape="record"];
	"sympy.polys.matrices.sdm" [label="<f0> SourceModule| <f1> sympy.polys.matrices.sdm",shape="record"];
	"sympy.polys.matrices.ddm" [label="<f0> SourceModule| <f1> sympy.polys.matrices.ddm",shape="record"];
	"sympy.polys.matrices.lll" [label="<f0> SourceModule| <f1> sympy.polys.matrices.lll",shape="record"];
	"sympy.polys.matrices.domainscalar" [label="<f0> SourceModule| <f1> sympy.polys.matrices.domainscalar",shape="record"];
	"sympy.polys.numberfields.basis" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.basis",shape="record"];
	"sympy.polys.numberfields.utilities" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.utilities",shape="record"];
	"sympy.printing.lambdarepr" [label="<f0> SourceModule| <f1> sympy.printing.lambdarepr",shape="record"];
	"sympy.codegen.pynodes" [label="<f0> SourceModule| <f1> sympy.codegen.pynodes",shape="record"];
	"sympy.codegen" [label="<f0> Package| <f1> sympy.codegen",shape="record"];
	"sympy.codegen.abstract_nodes" [label="<f0> SourceModule| <f1> sympy.codegen.abstract_nodes",shape="record"];
	"sympy.codegen.ast" [label="<f0> SourceModule| <f1> sympy.codegen.ast",shape="record"];
	"sympy.simplify.cse_main" [label="<f0> SourceModule| <f1> sympy.simplify.cse_main",shape="record"];
	"sympy.simplify.cse_opts" [label="<f0> SourceModule| <f1> sympy.simplify.cse_opts",shape="record"];
	"sympy.core.traversal" [label="<f0> SourceModule| <f1> sympy.core.traversal",shape="record"];
	"sympy.polys.rootoftools" [label="<f0> SourceModule| <f1> sympy.polys.rootoftools",shape="record"];
	"sympy.polys.polyfuncs" [label="<f0> SourceModule| <f1> sympy.polys.polyfuncs",shape="record"];
	"sympy.tensor.array.expressions" [label="<f0> Package| <f1> sympy.tensor.array.expressions",shape="record"];
	"sympy.tensor.array.expressions.from_matrix_to_array" [label="<f0> SourceModule| <f1> sympy.tensor.array.expressions.from_matrix_to_array",shape="record"];
	"sympy.tensor.array.expressions.from_indexed_to_array" [label="<f0> SourceModule| <f1> sympy.tensor.array.expressions.from_indexed_to_array",shape="record"];
	"sympy.tensor.array.expressions.utils" [label="<f0> SourceModule| <f1> sympy.tensor.array.expressions.utils",shape="record"];
	"sympy.tensor.array.expressions.from_array_to_matrix" [label="<f0> SourceModule| <f1> sympy.tensor.array.expressions.from_array_to_matrix",shape="record"];
	"sympy.matrices.expressions.applyfunc" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.applyfunc",shape="record"];
	"sympy.tensor.array.expressions.from_array_to_indexed" [label="<f0> SourceModule| <f1> sympy.tensor.array.expressions.from_array_to_indexed",shape="record"];
	"sympy.tensor.array.expressions.arrayexpr_derivatives" [label="<f0> SourceModule| <f1> sympy.tensor.array.expressions.arrayexpr_derivatives",shape="record"];
	"sympy.tensor.array.expressions.array_expressions" [label="<f0> SourceModule| <f1> sympy.tensor.array.expressions.array_expressions",shape="record"];
	"sympy.tensor.array.ndim_array" [label="<f0> SourceModule| <f1> sympy.tensor.array.ndim_array",shape="record"];
	"sympy.tensor.array.array_derivatives" [label="<f0> SourceModule| <f1> sympy.tensor.array.array_derivatives",shape="record"];
	"sympy.tensor" [label="<f0> Package| <f1> sympy.tensor",shape="record"];
	"sympy.tensor.index_methods" [label="<f0> SourceModule| <f1> sympy.tensor.index_methods",shape="record"];
	"sympy.tensor.array.dense_ndim_array" [label="<f0> SourceModule| <f1> sympy.tensor.array.dense_ndim_array",shape="record"];
	"sympy.tensor.array.mutable_ndim_array" [label="<f0> SourceModule| <f1> sympy.tensor.array.mutable_ndim_array",shape="record"];
	"sympy.tensor.array.arrayop" [label="<f0> SourceModule| <f1> sympy.tensor.array.arrayop",shape="record"];
	"sympy.tensor.array.sparse_ndim_array" [label="<f0> SourceModule| <f1> sympy.tensor.array.sparse_ndim_array",shape="record"];
	"sympy.tensor.indexed" [label="<f0> SourceModule| <f1> sympy.tensor.indexed",shape="record"];
	"sympy.printing.numpy" [label="<f0> SourceModule| <f1> sympy.printing.numpy",shape="record"];
	"sympy.abc" [label="<f0> SourceModule| <f1> sympy.abc",shape="record"];
	"sympy.parsing.sympy_parser" [label="<f0> SourceModule| <f1> sympy.parsing.sympy_parser",shape="record"];
	"sympy.parsing" [label="<f0> Package| <f1> sympy.parsing",shape="record"];
	"sympy.printing.codeprinter" [label="<f0> SourceModule| <f1> sympy.printing.codeprinter",shape="record"];
	"sympy.printing.cxx" [label="<f0> SourceModule| <f1> sympy.printing.cxx",shape="record"];
	"sympy.printing.fortran" [label="<f0> SourceModule| <f1> sympy.printing.fortran",shape="record"];
	"sympy.codegen.fnodes" [label="<f0> SourceModule| <f1> sympy.codegen.fnodes",shape="record"];
	"sympy.printing.c" [label="<f0> SourceModule| <f1> sympy.printing.c",shape="record"];
	"sympy.codegen.cnodes" [label="<f0> SourceModule| <f1> sympy.codegen.cnodes",shape="record"];
	"sympy.codegen.cfunctions" [label="<f0> SourceModule| <f1> sympy.codegen.cfunctions",shape="record"];
	"sympy.polys.numberfields.subfield" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.subfield",shape="record"];
	"sympy.polys.numberfields.minpoly" [label="<f0> SourceModule| <f1> sympy.polys.numberfields.minpoly",shape="record"];
	"sympy.polys.ring_series" [label="<f0> SourceModule| <f1> sympy.polys.ring_series",shape="record"];
	"sympy.polys.orthopolys" [label="<f0> SourceModule| <f1> sympy.polys.orthopolys",shape="record"];
	"sympy.ntheory.multinomial" [label="<f0> SourceModule| <f1> sympy.ntheory.multinomial",shape="record"];
	"sympy.polys.constructor" [label="<f0> SourceModule| <f1> sympy.polys.constructor",shape="record"];
	"sympy.polys.domains.polynomialring" [label="<f0> SourceModule| <f1> sympy.polys.domains.polynomialring",shape="record"];
	"sympy.polys.domains.complexfield" [label="<f0> SourceModule| <f1> sympy.polys.domains.complexfield",shape="record"];
	"sympy.polys.domains.mpelements" [label="<f0> SourceModule| <f1> sympy.polys.domains.mpelements",shape="record"];
	"sympy.polys.domains.realfield" [label="<f0> SourceModule| <f1> sympy.polys.domains.realfield",shape="record"];
	"sympy.polys.domains.gaussiandomains" [label="<f0> SourceModule| <f1> sympy.polys.domains.gaussiandomains",shape="record"];
	"sympy.polys.domains.algebraicfield" [label="<f0> SourceModule| <f1> sympy.polys.domains.algebraicfield",shape="record"];
	"sympy.polys.domains.rationalfield" [label="<f0> SourceModule| <f1> sympy.polys.domains.rationalfield",shape="record"];
	"sympy.polys.domains.integerring" [label="<f0> SourceModule| <f1> sympy.polys.domains.integerring",shape="record"];
	"sympy.polys.domains.finitefield" [label="<f0> SourceModule| <f1> sympy.polys.domains.finitefield",shape="record"];
	"sympy.polys.domains.domain" [label="<f0> SourceModule| <f1> sympy.polys.domains.domain",shape="record"];
	"sympy.utilities" [label="<f0> Package| <f1> sympy.utilities",shape="record"];
	"sympy.polys.domains.domainelement" [label="<f0> SourceModule| <f1> sympy.polys.domains.domainelement",shape="record"];
	"sympy.polys.polyoptions" [label="<f0> SourceModule| <f1> sympy.polys.polyoptions",shape="record"];
	"sympy.polys.polyerrors" [label="<f0> SourceModule| <f1> sympy.polys.polyerrors",shape="record"];
	"sympy.geometry.util" [label="<f0> SourceModule| <f1> sympy.geometry.util",shape="record"];
	"sympy.geometry.plane" [label="<f0> SourceModule| <f1> sympy.geometry.plane",shape="record"];
	"sympy.simplify.trigsimp" [label="<f0> SourceModule| <f1> sympy.simplify.trigsimp",shape="record"];
	"sympy.simplify.ratsimp" [label="<f0> SourceModule| <f1> sympy.simplify.ratsimp",shape="record"];
	"sympy.strategies.tree" [label="<f0> SourceModule| <f1> sympy.strategies.tree",shape="record"];
	"sympy.strategies.branch" [label="<f0> Package| <f1> sympy.strategies.branch",shape="record"];
	"sympy.strategies.branch.tools" [label="<f0> SourceModule| <f1> sympy.strategies.branch.tools",shape="record"];
	"sympy.strategies.branch.core" [label="<f0> SourceModule| <f1> sympy.strategies.branch.core",shape="record"];
	"sympy.strategies.branch.traverse" [label="<f0> SourceModule| <f1> sympy.strategies.branch.traverse",shape="record"];
	"sympy.strategies.util" [label="<f0> SourceModule| <f1> sympy.strategies.util",shape="record"];
	"sympy.strategies" [label="<f0> Package| <f1> sympy.strategies",shape="record"];
	"sympy.strategies.tools" [label="<f0> SourceModule| <f1> sympy.strategies.tools",shape="record"];
	"sympy.strategies.traverse" [label="<f0> SourceModule| <f1> sympy.strategies.traverse",shape="record"];
	"sympy.strategies.rl" [label="<f0> SourceModule| <f1> sympy.strategies.rl",shape="record"];
	"sympy.strategies.core" [label="<f0> SourceModule| <f1> sympy.strategies.core",shape="record"];
	"sympy.geometry.line" [label="<f0> SourceModule| <f1> sympy.geometry.line",shape="record"];
	"sympy.geometry.point" [label="<f0> SourceModule| <f1> sympy.geometry.point",shape="record"];
	"sympy.sets.handlers.union" [label="<f0> SourceModule| <f1> sympy.sets.handlers.union",shape="record"];
	"sympy.sets.handlers.intersection" [label="<f0> SourceModule| <f1> sympy.sets.handlers.intersection",shape="record"];
	"sympy.core.evalf" [label="<f0> SourceModule| <f1> sympy.core.evalf",shape="record"];
	"sympy.plotting.pygletplot.plot_modes" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_modes",shape="record"];
	"sympy.plotting.pygletplot.plot_surface" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_surface",shape="record"];
	"sympy.plotting.pygletplot.plot_mode_base" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_mode_base",shape="record"];
	"sympy.plotting.pygletplot.color_scheme" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.color_scheme",shape="record"];
	"sympy.plotting.pygletplot.plot_curve" [label="<f0> SourceModule| <f1> sympy.plotting.pygletplot.plot_curve",shape="record"];
	"sympy.plotting.textplot" [label="<f0> SourceModule| <f1> sympy.plotting.textplot",shape="record"];
	"sympy.plotting.plot_implicit" [label="<f0> SourceModule| <f1> sympy.plotting.plot_implicit",shape="record"];
	"sympy.plotting.plot" [label="<f0> SourceModule| <f1> sympy.plotting.plot",shape="record"];
	"sympy.plotting.plotgrid" [label="<f0> SourceModule| <f1> sympy.plotting.plotgrid",shape="record"];
	"sympy.plotting.backends.textbackend" [label="<f0> Package| <f1> sympy.plotting.backends.textbackend",shape="record"];
	"sympy.plotting.backends.textbackend.text" [label="<f0> SourceModule| <f1> sympy.plotting.backends.textbackend.text",shape="record"];
	"sympy.plotting.backends" [label="<f0> Package| <f1> sympy.plotting.backends",shape="record"];
	"sympy.plotting.backends.matplotlibbackend" [label="<f0> Package| <f1> sympy.plotting.backends.matplotlibbackend",shape="record"];
	"sympy.plotting.backends.matplotlibbackend.matplotlib" [label="<f0> SourceModule| <f1> sympy.plotting.backends.matplotlibbackend.matplotlib",shape="record"];
	"sympy.plotting.backends.base_backend" [label="<f0> SourceModule| <f1> sympy.plotting.backends.base_backend",shape="record"];
	"sympy.plotting.intervalmath.lib_interval" [label="<f0> SourceModule| <f1> sympy.plotting.intervalmath.lib_interval",shape="record"];
	"sympy.plotting.intervalmath" [label="<f0> Package| <f1> sympy.plotting.intervalmath",shape="record"];
	"sympy.plotting.intervalmath.interval_arithmetic" [label="<f0> SourceModule| <f1> sympy.plotting.intervalmath.interval_arithmetic",shape="record"];
	"sympy.plotting.intervalmath.interval_membership" [label="<f0> SourceModule| <f1> sympy.plotting.intervalmath.interval_membership",shape="record"];
	"sympy.utilities.lambdify" [label="<f0> SourceModule| <f1> sympy.utilities.lambdify",shape="record"];
	"sympy.printing.tensorflow" [label="<f0> SourceModule| <f1> sympy.printing.tensorflow",shape="record"];
	"sympy.printing.pycode" [label="<f0> SourceModule| <f1> sympy.printing.pycode",shape="record"];
	"sympy.plotting.utils" [label="<f0> SourceModule| <f1> sympy.plotting.utils",shape="record"];
	"sympy.concrete" [label="<f0> Package| <f1> sympy.concrete",shape="record"];
	"sympy.integrals.laplace" [label="<f0> SourceModule| <f1> sympy.integrals.laplace",shape="record"];
	"sympy.polys.matrices.linsolve" [label="<f0> SourceModule| <f1> sympy.polys.matrices.linsolve",shape="record"];
	"sympy.polys.solvers" [label="<f0> SourceModule| <f1> sympy.polys.solvers",shape="record"];
	"sympy.polys.domainmatrix" [label="<f0> SourceModule| <f1> sympy.polys.domainmatrix",shape="record"];
	"sympy.polys.partfrac" [label="<f0> SourceModule| <f1> sympy.polys.partfrac",shape="record"];
	"sympy.physics" [label="<f0> Package| <f1> sympy.physics",shape="record"];
	"sympy.physics.matrices" [label="<f0> SourceModule| <f1> sympy.physics.matrices",shape="record"];
	"sympy.matrices.expressions.fourier" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.fourier",shape="record"];
	"sympy.physics.units" [label="<f0> Package| <f1> sympy.physics.units",shape="record"];
	"sympy.physics.units.systems.si" [label="<f0> SourceModule| <f1> sympy.physics.units.systems.si",shape="record"];
	"sympy.physics.units.systems.mksa" [label="<f0> SourceModule| <f1> sympy.physics.units.systems.mksa",shape="record"];
	"sympy.physics.units.systems.mks" [label="<f0> SourceModule| <f1> sympy.physics.units.systems.mks",shape="record"];
	"sympy.physics.units.systems.length_weight_time" [label="<f0> SourceModule| <f1> sympy.physics.units.systems.length_weight_time",shape="record"];
	"sympy.physics.units.systems" [label="<f0> Package| <f1> sympy.physics.units.systems",shape="record"];
	"sympy.physics.units.systems.natural" [label="<f0> SourceModule| <f1> sympy.physics.units.systems.natural",shape="record"];
	"sympy.physics.units.definitions" [label="<f0> Package| <f1> sympy.physics.units.definitions",shape="record"];
	"sympy.physics.units.definitions.unit_definitions" [label="<f0> SourceModule| <f1> sympy.physics.units.definitions.unit_definitions",shape="record"];
	"sympy.physics.units.prefixes" [label="<f0> SourceModule| <f1> sympy.physics.units.prefixes",shape="record"];
	"sympy.physics.units.definitions.dimension_definitions" [label="<f0> SourceModule| <f1> sympy.physics.units.definitions.dimension_definitions",shape="record"];
	"sympy.physics.units.quantities" [label="<f0> SourceModule| <f1> sympy.physics.units.quantities",shape="record"];
	"sympy.physics.units.util" [label="<f0> SourceModule| <f1> sympy.physics.units.util",shape="record"];
	"sympy.physics.units.unitsystem" [label="<f0> SourceModule| <f1> sympy.physics.units.unitsystem",shape="record"];
	"sympy.physics.units.dimensions" [label="<f0> SourceModule| <f1> sympy.physics.units.dimensions",shape="record"];
	"sympy.physics.control.lti" [label="<f0> SourceModule| <f1> sympy.physics.control.lti",shape="record"];
	"sympy.functions.special.beta_functions" [label="<f0> SourceModule| <f1> sympy.functions.special.beta_functions",shape="record"];
	"sympy.functions.combinatorial.numbers" [label="<f0> SourceModule| <f1> sympy.functions.combinatorial.numbers",shape="record"];
	"sympy.functions.special.polynomials" [label="<f0> SourceModule| <f1> sympy.functions.special.polynomials",shape="record"];
	"sympy.functions.special.zeta_functions" [label="<f0> SourceModule| <f1> sympy.functions.special.zeta_functions",shape="record"];
	"sympy.utilities.memoization" [label="<f0> SourceModule| <f1> sympy.utilities.memoization",shape="record"];
	"sympy.utilities.enumerative" [label="<f0> SourceModule| <f1> sympy.utilities.enumerative",shape="record"];
	"sympy.polys.appellseqs" [label="<f0> SourceModule| <f1> sympy.polys.appellseqs",shape="record"];
	"sympy.ntheory.partitions_" [label="<f0> SourceModule| <f1> sympy.ntheory.partitions_",shape="record"];
	"sympy.ntheory.residue_ntheory" [label="<f0> SourceModule| <f1> sympy.ntheory.residue_ntheory",shape="record"];
	"sympy.ntheory.generate" [label="<f0> SourceModule| <f1> sympy.ntheory.generate",shape="record"];
	"sympy.functions.combinatorial" [label="<f0> Package| <f1> sympy.functions.combinatorial",shape="record"];
	"sympy.vector" [label="<f0> Package| <f1> sympy.vector",shape="record"];
	"sympy.vector.integrals" [label="<f0> SourceModule| <f1> sympy.vector.integrals",shape="record"];
	"sympy.vector.parametricregion" [label="<f0> SourceModule| <f1> sympy.vector.parametricregion",shape="record"];
	"sympy.vector.implicitregion" [label="<f0> SourceModule| <f1> sympy.vector.implicitregion",shape="record"];
	"sympy.vector.operators" [label="<f0> SourceModule| <f1> sympy.vector.operators",shape="record"];
	"sympy.vector.orienters" [label="<f0> SourceModule| <f1> sympy.vector.orienters",shape="record"];
	"sympy.vector.point" [label="<f0> SourceModule| <f1> sympy.vector.point",shape="record"];
	"sympy.vector.functions" [label="<f0> SourceModule| <f1> sympy.vector.functions",shape="record"];
	"sympy.vector.deloperator" [label="<f0> SourceModule| <f1> sympy.vector.deloperator",shape="record"];
	"sympy.vector.scalar" [label="<f0> SourceModule| <f1> sympy.vector.scalar",shape="record"];
	"sympy.vector.dyadic" [label="<f0> SourceModule| <f1> sympy.vector.dyadic",shape="record"];
	"sympy.vector.vector" [label="<f0> SourceModule| <f1> sympy.vector.vector",shape="record"];
	"sympy.vector.coordsysrect" [label="<f0> SourceModule| <f1> sympy.vector.coordsysrect",shape="record"];
	"sympy.concrete.products" [label="<f0> SourceModule| <f1> sympy.concrete.products",shape="record"];
	"sympy.concrete.delta" [label="<f0> SourceModule| <f1> sympy.concrete.delta",shape="record"];
	"sympy.concrete.expr_with_intlimits" [label="<f0> SourceModule| <f1> sympy.concrete.expr_with_intlimits",shape="record"];
	"sympy.vector.basisdependent" [label="<f0> SourceModule| <f1> sympy.vector.basisdependent",shape="record"];
	"sympy.tensor.array" [label="<f0> Package| <f1> sympy.tensor.array",shape="record"];
	"sympy.tensor.array.array_comprehension" [label="<f0> SourceModule| <f1> sympy.tensor.array.array_comprehension",shape="record"];
	"sympy.printing.conventions" [label="<f0> SourceModule| <f1> sympy.printing.conventions",shape="record"];
	"sympy.printing.printer" [label="<f0> SourceModule| <f1> sympy.printing.printer",shape="record"];
	"sympy.printing.precedence" [label="<f0> SourceModule| <f1> sympy.printing.precedence",shape="record"];
	"sympy.core.alphabets" [label="<f0> SourceModule| <f1> sympy.core.alphabets",shape="record"];
	"sympy.printing.str" [label="<f0> SourceModule| <f1> sympy.printing.str",shape="record"];
	"sympy.printing" [label="<f0> Package| <f1> sympy.printing",shape="record"];
	"sympy.printing.maple" [label="<f0> SourceModule| <f1> sympy.printing.maple",shape="record"];
	"sympy.printing.dot" [label="<f0> SourceModule| <f1> sympy.printing.dot",shape="record"];
	"sympy.printing.tableform" [label="<f0> SourceModule| <f1> sympy.printing.tableform",shape="record"];
	"sympy.printing.tree" [label="<f0> SourceModule| <f1> sympy.printing.tree",shape="record"];
	"sympy.printing.gtk" [label="<f0> SourceModule| <f1> sympy.printing.gtk",shape="record"];
	"sympy.utilities.mathml" [label="<f0> Package| <f1> sympy.utilities.mathml",shape="record"];
	"lxml" [label="<f0> MissingModule| <f1> lxml",shape="record"];
	"sympy.printing.rust" [label="<f0> SourceModule| <f1> sympy.printing.rust",shape="record"];
	"sympy.printing.octave" [label="<f0> SourceModule| <f1> sympy.printing.octave",shape="record"];
	"sympy.printing.mathematica" [label="<f0> SourceModule| <f1> sympy.printing.mathematica",shape="record"];
	"sympy.printing.julia" [label="<f0> SourceModule| <f1> sympy.printing.julia",shape="record"];
	"sympy.printing.jscode" [label="<f0> SourceModule| <f1> sympy.printing.jscode",shape="record"];
	"sympy.printing.rcode" [label="<f0> SourceModule| <f1> sympy.printing.rcode",shape="record"];
	"sympy.printing.glsl" [label="<f0> SourceModule| <f1> sympy.printing.glsl",shape="record"];
	"sympy.printing.smtlib" [label="<f0> SourceModule| <f1> sympy.printing.smtlib",shape="record"];
	"sympy.assumptions.relation.equality" [label="<f0> SourceModule| <f1> sympy.assumptions.relation.equality",shape="record"];
	"sympy.assumptions.relation" [label="<f0> Package| <f1> sympy.assumptions.relation",shape="record"];
	"sympy.assumptions.relation.binrel" [label="<f0> SourceModule| <f1> sympy.assumptions.relation.binrel",shape="record"];
	"sympy.assumptions.assume" [label="<f0> SourceModule| <f1> sympy.assumptions.assume",shape="record"];
	"sympy.utilities.source" [label="<f0> SourceModule| <f1> sympy.utilities.source",shape="record"];
	"sympy.printing.python" [label="<f0> SourceModule| <f1> sympy.printing.python",shape="record"];
	"sympy.printing.mathml" [label="<f0> SourceModule| <f1> sympy.printing.mathml",shape="record"];
	"sympy.printing.pretty.pretty_symbology" [label="<f0> SourceModule| <f1> sympy.printing.pretty.pretty_symbology",shape="record"];
	"sympy.printing.pretty.pretty" [label="<f0> SourceModule| <f1> sympy.printing.pretty.pretty",shape="record"];
	"sympy.printing.pretty" [label="<f0> Package| <f1> sympy.printing.pretty",shape="record"];
	"sympy.combinatorics.coset_table" [label="<f0> SourceModule| <f1> sympy.combinatorics.coset_table",shape="record"];
	"sympy.combinatorics.free_groups" [label="<f0> SourceModule| <f1> sympy.combinatorics.free_groups",shape="record"];
	"sympy.combinatorics.fp_groups" [label="<f0> SourceModule| <f1> sympy.combinatorics.fp_groups",shape="record"];
	"sympy.matrices.normalforms" [label="<f0> SourceModule| <f1> sympy.matrices.normalforms",shape="record"];
	"sympy.combinatorics.rewritingsystem" [label="<f0> SourceModule| <f1> sympy.combinatorics.rewritingsystem",shape="record"];
	"sympy.combinatorics.rewritingsystem_fsm" [label="<f0> SourceModule| <f1> sympy.combinatorics.rewritingsystem_fsm",shape="record"];
	"sympy.combinatorics.homomorphisms" [label="<f0> SourceModule| <f1> sympy.combinatorics.homomorphisms",shape="record"];
	"sympy.ntheory.primetest" [label="<f0> SourceModule| <f1> sympy.ntheory.primetest",shape="record"];
	"sympy.ntheory.factor_" [label="<f0> SourceModule| <f1> sympy.ntheory.factor_",shape="record"];
	"sympy.ntheory.ecm" [label="<f0> SourceModule| <f1> sympy.ntheory.ecm",shape="record"];
	"sympy.ntheory.digits" [label="<f0> SourceModule| <f1> sympy.ntheory.digits",shape="record"];
	"sympy.ntheory" [label="<f0> Package| <f1> sympy.ntheory",shape="record"];
	"sympy.ntheory.qs" [label="<f0> SourceModule| <f1> sympy.ntheory.qs",shape="record"];
	"sympy.ntheory.egyptian_fraction" [label="<f0> SourceModule| <f1> sympy.ntheory.egyptian_fraction",shape="record"];
	"sympy.ntheory.continued_fraction" [label="<f0> SourceModule| <f1> sympy.ntheory.continued_fraction",shape="record"];
	"sympy.combinatorics.util" [label="<f0> SourceModule| <f1> sympy.combinatorics.util",shape="record"];
	"sympy.printing.repr" [label="<f0> SourceModule| <f1> sympy.printing.repr",shape="record"];
	"sympy.combinatorics" [label="<f0> Package| <f1> sympy.combinatorics",shape="record"];
	"sympy.combinatorics.graycode" [label="<f0> SourceModule| <f1> sympy.combinatorics.graycode",shape="record"];
	"sympy.combinatorics.polyhedron" [label="<f0> SourceModule| <f1> sympy.combinatorics.polyhedron",shape="record"];
	"sympy.combinatorics.partitions" [label="<f0> SourceModule| <f1> sympy.combinatorics.partitions",shape="record"];
	"sympy.combinatorics.subsets" [label="<f0> SourceModule| <f1> sympy.combinatorics.subsets",shape="record"];
	"sympy.combinatorics.prufer" [label="<f0> SourceModule| <f1> sympy.combinatorics.prufer",shape="record"];
	"sympy.polys.polytools" [label="<f0> SourceModule| <f1> sympy.polys.polytools",shape="record"];
	"sympy.polys.dispersion" [label="<f0> SourceModule| <f1> sympy.polys.dispersion",shape="record"];
	"sympy.polys.groebnertools" [label="<f0> SourceModule| <f1> sympy.polys.groebnertools",shape="record"];
	"sympy.polys.fglmtools" [label="<f0> SourceModule| <f1> sympy.polys.fglmtools",shape="record"];
	"sympy.matrices.expressions.kronecker" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.kronecker",shape="record"];
	"sympy.matrices.expressions.dotproduct" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.dotproduct",shape="record"];
	"sympy.matrices.expressions.diagonal" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.diagonal",shape="record"];
	"sympy.matrices.expressions.hadamard" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.hadamard",shape="record"];
	"sympy.matrices.expressions._shape" [label="<f0> SourceModule| <f1> sympy.matrices.expressions._shape",shape="record"];
	"sympy.matrices.expressions.adjoint" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.adjoint",shape="record"];
	"sympy.matrices.expressions.transpose" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.transpose",shape="record"];
	"sympy.assumptions.refine" [label="<f0> SourceModule| <f1> sympy.assumptions.refine",shape="record"];
	"sympy.matrices.expressions.determinant" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.determinant",shape="record"];
	"sympy.matrices.expressions.trace" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.trace",shape="record"];
	"sympy.matrices.expressions.matpow" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.matpow",shape="record"];
	"sympy.matrices.expressions.matmul" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.matmul",shape="record"];
	"sympy.matrices.expressions.matexpr" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.matexpr",shape="record"];
	"sympy.matrices.expressions.matadd" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.matadd",shape="record"];
	"sympy.matrices.expressions.inverse" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.inverse",shape="record"];
	"sympy.matrices.expressions.funcmatrix" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.funcmatrix",shape="record"];
	"sympy.matrices.expressions.companion" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.companion",shape="record"];
	"sympy.matrices.expressions.blockmatrix" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.blockmatrix",shape="record"];
	"sympy.matrices.expressions.slice" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.slice",shape="record"];
	"mpmath.matrices.matrices" [label="<f0> SourceModule| <f1> mpmath.matrices.matrices",shape="record"];
	"sympy.matrices.solvers" [label="<f0> SourceModule| <f1> sympy.matrices.solvers",shape="record"];
	"sympy.matrices.determinant" [label="<f0> SourceModule| <f1> sympy.matrices.determinant",shape="record"];
	"sympy.matrices.eigen" [label="<f0> SourceModule| <f1> sympy.matrices.eigen",shape="record"];
	"sympy.polys.matrices.eigen" [label="<f0> SourceModule| <f1> sympy.polys.matrices.eigen",shape="record"];
	"sympy.polys.agca.extensions" [label="<f0> SourceModule| <f1> sympy.polys.agca.extensions",shape="record"];
	"sympy.matrices.repmatrix" [label="<f0> SourceModule| <f1> sympy.matrices.repmatrix",shape="record"];
	"sympy.matrices.matrixbase" [label="<f0> SourceModule| <f1> sympy.matrices.matrixbase",shape="record"];
	"sympy.matrices.sparsetools" [label="<f0> SourceModule| <f1> sympy.matrices.sparsetools",shape="record"];
	"sympy.discrete.recurrences" [label="<f0> SourceModule| <f1> sympy.discrete.recurrences",shape="record"];
	"sympy.discrete" [label="<f0> Package| <f1> sympy.discrete",shape="record"];
	"sympy.discrete.convolutions" [label="<f0> SourceModule| <f1> sympy.discrete.convolutions",shape="record"];
	"sympy.discrete.transforms" [label="<f0> SourceModule| <f1> sympy.discrete.transforms",shape="record"];
	"sympy.matrices.graph" [label="<f0> SourceModule| <f1> sympy.matrices.graph",shape="record"];
	"sympy.matrices.subspaces" [label="<f0> SourceModule| <f1> sympy.matrices.subspaces",shape="record"];
	"sympy.matrices.inverse" [label="<f0> SourceModule| <f1> sympy.matrices.inverse",shape="record"];
	"sympy.matrices.reductions" [label="<f0> SourceModule| <f1> sympy.matrices.reductions",shape="record"];
	"sympy.matrices.decompositions" [label="<f0> SourceModule| <f1> sympy.matrices.decompositions",shape="record"];
	"sympy.matrices.exceptions" [label="<f0> SourceModule| <f1> sympy.matrices.exceptions",shape="record"];
	"sympy.utilities.decorator" [label="<f0> SourceModule| <f1> sympy.utilities.decorator",shape="record"];
	"sympy.testing.runtests" [label="<f0> SourceModule| <f1> sympy.testing.runtests",shape="record"];
	"sympy.testing" [label="<f0> Package| <f1> sympy.testing",shape="record"];
	"sympy.testing.runtests_pytest" [label="<f0> SourceModule| <f1> sympy.testing.runtests_pytest",shape="record"];
	"all" [label="<f0> MissingModule| <f1> all",shape="record"];
	"sympy.interactive.printing" [label="<f0> SourceModule| <f1> sympy.interactive.printing",shape="record"];
	"sympy.interactive" [label="<f0> Package| <f1> sympy.interactive",shape="record"];
	"sympy.interactive.traversal" [label="<f0> SourceModule| <f1> sympy.interactive.traversal",shape="record"];
	"sympy.interactive.session" [label="<f0> SourceModule| <f1> sympy.interactive.session",shape="record"];
	"'IPython.Shell'" [label="<f0> MissingModule| <f1> 'IPython.Shell'",shape="record"];
	"'IPython.frontend'" [label="<f0> MissingModule| <f1> 'IPython.frontend'",shape="record"];
	"'IPython.terminal'" [label="<f0> MissingModule| <f1> 'IPython.terminal'",shape="record"];
	"'IPython.iplib'" [label="<f0> MissingModule| <f1> 'IPython.iplib'",shape="record"];
	"'IPython.core'" [label="<f0> MissingModule| <f1> 'IPython.core'",shape="record"];
	"IPython" [label="<f0> MissingModule| <f1> IPython",shape="record"];
	"sympy.solvers.decompogen" [label="<f0> SourceModule| <f1> sympy.solvers.decompogen",shape="record"];
	"sympy.solvers.inequalities" [label="<f0> SourceModule| <f1> sympy.solvers.inequalities",shape="record"];
	"sympy.solvers.deutils" [label="<f0> SourceModule| <f1> sympy.solvers.deutils",shape="record"];
	"sympy.solvers.pde" [label="<f0> SourceModule| <f1> sympy.solvers.pde",shape="record"];
	"sympy.solvers.polysys" [label="<f0> SourceModule| <f1> sympy.solvers.polysys",shape="record"];
	"sympy.solvers.ode" [label="<f0> Package| <f1> sympy.solvers.ode",shape="record"];
	"sympy.solvers.ode.systems" [label="<f0> SourceModule| <f1> sympy.solvers.ode.systems",shape="record"];
	"sympy.solvers.ode.subscheck" [label="<f0> SourceModule| <f1> sympy.solvers.ode.subscheck",shape="record"];
	"sympy.solvers.ode.lie_group" [label="<f0> SourceModule| <f1> sympy.solvers.ode.lie_group",shape="record"];
	"sympy.solvers.ode.ode" [label="<f0> SourceModule| <f1> sympy.solvers.ode.ode",shape="record"];
	"sympy.solvers.ode.single" [label="<f0> SourceModule| <f1> sympy.solvers.ode.single",shape="record"];
	"sympy.solvers.ode.nonhomogeneous" [label="<f0> SourceModule| <f1> sympy.solvers.ode.nonhomogeneous",shape="record"];
	"sympy.solvers.ode.hypergeometric" [label="<f0> SourceModule| <f1> sympy.solvers.ode.hypergeometric",shape="record"];
	"sympy.solvers.ode.riccati" [label="<f0> SourceModule| <f1> sympy.solvers.ode.riccati",shape="record"];
	"sympy.series.series" [label="<f0> SourceModule| <f1> sympy.series.series",shape="record"];
	"sympy.core.multidimensional" [label="<f0> SourceModule| <f1> sympy.core.multidimensional",shape="record"];
	"sympy.solvers.recurr" [label="<f0> SourceModule| <f1> sympy.solvers.recurr",shape="record"];
	"sympy.solvers.diophantine.diophantine" [label="<f0> SourceModule| <f1> sympy.solvers.diophantine.diophantine",shape="record"];
	"sympy.solvers.diophantine" [label="<f0> Package| <f1> sympy.solvers.diophantine",shape="record"];
	"sympy.series" [label="<f0> Package| <f1> sympy.series",shape="record"];
	"sympy.series.limitseq" [label="<f0> SourceModule| <f1> sympy.series.limitseq",shape="record"];
	"sympy.calculus.accumulationbounds" [label="<f0> SourceModule| <f1> sympy.calculus.accumulationbounds",shape="record"];
	"sympy.calculus" [label="<f0> Package| <f1> sympy.calculus",shape="record"];
	"sympy.calculus.finite_diff" [label="<f0> SourceModule| <f1> sympy.calculus.finite_diff",shape="record"];
	"sympy.calculus.euler" [label="<f0> SourceModule| <f1> sympy.calculus.euler",shape="record"];
	"sympy.series.fourier" [label="<f0> SourceModule| <f1> sympy.series.fourier",shape="record"];
	"sympy.series.series_class" [label="<f0> SourceModule| <f1> sympy.series.series_class",shape="record"];
	"sympy.series.sequences" [label="<f0> SourceModule| <f1> sympy.series.sequences",shape="record"];
	"sympy.series.residues" [label="<f0> SourceModule| <f1> sympy.series.residues",shape="record"];
	"sympy.series.approximants" [label="<f0> SourceModule| <f1> sympy.series.approximants",shape="record"];
	"sympy.series.gruntz" [label="<f0> SourceModule| <f1> sympy.series.gruntz",shape="record"];
	"sympy.core.mod" [label="<f0> SourceModule| <f1> sympy.core.mod",shape="record"];
	"sympy.integrals.transforms" [label="<f0> SourceModule| <f1> sympy.integrals.transforms",shape="record"];
	"sympy.simplify.gammasimp" [label="<f0> SourceModule| <f1> sympy.simplify.gammasimp",shape="record"];
	"sympy.simplify.powsimp" [label="<f0> SourceModule| <f1> sympy.simplify.powsimp",shape="record"];
	"sympy.core.rules" [label="<f0> SourceModule| <f1> sympy.core.rules",shape="record"];
	"sympy.simplify" [label="<f0> Package| <f1> sympy.simplify",shape="record"];
	"sympy.simplify.combsimp" [label="<f0> SourceModule| <f1> sympy.simplify.combsimp",shape="record"];
	"sympy.simplify.epathtools" [label="<f0> SourceModule| <f1> sympy.simplify.epathtools",shape="record"];
	"sympy.utilities.timeutils" [label="<f0> SourceModule| <f1> sympy.utilities.timeutils",shape="record"];
	"sympy.functions.special.hyper" [label="<f0> SourceModule| <f1> sympy.functions.special.hyper",shape="record"];
	"sympy.functions.special.gamma_functions" [label="<f0> SourceModule| <f1> sympy.functions.special.gamma_functions",shape="record"];
	"sympy.functions.special.error_functions" [label="<f0> SourceModule| <f1> sympy.functions.special.error_functions",shape="record"];
	"sympy.functions.special.elliptic_integrals" [label="<f0> SourceModule| <f1> sympy.functions.special.elliptic_integrals",shape="record"];
	"sympy.functions.special.bessel" [label="<f0> SourceModule| <f1> sympy.functions.special.bessel",shape="record"];
	"'scipy.special'" [label="<f0> MissingModule| <f1> 'scipy.special'",shape="record"];
	"scipy" [label="<f0> MissingModule| <f1> scipy",shape="record"];
	"sympy.functions.elementary.hyperbolic" [label="<f0> SourceModule| <f1> sympy.functions.elementary.hyperbolic",shape="record"];
	"sympy.functions.combinatorial.factorials" [label="<f0> SourceModule| <f1> sympy.functions.combinatorial.factorials",shape="record"];
	"sympy.core.intfunc" [label="<f0> SourceModule| <f1> sympy.core.intfunc",shape="record"];
	"sympy.integrals.deltafunctions" [label="<f0> SourceModule| <f1> sympy.integrals.deltafunctions",shape="record"];
	"sympy.geometry" [label="<f0> Package| <f1> sympy.geometry",shape="record"];
	"sympy.geometry.parabola" [label="<f0> SourceModule| <f1> sympy.geometry.parabola",shape="record"];
	"sympy.geometry.curve" [label="<f0> SourceModule| <f1> sympy.geometry.curve",shape="record"];
	"sympy.calculus.singularities" [label="<f0> SourceModule| <f1> sympy.calculus.singularities",shape="record"];
	"sympy.integrals.heurisch" [label="<f0> SourceModule| <f1> sympy.integrals.heurisch",shape="record"];
	"sympy.integrals.singularityfunctions" [label="<f0> SourceModule| <f1> sympy.integrals.singularityfunctions",shape="record"];
	"sympy.simplify.fu" [label="<f0> SourceModule| <f1> sympy.simplify.fu",shape="record"];
	"sympy.integrals.manualintegrate" [label="<f0> SourceModule| <f1> sympy.integrals.manualintegrate",shape="record"];
	"sympy.integrals.risch" [label="<f0> SourceModule| <f1> sympy.integrals.risch",shape="record"];
	"sympy.integrals.rde" [label="<f0> SourceModule| <f1> sympy.integrals.rde",shape="record"];
	"sympy.integrals.prde" [label="<f0> SourceModule| <f1> sympy.integrals.prde",shape="record"];
	"sympy.polys.polymatrix" [label="<f0> SourceModule| <f1> sympy.polys.polymatrix",shape="record"];
	"sympy.concrete.summations" [label="<f0> SourceModule| <f1> sympy.concrete.summations",shape="record"];
	"sympy.concrete.gosper" [label="<f0> SourceModule| <f1> sympy.concrete.gosper",shape="record"];
	"sympy.solvers.solvers" [label="<f0> SourceModule| <f1> sympy.solvers.solvers",shape="record"];
	"sympy.solvers.bivariate" [label="<f0> SourceModule| <f1> sympy.solvers.bivariate",shape="record"];
	"sympy.utilities.exceptions" [label="<f0> SourceModule| <f1> sympy.utilities.exceptions",shape="record"];
	"sympy.tensor.functions" [label="<f0> SourceModule| <f1> sympy.tensor.functions",shape="record"];
	"sympy.series.order" [label="<f0> SourceModule| <f1> sympy.series.order",shape="record"];
	"sympy.series.limits" [label="<f0> SourceModule| <f1> sympy.series.limits",shape="record"];
	"sympy.series.formal" [label="<f0> SourceModule| <f1> sympy.series.formal",shape="record"];
	"sympy.polys" [label="<f0> Package| <f1> sympy.polys",shape="record"];
	"sympy.matrices" [label="<f0> Package| <f1> sympy.matrices",shape="record"];
	"sympy.integrals.rationaltools" [label="<f0> SourceModule| <f1> sympy.integrals.rationaltools",shape="record"];
	"sympy.functions.special.singularity_functions" [label="<f0> SourceModule| <f1> sympy.functions.special.singularity_functions",shape="record"];
	"sympy.functions" [label="<f0> Package| <f1> sympy.functions",shape="record"];
	"sympy.functions.special.mathieu_functions" [label="<f0> SourceModule| <f1> sympy.functions.special.mathieu_functions",shape="record"];
	"sympy.functions.special.spherical_harmonics" [label="<f0> SourceModule| <f1> sympy.functions.special.spherical_harmonics",shape="record"];
	"sympy.functions.special.bsplines" [label="<f0> SourceModule| <f1> sympy.functions.special.bsplines",shape="record"];
	"sympy.core.mul" [label="<f0> SourceModule| <f1> sympy.core.mul",shape="record"];
	"sympy.concrete.expr_with_limits" [label="<f0> SourceModule| <f1> sympy.concrete.expr_with_limits",shape="record"];
	"sympy.integrals" [label="<f0> Package| <f1> sympy.integrals",shape="record"];
	"sympy.functions.elementary.integers" [label="<f0> SourceModule| <f1> sympy.functions.elementary.integers",shape="record"];
	"sympy.printing.pretty.stringpict" [label="<f0> SourceModule| <f1> sympy.printing.pretty.stringpict",shape="record"];
	"sympy.functions.elementary.trigonometric" [label="<f0> SourceModule| <f1> sympy.functions.elementary.trigonometric",shape="record"];
	"sympy.functions.elementary._trigonometric_special" [label="<f0> SourceModule| <f1> sympy.functions.elementary._trigonometric_special",shape="record"];
	"sympy.functions.elementary.exponential" [label="<f0> SourceModule| <f1> sympy.functions.elementary.exponential",shape="record"];
	"sympy.functions.special.delta_functions" [label="<f0> SourceModule| <f1> sympy.functions.special.delta_functions",shape="record"];
	"sympy.functions.elementary" [label="<f0> Package| <f1> sympy.functions.elementary",shape="record"];
	"sympy.core.power" [label="<f0> SourceModule| <f1> sympy.core.power",shape="record"];
	"sympy.core.logic" [label="<f0> SourceModule| <f1> sympy.core.logic",shape="record"];
	"sympy.core.exprtools" [label="<f0> SourceModule| <f1> sympy.core.exprtools",shape="record"];
	"sympy.core.coreerrors" [label="<f0> SourceModule| <f1> sympy.core.coreerrors",shape="record"];
	"sympy.core.expr" [label="<f0> SourceModule| <f1> sympy.core.expr",shape="record"];
	"sympy.core" [label="<f0> Package| <f1> sympy.core",shape="record"];
	"sympy.functions.elementary.miscellaneous" [label="<f0> SourceModule| <f1> sympy.functions.elementary.miscellaneous",shape="record"];
	"sympy.sets.sets" [label="<f0> SourceModule| <f1> sympy.sets.sets",shape="record"];
	"sympy.sets.handlers.functions" [label="<f0> SourceModule| <f1> sympy.sets.handlers.functions",shape="record"];
	"sympy.sets.handlers.power" [label="<f0> SourceModule| <f1> sympy.sets.handlers.power",shape="record"];
	"sympy.sets.handlers.mul" [label="<f0> SourceModule| <f1> sympy.sets.handlers.mul",shape="record"];
	"sympy.sets.handlers.add" [label="<f0> SourceModule| <f1> sympy.sets.handlers.add",shape="record"];
	"sympy.sets.handlers.issubset" [label="<f0> SourceModule| <f1> sympy.sets.handlers.issubset",shape="record"];
	"sympy.solvers.solveset" [label="<f0> SourceModule| <f1> sympy.solvers.solveset",shape="record"];
	"sympy.functions.elementary.piecewise" [label="<f0> SourceModule| <f1> sympy.functions.elementary.piecewise",shape="record"];
	"sympy.simplify.simplify" [label="<f0> SourceModule| <f1> sympy.simplify.simplify",shape="record"];
	"sympy.assumptions.ask" [label="<f0> SourceModule| <f1> sympy.assumptions.ask",shape="record"];
	"sympy.assumptions.ask_generated" [label="<f0> SourceModule| <f1> sympy.assumptions.ask_generated",shape="record"];
	"sympy.logic.algorithms.lra_theory" [label="<f0> SourceModule| <f1> sympy.logic.algorithms.lra_theory",shape="record"];
	"sympy.logic.algorithms" [label="<f0> Package| <f1> sympy.logic.algorithms",shape="record"];
	"sympy.assumptions.lra_satask" [label="<f0> SourceModule| <f1> sympy.assumptions.lra_satask",shape="record"];
	"sympy.assumptions.satask" [label="<f0> SourceModule| <f1> sympy.assumptions.satask",shape="record"];
	"sympy.assumptions.sathandlers" [label="<f0> SourceModule| <f1> sympy.assumptions.sathandlers",shape="record"];
	"sympy.assumptions.predicates.matrices" [label="<f0> SourceModule| <f1> sympy.assumptions.predicates.matrices",shape="record"];
	"sympy.assumptions.predicates" [label="<f0> Package| <f1> sympy.assumptions.predicates",shape="record"];
	"sympy.assumptions.handlers.matrices" [label="<f0> SourceModule| <f1> sympy.assumptions.handlers.matrices",shape="record"];
	"sympy.matrices.expressions.factorizations" [label="<f0> SourceModule| <f1> sympy.matrices.expressions.factorizations",shape="record"];
	"sympy.assumptions.handlers" [label="<f0> Package| <f1> sympy.assumptions.handlers",shape="record"];
	"sympy.assumptions.handlers.common" [label="<f0> SourceModule| <f1> sympy.assumptions.handlers.common",shape="record"];
	"sympy.assumptions.predicates.common" [label="<f0> SourceModule| <f1> sympy.assumptions.predicates.common",shape="record"];
	"sympy.assumptions.handlers.ntheory" [label="<f0> SourceModule| <f1> sympy.assumptions.handlers.ntheory",shape="record"];
	"sympy.assumptions.predicates.ntheory" [label="<f0> SourceModule| <f1> sympy.assumptions.predicates.ntheory",shape="record"];
	"sympy.assumptions.handlers.order" [label="<f0> SourceModule| <f1> sympy.assumptions.handlers.order",shape="record"];
	"sympy.assumptions.predicates.order" [label="<f0> SourceModule| <f1> sympy.assumptions.predicates.order",shape="record"];
	"sympy.assumptions.handlers.calculus" [label="<f0> SourceModule| <f1> sympy.assumptions.handlers.calculus",shape="record"];
	"sympy.assumptions.predicates.calculus" [label="<f0> SourceModule| <f1> sympy.assumptions.predicates.calculus",shape="record"];
	"sympy.assumptions.predicates.sets" [label="<f0> SourceModule| <f1> sympy.assumptions.predicates.sets",shape="record"];
	"sympy.assumptions.handlers.sets" [label="<f0> SourceModule| <f1> sympy.assumptions.handlers.sets",shape="record"];
	"sympy.assumptions.cnf" [label="<f0> SourceModule| <f1> sympy.assumptions.cnf",shape="record"];
	"sympy.assumptions.facts" [label="<f0> SourceModule| <f1> sympy.assumptions.facts",shape="record"];
	"sympy.assumptions" [label="<f0> Package| <f1> sympy.assumptions",shape="record"];
	"sympy.calculus.util" [label="<f0> SourceModule| <f1> sympy.calculus.util",shape="record"];
	"sympy.core.relational" [label="<f0> SourceModule| <f1> sympy.core.relational",shape="record"];
	"sympy.assumptions.wrapper" [label="<f0> SourceModule| <f1> sympy.assumptions.wrapper",shape="record"];
	"sympy.logic.inference" [label="<f0> SourceModule| <f1> sympy.logic.inference",shape="record"];
	"sympy.logic.algorithms.z3_wrapper" [label="<f0> SourceModule| <f1> sympy.logic.algorithms.z3_wrapper",shape="record"];
	"sympy.logic.algorithms.minisat22_wrapper" [label="<f0> SourceModule| <f1> sympy.logic.algorithms.minisat22_wrapper",shape="record"];
	"pysat" [label="<f0> MissingModule| <f1> pysat",shape="record"];
	"sympy.logic.algorithms.pycosat_wrapper" [label="<f0> SourceModule| <f1> sympy.logic.algorithms.pycosat_wrapper",shape="record"];
	"pycosat" [label="<f0> MissingModule| <f1> pycosat",shape="record"];
	"sympy.logic.algorithms.dpll2" [label="<f0> SourceModule| <f1> sympy.logic.algorithms.dpll2",shape="record"];
	"sympy.logic.algorithms.dpll" [label="<f0> SourceModule| <f1> sympy.logic.algorithms.dpll",shape="record"];
	"sympy.logic" [label="<f0> Package| <f1> sympy.logic",shape="record"];
	"sympy.core.symbol" [label="<f0> SourceModule| <f1> sympy.core.symbol",shape="record"];
	"sympy.utilities.misc" [label="<f0> SourceModule| <f1> sympy.utilities.misc",shape="record"];
	"sympy.utilities.iterables" [label="<f0> SourceModule| <f1> sympy.utilities.iterables",shape="record"];
	"sympy.core.sympify" [label="<f0> SourceModule| <f1> sympy.core.sympify",shape="record"];
	"sympy.core.sorting" [label="<f0> SourceModule| <f1> sympy.core.sorting",shape="record"];
	"sympy.core.singleton" [label="<f0> SourceModule| <f1> sympy.core.singleton",shape="record"];
	"sympy.core.core" [label="<f0> SourceModule| <f1> sympy.core.core",shape="record"];
	"sympy.core.operations" [label="<f0> SourceModule| <f1> sympy.core.operations",shape="record"];
	"sympy.core.numbers" [label="<f0> SourceModule| <f1> sympy.core.numbers",shape="record"];
	"sympy.core.kind" [label="<f0> SourceModule| <f1> sympy.core.kind",shape="record"];
	"sympy.core.function" [label="<f0> SourceModule| <f1> sympy.core.function",shape="record"];
	"'sage.all'" [label="<f0> MissingModule| <f1> 'sage.all'",shape="record"];
	"sympy.core.decorators" [label="<f0> SourceModule| <f1> sympy.core.decorators",shape="record"];
	"sympy.core.containers" [label="<f0> SourceModule| <f1> sympy.core.containers",shape="record"];
	"sympy.core.cache" [label="<f0> SourceModule| <f1> sympy.core.cache",shape="record"];
	"sympy.core.basic" [label="<f0> SourceModule| <f1> sympy.core.basic",shape="record"];
	"'sage.interfaces'" [label="<f0> MissingModule| <f1> 'sage.interfaces'",shape="record"];
	"sympy.tensor.tensor" [label="<f0> SourceModule| <f1> sympy.tensor.tensor",shape="record"];
	"sympy.combinatorics.tensor_can" [label="<f0> SourceModule| <f1> sympy.combinatorics.tensor_can",shape="record"];
	"sympy.combinatorics.testutil" [label="<f0> SourceModule| <f1> sympy.combinatorics.testutil",shape="record"];
	"sympy.core.add" [label="<f0> SourceModule| <f1> sympy.core.add",shape="record"];
	"torch.utils._sympy.reference" [label="<f0> SourceModule| <f1> torch.utils._sympy.reference",shape="record"];
	"torch.utils._sympy.numbers" [label="<f0> SourceModule| <f1> torch.utils._sympy.numbers",shape="record"];
	"torch._export.passes._node_metadata_hook" [label="<f0> SourceModule| <f1> torch._export.passes._node_metadata_hook",shape="record"];
	"torch.fx.experimental.sym_node" [label="<f0> SourceModule| <f1> torch.fx.experimental.sym_node",shape="record"];
	"torch.fx._utils" [label="<f0> SourceModule| <f1> torch.fx._utils",shape="record"];
	"torch.fx.passes.reinplace" [label="<f0> SourceModule| <f1> torch.fx.passes.reinplace",shape="record"];
	"torch.fx.passes.param_fetch" [label="<f0> SourceModule| <f1> torch.fx.passes.param_fetch",shape="record"];
	"torch.fx.passes.operator_support" [label="<f0> SourceModule| <f1> torch.fx.passes.operator_support",shape="record"];
	"torch.fx.passes.net_min_base" [label="<f0> SourceModule| <f1> torch.fx.passes.net_min_base",shape="record"];
	"torch.fx.passes.graph_manipulation" [label="<f0> SourceModule| <f1> torch.fx.passes.graph_manipulation",shape="record"];
	"torch.fx.passes.graph_drawer" [label="<f0> SourceModule| <f1> torch.fx.passes.graph_drawer",shape="record"];
	"pydot" [label="<f0> MissingModule| <f1> pydot",shape="record"];
	"torch._subclasses.meta_utils" [label="<f0> SourceModule| <f1> torch._subclasses.meta_utils",shape="record"];
	"torch.utils._mode_utils" [label="<f0> SourceModule| <f1> torch.utils._mode_utils",shape="record"];
	"torch._export.pass_infra.proxy_value" [label="<f0> SourceModule| <f1> torch._export.pass_infra.proxy_value",shape="record"];
	"torch._export.pass_infra" [label="<f0> Package| <f1> torch._export.pass_infra",shape="record"];
	"torch._export.pass_infra.node_metadata" [label="<f0> SourceModule| <f1> torch._export.pass_infra.node_metadata",shape="record"];
	"functorch.experimental.control_flow" [label="<f0> SourceModule| <f1> functorch.experimental.control_flow",shape="record"];
	"functorch.experimental" [label="<f0> Package| <f1> functorch.experimental",shape="record"];
	"torch._functorch.eager_transforms" [label="<f0> SourceModule| <f1> torch._functorch.eager_transforms",shape="record"];
	"torch._functorch.vmap" [label="<f0> SourceModule| <f1> torch._functorch.vmap",shape="record"];
	"torch._functorch.batch_norm_replacement" [label="<f0> SourceModule| <f1> torch._functorch.batch_norm_replacement",shape="record"];
	"torch._functorch.apis" [label="<f0> SourceModule| <f1> torch._functorch.apis",shape="record"];
	"functorch" [label="<f0> Package| <f1> functorch",shape="record"];
	"torch._functorch.python_key" [label="<f0> SourceModule| <f1> torch._functorch.python_key",shape="record"];
	"torch._functorch.make_functional" [label="<f0> SourceModule| <f1> torch._functorch.make_functional",shape="record"];
	"torch.nn.utils._named_member_accessor" [label="<f0> SourceModule| <f1> torch.nn.utils._named_member_accessor",shape="record"];
	"torch._functorch.deprecated" [label="<f0> SourceModule| <f1> torch._functorch.deprecated",shape="record"];
	"torch._higher_order_ops.map" [label="<f0> SourceModule| <f1> torch._higher_order_ops.map",shape="record"];
	"torch._higher_order_ops.cond" [label="<f0> SourceModule| <f1> torch._higher_order_ops.cond",shape="record"];
	"torch._export.error" [label="<f0> SourceModule| <f1> torch._export.error",shape="record"];
	"torch.fx.passes.split_module" [label="<f0> SourceModule| <f1> torch.fx.passes.split_module",shape="record"];
	"torch.utils._sympy.solve" [label="<f0> SourceModule| <f1> torch.utils._sympy.solve",shape="record"];
	"torch._export.passes.add_runtime_assertions_for_constraints_pass" [label="<f0> SourceModule| <f1> torch._export.passes.add_runtime_assertions_for_constraints_pass",shape="record"];
	"torch._export.passes.lift_constants_pass" [label="<f0> SourceModule| <f1> torch._export.passes.lift_constants_pass",shape="record"];
	"torch._export.verifier" [label="<f0> SourceModule| <f1> torch._export.verifier",shape="record"];
	"torch._export.serde.serialize" [label="<f0> SourceModule| <f1> torch._export.serde.serialize",shape="record"];
	"torch._export.serde" [label="<f0> Package| <f1> torch._export.serde",shape="record"];
	"torch._export.serde.union" [label="<f0> SourceModule| <f1> torch._export.serde.union",shape="record"];
	"torch._export.serde.schema" [label="<f0> SourceModule| <f1> torch._export.serde.schema",shape="record"];
	"torch.export._trace" [label="<f0> SourceModule| <f1> torch.export._trace",shape="record"];
	"torch._export.passes.replace_set_grad_with_hop_pass" [label="<f0> SourceModule| <f1> torch._export.passes.replace_set_grad_with_hop_pass",shape="record"];
	"torch._export.passes.replace_with_hop_pass_util" [label="<f0> SourceModule| <f1> torch._export.passes.replace_with_hop_pass_util",shape="record"];
	"torch._higher_order_ops.wrap" [label="<f0> SourceModule| <f1> torch._higher_order_ops.wrap",shape="record"];
	"torch.utils.checkpoint" [label="<f0> SourceModule| <f1> torch.utils.checkpoint",shape="record"];
	"torch.testing._internal.logging_tensor" [label="<f0> SourceModule| <f1> torch.testing._internal.logging_tensor",shape="record"];
	"torch._export.passes.replace_autocast_with_hop_pass" [label="<f0> SourceModule| <f1> torch._export.passes.replace_autocast_with_hop_pass",shape="record"];
	"torch.export._safeguard" [label="<f0> SourceModule| <f1> torch.export._safeguard",shape="record"];
	"torch._export.passes.collect_tracepoints_pass" [label="<f0> SourceModule| <f1> torch._export.passes.collect_tracepoints_pass",shape="record"];
	"torch._export.db.logging" [label="<f0> SourceModule| <f1> torch._export.db.logging",shape="record"];
	"torch._export.db" [label="<f0> Package| <f1> torch._export.db",shape="record"];
	"torch._export.db.examples" [label="<f0> Package| <f1> torch._export.db.examples",shape="record"];
	"torch._export.db.case" [label="<f0> SourceModule| <f1> torch._export.db.case",shape="record"];
	"torch.export.unflatten" [label="<f0> SourceModule| <f1> torch.export.unflatten",shape="record"];
	"torch.fx._pytree" [label="<f0> SourceModule| <f1> torch.fx._pytree",shape="record"];
	"torch.return_types" [label="<f0> SourceModule| <f1> torch.return_types",shape="record"];
	"torch.export.exported_program" [label="<f0> SourceModule| <f1> torch.export.exported_program",shape="record"];
	"torch.fx.immutable_collections" [label="<f0> SourceModule| <f1> torch.fx.immutable_collections",shape="record"];
	"torch.export.dynamic_shapes" [label="<f0> SourceModule| <f1> torch.export.dynamic_shapes",shape="record"];
	"torch.fx.passes.infra.pass_manager" [label="<f0> SourceModule| <f1> torch.fx.passes.infra.pass_manager",shape="record"];
	"torch.fx.passes.infra" [label="<f0> Package| <f1> torch.fx.passes.infra",shape="record"];
	"torch.fx.passes.infra.pass_base" [label="<f0> SourceModule| <f1> torch.fx.passes.infra.pass_base",shape="record"];
	"'onnxscript.ir'" [label="<f0> MissingModule| <f1> 'onnxscript.ir'",shape="record"];
	"'onnxscript.evaluator'" [label="<f0> MissingModule| <f1> 'onnxscript.evaluator'",shape="record"];
	"torch.onnx._internal.exporter._reporting" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._reporting",shape="record"];
	"torch.onnx._internal.exporter._verification" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._verification",shape="record"];
	"torch.onnx._internal.exporter._onnx_program" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._onnx_program",shape="record"];
	"onnxruntime" [label="<f0> MissingModule| <f1> onnxruntime",shape="record"];
	"torch.onnx._internal.exporter._ir_passes" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._ir_passes",shape="record"];
	"'onnxscript.function_libs'" [label="<f0> MissingModule| <f1> 'onnxscript.function_libs'",shape="record"];
	"torch.onnx._internal.exporter._fx_passes" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._fx_passes",shape="record"];
	"torch.onnx._internal.fx.passes" [label="<f0> Package| <f1> torch.onnx._internal.fx.passes",shape="record"];
	"torch.onnx._internal.fx.passes.virtualization" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.passes.virtualization",shape="record"];
	"torch.onnx._internal.fx._pass" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx._pass",shape="record"];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.onnxfunction_dispatcher",shape="record"];
	"torch.onnx._internal.fx.type_utils" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.type_utils",shape="record"];
	"'onnx.defs'" [label="<f0> MissingModule| <f1> 'onnx.defs'",shape="record"];
	"torch.onnx._internal.fx.registration" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.registration",shape="record"];
	"torch.onnx._internal.fx.passes.type_promotion" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.passes.type_promotion",shape="record"];
	"torch.onnx._internal.fx.passes.readability" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.passes.readability",shape="record"];
	"torch.onnx._internal.fx.passes.modularization" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.passes.modularization",shape="record"];
	"torch.onnx._internal.fx.passes.functionalization" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.passes.functionalization",shape="record"];
	"torch.func" [label="<f0> Package| <f1> torch.func",shape="record"];
	"torch._functorch.functional_call" [label="<f0> SourceModule| <f1> torch._functorch.functional_call",shape="record"];
	"torch.onnx._internal.fx.passes.decomp" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.passes.decomp",shape="record"];
	"torch._dispatch" [label="<f0> Package| <f1> torch._dispatch",shape="record"];
	"torch.onnx._internal.fx.passes._utils" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.passes._utils",shape="record"];
	"torch.onnx._internal.fx.diagnostics" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.diagnostics",shape="record"];
	"torch.onnx._internal.diagnostics.infra.formatter" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.formatter",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif" [label="<f0> Package| <f1> torch.onnx._internal.diagnostics.infra.sarif",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif.version" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif.version",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._sarif_log",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._run" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._run",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._version_control_details",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._special_locations" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._special_locations",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._run_automation_details",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._external_properties" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._external_properties",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._result" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._result",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._suppression" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._suppression",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._result_provenance",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._graph_traversal",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._fix" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._fix",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._graph" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._graph",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._node" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._node",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._edge_traversal",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._edge" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._edge",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._conversion" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._conversion",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._tool" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._tool",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._tool_component",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._translation_metadata",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._invocation" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._invocation",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._notification" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._notification",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._exception" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._exception",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._configuration_override",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._code_flow" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._code_flow",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._thread_flow",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._web_response" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._web_response",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._web_request" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._web_request",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._stack" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._stack",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._stack_frame",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._location" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._location",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._physical_location" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._physical_location",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._logical_location" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._logical_location",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._location_relationship" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._location_relationship",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._attachment" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._attachment",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._rectangle" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._rectangle",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._artifact_change",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._replacement" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._replacement",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._region" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._region",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._artifact",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._artifact_location",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._message" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._message",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._artifact_content",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._address" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._address",shape="record"];
	"torch.onnx._internal.diagnostics.infra.sarif._property_bag" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.sarif._property_bag",shape="record"];
	"torch.onnx._internal.diagnostics.infra.decorator" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.decorator",shape="record"];
	"torch.onnx._internal.diagnostics.infra.utils" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.utils",shape="record"];
	"torch.onnx._internal.diagnostics.infra._infra" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra._infra",shape="record"];
	"torch.onnx._internal.diagnostics.infra" [label="<f0> Package| <f1> torch.onnx._internal.diagnostics.infra",shape="record"];
	"torch.onnx._internal.diagnostics.infra.context" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics.infra.context",shape="record"];
	"torch.onnx._internal.diagnostics" [label="<f0> Package| <f1> torch.onnx._internal.diagnostics",shape="record"];
	"torch.onnx._internal.diagnostics._rules" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics._rules",shape="record"];
	"torch.onnx._internal.diagnostics._diagnostic" [label="<f0> SourceModule| <f1> torch.onnx._internal.diagnostics._diagnostic",shape="record"];
	"torch.onnx._internal.fx" [label="<f0> Package| <f1> torch.onnx._internal.fx",shape="record"];
	"torch.onnx._internal.fx.analysis" [label="<f0> Package| <f1> torch.onnx._internal.fx.analysis",shape="record"];
	"torch.onnx._internal.fx.analysis.unsupported_nodes" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.analysis.unsupported_nodes",shape="record"];
	"torch.onnx._internal.fx.fx_onnx_interpreter" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.fx_onnx_interpreter",shape="record"];
	"torch.onnx._internal.fx.decomposition_skip" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.decomposition_skip",shape="record"];
	"torch.onnx._internal.fx.fx_symbolic_graph_extractor" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.fx_symbolic_graph_extractor",shape="record"];
	"torch.onnx._internal.io_adapter" [label="<f0> SourceModule| <f1> torch.onnx._internal.io_adapter",shape="record"];
	"torch.onnx._internal.fx.dynamo_graph_extractor" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.dynamo_graph_extractor",shape="record"];
	"transformers.modeling_outputs" [label="<f0> SourceModule| <f1> transformers.modeling_outputs",shape="record"];
	"torch.onnx._internal.fx.decomposition_table" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.decomposition_table",shape="record"];
	"torch.onnx._internal.fx.serialization" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.serialization",shape="record"];
	"torch.onnx._internal.fx.patcher" [label="<f0> SourceModule| <f1> torch.onnx._internal.fx.patcher",shape="record"];
	"safetensors.torch" [label="<f0> SourceModule| <f1> safetensors.torch",shape="record"];
	"torch.onnx._internal.exporter._decomp" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._decomp",shape="record"];
	"torch.onnx._internal.exporter._capture_strategies" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._capture_strategies",shape="record"];
	"torch.onnx._internal.exporter._building" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._building",shape="record"];
	"torch.onnx._internal.exporter._tensors" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._tensors",shape="record"];
	"torch.onnx._internal.exporter._errors" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._errors",shape="record"];
	"torch.onnx._internal.exporter._analysis" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._analysis",shape="record"];
	"torch.onnx._internal.exporter._dispatching" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._dispatching",shape="record"];
	"torch.onnx._internal.exporter._registration" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._registration",shape="record"];
	"'torchvision.ops'" [label="<f0> MissingModule| <f1> 'torchvision.ops'",shape="record"];
	"torch.onnx._internal.exporter._schemas" [label="<f0> SourceModule| <f1> torch.onnx._internal.exporter._schemas",shape="record"];
	"torch.onnx._internal" [label="<f0> Package| <f1> torch.onnx._internal",shape="record"];
	"torch.onnx._internal.onnx_proto_utils" [label="<f0> SourceModule| <f1> torch.onnx._internal.onnx_proto_utils",shape="record"];
	"torch.onnx._internal.jit_utils" [label="<f0> SourceModule| <f1> torch.onnx._internal.jit_utils",shape="record"];
	"torch.onnx._globals" [label="<f0> SourceModule| <f1> torch.onnx._globals",shape="record"];
	"torch.onnx._internal.registration" [label="<f0> SourceModule| <f1> torch.onnx._internal.registration",shape="record"];
	"torch.onnx._internal._exporter_legacy" [label="<f0> SourceModule| <f1> torch.onnx._internal._exporter_legacy",shape="record"];
	"torch.onnx.symbolic_opset20" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset20",shape="record"];
	"torch.onnx.symbolic_opset19" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset19",shape="record"];
	"torch.onnx.symbolic_opset18" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset18",shape="record"];
	"torch.onnx.symbolic_opset17" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset17",shape="record"];
	"torch.onnx.symbolic_opset16" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset16",shape="record"];
	"torch.onnx.symbolic_opset15" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset15",shape="record"];
	"torch.onnx.symbolic_opset14" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset14",shape="record"];
	"torch.onnx.symbolic_opset13" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset13",shape="record"];
	"torch.onnx.symbolic_opset12" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset12",shape="record"];
	"torch.onnx.symbolic_opset11" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset11",shape="record"];
	"torch.onnx.symbolic_opset10" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset10",shape="record"];
	"torch.onnx.symbolic_opset9" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset9",shape="record"];
	"torch.onnx.symbolic_opset8" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset8",shape="record"];
	"torch.onnx.symbolic_opset7" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_opset7",shape="record"];
	"torch.onnx.symbolic_caffe2" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_caffe2",shape="record"];
	"torch.onnx.symbolic_helper" [label="<f0> SourceModule| <f1> torch.onnx.symbolic_helper",shape="record"];
	"torch.onnx.utils" [label="<f0> SourceModule| <f1> torch.onnx.utils",shape="record"];
	"torch.onnx._deprecation" [label="<f0> SourceModule| <f1> torch.onnx._deprecation",shape="record"];
	"torch.onnx._internal.onnxruntime" [label="<f0> SourceModule| <f1> torch.onnx._internal.onnxruntime",shape="record"];
	"torch.fx.passes.infra.partitioner" [label="<f0> SourceModule| <f1> torch.fx.passes.infra.partitioner",shape="record"];
	"'onnxscript.rewriter'" [label="<f0> MissingModule| <f1> 'onnxscript.rewriter'",shape="record"];
	"'onnxruntime.capi'" [label="<f0> MissingModule| <f1> 'onnxruntime.capi'",shape="record"];
	"torch.fx.passes.fake_tensor_prop" [label="<f0> SourceModule| <f1> torch.fx.passes.fake_tensor_prop",shape="record"];
	"torch._prims.executor" [label="<f0> SourceModule| <f1> torch._prims.executor",shape="record"];
	"torch._prims.context" [label="<f0> SourceModule| <f1> torch._prims.context",shape="record"];
	"torch.onnx._type_utils" [label="<f0> SourceModule| <f1> torch.onnx._type_utils",shape="record"];
	"torch.onnx.errors" [label="<f0> SourceModule| <f1> torch.onnx.errors",shape="record"];
	"torch.onnx._constants" [label="<f0> SourceModule| <f1> torch.onnx._constants",shape="record"];
	"torch.onnx._exporter_states" [label="<f0> SourceModule| <f1> torch.onnx._exporter_states",shape="record"];
	"'torch._C._onnx'" [label="<f0> MissingModule| <f1> 'torch._C._onnx'",shape="record"];
	"expecttest" [label="<f0> MissingModule| <f1> expecttest",shape="record"];
	"torch.autograd.functional" [label="<f0> SourceModule| <f1> torch.autograd.functional",shape="record"];
	"torch.autograd.forward_ad" [label="<f0> SourceModule| <f1> torch.autograd.forward_ad",shape="record"];
	"torch._decomp.decompositions_for_jvp" [label="<f0> SourceModule| <f1> torch._decomp.decompositions_for_jvp",shape="record"];
	"torch._vmap_internals" [label="<f0> SourceModule| <f1> torch._vmap_internals",shape="record"];
	"torch.autograd.function" [label="<f0> SourceModule| <f1> torch.autograd.function",shape="record"];
	"torch._functorch.autograd_function" [label="<f0> SourceModule| <f1> torch._functorch.autograd_function",shape="record"];
	"torch.cuda" [label="<f0> Package| <f1> torch.cuda",shape="record"];
	"torch.cuda.tunable" [label="<f0> SourceModule| <f1> torch.cuda.tunable",shape="record"];
	"torch.cuda.sparse" [label="<f0> SourceModule| <f1> torch.cuda.sparse",shape="record"];
	"torch.cuda.profiler" [label="<f0> SourceModule| <f1> torch.cuda.profiler",shape="record"];
	"torch.cuda.nvtx" [label="<f0> SourceModule| <f1> torch.cuda.nvtx",shape="record"];
	"torch.cuda.jiterator" [label="<f0> SourceModule| <f1> torch.cuda.jiterator",shape="record"];
	"torch.cuda.amp" [label="<f0> Package| <f1> torch.cuda.amp",shape="record"];
	"torch.cuda.amp.grad_scaler" [label="<f0> SourceModule| <f1> torch.cuda.amp.grad_scaler",shape="record"];
	"torch.amp.grad_scaler" [label="<f0> SourceModule| <f1> torch.amp.grad_scaler",shape="record"];
	"torch.amp" [label="<f0> Package| <f1> torch.amp",shape="record"];
	"torch.amp.autocast_mode" [label="<f0> SourceModule| <f1> torch.amp.autocast_mode",shape="record"];
	"torch.cuda.amp.common" [label="<f0> SourceModule| <f1> torch.cuda.amp.common",shape="record"];
	"torch.cuda.amp.autocast_mode" [label="<f0> SourceModule| <f1> torch.cuda.amp.autocast_mode",shape="record"];
	"torch.sparse._triton_ops" [label="<f0> SourceModule| <f1> torch.sparse._triton_ops",shape="record"];
	"torch.sparse._triton_ops_meta" [label="<f0> SourceModule| <f1> torch.sparse._triton_ops_meta",shape="record"];
	"torch.sparse" [label="<f0> Package| <f1> torch.sparse",shape="record"];
	"torch.sparse.semi_structured" [label="<f0> SourceModule| <f1> torch.sparse.semi_structured",shape="record"];
	"torch.sparse._semi_structured_ops" [label="<f0> SourceModule| <f1> torch.sparse._semi_structured_ops",shape="record"];
	"torch.sparse._semi_structured_conversions" [label="<f0> SourceModule| <f1> torch.sparse._semi_structured_conversions",shape="record"];
	"torch.cuda.nccl" [label="<f0> SourceModule| <f1> torch.cuda.nccl",shape="record"];
	"torch.cuda.random" [label="<f0> SourceModule| <f1> torch.cuda.random",shape="record"];
	"torch.cuda.memory" [label="<f0> SourceModule| <f1> torch.cuda.memory",shape="record"];
	"torch.cuda._memory_viz" [label="<f0> SourceModule| <f1> torch.cuda._memory_viz",shape="record"];
	"torch.profiler._memory_profiler" [label="<f0> SourceModule| <f1> torch.profiler._memory_profiler",shape="record"];
	"torch.profiler._utils" [label="<f0> SourceModule| <f1> torch.profiler._utils",shape="record"];
	"torch.profiler" [label="<f0> Package| <f1> torch.profiler",shape="record"];
	"torch.profiler.itt" [label="<f0> SourceModule| <f1> torch.profiler.itt",shape="record"];
	"torch.profiler.profiler" [label="<f0> SourceModule| <f1> torch.profiler.profiler",shape="record"];
	"amdsmi" [label="<f0> MissingModule| <f1> amdsmi",shape="record"];
	"pynvml" [label="<f0> MissingModule| <f1> pynvml",shape="record"];
	"torch.version" [label="<f0> SourceModule| <f1> torch.version",shape="record"];
	"torch.cuda.streams" [label="<f0> SourceModule| <f1> torch.cuda.streams",shape="record"];
	"torch.cuda.graphs" [label="<f0> SourceModule| <f1> torch.cuda.graphs",shape="record"];
	"torch.cuda._utils" [label="<f0> SourceModule| <f1> torch.cuda._utils",shape="record"];
	"torch.cuda.gds" [label="<f0> SourceModule| <f1> torch.cuda.gds",shape="record"];
	"torch.distributed.rpc.options" [label="<f0> SourceModule| <f1> torch.distributed.rpc.options",shape="record"];
	"torch.distributed.rpc.constants" [label="<f0> SourceModule| <f1> torch.distributed.rpc.constants",shape="record"];
	"torch.distributed.rpc.functions" [label="<f0> SourceModule| <f1> torch.distributed.rpc.functions",shape="record"];
	"torch.distributed.rpc.backend_registry" [label="<f0> SourceModule| <f1> torch.distributed.rpc.backend_registry",shape="record"];
	"torch.distributed.rpc._utils" [label="<f0> SourceModule| <f1> torch.distributed.rpc._utils",shape="record"];
	"torch.distributed.rpc.api" [label="<f0> SourceModule| <f1> torch.distributed.rpc.api",shape="record"];
	"torch.distributed.rpc.internal" [label="<f0> SourceModule| <f1> torch.distributed.rpc.internal",shape="record"];
	"torch.distributed.autograd" [label="<f0> Package| <f1> torch.distributed.autograd",shape="record"];
	"'torch._C._distributed_autograd'" [label="<f0> MissingModule| <f1> 'torch._C._distributed_autograd'",shape="record"];
	"torch.nested._internal" [label="<f0> Package| <f1> torch.nested._internal",shape="record"];
	"torch.nested" [label="<f0> Package| <f1> torch.nested",shape="record"];
	"torch.multiprocessing" [label="<f0> Package| <f1> torch.multiprocessing",shape="record"];
	"torch.multiprocessing.spawn" [label="<f0> SourceModule| <f1> torch.multiprocessing.spawn",shape="record"];
	"torch.multiprocessing._prctl_pr_set_pdeathsig" [label="<f0> MissingModule| <f1> torch.multiprocessing._prctl_pr_set_pdeathsig",shape="record"];
	"torch._namedtensor_internals" [label="<f0> SourceModule| <f1> torch._namedtensor_internals",shape="record"];
	"torch._inductor.cudagraph_utils" [label="<f0> SourceModule| <f1> torch._inductor.cudagraph_utils",shape="record"];
	"torch._inductor.compile_fx" [label="<f0> SourceModule| <f1> torch._inductor.compile_fx",shape="record"];
	"torch._inductor.freezing" [label="<f0> SourceModule| <f1> torch._inductor.freezing",shape="record"];
	"torch._inductor.fx_passes.freezing_patterns" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.freezing_patterns",shape="record"];
	"torch._inductor.fx_passes.binary_folding" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.binary_folding",shape="record"];
	"torch._inductor.fx_passes.mkldnn_fusion" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.mkldnn_fusion",shape="record"];
	"torch._inductor.fx_passes.quantization" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.quantization",shape="record"];
	"torch._inductor.lowering" [label="<f0> SourceModule| <f1> torch._inductor.lowering",shape="record"];
	"torch._inductor.jagged_lowerings" [label="<f0> SourceModule| <f1> torch._inductor.jagged_lowerings",shape="record"];
	"torch._inductor.mkldnn_lowerings" [label="<f0> SourceModule| <f1> torch._inductor.mkldnn_lowerings",shape="record"];
	"torch._inductor.mkldnn_ir" [label="<f0> SourceModule| <f1> torch._inductor.mkldnn_ir",shape="record"];
	"torch._inductor.select_algorithm" [label="<f0> SourceModule| <f1> torch._inductor.select_algorithm",shape="record"];
	"torch._inductor.codegen.cuda.cuda_kernel" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.cuda_kernel",shape="record"];
	"torch._inductor.codegen.cuda.cuda_template" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.cuda_template",shape="record"];
	"jinja2" [label="<f0> Package| <f1> jinja2",shape="record"];
	"jinja2.ext" [label="<f0> SourceModule| <f1> jinja2.ext",shape="record"];
	"jinja2.parser" [label="<f0> SourceModule| <f1> jinja2.parser",shape="record"];
	"jinja2.lexer" [label="<f0> SourceModule| <f1> jinja2.lexer",shape="record"];
	"jinja2._identifier" [label="<f0> SourceModule| <f1> jinja2._identifier",shape="record"];
	"jinja2.defaults" [label="<f0> SourceModule| <f1> jinja2.defaults",shape="record"];
	"jinja2.tests" [label="<f0> SourceModule| <f1> jinja2.tests",shape="record"];
	"jinja2.filters" [label="<f0> SourceModule| <f1> jinja2.filters",shape="record"];
	"jinja2.sandbox" [label="<f0> SourceModule| <f1> jinja2.sandbox",shape="record"];
	"jinja2.async_utils" [label="<f0> SourceModule| <f1> jinja2.async_utils",shape="record"];
	"markupsafe" [label="<f0> Package| <f1> markupsafe",shape="record"];
	"markupsafe._native" [label="<f0> SourceModule| <f1> markupsafe._native",shape="record"];
	"markupsafe._speedups" [label="<f0> Extension| <f1> markupsafe._speedups",shape="record"];
	"jinja2.utils" [label="<f0> SourceModule| <f1> jinja2.utils",shape="record"];
	"jinja2.constants" [label="<f0> SourceModule| <f1> jinja2.constants",shape="record"];
	"jinja2.runtime" [label="<f0> SourceModule| <f1> jinja2.runtime",shape="record"];
	"jinja2.loaders" [label="<f0> SourceModule| <f1> jinja2.loaders",shape="record"];
	"jinja2.exceptions" [label="<f0> SourceModule| <f1> jinja2.exceptions",shape="record"];
	"jinja2.environment" [label="<f0> SourceModule| <f1> jinja2.environment",shape="record"];
	"jinja2.debug" [label="<f0> SourceModule| <f1> jinja2.debug",shape="record"];
	"jinja2.compiler" [label="<f0> SourceModule| <f1> jinja2.compiler",shape="record"];
	"jinja2.visitor" [label="<f0> SourceModule| <f1> jinja2.visitor",shape="record"];
	"jinja2.optimizer" [label="<f0> SourceModule| <f1> jinja2.optimizer",shape="record"];
	"jinja2.idtracking" [label="<f0> SourceModule| <f1> jinja2.idtracking",shape="record"];
	"jinja2.bccache" [label="<f0> SourceModule| <f1> jinja2.bccache",shape="record"];
	"jinja2.nodes" [label="<f0> SourceModule| <f1> jinja2.nodes",shape="record"];
	"torch._inductor.exc" [label="<f0> SourceModule| <f1> torch._inductor.exc",shape="record"];
	"torch._inductor.autotune_process" [label="<f0> SourceModule| <f1> torch._inductor.autotune_process",shape="record"];
	"torch._dynamo.testing" [label="<f0> SourceModule| <f1> torch._dynamo.testing",shape="record"];
	"filelock" [label="<f0> Package| <f1> filelock",shape="record"];
	"filelock.version" [label="<f0> SourceModule| <f1> filelock.version",shape="record"];
	"filelock.asyncio" [label="<f0> SourceModule| <f1> filelock.asyncio",shape="record"];
	"filelock._windows" [label="<f0> SourceModule| <f1> filelock._windows",shape="record"];
	"filelock._util" [label="<f0> SourceModule| <f1> filelock._util",shape="record"];
	"filelock._unix" [label="<f0> SourceModule| <f1> filelock._unix",shape="record"];
	"filelock._soft" [label="<f0> SourceModule| <f1> filelock._soft",shape="record"];
	"filelock._error" [label="<f0> SourceModule| <f1> filelock._error",shape="record"];
	"filelock._api" [label="<f0> SourceModule| <f1> filelock._api",shape="record"];
	"torch._inductor.codegen.cpp_utils" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cpp_utils",shape="record"];
	"torch._inductor.codegen.cpp_gemm_template" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cpp_gemm_template",shape="record"];
	"torch._inductor.codegen.cpp_template_kernel" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cpp_template_kernel",shape="record"];
	"torch._inductor.codegen.cpp_wrapper_cpu" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cpp_wrapper_cpu",shape="record"];
	"torch._inductor.cpp_builder" [label="<f0> SourceModule| <f1> torch._inductor.cpp_builder",shape="record"];
	"torch.utils.cpp_extension" [label="<f0> SourceModule| <f1> torch.utils.cpp_extension",shape="record"];
	"setuptools.command.build_ext" [label="<f0> SourceModule| <f1> setuptools.command.build_ext",shape="record"];
	"dl" [label="<f0> MissingModule| <f1> dl",shape="record"];
	"Cython" [label="<f0> MissingModule| <f1> Cython",shape="record"];
	"torch.utils.hipify.hipify_python" [label="<f0> SourceModule| <f1> torch.utils.hipify.hipify_python",shape="record"];
	"torch.utils.hipify.cuda_to_hip_mappings" [label="<f0> SourceModule| <f1> torch.utils.hipify.cuda_to_hip_mappings",shape="record"];
	"torch.utils.hipify.constants" [label="<f0> SourceModule| <f1> torch.utils.hipify.constants",shape="record"];
	"torch.utils.hipify" [label="<f0> Package| <f1> torch.utils.hipify",shape="record"];
	"torch.utils.hipify.version" [label="<f0> SourceModule| <f1> torch.utils.hipify.version",shape="record"];
	"torch.utils._cpp_extension_versioner" [label="<f0> SourceModule| <f1> torch.utils._cpp_extension_versioner",shape="record"];
	"torch.utils.file_baton" [label="<f0> SourceModule| <f1> torch.utils.file_baton",shape="record"];
	"torch._appdirs" [label="<f0> SourceModule| <f1> torch._appdirs",shape="record"];
	"'com.sun'" [label="<f0> MissingModule| <f1> 'com.sun'",shape="record"];
	"com" [label="<f0> MissingModule| <f1> com",shape="record"];
	"win32com.shell.shellcon" [label="<f0> SourceModule| <f1> win32com.shell.shellcon",shape="record"];
	"win32com.shell.shell" [label="<f0> Extension| <f1> win32com.shell.shell",shape="record"];
	"win32com.shell" [label="<f0> Package| <f1> win32com.shell",shape="record"];
	"win32com" [label="<f0> Package| <f1> win32com",shape="record"];
	"win32com.server.util" [label="<f0> SourceModule| <f1> win32com.server.util",shape="record"];
	"win32com.server.dispatcher" [label="<f0> SourceModule| <f1> win32com.server.dispatcher",shape="record"];
	"win32trace" [label="<f0> Extension| <f1> win32trace",shape="record"];
	"win32traceutil" [label="<f0> SourceModule| <f1> win32traceutil",shape="record"];
	"win32com.util" [label="<f0> SourceModule| <f1> win32com.util",shape="record"];
	"win32com.server.exception" [label="<f0> SourceModule| <f1> win32com.server.exception",shape="record"];
	"win32com.server.policy" [label="<f0> SourceModule| <f1> win32com.server.policy",shape="record"];
	"win32com.client" [label="<f0> Package| <f1> win32com.client",shape="record"];
	"win32com.client.makepy" [label="<f0> SourceModule| <f1> win32com.client.makepy",shape="record"];
	"pywin.dialogs.status" [label="<f0> SourceModule| <f1> pywin.dialogs.status",shape="record"];
	"pywin.mfc.thread" [label="<f0> SourceModule| <f1> pywin.mfc.thread",shape="record"];
	"pywin.mfc.object" [label="<f0> SourceModule| <f1> pywin.mfc.object",shape="record"];
	"pywin.mfc.dialog" [label="<f0> SourceModule| <f1> pywin.mfc.dialog",shape="record"];
	"pywin.mfc.window" [label="<f0> SourceModule| <f1> pywin.mfc.window",shape="record"];
	"pywin.mfc" [label="<f0> Package| <f1> pywin.mfc",shape="record"];
	"pywin.dialogs" [label="<f0> Package| <f1> pywin.dialogs",shape="record"];
	"win32ui" [label="<f0> Extension| <f1> win32ui",shape="record"];
	"pywin" [label="<f0> Package| <f1> pywin",shape="record"];
	"win32com.client.selecttlb" [label="<f0> SourceModule| <f1> win32com.client.selecttlb",shape="record"];
	"pywin.dialogs.list" [label="<f0> SourceModule| <f1> pywin.dialogs.list",shape="record"];
	"commctrl" [label="<f0> SourceModule| <f1> commctrl",shape="record"];
	"win32com.client.genpy" [label="<f0> SourceModule| <f1> win32com.client.genpy",shape="record"];
	"win32com.client.gencache" [label="<f0> SourceModule| <f1> win32com.client.gencache",shape="record"];
	"win32com.client.CLSIDToClass" [label="<f0> SourceModule| <f1> win32com.client.CLSIDToClass",shape="record"];
	"win32com.client.dynamic" [label="<f0> SourceModule| <f1> win32com.client.dynamic",shape="record"];
	"win32com.client.build" [label="<f0> SourceModule| <f1> win32com.client.build",shape="record"];
	"pywintypes" [label="<f0> SourceModule| <f1> pywintypes",shape="record"];
	"pywin32_system32" [label="<f0> NamespacePackage| <f1> pywin32_system32",shape="record"];
	"_win32sysloader" [label="<f0> Extension| <f1> _win32sysloader",shape="record"];
	"win32com.server" [label="<f0> Package| <f1> win32com.server",shape="record"];
	"winerror" [label="<f0> SourceModule| <f1> winerror",shape="record"];
	"win32com.universal" [label="<f0> SourceModule| <f1> win32com.universal",shape="record"];
	"win32com.client.util" [label="<f0> SourceModule| <f1> win32com.client.util",shape="record"];
	"'win32com.gen_py'" [label="<f0> MissingModule| <f1> 'win32com.gen_py'",shape="record"];
	"pythoncom" [label="<f0> SourceModule| <f1> pythoncom",shape="record"];
	"'triton.fb'" [label="<f0> MissingModule| <f1> 'triton.fb'",shape="record"];
	"torch.torch_version" [label="<f0> SourceModule| <f1> torch.torch_version",shape="record"];
	"torch._vendor.packaging.version" [label="<f0> SourceModule| <f1> torch._vendor.packaging.version",shape="record"];
	"torch._vendor.packaging" [label="<f0> Package| <f1> torch._vendor.packaging",shape="record"];
	"torch._vendor" [label="<f0> Package| <f1> torch._vendor",shape="record"];
	"torch._vendor.packaging._structures" [label="<f0> SourceModule| <f1> torch._vendor.packaging._structures",shape="record"];
	"torch._inductor.cpu_vec_isa" [label="<f0> SourceModule| <f1> torch._inductor.cpu_vec_isa",shape="record"];
	"torch._inductor.codegen.cpp_template" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cpp_template",shape="record"];
	"torch._inductor.codegen.cpp_micro_gemm" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cpp_micro_gemm",shape="record"];
	"torch._inductor.kernel.mm_common" [label="<f0> SourceModule| <f1> torch._inductor.kernel.mm_common",shape="record"];
	"torch._inductor.quantized_lowerings" [label="<f0> SourceModule| <f1> torch._inductor.quantized_lowerings",shape="record"];
	"torch._inductor.kernel" [label="<f0> Package| <f1> torch._inductor.kernel",shape="record"];
	"torch._inductor.kernel.unpack_mixed_mm" [label="<f0> SourceModule| <f1> torch._inductor.kernel.unpack_mixed_mm",shape="record"];
	"torch._inductor.kernel.mm_plus_mm" [label="<f0> SourceModule| <f1> torch._inductor.kernel.mm_plus_mm",shape="record"];
	"torch._inductor.kernel.mm" [label="<f0> SourceModule| <f1> torch._inductor.kernel.mm",shape="record"];
	"torch._inductor.codegen.rocm.ck_universal_gemm_template" [label="<f0> SourceModule| <f1> torch._inductor.codegen.rocm.ck_universal_gemm_template",shape="record"];
	"torch._inductor.codegen.rocm.rocm_kernel" [label="<f0> SourceModule| <f1> torch._inductor.codegen.rocm.rocm_kernel",shape="record"];
	"torch._inductor.codegen.rocm.rocm_template" [label="<f0> SourceModule| <f1> torch._inductor.codegen.rocm.rocm_template",shape="record"];
	"torch._inductor.codegen.rocm.rocm_benchmark_request" [label="<f0> SourceModule| <f1> torch._inductor.codegen.rocm.rocm_benchmark_request",shape="record"];
	"torch._inductor.codegen.rocm.ck_template" [label="<f0> SourceModule| <f1> torch._inductor.codegen.rocm.ck_template",shape="record"];
	"torch._inductor.codegen.cuda.gemm_template" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.gemm_template",shape="record"];
	"'cutlass_library.gemm_operation'" [label="<f0> MissingModule| <f1> 'cutlass_library.gemm_operation'",shape="record"];
	"torch._inductor.autoheuristic.autoheuristic_utils" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.autoheuristic_utils",shape="record"];
	"torch._inductor.autoheuristic" [label="<f0> Package| <f1> torch._inductor.autoheuristic",shape="record"];
	"torch._inductor.autoheuristic.autoheuristic" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.autoheuristic",shape="record"];
	"torch._inductor.autoheuristic.learned_heuristic_controller" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.learned_heuristic_controller",shape="record"];
	"torch._inductor.autoheuristic.learnedheuristic_interface" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.learnedheuristic_interface",shape="record"];
	"torch._inductor.subgraph_lowering" [label="<f0> SourceModule| <f1> torch._inductor.subgraph_lowering",shape="record"];
	"torch._inductor.ops_handler" [label="<f0> SourceModule| <f1> torch._inductor.ops_handler",shape="record"];
	"torch._higher_order_ops.auto_functionalize" [label="<f0> SourceModule| <f1> torch._higher_order_ops.auto_functionalize",shape="record"];
	"torch._inductor.test_operators" [label="<f0> SourceModule| <f1> torch._inductor.test_operators",shape="record"];
	"torch._higher_order_ops.associative_scan" [label="<f0> SourceModule| <f1> torch._higher_order_ops.associative_scan",shape="record"];
	"torch._inductor.fx_passes" [label="<f0> Package| <f1> torch._inductor.fx_passes",shape="record"];
	"torch._inductor.fx_passes.decompose_mem_bound_mm" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.decompose_mem_bound_mm",shape="record"];
	"torch._inductor.fx_passes.split_cat" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.split_cat",shape="record"];
	"torch._inductor.fx_passes.group_batch_fusion" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.group_batch_fusion",shape="record"];
	"deeplearning" [label="<f0> MissingModule| <f1> deeplearning",shape="record"];
	"torch.fx.passes.graph_transform_observer" [label="<f0> SourceModule| <f1> torch.fx.passes.graph_transform_observer",shape="record"];
	"torch._inductor.fx_passes.fb" [label="<f0> MissingModule| <f1> torch._inductor.fx_passes.fb",shape="record"];
	"torch._inductor.fx_passes.efficient_conv_bn_eval" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.efficient_conv_bn_eval",shape="record"];
	"torch._inductor.pattern_matcher" [label="<f0> SourceModule| <f1> torch._inductor.pattern_matcher",shape="record"];
	"torch._functorch.compile_utils" [label="<f0> SourceModule| <f1> torch._functorch.compile_utils",shape="record"];
	"torch._inductor.constant_folding" [label="<f0> SourceModule| <f1> torch._inductor.constant_folding",shape="record"];
	"'torch._inductor.fb'" [label="<f0> MissingModule| <f1> 'torch._inductor.fb'",shape="record"];
	"torch._inductor.fx_passes.pre_grad" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.pre_grad",shape="record"];
	"torch._inductor.fx_passes.numeric_utils" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.numeric_utils",shape="record"];
	"torch._inductor.fx_passes.misc_patterns" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.misc_patterns",shape="record"];
	"torch._inductor.fx_utils" [label="<f0> SourceModule| <f1> torch._inductor.fx_utils",shape="record"];
	"torch.fx.experimental.optimization" [label="<f0> SourceModule| <f1> torch.fx.experimental.optimization",shape="record"];
	"torch.utils.mkldnn" [label="<f0> SourceModule| <f1> torch.utils.mkldnn",shape="record"];
	"torch._inductor.fx_passes.post_grad" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.post_grad",shape="record"];
	"torch._inductor.fx_passes.reinplace" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.reinplace",shape="record"];
	"torch._inductor.fx_passes.micro_pipeline_tp" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.micro_pipeline_tp",shape="record"];
	"torch.distributed._symmetric_memory" [label="<f0> Package| <f1> torch.distributed._symmetric_memory",shape="record"];
	"torch._inductor.fx_passes.ddp_fusion" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.ddp_fusion",shape="record"];
	"torch._inductor.fx_passes.b2b_gemm" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.b2b_gemm",shape="record"];
	"torch._inductor.fx_passes.joint_graph" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.joint_graph",shape="record"];
	"torch._inductor.fx_passes.pad_mm" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.pad_mm",shape="record"];
	"torch._inductor.fx_passes.fuse_attention" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.fuse_attention",shape="record"];
	"torch._inductor.fx_passes.replace_random" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.replace_random",shape="record"];
	"torch._inductor.fx_passes.dedupe_symint_uses" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.dedupe_symint_uses",shape="record"];
	"torch.monitor" [label="<f0> Package| <f1> torch.monitor",shape="record"];
	"torch.utils.tensorboard" [label="<f0> Package| <f1> torch.utils.tensorboard",shape="record"];
	"'tensorboard.summary'" [label="<f0> MissingModule| <f1> 'tensorboard.summary'",shape="record"];
	"torch.utils.tensorboard.writer" [label="<f0> SourceModule| <f1> torch.utils.tensorboard.writer",shape="record"];
	"'google.protobuf'" [label="<f0> MissingModule| <f1> 'google.protobuf'",shape="record"];
	"torch.utils.tensorboard.summary" [label="<f0> SourceModule| <f1> torch.utils.tensorboard.summary",shape="record"];
	"moviepy" [label="<f0> MissingModule| <f1> moviepy",shape="record"];
	"torch.utils.tensorboard._utils" [label="<f0> SourceModule| <f1> torch.utils.tensorboard._utils",shape="record"];
	"'matplotlib.backends'" [label="<f0> MissingModule| <f1> 'matplotlib.backends'",shape="record"];
	"torch.utils.tensorboard._pytorch_graph" [label="<f0> SourceModule| <f1> torch.utils.tensorboard._pytorch_graph",shape="record"];
	"torch.utils.tensorboard._proto_graph" [label="<f0> SourceModule| <f1> torch.utils.tensorboard._proto_graph",shape="record"];
	"torch.utils.tensorboard._onnx_graph" [label="<f0> SourceModule| <f1> torch.utils.tensorboard._onnx_graph",shape="record"];
	"torch.utils.tensorboard._embedding" [label="<f0> SourceModule| <f1> torch.utils.tensorboard._embedding",shape="record"];
	"torch.utils.tensorboard._convert_np" [label="<f0> SourceModule| <f1> torch.utils.tensorboard._convert_np",shape="record"];
	"'tensorboard.plugins'" [label="<f0> MissingModule| <f1> 'tensorboard.plugins'",shape="record"];
	"'tensorboard.compat'" [label="<f0> MissingModule| <f1> 'tensorboard.compat'",shape="record"];
	"'matplotlib.figure'" [label="<f0> MissingModule| <f1> 'matplotlib.figure'",shape="record"];
	"tensorboard" [label="<f0> MissingModule| <f1> tensorboard",shape="record"];
	"'torch._C._monitor'" [label="<f0> MissingModule| <f1> 'torch._C._monitor'",shape="record"];
	"torch._dynamo.repro.after_aot" [label="<f0> SourceModule| <f1> torch._dynamo.repro.after_aot",shape="record"];
	"torch._dynamo.repro" [label="<f0> Package| <f1> torch._dynamo.repro",shape="record"];
	"torch._inductor.hooks" [label="<f0> SourceModule| <f1> torch._inductor.hooks",shape="record"];
	"torch._dynamo.debug_utils" [label="<f0> SourceModule| <f1> torch._dynamo.debug_utils",shape="record"];
	"torch._tensor_str" [label="<f0> SourceModule| <f1> torch._tensor_str",shape="record"];
	"'libfb.py'" [label="<f0> MissingModule| <f1> 'libfb.py'",shape="record"];
	"torch.utils._content_store" [label="<f0> SourceModule| <f1> torch.utils._content_store",shape="record"];
	"torch._dynamo.mutation_guard" [label="<f0> SourceModule| <f1> torch._dynamo.mutation_guard",shape="record"];
	"torch.distributed.tensor._api" [label="<f0> SourceModule| <f1> torch.distributed.tensor._api",shape="record"];
	"'torch_xla.distributed'" [label="<f0> MissingModule| <f1> 'torch_xla.distributed'",shape="record"];
	"torch.distributed.checkpoint.planner_helpers" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.planner_helpers",shape="record"];
	"torch.distributed.checkpoint" [label="<f0> Package| <f1> torch.distributed.checkpoint",shape="record"];
	"torch.distributed.checkpoint.storage" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.storage",shape="record"];
	"torch.distributed.checkpoint.state_dict_saver" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.state_dict_saver",shape="record"];
	"torch.distributed.checkpoint.utils" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.utils",shape="record"];
	"torch.distributed._shard.sharded_tensor.shard" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor.shard",shape="record"];
	"torch.distributed.checkpoint.stateful" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.stateful",shape="record"];
	"torch.distributed.checkpoint.staging" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.staging",shape="record"];
	"torch.distributed.checkpoint.logger" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.logger",shape="record"];
	"torch.distributed.checkpoint.logging_handlers" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.logging_handlers",shape="record"];
	"torch.distributed.checkpoint._storage_utils" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._storage_utils",shape="record"];
	"torch.distributed.checkpoint._fsspec_filesystem" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._fsspec_filesystem",shape="record"];
	"fsspec.core" [label="<f0> SourceModule| <f1> fsspec.core",shape="record"];
	"fsspec.utils" [label="<f0> SourceModule| <f1> fsspec.utils",shape="record"];
	"fsspec.spec" [label="<f0> SourceModule| <f1> fsspec.spec",shape="record"];
	"fsspec.mapping" [label="<f0> SourceModule| <f1> fsspec.mapping",shape="record"];
	"fsspec.implementations.dirfs" [label="<f0> SourceModule| <f1> fsspec.implementations.dirfs",shape="record"];
	"fsspec.implementations" [label="<f0> Package| <f1> fsspec.implementations",shape="record"];
	"fsspec.json" [label="<f0> SourceModule| <f1> fsspec.json",shape="record"];
	"fsspec.implementations.local" [label="<f0> SourceModule| <f1> fsspec.implementations.local",shape="record"];
	"fsspec.asyn" [label="<f0> SourceModule| <f1> fsspec.asyn",shape="record"];
	"fsspec.exceptions" [label="<f0> SourceModule| <f1> fsspec.exceptions",shape="record"];
	"fsspec.transaction" [label="<f0> SourceModule| <f1> fsspec.transaction",shape="record"];
	"distributed" [label="<f0> MissingModule| <f1> distributed",shape="record"];
	"fsspec.dircache" [label="<f0> SourceModule| <f1> fsspec.dircache",shape="record"];
	"fsspec.callbacks" [label="<f0> SourceModule| <f1> fsspec.callbacks",shape="record"];
	"fsspec.registry" [label="<f0> SourceModule| <f1> fsspec.registry",shape="record"];
	"fsspec.config" [label="<f0> SourceModule| <f1> fsspec.config",shape="record"];
	"fsspec.compression" [label="<f0> SourceModule| <f1> fsspec.compression",shape="record"];
	"lz4" [label="<f0> MissingModule| <f1> lz4",shape="record"];
	"snappy" [label="<f0> MissingModule| <f1> snappy",shape="record"];
	"lzmaffi" [label="<f0> MissingModule| <f1> lzmaffi",shape="record"];
	"isal" [label="<f0> MissingModule| <f1> isal",shape="record"];
	"fsspec.caching" [label="<f0> SourceModule| <f1> fsspec.caching",shape="record"];
	"fsspec" [label="<f0> Package| <f1> fsspec",shape="record"];
	"fsspec._version" [label="<f0> SourceModule| <f1> fsspec._version",shape="record"];
	"torch.distributed._state_dict_utils" [label="<f0> SourceModule| <f1> torch.distributed._state_dict_utils",shape="record"];
	"torch.distributed.checkpoint.state_dict_loader" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.state_dict_loader",shape="record"];
	"torch.distributed.checkpoint.optimizer" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.optimizer",shape="record"];
	"torch.distributed.fsdp._shard_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._shard_utils",shape="record"];
	"torch.distributed.fsdp" [label="<f0> Package| <f1> torch.distributed.fsdp",shape="record"];
	"torch.distributed.fsdp.fully_sharded_data_parallel" [label="<f0> SourceModule| <f1> torch.distributed.fsdp.fully_sharded_data_parallel",shape="record"];
	"torch.distributed.fsdp.wrap" [label="<f0> SourceModule| <f1> torch.distributed.fsdp.wrap",shape="record"];
	"torch.distributed.fsdp._unshard_param_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._unshard_param_utils",shape="record"];
	"torch.distributed.fsdp._state_dict_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._state_dict_utils",shape="record"];
	"torch.distributed.fsdp._fsdp_extensions" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._fsdp_extensions",shape="record"];
	"torch.distributed.fsdp._debug_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._debug_utils",shape="record"];
	"torch.distributed.fsdp._optim_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._optim_utils",shape="record"];
	"torch.distributed.utils" [label="<f0> SourceModule| <f1> torch.distributed.utils",shape="record"];
	"torch.nn.parallel.scatter_gather" [label="<f0> SourceModule| <f1> torch.nn.parallel.scatter_gather",shape="record"];
	"torch.nn.parallel._functions" [label="<f0> SourceModule| <f1> torch.nn.parallel._functions",shape="record"];
	"torch.nn.parallel.comm" [label="<f0> SourceModule| <f1> torch.nn.parallel.comm",shape="record"];
	"torch.distributed.fsdp.api" [label="<f0> SourceModule| <f1> torch.distributed.fsdp.api",shape="record"];
	"torch.nn.modules.batchnorm" [label="<f0> SourceModule| <f1> torch.nn.modules.batchnorm",shape="record"];
	"torch.nn.modules.lazy" [label="<f0> SourceModule| <f1> torch.nn.modules.lazy",shape="record"];
	"torch.nn.modules._functions" [label="<f0> SourceModule| <f1> torch.nn.modules._functions",shape="record"];
	"torch.distributed.fsdp._wrap_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._wrap_utils",shape="record"];
	"torch.distributed.fsdp._runtime_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._runtime_utils",shape="record"];
	"torch.distributed.fsdp._init_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._init_utils",shape="record"];
	"torchdistx" [label="<f0> MissingModule| <f1> torchdistx",shape="record"];
	"torch.distributed.tensor.parallel.fsdp" [label="<f0> SourceModule| <f1> torch.distributed.tensor.parallel.fsdp",shape="record"];
	"torch.distributed.tensor.parallel" [label="<f0> Package| <f1> torch.distributed.tensor.parallel",shape="record"];
	"torch.distributed.tensor.parallel.style" [label="<f0> SourceModule| <f1> torch.distributed.tensor.parallel.style",shape="record"];
	"torch.distributed.tensor.parallel.loss" [label="<f0> SourceModule| <f1> torch.distributed.tensor.parallel.loss",shape="record"];
	"torch.distributed.tensor._ops._math_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._math_ops",shape="record"];
	"torch.distributed.tensor._ops.utils" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops.utils",shape="record"];
	"torch.distributed.tensor.device_mesh" [label="<f0> SourceModule| <f1> torch.distributed.tensor.device_mesh",shape="record"];
	"torch.distributed.tensor._op_schema" [label="<f0> SourceModule| <f1> torch.distributed.tensor._op_schema",shape="record"];
	"torch.distributed.tensor._ops._embedding_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._embedding_ops",shape="record"];
	"torch.distributed.tensor.parallel.api" [label="<f0> SourceModule| <f1> torch.distributed.tensor.parallel.api",shape="record"];
	"torch.distributed.tensor.parallel._utils" [label="<f0> SourceModule| <f1> torch.distributed.tensor.parallel._utils",shape="record"];
	"torch.distributed.tensor.parallel._data_parallel_utils" [label="<f0> SourceModule| <f1> torch.distributed.tensor.parallel._data_parallel_utils",shape="record"];
	"torch.distributed.fsdp._limiter_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._limiter_utils",shape="record"];
	"torch.distributed.algorithms._comm_hooks.default_hooks" [label="<f0> SourceModule| <f1> torch.distributed.algorithms._comm_hooks.default_hooks",shape="record"];
	"torch.distributed.fsdp._exec_order_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._exec_order_utils",shape="record"];
	"torch.distributed.fsdp._dynamo_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._dynamo_utils",shape="record"];
	"torch.distributed.fsdp._common_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._common_utils",shape="record"];
	"torch.distributed._composable_state" [label="<f0> SourceModule| <f1> torch.distributed._composable_state",shape="record"];
	"torch.distributed.algorithms._comm_hooks" [label="<f0> Package| <f1> torch.distributed.algorithms._comm_hooks",shape="record"];
	"torch.distributed.algorithms" [label="<f0> Package| <f1> torch.distributed.algorithms",shape="record"];
	"torch.distributed.algorithms.join" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.join",shape="record"];
	"torch.distributed.algorithms._checkpoint.checkpoint_wrapper" [label="<f0> SourceModule| <f1> torch.distributed.algorithms._checkpoint.checkpoint_wrapper",shape="record"];
	"torch.distributed.algorithms._checkpoint" [label="<f0> Package| <f1> torch.distributed.algorithms._checkpoint",shape="record"];
	"torch.distributed.fsdp._traversal_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._traversal_utils",shape="record"];
	"torch.distributed._composable.contract" [label="<f0> SourceModule| <f1> torch.distributed._composable.contract",shape="record"];
	"torch.distributed._composable" [label="<f0> Package| <f1> torch.distributed._composable",shape="record"];
	"torch.distributed._composable.replicate" [label="<f0> SourceModule| <f1> torch.distributed._composable.replicate",shape="record"];
	"torch.distributed.tensor.parallel.ddp" [label="<f0> SourceModule| <f1> torch.distributed.tensor.parallel.ddp",shape="record"];
	"torch.distributed._composable.fully_shard" [label="<f0> SourceModule| <f1> torch.distributed._composable.fully_shard",shape="record"];
	"torch.distributed._composable.checkpoint_activation" [label="<f0> SourceModule| <f1> torch.distributed._composable.checkpoint_activation",shape="record"];
	"torch.distributed.fsdp._flat_param" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._flat_param",shape="record"];
	"torch.testing._internal.distributed.fake_pg" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.fake_pg",shape="record"];
	"torch.testing._internal.distributed" [label="<f0> Package| <f1> torch.testing._internal.distributed",shape="record"];
	"torch.distributed._shard.sharding_spec" [label="<f0> Package| <f1> torch.distributed._shard.sharding_spec",shape="record"];
	"torch.distributed._shard.sharding_spec.api" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharding_spec.api",shape="record"];
	"torch.distributed._shard.sharding_spec._internals" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharding_spec._internals",shape="record"];
	"torch.distributed._shard.op_registry_utils" [label="<f0> SourceModule| <f1> torch.distributed._shard.op_registry_utils",shape="record"];
	"torch.distributed._shard.common_op_utils" [label="<f0> SourceModule| <f1> torch.distributed._shard.common_op_utils",shape="record"];
	"torch.distributed._shard" [label="<f0> Package| <f1> torch.distributed._shard",shape="record"];
	"torch.distributed._shard.api" [label="<f0> SourceModule| <f1> torch.distributed._shard.api",shape="record"];
	"torch.distributed._shard.sharding_plan" [label="<f0> Package| <f1> torch.distributed._shard.sharding_plan",shape="record"];
	"torch.distributed._shard.sharding_plan.api" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharding_plan.api",shape="record"];
	"torch.distributed._shard.sharder" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharder",shape="record"];
	"torch.distributed.checkpoint._nested_dict" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._nested_dict",shape="record"];
	"torch.distributed.checkpoint._traverse" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._traverse",shape="record"];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharding_spec.chunk_sharding_spec",shape="record"];
	"torch.distributed._shard.sharded_tensor.utils" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor.utils",shape="record"];
	"torch.distributed._shard._utils" [label="<f0> SourceModule| <f1> torch.distributed._shard._utils",shape="record"];
	"torch.distributed._shard.sharded_tensor.metadata" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor.metadata",shape="record"];
	"torch.distributed._shard.sharded_tensor.api" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor.api",shape="record"];
	"torch.distributed._shard.sharded_tensor.reshard" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor.reshard",shape="record"];
	"torch.distributed.nn.functional" [label="<f0> SourceModule| <f1> torch.distributed.nn.functional",shape="record"];
	"torch.distributed.nn" [label="<f0> Package| <f1> torch.distributed.nn",shape="record"];
	"torch.distributed.nn.api.remote_module" [label="<f0> SourceModule| <f1> torch.distributed.nn.api.remote_module",shape="record"];
	"torch.distributed.nn.api" [label="<f0> Package| <f1> torch.distributed.nn.api",shape="record"];
	"torch.distributed.nn.jit.instantiator" [label="<f0> SourceModule| <f1> torch.distributed.nn.jit.instantiator",shape="record"];
	"torch.distributed.nn.jit.templates.remote_module_template" [label="<f0> SourceModule| <f1> torch.distributed.nn.jit.templates.remote_module_template",shape="record"];
	"torch.distributed.nn.jit.templates" [label="<f0> Package| <f1> torch.distributed.nn.jit.templates",shape="record"];
	"torch.distributed.nn.jit" [label="<f0> Package| <f1> torch.distributed.nn.jit",shape="record"];
	"torch.distributed.checkpoint.filesystem" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.filesystem",shape="record"];
	"torch.distributed.checkpoint.default_planner" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.default_planner",shape="record"];
	"torch.distributed.checkpoint._sharded_tensor_utils" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._sharded_tensor_utils",shape="record"];
	"torch.distributed.checkpoint._dedup_save_plans" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._dedup_save_plans",shape="record"];
	"torch.distributed.checkpoint._version" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._version",shape="record"];
	"torch.distributed.checkpoint.api" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.api",shape="record"];
	"torch.distributed.checkpoint.resharding" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.resharding",shape="record"];
	"torch.distributed.checkpoint.planner" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.planner",shape="record"];
	"torch.distributed.checkpoint.metadata" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.metadata",shape="record"];
	"torch.distributed._shard.sharded_tensor" [label="<f0> Package| <f1> torch.distributed._shard.sharded_tensor",shape="record"];
	"torch.distributed._shard.sharded_tensor._ops" [label="<f0> Package| <f1> torch.distributed._shard.sharded_tensor._ops",shape="record"];
	"torch.distributed._shard.sharded_tensor._ops.init" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor._ops.init",shape="record"];
	"torch.distributed._shard.sharded_tensor._ops.binary_cmp" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor._ops.binary_cmp",shape="record"];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag",shape="record"];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops" [label="<f0> Package| <f1> torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops",shape="record"];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops._common" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops._common",shape="record"];
	"torch.distributed._shard.sharded_tensor._ops._common" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor._ops._common",shape="record"];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding",shape="record"];
	"torch.distributed._shard.sharded_tensor._ops.tensor_ops" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor._ops.tensor_ops",shape="record"];
	"torch.distributed._shard.sharded_tensor._ops.misc_ops" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor._ops.misc_ops",shape="record"];
	"torch.distributed._shard.metadata" [label="<f0> SourceModule| <f1> torch.distributed._shard.metadata",shape="record"];
	"torch.distributed.tensor._utils" [label="<f0> SourceModule| <f1> torch.distributed.tensor._utils",shape="record"];
	"torch.distributed.tensor._redistribute" [label="<f0> SourceModule| <f1> torch.distributed.tensor._redistribute",shape="record"];
	"torch.distributed.tensor._random" [label="<f0> SourceModule| <f1> torch.distributed.tensor._random",shape="record"];
	"torch.distributed.tensor._dispatch" [label="<f0> SourceModule| <f1> torch.distributed.tensor._dispatch",shape="record"];
	"torch.distributed.tensor._tp_conv" [label="<f0> SourceModule| <f1> torch.distributed.tensor._tp_conv",shape="record"];
	"torch.distributed.tensor._sharding_prop" [label="<f0> SourceModule| <f1> torch.distributed.tensor._sharding_prop",shape="record"];
	"torch.distributed.tensor._ops" [label="<f0> Package| <f1> torch.distributed.tensor._ops",shape="record"];
	"torch.distributed.tensor._ops._view_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._view_ops",shape="record"];
	"torch.distributed.tensor._ops._tensor_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._tensor_ops",shape="record"];
	"torch.distributed.tensor._ops._common_rules" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._common_rules",shape="record"];
	"torch.distributed.tensor._ops._random_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._random_ops",shape="record"];
	"torch.distributed.tensor._ops._pointwise_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._pointwise_ops",shape="record"];
	"torch.distributed.tensor._ops._matrix_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._matrix_ops",shape="record"];
	"torch.distributed.tensor._ops._einsum_strategy" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._einsum_strategy",shape="record"];
	"torch.distributed.tensor._ops._experimental_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._experimental_ops",shape="record"];
	"torch.distributed.tensor._ops._conv_ops" [label="<f0> SourceModule| <f1> torch.distributed.tensor._ops._conv_ops",shape="record"];
	"torch.distributed._composable.fsdp._fsdp_param_group" [label="<f0> SourceModule| <f1> torch.distributed._composable.fsdp._fsdp_param_group",shape="record"];
	"torch.distributed._composable.fsdp._fsdp_param" [label="<f0> SourceModule| <f1> torch.distributed._composable.fsdp._fsdp_param",shape="record"];
	"torch.distributed._composable.fsdp._fsdp_common" [label="<f0> SourceModule| <f1> torch.distributed._composable.fsdp._fsdp_common",shape="record"];
	"torch.distributed._composable.fsdp._fsdp_collectives" [label="<f0> SourceModule| <f1> torch.distributed._composable.fsdp._fsdp_collectives",shape="record"];
	"torch.distributed._composable.fsdp._fsdp_api" [label="<f0> SourceModule| <f1> torch.distributed._composable.fsdp._fsdp_api",shape="record"];
	"torch.distributed._composable.fsdp" [label="<f0> Package| <f1> torch.distributed._composable.fsdp",shape="record"];
	"torch.distributed._composable.fsdp.fully_shard" [label="<f0> SourceModule| <f1> torch.distributed._composable.fsdp.fully_shard",shape="record"];
	"torch.distributed._composable.fsdp._fsdp_state" [label="<f0> SourceModule| <f1> torch.distributed._composable.fsdp._fsdp_state",shape="record"];
	"torch.distributed._composable.fsdp._fsdp_init" [label="<f0> SourceModule| <f1> torch.distributed._composable.fsdp._fsdp_init",shape="record"];
	"torch._dynamo.device_interface" [label="<f0> SourceModule| <f1> torch._dynamo.device_interface",shape="record"];
	"torch._dynamo.create_parameter_op" [label="<f0> SourceModule| <f1> torch._dynamo.create_parameter_op",shape="record"];
	"torch._dynamo.codegen" [label="<f0> SourceModule| <f1> torch._dynamo.codegen",shape="record"];
	"torch._dynamo.side_effects" [label="<f0> SourceModule| <f1> torch._dynamo.side_effects",shape="record"];
	"torch._dynamo.polyfills" [label="<f0> Package| <f1> torch._dynamo.polyfills",shape="record"];
	"torch._dynamo.polyfills.loader" [label="<f0> SourceModule| <f1> torch._dynamo.polyfills.loader",shape="record"];
	"torch._dynamo.polyfills.sys" [label="<f0> SourceModule| <f1> torch._dynamo.polyfills.sys",shape="record"];
	"torch._dynamo.polyfills.os" [label="<f0> SourceModule| <f1> torch._dynamo.polyfills.os",shape="record"];
	"torch._dynamo.decorators" [label="<f0> SourceModule| <f1> torch._dynamo.decorators",shape="record"];
	"'einops._torch_specific'" [label="<f0> MissingModule| <f1> 'einops._torch_specific'",shape="record"];
	"einops" [label="<f0> MissingModule| <f1> einops",shape="record"];
	"torch._dynamo.comptime" [label="<f0> SourceModule| <f1> torch._dynamo.comptime",shape="record"];
	"torch._dynamo.polyfills.itertools" [label="<f0> SourceModule| <f1> torch._dynamo.polyfills.itertools",shape="record"];
	"torch._dynamo.polyfills.functools" [label="<f0> SourceModule| <f1> torch._dynamo.polyfills.functools",shape="record"];
	"torch._dynamo.polyfills.builtins" [label="<f0> SourceModule| <f1> torch._dynamo.polyfills.builtins",shape="record"];
	"torch._streambase" [label="<f0> SourceModule| <f1> torch._streambase",shape="record"];
	"torch.onnx.operators" [label="<f0> SourceModule| <f1> torch.onnx.operators",shape="record"];
	"torch._dynamo.variables.sdpa" [label="<f0> SourceModule| <f1> torch._dynamo.variables.sdpa",shape="record"];
	"torch._dynamo.variables.optimizer" [label="<f0> SourceModule| <f1> torch._dynamo.variables.optimizer",shape="record"];
	"torch._dynamo.variables.nn_module" [label="<f0> SourceModule| <f1> torch._dynamo.variables.nn_module",shape="record"];
	"torch._dynamo.variables.misc" [label="<f0> SourceModule| <f1> torch._dynamo.variables.misc",shape="record"];
	"torch._numpy" [label="<f0> Package| <f1> torch._numpy",shape="record"];
	"torch._numpy.float_" [label="<f0> MissingModule| <f1> torch._numpy.float_",shape="record"];
	"torch._numpy.max" [label="<f0> MissingModule| <f1> torch._numpy.max",shape="record"];
	"torch._numpy.isnan" [label="<f0> MissingModule| <f1> torch._numpy.isnan",shape="record"];
	"torch._numpy.signbit" [label="<f0> MissingModule| <f1> torch._numpy.signbit",shape="record"];
	"torch._numpy.real" [label="<f0> MissingModule| <f1> torch._numpy.real",shape="record"];
	"torch._numpy.isscalar" [label="<f0> MissingModule| <f1> torch._numpy.isscalar",shape="record"];
	"torch._numpy.iscomplexobj" [label="<f0> MissingModule| <f1> torch._numpy.iscomplexobj",shape="record"];
	"torch._numpy.imag" [label="<f0> MissingModule| <f1> torch._numpy.imag",shape="record"];
	"torch._numpy.intp" [label="<f0> MissingModule| <f1> torch._numpy.intp",shape="record"];
	"torch._numpy.empty" [label="<f0> MissingModule| <f1> torch._numpy.empty",shape="record"];
	"torch._numpy.arange" [label="<f0> MissingModule| <f1> torch._numpy.arange",shape="record"];
	"torch._numpy._ndarray" [label="<f0> SourceModule| <f1> torch._numpy._ndarray",shape="record"];
	"torch._numpy._normalizations" [label="<f0> SourceModule| <f1> torch._numpy._normalizations",shape="record"];
	"torch._numpy._getlimits" [label="<f0> SourceModule| <f1> torch._numpy._getlimits",shape="record"];
	"torch._numpy.random" [label="<f0> SourceModule| <f1> torch._numpy.random",shape="record"];
	"torch._numpy.linalg" [label="<f0> SourceModule| <f1> torch._numpy.linalg",shape="record"];
	"torch._numpy.fft" [label="<f0> SourceModule| <f1> torch._numpy.fft",shape="record"];
	"torch._numpy._ufuncs" [label="<f0> SourceModule| <f1> torch._numpy._ufuncs",shape="record"];
	"torch._numpy._unary_ufuncs_impl" [label="<f0> SourceModule| <f1> torch._numpy._unary_ufuncs_impl",shape="record"];
	"torch.trunc" [label="<f0> MissingModule| <f1> torch.trunc",shape="record"];
	"torch.tanh" [label="<f0> MissingModule| <f1> torch.tanh",shape="record"];
	"torch.tan" [label="<f0> MissingModule| <f1> torch.tan",shape="record"];
	"torch.square" [label="<f0> MissingModule| <f1> torch.square",shape="record"];
	"torch.sqrt" [label="<f0> MissingModule| <f1> torch.sqrt",shape="record"];
	"torch.sinh" [label="<f0> MissingModule| <f1> torch.sinh",shape="record"];
	"torch.sin" [label="<f0> MissingModule| <f1> torch.sin",shape="record"];
	"torch.signbit" [label="<f0> MissingModule| <f1> torch.signbit",shape="record"];
	"torch.sign" [label="<f0> MissingModule| <f1> torch.sign",shape="record"];
	"torch.round" [label="<f0> MissingModule| <f1> torch.round",shape="record"];
	"torch.reciprocal" [label="<f0> MissingModule| <f1> torch.reciprocal",shape="record"];
	"torch.rad2deg" [label="<f0> MissingModule| <f1> torch.rad2deg",shape="record"];
	"torch.negative" [label="<f0> MissingModule| <f1> torch.negative",shape="record"];
	"torch.logical_not" [label="<f0> MissingModule| <f1> torch.logical_not",shape="record"];
	"torch.log2" [label="<f0> MissingModule| <f1> torch.log2",shape="record"];
	"torch.log1p" [label="<f0> MissingModule| <f1> torch.log1p",shape="record"];
	"torch.log10" [label="<f0> MissingModule| <f1> torch.log10",shape="record"];
	"torch.log" [label="<f0> MissingModule| <f1> torch.log",shape="record"];
	"torch.isnan" [label="<f0> MissingModule| <f1> torch.isnan",shape="record"];
	"torch.isinf" [label="<f0> MissingModule| <f1> torch.isinf",shape="record"];
	"torch.isfinite" [label="<f0> MissingModule| <f1> torch.isfinite",shape="record"];
	"torch.floor" [label="<f0> MissingModule| <f1> torch.floor",shape="record"];
	"torch.expm1" [label="<f0> MissingModule| <f1> torch.expm1",shape="record"];
	"torch.exp2" [label="<f0> MissingModule| <f1> torch.exp2",shape="record"];
	"torch.exp" [label="<f0> MissingModule| <f1> torch.exp",shape="record"];
	"torch.deg2rad" [label="<f0> MissingModule| <f1> torch.deg2rad",shape="record"];
	"torch.cosh" [label="<f0> MissingModule| <f1> torch.cosh",shape="record"];
	"torch.cos" [label="<f0> MissingModule| <f1> torch.cos",shape="record"];
	"torch.conj_physical" [label="<f0> MissingModule| <f1> torch.conj_physical",shape="record"];
	"torch.ceil" [label="<f0> MissingModule| <f1> torch.ceil",shape="record"];
	"torch.bitwise_not" [label="<f0> MissingModule| <f1> torch.bitwise_not",shape="record"];
	"torch.arctanh" [label="<f0> MissingModule| <f1> torch.arctanh",shape="record"];
	"torch.arctan" [label="<f0> MissingModule| <f1> torch.arctan",shape="record"];
	"torch.arcsinh" [label="<f0> MissingModule| <f1> torch.arcsinh",shape="record"];
	"torch.arcsin" [label="<f0> MissingModule| <f1> torch.arcsin",shape="record"];
	"torch.arccosh" [label="<f0> MissingModule| <f1> torch.arccosh",shape="record"];
	"torch.arccos" [label="<f0> MissingModule| <f1> torch.arccos",shape="record"];
	"torch.absolute" [label="<f0> MissingModule| <f1> torch.absolute",shape="record"];
	"torch._numpy._binary_ufuncs_impl" [label="<f0> SourceModule| <f1> torch._numpy._binary_ufuncs_impl",shape="record"];
	"torch.true_divide" [label="<f0> MissingModule| <f1> torch.true_divide",shape="record"];
	"torch.subtract" [label="<f0> MissingModule| <f1> torch.subtract",shape="record"];
	"torch.remainder" [label="<f0> MissingModule| <f1> torch.remainder",shape="record"];
	"torch.pow" [label="<f0> MissingModule| <f1> torch.pow",shape="record"];
	"torch.not_equal" [label="<f0> MissingModule| <f1> torch.not_equal",shape="record"];
	"torch.nextafter" [label="<f0> MissingModule| <f1> torch.nextafter",shape="record"];
	"torch.multiply" [label="<f0> MissingModule| <f1> torch.multiply",shape="record"];
	"torch.minimum" [label="<f0> MissingModule| <f1> torch.minimum",shape="record"];
	"torch.maximum" [label="<f0> MissingModule| <f1> torch.maximum",shape="record"];
	"torch.logical_xor" [label="<f0> MissingModule| <f1> torch.logical_xor",shape="record"];
	"torch.logical_or" [label="<f0> MissingModule| <f1> torch.logical_or",shape="record"];
	"torch.logical_and" [label="<f0> MissingModule| <f1> torch.logical_and",shape="record"];
	"torch.logaddexp2" [label="<f0> MissingModule| <f1> torch.logaddexp2",shape="record"];
	"torch.logaddexp" [label="<f0> MissingModule| <f1> torch.logaddexp",shape="record"];
	"torch.less_equal" [label="<f0> MissingModule| <f1> torch.less_equal",shape="record"];
	"torch.less" [label="<f0> MissingModule| <f1> torch.less",shape="record"];
	"torch.ldexp" [label="<f0> MissingModule| <f1> torch.ldexp",shape="record"];
	"torch.lcm" [label="<f0> MissingModule| <f1> torch.lcm",shape="record"];
	"torch.hypot" [label="<f0> MissingModule| <f1> torch.hypot",shape="record"];
	"torch.heaviside" [label="<f0> MissingModule| <f1> torch.heaviside",shape="record"];
	"torch.greater_equal" [label="<f0> MissingModule| <f1> torch.greater_equal",shape="record"];
	"torch.greater" [label="<f0> MissingModule| <f1> torch.greater",shape="record"];
	"torch.gcd" [label="<f0> MissingModule| <f1> torch.gcd",shape="record"];
	"torch.fmod" [label="<f0> MissingModule| <f1> torch.fmod",shape="record"];
	"torch.fmin" [label="<f0> MissingModule| <f1> torch.fmin",shape="record"];
	"torch.fmax" [label="<f0> MissingModule| <f1> torch.fmax",shape="record"];
	"torch.floor_divide" [label="<f0> MissingModule| <f1> torch.floor_divide",shape="record"];
	"torch.float_power" [label="<f0> MissingModule| <f1> torch.float_power",shape="record"];
	"torch.eq" [label="<f0> MissingModule| <f1> torch.eq",shape="record"];
	"torch.divide" [label="<f0> MissingModule| <f1> torch.divide",shape="record"];
	"torch.copysign" [label="<f0> MissingModule| <f1> torch.copysign",shape="record"];
	"torch.bitwise_xor" [label="<f0> MissingModule| <f1> torch.bitwise_xor",shape="record"];
	"torch.bitwise_right_shift" [label="<f0> MissingModule| <f1> torch.bitwise_right_shift",shape="record"];
	"torch.bitwise_or" [label="<f0> MissingModule| <f1> torch.bitwise_or",shape="record"];
	"torch.bitwise_left_shift" [label="<f0> MissingModule| <f1> torch.bitwise_left_shift",shape="record"];
	"torch.bitwise_and" [label="<f0> MissingModule| <f1> torch.bitwise_and",shape="record"];
	"torch.arctan2" [label="<f0> MissingModule| <f1> torch.arctan2",shape="record"];
	"torch.add" [label="<f0> MissingModule| <f1> torch.add",shape="record"];
	"torch._numpy._funcs" [label="<f0> SourceModule| <f1> torch._numpy._funcs",shape="record"];
	"torch._numpy._reductions_impl" [label="<f0> SourceModule| <f1> torch._numpy._reductions_impl",shape="record"];
	"torch._numpy._funcs_impl" [label="<f0> SourceModule| <f1> torch._numpy._funcs_impl",shape="record"];
	"torch.broadcast_shapes" [label="<f0> MissingModule| <f1> torch.broadcast_shapes",shape="record"];
	"torch._numpy._util" [label="<f0> SourceModule| <f1> torch._numpy._util",shape="record"];
	"torch._numpy._dtypes" [label="<f0> SourceModule| <f1> torch._numpy._dtypes",shape="record"];
	"torch._numpy._dtypes_impl" [label="<f0> SourceModule| <f1> torch._numpy._dtypes_impl",shape="record"];
	"torch._numpy._casting_dicts" [label="<f0> SourceModule| <f1> torch._numpy._casting_dicts",shape="record"];
	"torch._dynamo.variables.iter" [label="<f0> SourceModule| <f1> torch._dynamo.variables.iter",shape="record"];
	"torch._dynamo.variables.higher_order_ops" [label="<f0> SourceModule| <f1> torch._dynamo.variables.higher_order_ops",shape="record"];
	"torch._higher_order_ops.flex_attention" [label="<f0> SourceModule| <f1> torch._higher_order_ops.flex_attention",shape="record"];
	"torch.nn.attention.flex_attention" [label="<f0> SourceModule| <f1> torch.nn.attention.flex_attention",shape="record"];
	"torch.nn.attention._utils" [label="<f0> SourceModule| <f1> torch.nn.attention._utils",shape="record"];
	"torch._dynamo.variables.functions" [label="<f0> SourceModule| <f1> torch._dynamo.variables.functions",shape="record"];
	"torch._dynamo.variables.distributed" [label="<f0> SourceModule| <f1> torch._dynamo.variables.distributed",shape="record"];
	"torch._dynamo._trace_wrapped_higher_order_op" [label="<f0> SourceModule| <f1> torch._dynamo._trace_wrapped_higher_order_op",shape="record"];
	"torch.fx.experimental._backward_state" [label="<f0> SourceModule| <f1> torch.fx.experimental._backward_state",shape="record"];
	"torch._dynamo.variables.builtin" [label="<f0> SourceModule| <f1> torch._dynamo.variables.builtin",shape="record"];
	"torch._dynamo.variables.lazy" [label="<f0> SourceModule| <f1> torch._dynamo.variables.lazy",shape="record"];
	"torch._dynamo.variables.dicts" [label="<f0> SourceModule| <f1> torch._dynamo.variables.dicts",shape="record"];
	"torch._dynamo.variables.user_defined" [label="<f0> SourceModule| <f1> torch._dynamo.variables.user_defined",shape="record"];
	"torchrec" [label="<f0> MissingModule| <f1> torchrec",shape="record"];
	"torch.testing._internal.jit_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.jit_utils",shape="record"];
	"torch.testing._internal.common_jit" [label="<f0> SourceModule| <f1> torch.testing._internal.common_jit",shape="record"];
	"torch.jit.quantized" [label="<f0> SourceModule| <f1> torch.jit.quantized",shape="record"];
	"torch.jit._logging" [label="<f0> SourceModule| <f1> torch.jit._logging",shape="record"];
	"'_pytest.recwarn'" [label="<f0> MissingModule| <f1> '_pytest.recwarn'",shape="record"];
	"_pytest" [label="<f0> MissingModule| <f1> _pytest",shape="record"];
	"torch._dynamo.variables.tensor" [label="<f0> SourceModule| <f1> torch._dynamo.variables.tensor",shape="record"];
	"torch.random" [label="<f0> SourceModule| <f1> torch.random",shape="record"];
	"torch.xpu" [label="<f0> Package| <f1> torch.xpu",shape="record"];
	"torch.xpu.random" [label="<f0> SourceModule| <f1> torch.xpu.random",shape="record"];
	"torch.xpu.memory" [label="<f0> SourceModule| <f1> torch.xpu.memory",shape="record"];
	"torch.xpu.streams" [label="<f0> SourceModule| <f1> torch.xpu.streams",shape="record"];
	"torch.xpu._utils" [label="<f0> SourceModule| <f1> torch.xpu._utils",shape="record"];
	"torch.mps" [label="<f0> Package| <f1> torch.mps",shape="record"];
	"torch.mps.event" [label="<f0> SourceModule| <f1> torch.mps.event",shape="record"];
	"torch.mps.profiler" [label="<f0> SourceModule| <f1> torch.mps.profiler",shape="record"];
	"torch._dynamo.variables.lists" [label="<f0> SourceModule| <f1> torch._dynamo.variables.lists",shape="record"];
	"torch._dynamo.variables.ctx_manager" [label="<f0> SourceModule| <f1> torch._dynamo.variables.ctx_manager",shape="record"];
	"torch._dynamo.variables.constant" [label="<f0> SourceModule| <f1> torch._dynamo.variables.constant",shape="record"];
	"torch._dynamo.variables.base" [label="<f0> SourceModule| <f1> torch._dynamo.variables.base",shape="record"];
	"torch._dynamo.current_scope_id" [label="<f0> SourceModule| <f1> torch._dynamo.current_scope_id",shape="record"];
	"torch.utils._device" [label="<f0> SourceModule| <f1> torch.utils._device",shape="record"];
	"torch.utils._contextlib" [label="<f0> SourceModule| <f1> torch.utils._contextlib",shape="record"];
	"torch._functorch.partitioners" [label="<f0> SourceModule| <f1> torch._functorch.partitioners",shape="record"];
	"'scipy.optimize'" [label="<f0> MissingModule| <f1> 'scipy.optimize'",shape="record"];
	"networkx" [label="<f0> Package| <f1> networkx",shape="record"];
	"networkx.drawing" [label="<f0> Package| <f1> networkx.drawing",shape="record"];
	"networkx.drawing.nx_pydot" [label="<f0> SourceModule| <f1> networkx.drawing.nx_pydot",shape="record"];
	"networkx.drawing.nx_agraph" [label="<f0> SourceModule| <f1> networkx.drawing.nx_agraph",shape="record"];
	"pygraphviz" [label="<f0> MissingModule| <f1> pygraphviz",shape="record"];
	"networkx.drawing.nx_pylab" [label="<f0> SourceModule| <f1> networkx.drawing.nx_pylab",shape="record"];
	"'matplotlib.cm'" [label="<f0> MissingModule| <f1> 'matplotlib.cm'",shape="record"];
	"'matplotlib.colors'" [label="<f0> MissingModule| <f1> 'matplotlib.colors'",shape="record"];
	"'matplotlib.patches'" [label="<f0> MissingModule| <f1> 'matplotlib.patches'",shape="record"];
	"'matplotlib.path'" [label="<f0> MissingModule| <f1> 'matplotlib.path'",shape="record"];
	"'matplotlib.collections'" [label="<f0> MissingModule| <f1> 'matplotlib.collections'",shape="record"];
	"networkx.drawing.nx_latex" [label="<f0> SourceModule| <f1> networkx.drawing.nx_latex",shape="record"];
	"networkx.drawing.layout" [label="<f0> SourceModule| <f1> networkx.drawing.layout",shape="record"];
	"networkx.linalg" [label="<f0> Package| <f1> networkx.linalg",shape="record"];
	"networkx.linalg.bethehessianmatrix" [label="<f0> SourceModule| <f1> networkx.linalg.bethehessianmatrix",shape="record"];
	"networkx.linalg.modularitymatrix" [label="<f0> SourceModule| <f1> networkx.linalg.modularitymatrix",shape="record"];
	"networkx.linalg.algebraicconnectivity" [label="<f0> SourceModule| <f1> networkx.linalg.algebraicconnectivity",shape="record"];
	"networkx.linalg.laplacianmatrix" [label="<f0> SourceModule| <f1> networkx.linalg.laplacianmatrix",shape="record"];
	"networkx.linalg.graphmatrix" [label="<f0> SourceModule| <f1> networkx.linalg.graphmatrix",shape="record"];
	"networkx.linalg.spectrum" [label="<f0> SourceModule| <f1> networkx.linalg.spectrum",shape="record"];
	"networkx.linalg.attrmatrix" [label="<f0> SourceModule| <f1> networkx.linalg.attrmatrix",shape="record"];
	"networkx.algorithms" [label="<f0> Package| <f1> networkx.algorithms",shape="record"];
	"networkx.algorithms.tree.recognition" [label="<f0> SourceModule| <f1> networkx.algorithms.tree.recognition",shape="record"];
	"networkx.algorithms.tree.operations" [label="<f0> SourceModule| <f1> networkx.algorithms.tree.operations",shape="record"];
	"networkx.algorithms.tree.mst" [label="<f0> SourceModule| <f1> networkx.algorithms.tree.mst",shape="record"];
	"networkx.algorithms.tree.decomposition" [label="<f0> SourceModule| <f1> networkx.algorithms.tree.decomposition",shape="record"];
	"networkx.algorithms.tree.coding" [label="<f0> SourceModule| <f1> networkx.algorithms.tree.coding",shape="record"];
	"networkx.algorithms.tree.branchings" [label="<f0> SourceModule| <f1> networkx.algorithms.tree.branchings",shape="record"];
	"networkx.algorithms.isomorphism.vf2pp" [label="<f0> SourceModule| <f1> networkx.algorithms.isomorphism.vf2pp",shape="record"];
	"networkx.algorithms.tree" [label="<f0> Package| <f1> networkx.algorithms.tree",shape="record"];
	"networkx.algorithms.tournament" [label="<f0> SourceModule| <f1> networkx.algorithms.tournament",shape="record"];
	"networkx.algorithms.isomorphism" [label="<f0> Package| <f1> networkx.algorithms.isomorphism",shape="record"];
	"networkx.algorithms.isomorphism.tree_isomorphism" [label="<f0> SourceModule| <f1> networkx.algorithms.isomorphism.tree_isomorphism",shape="record"];
	"networkx.utils.decorators" [label="<f0> SourceModule| <f1> networkx.utils.decorators",shape="record"];
	"networkx.algorithms.isomorphism.ismags" [label="<f0> SourceModule| <f1> networkx.algorithms.isomorphism.ismags",shape="record"];
	"networkx.algorithms.isomorphism.temporalisomorphvf2" [label="<f0> SourceModule| <f1> networkx.algorithms.isomorphism.temporalisomorphvf2",shape="record"];
	"networkx.algorithms.isomorphism.matchhelpers" [label="<f0> SourceModule| <f1> networkx.algorithms.isomorphism.matchhelpers",shape="record"];
	"networkx.algorithms.isomorphism.vf2userfunc" [label="<f0> SourceModule| <f1> networkx.algorithms.isomorphism.vf2userfunc",shape="record"];
	"networkx.algorithms.isomorphism.isomorphvf2" [label="<f0> SourceModule| <f1> networkx.algorithms.isomorphism.isomorphvf2",shape="record"];
	"networkx.algorithms.isomorphism.isomorph" [label="<f0> SourceModule| <f1> networkx.algorithms.isomorphism.isomorph",shape="record"];
	"networkx.algorithms.flow" [label="<f0> Package| <f1> networkx.algorithms.flow",shape="record"];
	"networkx.algorithms.flow.utils" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.utils",shape="record"];
	"networkx.algorithms.flow.networksimplex" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.networksimplex",shape="record"];
	"networkx.algorithms.flow.capacityscaling" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.capacityscaling",shape="record"];
	"networkx.algorithms.flow.shortestaugmentingpath" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.shortestaugmentingpath",shape="record"];
	"networkx.algorithms.flow.preflowpush" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.preflowpush",shape="record"];
	"networkx.algorithms.flow.gomory_hu" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.gomory_hu",shape="record"];
	"networkx.algorithms.flow.edmondskarp" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.edmondskarp",shape="record"];
	"networkx.algorithms.flow.dinitz_alg" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.dinitz_alg",shape="record"];
	"networkx.algorithms.flow.boykovkolmogorov" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.boykovkolmogorov",shape="record"];
	"networkx.algorithms.flow.mincost" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.mincost",shape="record"];
	"networkx.algorithms.flow.maxflow" [label="<f0> SourceModule| <f1> networkx.algorithms.flow.maxflow",shape="record"];
	"networkx.algorithms.community" [label="<f0> Package| <f1> networkx.algorithms.community",shape="record"];
	"networkx.algorithms.community.louvain" [label="<f0> SourceModule| <f1> networkx.algorithms.community.louvain",shape="record"];
	"networkx.algorithms.community.community_utils" [label="<f0> SourceModule| <f1> networkx.algorithms.community.community_utils",shape="record"];
	"networkx.algorithms.community.quality" [label="<f0> SourceModule| <f1> networkx.algorithms.community.quality",shape="record"];
	"networkx.algorithms.community.modularity_max" [label="<f0> SourceModule| <f1> networkx.algorithms.community.modularity_max",shape="record"];
	"networkx.utils.mapped_queue" [label="<f0> SourceModule| <f1> networkx.utils.mapped_queue",shape="record"];
	"networkx.algorithms.community.lukes" [label="<f0> SourceModule| <f1> networkx.algorithms.community.lukes",shape="record"];
	"networkx.algorithms.community.label_propagation" [label="<f0> SourceModule| <f1> networkx.algorithms.community.label_propagation",shape="record"];
	"networkx.algorithms.community.kernighan_lin" [label="<f0> SourceModule| <f1> networkx.algorithms.community.kernighan_lin",shape="record"];
	"networkx.algorithms.community.kclique" [label="<f0> SourceModule| <f1> networkx.algorithms.community.kclique",shape="record"];
	"networkx.algorithms.community.divisive" [label="<f0> SourceModule| <f1> networkx.algorithms.community.divisive",shape="record"];
	"networkx.algorithms.community.centrality" [label="<f0> SourceModule| <f1> networkx.algorithms.community.centrality",shape="record"];
	"networkx.algorithms.community.asyn_fluid" [label="<f0> SourceModule| <f1> networkx.algorithms.community.asyn_fluid",shape="record"];
	"networkx.algorithms.connectivity" [label="<f0> Package| <f1> networkx.algorithms.connectivity",shape="record"];
	"networkx.algorithms.connectivity.utils" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.utils",shape="record"];
	"networkx.algorithms.connectivity.stoerwagner" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.stoerwagner",shape="record"];
	"networkx.algorithms.connectivity.kcutsets" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.kcutsets",shape="record"];
	"networkx.algorithms.connectivity.kcomponents" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.kcomponents",shape="record"];
	"networkx.algorithms.connectivity.disjoint_paths" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.disjoint_paths",shape="record"];
	"networkx.algorithms.connectivity.edge_kcomponents" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.edge_kcomponents",shape="record"];
	"networkx.algorithms.connectivity.edge_augmentation" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.edge_augmentation",shape="record"];
	"networkx.algorithms.connectivity.cuts" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.cuts",shape="record"];
	"networkx.algorithms.connectivity.connectivity" [label="<f0> SourceModule| <f1> networkx.algorithms.connectivity.connectivity",shape="record"];
	"networkx.algorithms.node_classification" [label="<f0> SourceModule| <f1> networkx.algorithms.node_classification",shape="record"];
	"networkx.algorithms.bipartite" [label="<f0> Package| <f1> networkx.algorithms.bipartite",shape="record"];
	"networkx.algorithms.bipartite.extendability" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.extendability",shape="record"];
	"networkx.algorithms.bipartite.generators" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.generators",shape="record"];
	"networkx.algorithms.bipartite.spectral" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.spectral",shape="record"];
	"networkx.algorithms.bipartite.redundancy" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.redundancy",shape="record"];
	"networkx.algorithms.bipartite.projection" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.projection",shape="record"];
	"networkx.algorithms.bipartite.matrix" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.matrix",shape="record"];
	"networkx.algorithms.bipartite.matching" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.matching",shape="record"];
	"networkx.algorithms.bipartite.edgelist" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.edgelist",shape="record"];
	"networkx.algorithms.bipartite.covering" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.covering",shape="record"];
	"networkx.algorithms.bipartite.cluster" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.cluster",shape="record"];
	"networkx.algorithms.bipartite.centrality" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.centrality",shape="record"];
	"networkx.algorithms.bipartite.basic" [label="<f0> SourceModule| <f1> networkx.algorithms.bipartite.basic",shape="record"];
	"networkx.algorithms.approximation" [label="<f0> Package| <f1> networkx.algorithms.approximation",shape="record"];
	"networkx.algorithms.approximation.maxcut" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.maxcut",shape="record"];
	"networkx.algorithms.approximation.vertex_cover" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.vertex_cover",shape="record"];
	"networkx.algorithms.approximation.treewidth" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.treewidth",shape="record"];
	"networkx.algorithms.approximation.traveling_salesman" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.traveling_salesman",shape="record"];
	"networkx.algorithms.approximation.steinertree" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.steinertree",shape="record"];
	"networkx.algorithms.approximation.matching" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.matching",shape="record"];
	"networkx.algorithms.approximation.kcomponents" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.kcomponents",shape="record"];
	"networkx.algorithms.approximation.dominating_set" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.dominating_set",shape="record"];
	"networkx.algorithms.approximation.distance_measures" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.distance_measures",shape="record"];
	"networkx.algorithms.approximation.connectivity" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.connectivity",shape="record"];
	"networkx.algorithms.approximation.clique" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.clique",shape="record"];
	"networkx.algorithms.approximation.ramsey" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.ramsey",shape="record"];
	"networkx.algorithms.approximation.clustering_coefficient" [label="<f0> SourceModule| <f1> networkx.algorithms.approximation.clustering_coefficient",shape="record"];
	"networkx.algorithms.wiener" [label="<f0> SourceModule| <f1> networkx.algorithms.wiener",shape="record"];
	"networkx.algorithms.walks" [label="<f0> SourceModule| <f1> networkx.algorithms.walks",shape="record"];
	"networkx.algorithms.voronoi" [label="<f0> SourceModule| <f1> networkx.algorithms.voronoi",shape="record"];
	"networkx.algorithms.vitality" [label="<f0> SourceModule| <f1> networkx.algorithms.vitality",shape="record"];
	"networkx.algorithms.triads" [label="<f0> SourceModule| <f1> networkx.algorithms.triads",shape="record"];
	"networkx.algorithms.traversal" [label="<f0> Package| <f1> networkx.algorithms.traversal",shape="record"];
	"networkx.algorithms.traversal.edgebfs" [label="<f0> SourceModule| <f1> networkx.algorithms.traversal.edgebfs",shape="record"];
	"networkx.algorithms.traversal.edgedfs" [label="<f0> SourceModule| <f1> networkx.algorithms.traversal.edgedfs",shape="record"];
	"networkx.algorithms.traversal.depth_first_search" [label="<f0> SourceModule| <f1> networkx.algorithms.traversal.depth_first_search",shape="record"];
	"networkx.algorithms.traversal.breadth_first_search" [label="<f0> SourceModule| <f1> networkx.algorithms.traversal.breadth_first_search",shape="record"];
	"networkx.algorithms.traversal.beamsearch" [label="<f0> SourceModule| <f1> networkx.algorithms.traversal.beamsearch",shape="record"];
	"networkx.algorithms.time_dependent" [label="<f0> SourceModule| <f1> networkx.algorithms.time_dependent",shape="record"];
	"networkx.algorithms.swap" [label="<f0> SourceModule| <f1> networkx.algorithms.swap",shape="record"];
	"networkx.algorithms.summarization" [label="<f0> SourceModule| <f1> networkx.algorithms.summarization",shape="record"];
	"networkx.algorithms.sparsifiers" [label="<f0> SourceModule| <f1> networkx.algorithms.sparsifiers",shape="record"];
	"networkx.algorithms.structuralholes" [label="<f0> SourceModule| <f1> networkx.algorithms.structuralholes",shape="record"];
	"networkx.algorithms.smetric" [label="<f0> SourceModule| <f1> networkx.algorithms.smetric",shape="record"];
	"networkx.algorithms.smallworld" [label="<f0> SourceModule| <f1> networkx.algorithms.smallworld",shape="record"];
	"networkx.algorithms.simple_paths" [label="<f0> SourceModule| <f1> networkx.algorithms.simple_paths",shape="record"];
	"networkx.algorithms.shortest_paths.weighted" [label="<f0> SourceModule| <f1> networkx.algorithms.shortest_paths.weighted",shape="record"];
	"networkx.algorithms.shortest_paths.generic" [label="<f0> SourceModule| <f1> networkx.algorithms.shortest_paths.generic",shape="record"];
	"networkx.algorithms.graph_hashing" [label="<f0> SourceModule| <f1> networkx.algorithms.graph_hashing",shape="record"];
	"networkx.algorithms.similarity" [label="<f0> SourceModule| <f1> networkx.algorithms.similarity",shape="record"];
	"networkx.algorithms.shortest_paths" [label="<f0> Package| <f1> networkx.algorithms.shortest_paths",shape="record"];
	"networkx.algorithms.shortest_paths.dense" [label="<f0> SourceModule| <f1> networkx.algorithms.shortest_paths.dense",shape="record"];
	"networkx.algorithms.shortest_paths.astar" [label="<f0> SourceModule| <f1> networkx.algorithms.shortest_paths.astar",shape="record"];
	"networkx.algorithms.shortest_paths.unweighted" [label="<f0> SourceModule| <f1> networkx.algorithms.shortest_paths.unweighted",shape="record"];
	"networkx.algorithms.richclub" [label="<f0> SourceModule| <f1> networkx.algorithms.richclub",shape="record"];
	"networkx.algorithms.regular" [label="<f0> SourceModule| <f1> networkx.algorithms.regular",shape="record"];
	"networkx.algorithms.reciprocity" [label="<f0> SourceModule| <f1> networkx.algorithms.reciprocity",shape="record"];
	"networkx.algorithms.polynomials" [label="<f0> SourceModule| <f1> networkx.algorithms.polynomials",shape="record"];
	"networkx.algorithms.planar_drawing" [label="<f0> SourceModule| <f1> networkx.algorithms.planar_drawing",shape="record"];
	"networkx.algorithms.planarity" [label="<f0> SourceModule| <f1> networkx.algorithms.planarity",shape="record"];
	"networkx.algorithms.operators" [label="<f0> Package| <f1> networkx.algorithms.operators",shape="record"];
	"networkx.algorithms.operators.unary" [label="<f0> SourceModule| <f1> networkx.algorithms.operators.unary",shape="record"];
	"networkx.algorithms.operators.product" [label="<f0> SourceModule| <f1> networkx.algorithms.operators.product",shape="record"];
	"networkx.algorithms.operators.binary" [label="<f0> SourceModule| <f1> networkx.algorithms.operators.binary",shape="record"];
	"networkx.algorithms.operators.all" [label="<f0> SourceModule| <f1> networkx.algorithms.operators.all",shape="record"];
	"networkx.algorithms.non_randomness" [label="<f0> SourceModule| <f1> networkx.algorithms.non_randomness",shape="record"];
	"networkx.algorithms.moral" [label="<f0> SourceModule| <f1> networkx.algorithms.moral",shape="record"];
	"networkx.algorithms.mis" [label="<f0> SourceModule| <f1> networkx.algorithms.mis",shape="record"];
	"networkx.algorithms.minors" [label="<f0> Package| <f1> networkx.algorithms.minors",shape="record"];
	"networkx.algorithms.minors.contraction" [label="<f0> SourceModule| <f1> networkx.algorithms.minors.contraction",shape="record"];
	"networkx.algorithms.matching" [label="<f0> SourceModule| <f1> networkx.algorithms.matching",shape="record"];
	"networkx.algorithms.isolate" [label="<f0> SourceModule| <f1> networkx.algorithms.isolate",shape="record"];
	"networkx.algorithms.lowest_common_ancestors" [label="<f0> SourceModule| <f1> networkx.algorithms.lowest_common_ancestors",shape="record"];
	"networkx.algorithms.link_prediction" [label="<f0> SourceModule| <f1> networkx.algorithms.link_prediction",shape="record"];
	"networkx.algorithms.link_analysis" [label="<f0> Package| <f1> networkx.algorithms.link_analysis",shape="record"];
	"networkx.algorithms.link_analysis.pagerank_alg" [label="<f0> SourceModule| <f1> networkx.algorithms.link_analysis.pagerank_alg",shape="record"];
	"networkx.algorithms.link_analysis.hits_alg" [label="<f0> SourceModule| <f1> networkx.algorithms.link_analysis.hits_alg",shape="record"];
	"networkx.algorithms.hybrid" [label="<f0> SourceModule| <f1> networkx.algorithms.hybrid",shape="record"];
	"networkx.algorithms.hierarchy" [label="<f0> SourceModule| <f1> networkx.algorithms.hierarchy",shape="record"];
	"networkx.algorithms.graphical" [label="<f0> SourceModule| <f1> networkx.algorithms.graphical",shape="record"];
	"networkx.algorithms.euler" [label="<f0> SourceModule| <f1> networkx.algorithms.euler",shape="record"];
	"networkx.algorithms.efficiency_measures" [label="<f0> SourceModule| <f1> networkx.algorithms.efficiency_measures",shape="record"];
	"networkx.algorithms.dominating" [label="<f0> SourceModule| <f1> networkx.algorithms.dominating",shape="record"];
	"networkx.algorithms.dominance" [label="<f0> SourceModule| <f1> networkx.algorithms.dominance",shape="record"];
	"networkx.algorithms.distance_regular" [label="<f0> SourceModule| <f1> networkx.algorithms.distance_regular",shape="record"];
	"networkx.algorithms.distance_measures" [label="<f0> SourceModule| <f1> networkx.algorithms.distance_measures",shape="record"];
	"networkx.algorithms.dag" [label="<f0> SourceModule| <f1> networkx.algorithms.dag",shape="record"];
	"networkx.algorithms.d_separation" [label="<f0> SourceModule| <f1> networkx.algorithms.d_separation",shape="record"];
	"networkx.algorithms.cuts" [label="<f0> SourceModule| <f1> networkx.algorithms.cuts",shape="record"];
	"networkx.algorithms.cycles" [label="<f0> SourceModule| <f1> networkx.algorithms.cycles",shape="record"];
	"networkx.algorithms.covering" [label="<f0> SourceModule| <f1> networkx.algorithms.covering",shape="record"];
	"networkx.algorithms.core" [label="<f0> SourceModule| <f1> networkx.algorithms.core",shape="record"];
	"networkx.algorithms.coloring" [label="<f0> Package| <f1> networkx.algorithms.coloring",shape="record"];
	"networkx.algorithms.coloring.equitable_coloring" [label="<f0> SourceModule| <f1> networkx.algorithms.coloring.equitable_coloring",shape="record"];
	"networkx.algorithms.coloring.greedy_coloring" [label="<f0> SourceModule| <f1> networkx.algorithms.coloring.greedy_coloring",shape="record"];
	"networkx.algorithms.components" [label="<f0> Package| <f1> networkx.algorithms.components",shape="record"];
	"networkx.algorithms.components.semiconnected" [label="<f0> SourceModule| <f1> networkx.algorithms.components.semiconnected",shape="record"];
	"networkx.algorithms.components.biconnected" [label="<f0> SourceModule| <f1> networkx.algorithms.components.biconnected",shape="record"];
	"networkx.algorithms.components.attracting" [label="<f0> SourceModule| <f1> networkx.algorithms.components.attracting",shape="record"];
	"networkx.algorithms.components.weakly_connected" [label="<f0> SourceModule| <f1> networkx.algorithms.components.weakly_connected",shape="record"];
	"networkx.algorithms.components.strongly_connected" [label="<f0> SourceModule| <f1> networkx.algorithms.components.strongly_connected",shape="record"];
	"networkx.algorithms.components.connected" [label="<f0> SourceModule| <f1> networkx.algorithms.components.connected",shape="record"];
	"networkx.algorithms.communicability_alg" [label="<f0> SourceModule| <f1> networkx.algorithms.communicability_alg",shape="record"];
	"networkx.algorithms.clique" [label="<f0> SourceModule| <f1> networkx.algorithms.clique",shape="record"];
	"networkx.algorithms.cluster" [label="<f0> SourceModule| <f1> networkx.algorithms.cluster",shape="record"];
	"networkx.algorithms.chordal" [label="<f0> SourceModule| <f1> networkx.algorithms.chordal",shape="record"];
	"networkx.algorithms.centrality" [label="<f0> Package| <f1> networkx.algorithms.centrality",shape="record"];
	"networkx.algorithms.centrality.laplacian" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.laplacian",shape="record"];
	"networkx.algorithms.centrality.voterank_alg" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.voterank_alg",shape="record"];
	"networkx.algorithms.centrality.trophic" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.trophic",shape="record"];
	"networkx.algorithms.centrality.subgraph_alg" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.subgraph_alg",shape="record"];
	"networkx.algorithms.centrality.second_order" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.second_order",shape="record"];
	"networkx.algorithms.centrality.reaching" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.reaching",shape="record"];
	"networkx.algorithms.centrality.percolation" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.percolation",shape="record"];
	"networkx.algorithms.centrality.load" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.load",shape="record"];
	"networkx.algorithms.centrality.katz" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.katz",shape="record"];
	"networkx.algorithms.centrality.harmonic" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.harmonic",shape="record"];
	"networkx.algorithms.centrality.group" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.group",shape="record"];
	"networkx.algorithms.centrality.eigenvector" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.eigenvector",shape="record"];
	"networkx.algorithms.centrality.dispersion" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.dispersion",shape="record"];
	"networkx.algorithms.centrality.degree_alg" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.degree_alg",shape="record"];
	"networkx.algorithms.centrality.current_flow_closeness" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.current_flow_closeness",shape="record"];
	"networkx.algorithms.centrality.flow_matrix" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.flow_matrix",shape="record"];
	"networkx.algorithms.centrality.current_flow_betweenness_subset" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.current_flow_betweenness_subset",shape="record"];
	"networkx.algorithms.centrality.current_flow_betweenness" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.current_flow_betweenness",shape="record"];
	"networkx.algorithms.centrality.closeness" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.closeness",shape="record"];
	"networkx.algorithms.centrality.betweenness_subset" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.betweenness_subset",shape="record"];
	"networkx.algorithms.centrality.betweenness" [label="<f0> SourceModule| <f1> networkx.algorithms.centrality.betweenness",shape="record"];
	"networkx.algorithms.chains" [label="<f0> SourceModule| <f1> networkx.algorithms.chains",shape="record"];
	"networkx.algorithms.bridges" [label="<f0> SourceModule| <f1> networkx.algorithms.bridges",shape="record"];
	"networkx.algorithms.broadcasting" [label="<f0> SourceModule| <f1> networkx.algorithms.broadcasting",shape="record"];
	"networkx.algorithms.boundary" [label="<f0> SourceModule| <f1> networkx.algorithms.boundary",shape="record"];
	"networkx.algorithms.asteroidal" [label="<f0> SourceModule| <f1> networkx.algorithms.asteroidal",shape="record"];
	"networkx.algorithms.assortativity" [label="<f0> Package| <f1> networkx.algorithms.assortativity",shape="record"];
	"networkx.algorithms.assortativity.pairs" [label="<f0> SourceModule| <f1> networkx.algorithms.assortativity.pairs",shape="record"];
	"networkx.algorithms.assortativity.neighbor_degree" [label="<f0> SourceModule| <f1> networkx.algorithms.assortativity.neighbor_degree",shape="record"];
	"networkx.algorithms.assortativity.mixing" [label="<f0> SourceModule| <f1> networkx.algorithms.assortativity.mixing",shape="record"];
	"networkx.algorithms.assortativity.correlation" [label="<f0> SourceModule| <f1> networkx.algorithms.assortativity.correlation",shape="record"];
	"networkx.algorithms.assortativity.connectivity" [label="<f0> SourceModule| <f1> networkx.algorithms.assortativity.connectivity",shape="record"];
	"networkx.readwrite" [label="<f0> Package| <f1> networkx.readwrite",shape="record"];
	"networkx.readwrite.text" [label="<f0> SourceModule| <f1> networkx.readwrite.text",shape="record"];
	"networkx.readwrite.json_graph" [label="<f0> Package| <f1> networkx.readwrite.json_graph",shape="record"];
	"networkx.readwrite.json_graph.cytoscape" [label="<f0> SourceModule| <f1> networkx.readwrite.json_graph.cytoscape",shape="record"];
	"networkx.readwrite.json_graph.tree" [label="<f0> SourceModule| <f1> networkx.readwrite.json_graph.tree",shape="record"];
	"networkx.readwrite.json_graph.adjacency" [label="<f0> SourceModule| <f1> networkx.readwrite.json_graph.adjacency",shape="record"];
	"networkx.readwrite.json_graph.node_link" [label="<f0> SourceModule| <f1> networkx.readwrite.json_graph.node_link",shape="record"];
	"networkx.readwrite.gexf" [label="<f0> SourceModule| <f1> networkx.readwrite.gexf",shape="record"];
	"networkx.readwrite.graphml" [label="<f0> SourceModule| <f1> networkx.readwrite.graphml",shape="record"];
	"'lxml.etree'" [label="<f0> MissingModule| <f1> 'lxml.etree'",shape="record"];
	"networkx.readwrite.gml" [label="<f0> SourceModule| <f1> networkx.readwrite.gml",shape="record"];
	"networkx.readwrite.graph6" [label="<f0> SourceModule| <f1> networkx.readwrite.graph6",shape="record"];
	"networkx.readwrite.sparse6" [label="<f0> SourceModule| <f1> networkx.readwrite.sparse6",shape="record"];
	"networkx.readwrite.leda" [label="<f0> SourceModule| <f1> networkx.readwrite.leda",shape="record"];
	"networkx.readwrite.pajek" [label="<f0> SourceModule| <f1> networkx.readwrite.pajek",shape="record"];
	"networkx.readwrite.edgelist" [label="<f0> SourceModule| <f1> networkx.readwrite.edgelist",shape="record"];
	"networkx.readwrite.multiline_adjlist" [label="<f0> SourceModule| <f1> networkx.readwrite.multiline_adjlist",shape="record"];
	"networkx.readwrite.adjlist" [label="<f0> SourceModule| <f1> networkx.readwrite.adjlist",shape="record"];
	"networkx.generators" [label="<f0> Package| <f1> networkx.generators",shape="record"];
	"networkx.generators.triads" [label="<f0> SourceModule| <f1> networkx.generators.triads",shape="record"];
	"networkx.generators.trees" [label="<f0> SourceModule| <f1> networkx.generators.trees",shape="record"];
	"networkx.generators.time_series" [label="<f0> SourceModule| <f1> networkx.generators.time_series",shape="record"];
	"networkx.generators.sudoku" [label="<f0> SourceModule| <f1> networkx.generators.sudoku",shape="record"];
	"networkx.generators.stochastic" [label="<f0> SourceModule| <f1> networkx.generators.stochastic",shape="record"];
	"networkx.generators.spectral_graph_forge" [label="<f0> SourceModule| <f1> networkx.generators.spectral_graph_forge",shape="record"];
	"networkx.generators.social" [label="<f0> SourceModule| <f1> networkx.generators.social",shape="record"];
	"networkx.generators.small" [label="<f0> SourceModule| <f1> networkx.generators.small",shape="record"];
	"networkx.generators.random_graphs" [label="<f0> SourceModule| <f1> networkx.generators.random_graphs",shape="record"];
	"networkx.utils.misc" [label="<f0> SourceModule| <f1> networkx.utils.misc",shape="record"];
	"networkx.generators.random_clustered" [label="<f0> SourceModule| <f1> networkx.generators.random_clustered",shape="record"];
	"networkx.generators.nonisomorphic_trees" [label="<f0> SourceModule| <f1> networkx.generators.nonisomorphic_trees",shape="record"];
	"networkx.generators.mycielski" [label="<f0> SourceModule| <f1> networkx.generators.mycielski",shape="record"];
	"networkx.generators.line" [label="<f0> SourceModule| <f1> networkx.generators.line",shape="record"];
	"networkx.generators.lattice" [label="<f0> SourceModule| <f1> networkx.generators.lattice",shape="record"];
	"networkx.generators.joint_degree_seq" [label="<f0> SourceModule| <f1> networkx.generators.joint_degree_seq",shape="record"];
	"networkx.generators.interval_graph" [label="<f0> SourceModule| <f1> networkx.generators.interval_graph",shape="record"];
	"networkx.generators.intersection" [label="<f0> SourceModule| <f1> networkx.generators.intersection",shape="record"];
	"networkx.generators.internet_as_graphs" [label="<f0> SourceModule| <f1> networkx.generators.internet_as_graphs",shape="record"];
	"networkx.generators.harary_graph" [label="<f0> SourceModule| <f1> networkx.generators.harary_graph",shape="record"];
	"networkx.generators.geometric" [label="<f0> SourceModule| <f1> networkx.generators.geometric",shape="record"];
	"networkx.generators.expanders" [label="<f0> SourceModule| <f1> networkx.generators.expanders",shape="record"];
	"'scipy.sparse'" [label="<f0> MissingModule| <f1> 'scipy.sparse'",shape="record"];
	"networkx.generators.ego" [label="<f0> SourceModule| <f1> networkx.generators.ego",shape="record"];
	"networkx.generators.duplication" [label="<f0> SourceModule| <f1> networkx.generators.duplication",shape="record"];
	"networkx.generators.directed" [label="<f0> SourceModule| <f1> networkx.generators.directed",shape="record"];
	"networkx.generators.degree_seq" [label="<f0> SourceModule| <f1> networkx.generators.degree_seq",shape="record"];
	"networkx.generators.community" [label="<f0> SourceModule| <f1> networkx.generators.community",shape="record"];
	"networkx.generators.cographs" [label="<f0> SourceModule| <f1> networkx.generators.cographs",shape="record"];
	"networkx.generators.classic" [label="<f0> SourceModule| <f1> networkx.generators.classic",shape="record"];
	"networkx.generators.atlas" [label="<f0> SourceModule| <f1> networkx.generators.atlas",shape="record"];
	"networkx.relabel" [label="<f0> SourceModule| <f1> networkx.relabel",shape="record"];
	"networkx.convert_matrix" [label="<f0> SourceModule| <f1> networkx.convert_matrix",shape="record"];
	"networkx.classes.filters" [label="<f0> SourceModule| <f1> networkx.classes.filters",shape="record"];
	"networkx.classes" [label="<f0> Package| <f1> networkx.classes",shape="record"];
	"networkx.classes.reportviews" [label="<f0> SourceModule| <f1> networkx.classes.reportviews",shape="record"];
	"networkx.classes.coreviews" [label="<f0> SourceModule| <f1> networkx.classes.coreviews",shape="record"];
	"networkx.classes.graphviews" [label="<f0> SourceModule| <f1> networkx.classes.graphviews",shape="record"];
	"networkx.classes.function" [label="<f0> SourceModule| <f1> networkx.classes.function",shape="record"];
	"networkx.classes.multidigraph" [label="<f0> SourceModule| <f1> networkx.classes.multidigraph",shape="record"];
	"networkx.classes.multigraph" [label="<f0> SourceModule| <f1> networkx.classes.multigraph",shape="record"];
	"networkx.classes.digraph" [label="<f0> SourceModule| <f1> networkx.classes.digraph",shape="record"];
	"networkx.classes.graph" [label="<f0> SourceModule| <f1> networkx.classes.graph",shape="record"];
	"networkx.convert" [label="<f0> SourceModule| <f1> networkx.convert",shape="record"];
	"networkx.utils" [label="<f0> Package| <f1> networkx.utils",shape="record"];
	"networkx.utils.backends" [label="<f0> SourceModule| <f1> networkx.utils.backends",shape="record"];
	"networkx.utils.configs" [label="<f0> SourceModule| <f1> networkx.utils.configs",shape="record"];
	"networkx.utils.heaps" [label="<f0> SourceModule| <f1> networkx.utils.heaps",shape="record"];
	"networkx.utils.rcm" [label="<f0> SourceModule| <f1> networkx.utils.rcm",shape="record"];
	"networkx.utils.union_find" [label="<f0> SourceModule| <f1> networkx.utils.union_find",shape="record"];
	"networkx.utils.random_sequence" [label="<f0> SourceModule| <f1> networkx.utils.random_sequence",shape="record"];
	"networkx.exception" [label="<f0> SourceModule| <f1> networkx.exception",shape="record"];
	"networkx.lazy_imports" [label="<f0> SourceModule| <f1> networkx.lazy_imports",shape="record"];
	"torch._functorch._aot_autograd.traced_function_transforms" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.traced_function_transforms",shape="record"];
	"torch._functorch._aot_autograd" [label="<f0> Package| <f1> torch._functorch._aot_autograd",shape="record"];
	"torch._functorch._aot_autograd.subclass_utils" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.subclass_utils",shape="record"];
	"torch._functorch._aot_autograd.schemas" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.schemas",shape="record"];
	"torch._functorch._aot_autograd.runtime_wrappers" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.runtime_wrappers",shape="record"];
	"torch._functorch._aot_autograd.logging_utils" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.logging_utils",shape="record"];
	"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.jit_compile_runtime_wrappers",shape="record"];
	"torch._functorch._aot_autograd.dispatch_and_compile_graph" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.dispatch_and_compile_graph",shape="record"];
	"torch._functorch._aot_autograd.input_output_analysis" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.input_output_analysis",shape="record"];
	"torch._functorch._aot_autograd.functional_utils" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.functional_utils",shape="record"];
	"torch._functorch._aot_autograd.collect_metadata_analysis" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.collect_metadata_analysis",shape="record"];
	"torch._functorch._aot_autograd.autograd_cache" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.autograd_cache",shape="record"];
	"torch._subclasses" [label="<f0> Package| <f1> torch._subclasses",shape="record"];
	"torch._subclasses.fake_utils" [label="<f0> SourceModule| <f1> torch._subclasses.fake_utils",shape="record"];
	"torch._dynamo.compiled_autograd" [label="<f0> SourceModule| <f1> torch._dynamo.compiled_autograd",shape="record"];
	"torch._decomp.decompositions_for_rng" [label="<f0> SourceModule| <f1> torch._decomp.decompositions_for_rng",shape="record"];
	"torch.utils.dlpack" [label="<f0> SourceModule| <f1> torch.utils.dlpack",shape="record"];
	"torch._dynamo.logging" [label="<f0> SourceModule| <f1> torch._dynamo.logging",shape="record"];
	"torch._functorch.compilers" [label="<f0> SourceModule| <f1> torch._functorch.compilers",shape="record"];
	"foo" [label="<f0> MissingModule| <f1> foo",shape="record"];
	"torch._functorch.config" [label="<f0> SourceModule| <f1> torch._functorch.config",shape="record"];
	"'torch.utils._config_typing'" [label="<f0> MissingModule| <f1> 'torch.utils._config_typing'",shape="record"];
	"torch._functorch" [label="<f0> Package| <f1> torch._functorch",shape="record"];
	"functorch.compile" [label="<f0> Package| <f1> functorch.compile",shape="record"];
	"torch._functorch.fx_minifier" [label="<f0> SourceModule| <f1> torch._functorch.fx_minifier",shape="record"];
	"'torch_xla.stablehlo'" [label="<f0> MissingModule| <f1> 'torch_xla.stablehlo'",shape="record"];
	"torch.fx.experimental.validator" [label="<f0> SourceModule| <f1> torch.fx.experimental.validator",shape="record"];
	"torch.fx.experimental.recording" [label="<f0> SourceModule| <f1> torch.fx.experimental.recording",shape="record"];
	"z3" [label="<f0> MissingModule| <f1> z3",shape="record"];
	"torch._dynamo.output_graph" [label="<f0> SourceModule| <f1> torch._dynamo.output_graph",shape="record"];
	"torch._dynamo.code_context" [label="<f0> SourceModule| <f1> torch._dynamo.code_context",shape="record"];
	"torch._dynamo.variables.builder" [label="<f0> SourceModule| <f1> torch._dynamo.variables.builder",shape="record"];
	"torch._dynamo.variables.script_object" [label="<f0> SourceModule| <f1> torch._dynamo.variables.script_object",shape="record"];
	"torch._dynamo.types" [label="<f0> SourceModule| <f1> torch._dynamo.types",shape="record"];
	"torch._dynamo.repro.after_dynamo" [label="<f0> SourceModule| <f1> torch._dynamo.repro.after_dynamo",shape="record"];
	"torch._dynamo.backends.registry" [label="<f0> SourceModule| <f1> torch._dynamo.backends.registry",shape="record"];
	"torch._dynamo.symbolic_convert" [label="<f0> SourceModule| <f1> torch._dynamo.symbolic_convert",shape="record"];
	"torch._dynamo.resume_execution" [label="<f0> SourceModule| <f1> torch._dynamo.resume_execution",shape="record"];
	"torch._dynamo.funcname_cache" [label="<f0> SourceModule| <f1> torch._dynamo.funcname_cache",shape="record"];
	"torch._dynamo.replay_record" [label="<f0> SourceModule| <f1> torch._dynamo.replay_record",shape="record"];
	"torch._dynamo.hooks" [label="<f0> SourceModule| <f1> torch._dynamo.hooks",shape="record"];
	"torch._dynamo.guards" [label="<f0> SourceModule| <f1> torch._dynamo.guards",shape="record"];
	"torch._dynamo.eval_frame" [label="<f0> SourceModule| <f1> torch._dynamo.eval_frame",shape="record"];
	"torch._dynamo.cache_size" [label="<f0> SourceModule| <f1> torch._dynamo.cache_size",shape="record"];
	"torch._dynamo.bytecode_transformation" [label="<f0> SourceModule| <f1> torch._dynamo.bytecode_transformation",shape="record"];
	"torch._dynamo.bytecode_analysis" [label="<f0> SourceModule| <f1> torch._dynamo.bytecode_analysis",shape="record"];
	"torch._dynamo.trace_rules" [label="<f0> SourceModule| <f1> torch._dynamo.trace_rules",shape="record"];
	"torch._dynamo.exc" [label="<f0> SourceModule| <f1> torch._dynamo.exc",shape="record"];
	"torch._dynamo.config" [label="<f0> SourceModule| <f1> torch._dynamo.config",shape="record"];
	"torch.utils._traceback" [label="<f0> SourceModule| <f1> torch.utils._traceback",shape="record"];
	"torch.nn.parallel.distributed" [label="<f0> SourceModule| <f1> torch.nn.parallel.distributed",shape="record"];
	"torch.distributed.algorithms._optimizer_overlap" [label="<f0> Package| <f1> torch.distributed.algorithms._optimizer_overlap",shape="record"];
	"torch.distributed.algorithms._optimizer_overlap.optimizer_overlap" [label="<f0> SourceModule| <f1> torch.distributed.algorithms._optimizer_overlap.optimizer_overlap",shape="record"];
	"torch.distributed.optim" [label="<f0> Package| <f1> torch.distributed.optim",shape="record"];
	"torch.distributed.optim.zero_redundancy_optimizer" [label="<f0> SourceModule| <f1> torch.distributed.optim.zero_redundancy_optimizer",shape="record"];
	"torch.distributed.optim.post_localSGD_optimizer" [label="<f0> SourceModule| <f1> torch.distributed.optim.post_localSGD_optimizer",shape="record"];
	"torch.distributed.algorithms.model_averaging.averagers" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.model_averaging.averagers",shape="record"];
	"torch.distributed.algorithms.model_averaging" [label="<f0> Package| <f1> torch.distributed.algorithms.model_averaging",shape="record"];
	"torch.distributed.algorithms.model_averaging.utils" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.model_averaging.utils",shape="record"];
	"torch.distributed.optim.optimizer" [label="<f0> SourceModule| <f1> torch.distributed.optim.optimizer",shape="record"];
	"torch.distributed.optim.utils" [label="<f0> SourceModule| <f1> torch.distributed.optim.utils",shape="record"];
	"torch.distributed.optim.named_optimizer" [label="<f0> SourceModule| <f1> torch.distributed.optim.named_optimizer",shape="record"];
	"torch.distributed.optim.functional_sgd" [label="<f0> SourceModule| <f1> torch.distributed.optim.functional_sgd",shape="record"];
	"torch.distributed.optim.functional_rprop" [label="<f0> SourceModule| <f1> torch.distributed.optim.functional_rprop",shape="record"];
	"torch.distributed.optim.functional_rmsprop" [label="<f0> SourceModule| <f1> torch.distributed.optim.functional_rmsprop",shape="record"];
	"torch.distributed.optim.functional_adamw" [label="<f0> SourceModule| <f1> torch.distributed.optim.functional_adamw",shape="record"];
	"torch.distributed.optim.functional_adamax" [label="<f0> SourceModule| <f1> torch.distributed.optim.functional_adamax",shape="record"];
	"torch.distributed.optim.functional_adam" [label="<f0> SourceModule| <f1> torch.distributed.optim.functional_adam",shape="record"];
	"torch.distributed.optim.functional_adagrad" [label="<f0> SourceModule| <f1> torch.distributed.optim.functional_adagrad",shape="record"];
	"torch.distributed.optim.functional_adadelta" [label="<f0> SourceModule| <f1> torch.distributed.optim.functional_adadelta",shape="record"];
	"torch.distributed.optim.apply_optimizer_in_backward" [label="<f0> SourceModule| <f1> torch.distributed.optim.apply_optimizer_in_backward",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks.default_hooks" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.ddp_comm_hooks.default_hooks",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks" [label="<f0> Package| <f1> torch.distributed.algorithms.ddp_comm_hooks",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks",shape="record"];
	"torch._logging.structured" [label="<f0> SourceModule| <f1> torch._logging.structured",shape="record"];
	"torch._logging._internal" [label="<f0> SourceModule| <f1> torch._logging._internal",shape="record"];
	"torch._guards" [label="<f0> SourceModule| <f1> torch._guards",shape="record"];
	"torch._dynamo.distributed" [label="<f0> SourceModule| <f1> torch._dynamo.distributed",shape="record"];
	"'torch._C._dynamo'" [label="<f0> MissingModule| <f1> 'torch._C._dynamo'",shape="record"];
	"pstats" [label="<f0> SourceModule| <f1> pstats",shape="record"];
	"cProfile" [label="<f0> SourceModule| <f1> cProfile",shape="record"];
	"profile" [label="<f0> SourceModule| <f1> profile",shape="record"];
	"_lsprof" [label="<f0> BuiltinModule| <f1> _lsprof",shape="record"];
	"torch._inductor.debug" [label="<f0> SourceModule| <f1> torch._inductor.debug",shape="record"];
	"torch.utils.flop_counter" [label="<f0> SourceModule| <f1> torch.utils.flop_counter",shape="record"];
	"torch.utils.module_tracker" [label="<f0> SourceModule| <f1> torch.utils.module_tracker",shape="record"];
	"torch._inductor.sizevars" [label="<f0> SourceModule| <f1> torch._inductor.sizevars",shape="record"];
	"torch._inductor.loop_body" [label="<f0> SourceModule| <f1> torch._inductor.loop_body",shape="record"];
	"torch._inductor.index_propagation" [label="<f0> SourceModule| <f1> torch._inductor.index_propagation",shape="record"];
	"torch._inductor.bounds" [label="<f0> SourceModule| <f1> torch._inductor.bounds",shape="record"];
	"torch._inductor.comm_analysis" [label="<f0> SourceModule| <f1> torch._inductor.comm_analysis",shape="record"];
	"torch._inductor.dependencies" [label="<f0> SourceModule| <f1> torch._inductor.dependencies",shape="record"];
	"torch._inductor.comms" [label="<f0> SourceModule| <f1> torch._inductor.comms",shape="record"];
	"torch._inductor.codegen.simd" [label="<f0> SourceModule| <f1> torch._inductor.codegen.simd",shape="record"];
	"torch._inductor.codegen.triton_combo_kernel" [label="<f0> SourceModule| <f1> torch._inductor.codegen.triton_combo_kernel",shape="record"];
	"torch._inductor.codegen.triton_split_scan" [label="<f0> SourceModule| <f1> torch._inductor.codegen.triton_split_scan",shape="record"];
	"torch._inductor.optimize_indexing" [label="<f0> SourceModule| <f1> torch._inductor.optimize_indexing",shape="record"];
	"torch._inductor.wrapper_benchmark" [label="<f0> SourceModule| <f1> torch._inductor.wrapper_benchmark",shape="record"];
	"torch._inductor.runtime.benchmarking" [label="<f0> SourceModule| <f1> torch._inductor.runtime.benchmarking",shape="record"];
	"'triton.testing'" [label="<f0> MissingModule| <f1> 'triton.testing'",shape="record"];
	"torch._inductor.metrics" [label="<f0> SourceModule| <f1> torch._inductor.metrics",shape="record"];
	"torch.utils._sympy.value_ranges" [label="<f0> SourceModule| <f1> torch.utils._sympy.value_ranges",shape="record"];
	"torch.utils._sympy.functions" [label="<f0> SourceModule| <f1> torch.utils._sympy.functions",shape="record"];
	"torch.utils._ordered_set" [label="<f0> SourceModule| <f1> torch.utils._ordered_set",shape="record"];
	"torch._logging" [label="<f0> Package| <f1> torch._logging",shape="record"];
	"torch._logging._registrations" [label="<f0> SourceModule| <f1> torch._logging._registrations",shape="record"];
	"torch.utils._triton" [label="<f0> SourceModule| <f1> torch.utils._triton",shape="record"];
	"torch._inductor.codegen.memory_planning" [label="<f0> SourceModule| <f1> torch._inductor.codegen.memory_planning",shape="record"];
	"torch._inductor.codegen.cpp" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cpp",shape="record"];
	"torch._inductor.codegen" [label="<f0> Package| <f1> torch._inductor.codegen",shape="record"];
	"torch._inductor.graph" [label="<f0> SourceModule| <f1> torch._inductor.graph",shape="record"];
	"torch._inductor.extern_node_serializer" [label="<f0> SourceModule| <f1> torch._inductor.extern_node_serializer",shape="record"];
	"torch._export.serde.aoti_schema" [label="<f0> SourceModule| <f1> torch._export.serde.aoti_schema",shape="record"];
	"torch._inductor.codegen.triton_utils" [label="<f0> SourceModule| <f1> torch._inductor.codegen.triton_utils",shape="record"];
	"torch._inductor.codegen.common" [label="<f0> SourceModule| <f1> torch._inductor.codegen.common",shape="record"];
	"torch._inductor.codegen.xpu.device_op_overrides" [label="<f0> SourceModule| <f1> torch._inductor.codegen.xpu.device_op_overrides",shape="record"];
	"torch._inductor.codegen.xpu" [label="<f0> Package| <f1> torch._inductor.codegen.xpu",shape="record"];
	"torch._inductor.codegen.halide" [label="<f0> SourceModule| <f1> torch._inductor.codegen.halide",shape="record"];
	"torch._inductor.codegen.cpp_wrapper_cuda" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cpp_wrapper_cuda",shape="record"];
	"torch.float16" [label="<f0> MissingModule| <f1> torch.float16",shape="record"];
	"torch.bfloat16" [label="<f0> MissingModule| <f1> torch.bfloat16",shape="record"];
	"torch._inductor.codegen.codegen_device_driver" [label="<f0> SourceModule| <f1> torch._inductor.codegen.codegen_device_driver",shape="record"];
	"torch._inductor.codegen.aoti_hipify_utils" [label="<f0> SourceModule| <f1> torch._inductor.codegen.aoti_hipify_utils",shape="record"];
	"torch._inductor.virtualized" [label="<f0> SourceModule| <f1> torch._inductor.virtualized",shape="record"];
	"torch._inductor.utils" [label="<f0> SourceModule| <f1> torch._inductor.utils",shape="record"];
	"'ck4inductor.universal_gemm'" [label="<f0> MissingModule| <f1> 'ck4inductor.universal_gemm'",shape="record"];
	"ck4inductor" [label="<f0> MissingModule| <f1> ck4inductor",shape="record"];
	"torch._inductor.runtime.hints" [label="<f0> SourceModule| <f1> torch._inductor.runtime.hints",shape="record"];
	"torch._inductor.runtime.triton_heuristics" [label="<f0> SourceModule| <f1> torch._inductor.runtime.triton_heuristics",shape="record"];
	"'triton.backends'" [label="<f0> MissingModule| <f1> 'triton.backends'",shape="record"];
	"torch._inductor.runtime.coordinate_descent_tuner" [label="<f0> SourceModule| <f1> torch._inductor.runtime.coordinate_descent_tuner",shape="record"];
	"torch._inductor.runtime.autotune_cache" [label="<f0> SourceModule| <f1> torch._inductor.runtime.autotune_cache",shape="record"];
	"torch._inductor.remote_cache" [label="<f0> SourceModule| <f1> torch._inductor.remote_cache",shape="record"];
	"rfe" [label="<f0> MissingModule| <f1> rfe",shape="record"];
	"redis" [label="<f0> MissingModule| <f1> redis",shape="record"];
	"torch._inductor.runtime" [label="<f0> Package| <f1> torch._inductor.runtime",shape="record"];
	"torch._inductor.codecache" [label="<f0> SourceModule| <f1> torch._inductor.codecache",shape="record"];
	"halide" [label="<f0> MissingModule| <f1> halide",shape="record"];
	"torch._inductor.package" [label="<f0> Package| <f1> torch._inductor.package",shape="record"];
	"torch._inductor.package.package" [label="<f0> SourceModule| <f1> torch._inductor.package.package",shape="record"];
	"torch._inductor.package.pt2_archive_constants" [label="<f0> SourceModule| <f1> torch._inductor.package.pt2_archive_constants",shape="record"];
	"torch._inductor.package.build_package" [label="<f0> SourceModule| <f1> torch._inductor.package.build_package",shape="record"];
	"torch._inductor.runtime.compile_tasks" [label="<f0> SourceModule| <f1> torch._inductor.runtime.compile_tasks",shape="record"];
	"torch._inductor.codegen.rocm.compile_command" [label="<f0> SourceModule| <f1> torch._inductor.codegen.rocm.compile_command",shape="record"];
	"torch._inductor.config" [label="<f0> SourceModule| <f1> torch._inductor.config",shape="record"];
	"libfb" [label="<f0> MissingModule| <f1> libfb",shape="record"];
	"torch._inductor.async_compile" [label="<f0> SourceModule| <f1> torch._inductor.async_compile",shape="record"];
	"torch._inductor.compile_worker.watchdog" [label="<f0> SourceModule| <f1> torch._inductor.compile_worker.watchdog",shape="record"];
	"torch._inductor.compile_worker" [label="<f0> Package| <f1> torch._inductor.compile_worker",shape="record"];
	"torch._inductor.compile_worker.subproc_pool" [label="<f0> SourceModule| <f1> torch._inductor.compile_worker.subproc_pool",shape="record"];
	"torch._inductor" [label="<f0> Package| <f1> torch._inductor",shape="record"];
	"torch.utils._sympy.symbol" [label="<f0> SourceModule| <f1> torch.utils._sympy.symbol",shape="record"];
	"torch.utils._sympy.singleton_int" [label="<f0> SourceModule| <f1> torch.utils._sympy.singleton_int",shape="record"];
	"torch._inductor.runtime.runtime_utils" [label="<f0> SourceModule| <f1> torch._inductor.runtime.runtime_utils",shape="record"];
	"torch._inductor.codegen.multi_kernel" [label="<f0> SourceModule| <f1> torch._inductor.codegen.multi_kernel",shape="record"];
	"torch._inductor.codegen.debug_utils" [label="<f0> SourceModule| <f1> torch._inductor.codegen.debug_utils",shape="record"];
	"torch._dynamo.utils" [label="<f0> SourceModule| <f1> torch._dynamo.utils",shape="record"];
	"torch._inductor.ir" [label="<f0> SourceModule| <f1> torch._inductor.ir",shape="record"];
	"torchgen.aoti.fallback_ops" [label="<f0> SourceModule| <f1> torchgen.aoti.fallback_ops",shape="record"];
	"torchgen.aoti" [label="<f0> Package| <f1> torchgen.aoti",shape="record"];
	"'triton.compiler'" [label="<f0> MissingModule| <f1> 'triton.compiler'",shape="record"];
	"sympy" [label="<f0> Package| <f1> sympy",shape="record"];
	"sympy.algebras" [label="<f0> Package| <f1> sympy.algebras",shape="record"];
	"sympy.algebras.quaternion" [label="<f0> SourceModule| <f1> sympy.algebras.quaternion",shape="record"];
	"sympy.release" [label="<f0> SourceModule| <f1> sympy.release",shape="record"];
	"'triton.runtime'" [label="<f0> MissingModule| <f1> 'triton.runtime'",shape="record"];
	"torch._library.infer_schema" [label="<f0> SourceModule| <f1> torch._library.infer_schema",shape="record"];
	"torch._library.custom_ops" [label="<f0> SourceModule| <f1> torch._library.custom_ops",shape="record"];
	"torch._library.simple_registry" [label="<f0> SourceModule| <f1> torch._library.simple_registry",shape="record"];
	"torch._library.fake_impl" [label="<f0> SourceModule| <f1> torch._library.fake_impl",shape="record"];
	"torch._library.autograd" [label="<f0> SourceModule| <f1> torch._library.autograd",shape="record"];
	"torch._library.utils" [label="<f0> SourceModule| <f1> torch._library.utils",shape="record"];
	"torchgen.gen_schema_utils" [label="<f0> SourceModule| <f1> torchgen.gen_schema_utils",shape="record"];
	"torch._higher_order_ops.utils" [label="<f0> SourceModule| <f1> torch._higher_order_ops.utils",shape="record"];
	"torch._functorch._aot_autograd.utils" [label="<f0> SourceModule| <f1> torch._functorch._aot_autograd.utils",shape="record"];
	"torch._higher_order_ops" [label="<f0> Package| <f1> torch._higher_order_ops",shape="record"];
	"torch._higher_order_ops.while_loop" [label="<f0> SourceModule| <f1> torch._higher_order_ops.while_loop",shape="record"];
	"torch._higher_order_ops.hints_wrap" [label="<f0> SourceModule| <f1> torch._higher_order_ops.hints_wrap",shape="record"];
	"torch._dispatch.python" [label="<f0> SourceModule| <f1> torch._dispatch.python",shape="record"];
	"torch.fx.experimental.proxy_tensor" [label="<f0> SourceModule| <f1> torch.fx.experimental.proxy_tensor",shape="record"];
	"torch.utils._thunk" [label="<f0> SourceModule| <f1> torch.utils._thunk",shape="record"];
	"torch.utils._stats" [label="<f0> SourceModule| <f1> torch.utils._stats",shape="record"];
	"torch._subclasses.fake_impls" [label="<f0> SourceModule| <f1> torch._subclasses.fake_impls",shape="record"];
	"torch._subclasses.schema_check_mode" [label="<f0> SourceModule| <f1> torch._subclasses.schema_check_mode",shape="record"];
	"torch._subclasses.functional_tensor" [label="<f0> SourceModule| <f1> torch._subclasses.functional_tensor",shape="record"];
	"torch.utils._python_dispatch" [label="<f0> SourceModule| <f1> torch.utils._python_dispatch",shape="record"];
	"torch._functorch.pyfunctorch" [label="<f0> SourceModule| <f1> torch._functorch.pyfunctorch",shape="record"];
	"torch._refs.linalg" [label="<f0> Package| <f1> torch._refs.linalg",shape="record"];
	"torch._refs.fft" [label="<f0> SourceModule| <f1> torch._refs.fft",shape="record"];
	"torch._refs._conversions" [label="<f0> SourceModule| <f1> torch._refs._conversions",shape="record"];
	"torch._decomp" [label="<f0> Package| <f1> torch._decomp",shape="record"];
	"torch.fx.experimental.symbolic_shapes" [label="<f0> SourceModule| <f1> torch.fx.experimental.symbolic_shapes",shape="record"];
	"torch._subclasses.fake_tensor" [label="<f0> SourceModule| <f1> torch._subclasses.fake_tensor",shape="record"];
	"torch._subclasses._fake_tensor_utils" [label="<f0> SourceModule| <f1> torch._subclasses._fake_tensor_utils",shape="record"];
	"torch.utils._backport_slots" [label="<f0> SourceModule| <f1> torch.utils._backport_slots",shape="record"];
	"torch._prims_common.wrappers" [label="<f0> SourceModule| <f1> torch._prims_common.wrappers",shape="record"];
	"torch._prims_common" [label="<f0> Package| <f1> torch._prims_common",shape="record"];
	"torch._prims" [label="<f0> Package| <f1> torch._prims",shape="record"];
	"torch._prims.rng_prims" [label="<f0> SourceModule| <f1> torch._prims.rng_prims",shape="record"];
	"torch._prims.debug_prims" [label="<f0> SourceModule| <f1> torch._prims.debug_prims",shape="record"];
	"torch._decomp.decompositions" [label="<f0> SourceModule| <f1> torch._decomp.decompositions",shape="record"];
	"torch.library" [label="<f0> SourceModule| <f1> torch.library",shape="record"];
	"torch.testing._internal.optests" [label="<f0> Package| <f1> torch.testing._internal.optests",shape="record"];
	"torch.testing._internal.optests.generate_tests" [label="<f0> SourceModule| <f1> torch.testing._internal.optests.generate_tests",shape="record"];
	"torch.testing._internal.optests.autograd_registration" [label="<f0> SourceModule| <f1> torch.testing._internal.optests.autograd_registration",shape="record"];
	"torch.testing._internal.optests.fake_tensor" [label="<f0> SourceModule| <f1> torch.testing._internal.optests.fake_tensor",shape="record"];
	"torch.testing._internal.optests.aot_autograd" [label="<f0> SourceModule| <f1> torch.testing._internal.optests.aot_autograd",shape="record"];
	"torch.testing._internal.optests.make_fx" [label="<f0> SourceModule| <f1> torch.testing._internal.optests.make_fx",shape="record"];
	"torch.backends.mkldnn" [label="<f0> Package| <f1> torch.backends.mkldnn",shape="record"];
	"torch.backends.mkl" [label="<f0> Package| <f1> torch.backends.mkl",shape="record"];
	"torch.backends.mha" [label="<f0> Package| <f1> torch.backends.mha",shape="record"];
	"torch.backends.cusparselt" [label="<f0> Package| <f1> torch.backends.cusparselt",shape="record"];
	"torch.backends.cudnn" [label="<f0> Package| <f1> torch.backends.cudnn",shape="record"];
	"torch.backends.cuda" [label="<f0> Package| <f1> torch.backends.cuda",shape="record"];
	"torch.backends.opt_einsum" [label="<f0> Package| <f1> torch.backends.opt_einsum",shape="record"];
	"opt_einsum" [label="<f0> MissingModule| <f1> opt_einsum",shape="record"];
	"torch.backends.cpu" [label="<f0> Package| <f1> torch.backends.cpu",shape="record"];
	"torch.utils.cpp_backtrace" [label="<f0> SourceModule| <f1> torch.utils.cpp_backtrace",shape="record"];
	"torch.utils._pytree" [label="<f0> SourceModule| <f1> torch.utils._pytree",shape="record"];
	"torch.utils._cxx_pytree" [label="<f0> SourceModule| <f1> torch.utils._cxx_pytree",shape="record"];
	"optree" [label="<f0> MissingModule| <f1> optree",shape="record"];
	"torch.utils.backcompat" [label="<f0> Package| <f1> torch.utils.backcompat",shape="record"];
	"torch.autograd.grad_mode" [label="<f0> SourceModule| <f1> torch.autograd.grad_mode",shape="record"];
	"torch.nn.utils.stateless" [label="<f0> SourceModule| <f1> torch.nn.utils.stateless",shape="record"];
	"torch.nn.utils.rnn" [label="<f0> SourceModule| <f1> torch.nn.utils.rnn",shape="record"];
	"torch.nn.utils.parametrizations" [label="<f0> SourceModule| <f1> torch.nn.utils.parametrizations",shape="record"];
	"torch.nn.utils.parametrize" [label="<f0> SourceModule| <f1> torch.nn.utils.parametrize",shape="record"];
	"torch.nn.modules.container" [label="<f0> SourceModule| <f1> torch.nn.modules.container",shape="record"];
	"torch.__future__" [label="<f0> SourceModule| <f1> torch.__future__",shape="record"];
	"torch.nn.parallel" [label="<f0> Package| <f1> torch.nn.parallel",shape="record"];
	"torch.nn.parallel.replicate" [label="<f0> SourceModule| <f1> torch.nn.parallel.replicate",shape="record"];
	"torch.nn.parallel.parallel_apply" [label="<f0> SourceModule| <f1> torch.nn.parallel.parallel_apply",shape="record"];
	"torch.nn.parallel.data_parallel" [label="<f0> SourceModule| <f1> torch.nn.parallel.data_parallel",shape="record"];
	"torch.nn.functional" [label="<f0> SourceModule| <f1> torch.nn.functional",shape="record"];
	"torch._torch_docs" [label="<f0> SourceModule| <f1> torch._torch_docs",shape="record"];
	"torch.nn.attention" [label="<f0> Package| <f1> torch.nn.attention",shape="record"];
	"torch.nn.modules" [label="<f0> Package| <f1> torch.nn.modules",shape="record"];
	"torch.nn.modules.upsampling" [label="<f0> SourceModule| <f1> torch.nn.modules.upsampling",shape="record"];
	"torch.nn.modules.transformer" [label="<f0> SourceModule| <f1> torch.nn.modules.transformer",shape="record"];
	"torch.nn.modules.sparse" [label="<f0> SourceModule| <f1> torch.nn.modules.sparse",shape="record"];
	"torch.nn.modules.rnn" [label="<f0> SourceModule| <f1> torch.nn.modules.rnn",shape="record"];
	"torch.backends.cudnn.rnn" [label="<f0> SourceModule| <f1> torch.backends.cudnn.rnn",shape="record"];
	"torch.nn.modules.pixelshuffle" [label="<f0> SourceModule| <f1> torch.nn.modules.pixelshuffle",shape="record"];
	"torch.nn.modules.padding" [label="<f0> SourceModule| <f1> torch.nn.modules.padding",shape="record"];
	"torch.nn.modules.normalization" [label="<f0> SourceModule| <f1> torch.nn.modules.normalization",shape="record"];
	"torch.Size" [label="<f0> MissingModule| <f1> torch.Size",shape="record"];
	"torch.nn.modules.loss" [label="<f0> SourceModule| <f1> torch.nn.modules.loss",shape="record"];
	"torch.nn.modules.instancenorm" [label="<f0> SourceModule| <f1> torch.nn.modules.instancenorm",shape="record"];
	"torch.nn.modules.fold" [label="<f0> SourceModule| <f1> torch.nn.modules.fold",shape="record"];
	"torch.nn.modules.flatten" [label="<f0> SourceModule| <f1> torch.nn.modules.flatten",shape="record"];
	"torch.nn.modules.dropout" [label="<f0> SourceModule| <f1> torch.nn.modules.dropout",shape="record"];
	"torch.nn.modules.distance" [label="<f0> SourceModule| <f1> torch.nn.modules.distance",shape="record"];
	"torch.nn.modules.conv" [label="<f0> SourceModule| <f1> torch.nn.modules.conv",shape="record"];
	"torch.nn.modules.channelshuffle" [label="<f0> SourceModule| <f1> torch.nn.modules.channelshuffle",shape="record"];
	"torch.nn.modules.adaptive" [label="<f0> SourceModule| <f1> torch.nn.modules.adaptive",shape="record"];
	"torch.nn.modules.activation" [label="<f0> SourceModule| <f1> torch.nn.modules.activation",shape="record"];
	"torch.nn.modules.linear" [label="<f0> SourceModule| <f1> torch.nn.modules.linear",shape="record"];
	"torch.nn.BCELoss" [label="<f0> MissingModule| <f1> torch.nn.BCELoss",shape="record"];
	"torch.nn.LogSoftmax" [label="<f0> MissingModule| <f1> torch.nn.LogSoftmax",shape="record"];
	"torch.nn.KLDivLoss" [label="<f0> MissingModule| <f1> torch.nn.KLDivLoss",shape="record"];
	"torch.nn.L1Loss" [label="<f0> MissingModule| <f1> torch.nn.L1Loss",shape="record"];
	"torch.nn.SmoothL1Loss" [label="<f0> MissingModule| <f1> torch.nn.SmoothL1Loss",shape="record"];
	"torch.nn.LayerNorm" [label="<f0> MissingModule| <f1> torch.nn.LayerNorm",shape="record"];
	"torch.nn.Sequential" [label="<f0> MissingModule| <f1> torch.nn.Sequential",shape="record"];
	"torch.nn.ParameterList" [label="<f0> MissingModule| <f1> torch.nn.ParameterList",shape="record"];
	"torch.nn.ParameterDict" [label="<f0> MissingModule| <f1> torch.nn.ParameterDict",shape="record"];
	"torch.nn.ModuleList" [label="<f0> MissingModule| <f1> torch.nn.ModuleList",shape="record"];
	"torch.nn.ModuleDict" [label="<f0> MissingModule| <f1> torch.nn.ModuleDict",shape="record"];
	"torch.nn.MSELoss" [label="<f0> MissingModule| <f1> torch.nn.MSELoss",shape="record"];
	"torch.nn.BCEWithLogitsLoss" [label="<f0> MissingModule| <f1> torch.nn.BCEWithLogitsLoss",shape="record"];
	"torch.nn.Identity" [label="<f0> MissingModule| <f1> torch.nn.Identity",shape="record"];
	"torch.nn.CrossEntropyLoss" [label="<f0> MissingModule| <f1> torch.nn.CrossEntropyLoss",shape="record"];
	"torch.nn.init" [label="<f0> SourceModule| <f1> torch.nn.init",shape="record"];
	"torch.nn.ReLU" [label="<f0> MissingModule| <f1> torch.nn.ReLU",shape="record"];
	"torch.nn.Linear" [label="<f0> MissingModule| <f1> torch.nn.Linear",shape="record"];
	"torch.nn.Conv3d" [label="<f0> MissingModule| <f1> torch.nn.Conv3d",shape="record"];
	"torch.nn.Conv2d" [label="<f0> MissingModule| <f1> torch.nn.Conv2d",shape="record"];
	"torch.nn.Conv1d" [label="<f0> MissingModule| <f1> torch.nn.Conv1d",shape="record"];
	"torch.nn.BatchNorm3d" [label="<f0> MissingModule| <f1> torch.nn.BatchNorm3d",shape="record"];
	"torch.nn.BatchNorm2d" [label="<f0> MissingModule| <f1> torch.nn.BatchNorm2d",shape="record"];
	"torch.nn.BatchNorm1d" [label="<f0> MissingModule| <f1> torch.nn.BatchNorm1d",shape="record"];
	"torch.nn.grad" [label="<f0> SourceModule| <f1> torch.nn.grad",shape="record"];
	"torch.nn._reduction" [label="<f0> SourceModule| <f1> torch.nn._reduction",shape="record"];
	"torch.nn.Module" [label="<f0> MissingModule| <f1> torch.nn.Module",shape="record"];
	"torch.nn.parameter" [label="<f0> SourceModule| <f1> torch.nn.parameter",shape="record"];
	"torch.types" [label="<f0> SourceModule| <f1> torch.types",shape="record"];
	"torch.qscheme" [label="<f0> MissingModule| <f1> torch.qscheme",shape="record"];
	"torch.layout" [label="<f0> MissingModule| <f1> torch.layout",shape="record"];
	"torch.DispatchKey" [label="<f0> MissingModule| <f1> torch.DispatchKey",shape="record"];
	"torch.storage" [label="<f0> SourceModule| <f1> torch.storage",shape="record"];
	"torch._utils" [label="<f0> SourceModule| <f1> torch._utils",shape="record"];
	"torch._sources" [label="<f0> SourceModule| <f1> torch._sources",shape="record"];
	"torch._weights_only_unpickler" [label="<f0> SourceModule| <f1> torch._weights_only_unpickler",shape="record"];
	"_codecs" [label="<f0> BuiltinModule| <f1> _codecs",shape="record"];
	"torch.fx.traceback" [label="<f0> SourceModule| <f1> torch.fx.traceback",shape="record"];
	"torch.fx._compatibility" [label="<f0> SourceModule| <f1> torch.fx._compatibility",shape="record"];
	"torch.fx._lazy_graph_module" [label="<f0> SourceModule| <f1> torch.fx._lazy_graph_module",shape="record"];
	"torch.fx.config" [label="<f0> SourceModule| <f1> torch.fx.config",shape="record"];
	"torch.fx.proxy" [label="<f0> SourceModule| <f1> torch.fx.proxy",shape="record"];
	"torch.fx.node" [label="<f0> SourceModule| <f1> torch.fx.node",shape="record"];
	"torch.fx.graph" [label="<f0> SourceModule| <f1> torch.fx.graph",shape="record"];
	"torch.fx._symbolic_trace" [label="<f0> SourceModule| <f1> torch.fx._symbolic_trace",shape="record"];
	"torch.fx.graph_module" [label="<f0> SourceModule| <f1> torch.fx.graph_module",shape="record"];
	"torch.fx.subgraph_rewriter" [label="<f0> SourceModule| <f1> torch.fx.subgraph_rewriter",shape="record"];
	"torch.fx.passes.utils.matcher_with_name_node_map_utils" [label="<f0> SourceModule| <f1> torch.fx.passes.utils.matcher_with_name_node_map_utils",shape="record"];
	"bitsandbytes" [label="<f0> MissingModule| <f1> bitsandbytes",shape="record"];
	"intel_extension_for_pytorch" [label="<f0> MissingModule| <f1> intel_extension_for_pytorch",shape="record"];
	"torch._dynamo" [label="<f0> Package| <f1> torch._dynamo",shape="record"];
	"torch._dynamo.callback" [label="<f0> SourceModule| <f1> torch._dynamo.callback",shape="record"];
	"torch_musa" [label="<f0> MissingModule| <f1> torch_musa",shape="record"];
	"transformers.dependency_versions_table" [label="<f0> SourceModule| <f1> transformers.dependency_versions_table",shape="record"];
	"torch_mlu" [label="<f0> MissingModule| <f1> torch_mlu",shape="record"];
	"torch_npu" [label="<f0> MissingModule| <f1> torch_npu",shape="record"];
	"torch_xla" [label="<f0> MissingModule| <f1> torch_xla",shape="record"];
	"'torch_xla.core'" [label="<f0> MissingModule| <f1> 'torch_xla.core'",shape="record"];
	"mamba_ssm" [label="<f0> MissingModule| <f1> mamba_ssm",shape="record"];
	"transformers.utils.hub" [label="<f0> SourceModule| <f1> transformers.utils.hub",shape="record"];
	"transformers.utils.generic" [label="<f0> SourceModule| <f1> transformers.utils.generic",shape="record"];
	"'mlx.core'" [label="<f0> MissingModule| <f1> 'mlx.core'",shape="record"];
	"tensorflow" [label="<f0> MissingModule| <f1> tensorflow",shape="record"];
	"'jax.core'" [label="<f0> MissingModule| <f1> 'jax.core'",shape="record"];
	"huggingface_hub.utils._deprecation" [label="<f0> SourceModule| <f1> huggingface_hub.utils._deprecation",shape="record"];
	"huggingface_hub.utils" [label="<f0> Package| <f1> huggingface_hub.utils",shape="record"];
	"huggingface_hub.utils._validators" [label="<f0> SourceModule| <f1> huggingface_hub.utils._validators",shape="record"];
	"huggingface_hub.utils._typing" [label="<f0> SourceModule| <f1> huggingface_hub.utils._typing",shape="record"];
	"huggingface_hub.utils._telemetry" [label="<f0> SourceModule| <f1> huggingface_hub.utils._telemetry",shape="record"];
	"huggingface_hub.utils._subprocess" [label="<f0> SourceModule| <f1> huggingface_hub.utils._subprocess",shape="record"];
	"huggingface_hub.utils._safetensors" [label="<f0> SourceModule| <f1> huggingface_hub.utils._safetensors",shape="record"];
	"huggingface_hub.utils._runtime" [label="<f0> SourceModule| <f1> huggingface_hub.utils._runtime",shape="record"];
	"pydantic" [label="<f0> MissingModule| <f1> pydantic",shape="record"];
	"huggingface_hub.utils._paths" [label="<f0> SourceModule| <f1> huggingface_hub.utils._paths",shape="record"];
	"huggingface_hub.utils._pagination" [label="<f0> SourceModule| <f1> huggingface_hub.utils._pagination",shape="record"];
	"huggingface_hub.utils._http" [label="<f0> SourceModule| <f1> huggingface_hub.utils._http",shape="record"];
	"huggingface_hub.utils._lfs" [label="<f0> SourceModule| <f1> huggingface_hub.utils._lfs",shape="record"];
	"huggingface_hub.utils._hf_folder" [label="<f0> SourceModule| <f1> huggingface_hub.utils._hf_folder",shape="record"];
	"huggingface_hub.utils._headers" [label="<f0> SourceModule| <f1> huggingface_hub.utils._headers",shape="record"];
	"huggingface_hub.utils._git_credential" [label="<f0> SourceModule| <f1> huggingface_hub.utils._git_credential",shape="record"];
	"huggingface_hub.utils._fixes" [label="<f0> SourceModule| <f1> huggingface_hub.utils._fixes",shape="record"];
	"huggingface_hub.utils._experimental" [label="<f0> SourceModule| <f1> huggingface_hub.utils._experimental",shape="record"];
	"huggingface_hub.utils._datetime" [label="<f0> SourceModule| <f1> huggingface_hub.utils._datetime",shape="record"];
	"huggingface_hub.utils._chunk_utils" [label="<f0> SourceModule| <f1> huggingface_hub.utils._chunk_utils",shape="record"];
	"huggingface_hub.utils._cache_manager" [label="<f0> SourceModule| <f1> huggingface_hub.utils._cache_manager",shape="record"];
	"huggingface_hub.commands._cli_utils" [label="<f0> SourceModule| <f1> huggingface_hub.commands._cli_utils",shape="record"];
	"huggingface_hub.commands" [label="<f0> Package| <f1> huggingface_hub.commands",shape="record"];
	"huggingface_hub.utils.logging" [label="<f0> SourceModule| <f1> huggingface_hub.utils.logging",shape="record"];
	"huggingface_hub.utils._cache_assets" [label="<f0> SourceModule| <f1> huggingface_hub.utils._cache_assets",shape="record"];
	"huggingface_hub.utils._auth" [label="<f0> SourceModule| <f1> huggingface_hub.utils._auth",shape="record"];
	"'google.colab'" [label="<f0> MissingModule| <f1> 'google.colab'",shape="record"];
	"google" [label="<f0> MissingModule| <f1> google",shape="record"];
	"huggingface_hub.utils.tqdm" [label="<f0> SourceModule| <f1> huggingface_hub.utils.tqdm",shape="record"];
	"tqdm.auto" [label="<f0> SourceModule| <f1> tqdm.auto",shape="record"];
	"tqdm.asyncio" [label="<f0> SourceModule| <f1> tqdm.asyncio",shape="record"];
	"tqdm.autonotebook" [label="<f0> SourceModule| <f1> tqdm.autonotebook",shape="record"];
	"huggingface_hub.errors" [label="<f0> SourceModule| <f1> huggingface_hub.errors",shape="record"];
	"huggingface_hub.file_download" [label="<f0> SourceModule| <f1> huggingface_hub.file_download",shape="record"];
	"hf_transfer" [label="<f0> MissingModule| <f1> hf_transfer",shape="record"];
	"huggingface_hub.utils.sha" [label="<f0> SourceModule| <f1> huggingface_hub.utils.sha",shape="record"];
	"huggingface_hub.utils.insecure_hashlib" [label="<f0> SourceModule| <f1> huggingface_hub.utils.insecure_hashlib",shape="record"];
	"huggingface_hub._local_folder" [label="<f0> SourceModule| <f1> huggingface_hub._local_folder",shape="record"];
	"huggingface_hub.constants" [label="<f0> SourceModule| <f1> huggingface_hub.constants",shape="record"];
	"huggingface_hub" [label="<f0> Package| <f1> huggingface_hub",shape="record"];
	"huggingface_hub.serialization" [label="<f0> Package| <f1> huggingface_hub.serialization",shape="record"];
	"huggingface_hub.serialization._torch" [label="<f0> SourceModule| <f1> huggingface_hub.serialization._torch",shape="record"];
	"huggingface_hub.serialization._tensorflow" [label="<f0> SourceModule| <f1> huggingface_hub.serialization._tensorflow",shape="record"];
	"huggingface_hub.serialization._base" [label="<f0> SourceModule| <f1> huggingface_hub.serialization._base",shape="record"];
	"huggingface_hub.repository" [label="<f0> SourceModule| <f1> huggingface_hub.repository",shape="record"];
	"huggingface_hub.lfs" [label="<f0> SourceModule| <f1> huggingface_hub.lfs",shape="record"];
	"huggingface_hub._commit_api" [label="<f0> SourceModule| <f1> huggingface_hub._commit_api",shape="record"];
	"tqdm.contrib.concurrent" [label="<f0> SourceModule| <f1> tqdm.contrib.concurrent",shape="record"];
	"tqdm.contrib" [label="<f0> Package| <f1> tqdm.contrib",shape="record"];
	"huggingface_hub.repocard_data" [label="<f0> SourceModule| <f1> huggingface_hub.repocard_data",shape="record"];
	"huggingface_hub.repocard" [label="<f0> SourceModule| <f1> huggingface_hub.repocard",shape="record"];
	"huggingface_hub.keras_mixin" [label="<f0> SourceModule| <f1> huggingface_hub.keras_mixin",shape="record"];
	"tf_keras" [label="<f0> MissingModule| <f1> tf_keras",shape="record"];
	"huggingface_hub.inference_api" [label="<f0> SourceModule| <f1> huggingface_hub.inference_api",shape="record"];
	"huggingface_hub.inference._generated.types" [label="<f0> Package| <f1> huggingface_hub.inference._generated.types",shape="record"];
	"huggingface_hub.inference._generated" [label="<f0> Package| <f1> huggingface_hub.inference._generated",shape="record"];
	"huggingface_hub.inference" [label="<f0> Package| <f1> huggingface_hub.inference",shape="record"];
	"huggingface_hub.inference._generated.types.zero_shot_object_detection" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.zero_shot_object_detection",shape="record"];
	"huggingface_hub.inference._generated.types.zero_shot_image_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.zero_shot_image_classification",shape="record"];
	"huggingface_hub.inference._generated.types.zero_shot_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.zero_shot_classification",shape="record"];
	"huggingface_hub.inference._generated.types.visual_question_answering" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.visual_question_answering",shape="record"];
	"huggingface_hub.inference._generated.types.video_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.video_classification",shape="record"];
	"huggingface_hub.inference._generated.types.translation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.translation",shape="record"];
	"huggingface_hub.inference._generated.types.token_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.token_classification",shape="record"];
	"huggingface_hub.inference._generated.types.text_to_speech" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_to_speech",shape="record"];
	"huggingface_hub.inference._generated.types.text_to_image" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_to_image",shape="record"];
	"huggingface_hub.inference._generated.types.text_to_audio" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_to_audio",shape="record"];
	"huggingface_hub.inference._generated.types.text_generation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_generation",shape="record"];
	"huggingface_hub.inference._generated.types.text_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_classification",shape="record"];
	"huggingface_hub.inference._generated.types.text2text_generation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text2text_generation",shape="record"];
	"huggingface_hub.inference._generated.types.table_question_answering" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.table_question_answering",shape="record"];
	"huggingface_hub.inference._generated.types.summarization" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.summarization",shape="record"];
	"huggingface_hub.inference._generated.types.sentence_similarity" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.sentence_similarity",shape="record"];
	"huggingface_hub.inference._generated.types.question_answering" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.question_answering",shape="record"];
	"huggingface_hub.inference._generated.types.object_detection" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.object_detection",shape="record"];
	"huggingface_hub.inference._generated.types.image_to_text" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.image_to_text",shape="record"];
	"huggingface_hub.inference._generated.types.image_to_image" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.image_to_image",shape="record"];
	"huggingface_hub.inference._generated.types.image_segmentation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.image_segmentation",shape="record"];
	"huggingface_hub.inference._generated.types.image_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.image_classification",shape="record"];
	"huggingface_hub.inference._generated.types.fill_mask" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.fill_mask",shape="record"];
	"huggingface_hub.inference._generated.types.feature_extraction" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.feature_extraction",shape="record"];
	"huggingface_hub.inference._generated.types.document_question_answering" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.document_question_answering",shape="record"];
	"huggingface_hub.inference._generated.types.depth_estimation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.depth_estimation",shape="record"];
	"huggingface_hub.inference._generated.types.chat_completion" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.chat_completion",shape="record"];
	"huggingface_hub.inference._generated.types.base" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.base",shape="record"];
	"huggingface_hub.inference._generated.types.automatic_speech_recognition" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.automatic_speech_recognition",shape="record"];
	"huggingface_hub.inference._generated.types.audio_to_audio" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.audio_to_audio",shape="record"];
	"huggingface_hub.inference._generated.types.audio_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.audio_classification",shape="record"];
	"huggingface_hub.inference._generated._async_client" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated._async_client",shape="record"];
	"aiohttp" [label="<f0> MissingModule| <f1> aiohttp",shape="record"];
	"huggingface_hub.inference._common" [label="<f0> SourceModule| <f1> huggingface_hub.inference._common",shape="record"];
	"huggingface_hub.inference._client" [label="<f0> SourceModule| <f1> huggingface_hub.inference._client",shape="record"];
	"huggingface_hub.hub_mixin" [label="<f0> SourceModule| <f1> huggingface_hub.hub_mixin",shape="record"];
	"huggingface_hub.hf_file_system" [label="<f0> SourceModule| <f1> huggingface_hub.hf_file_system",shape="record"];
	"huggingface_hub.hf_api" [label="<f0> SourceModule| <f1> huggingface_hub.hf_api",shape="record"];
	"huggingface_hub.utils.endpoint_helpers" [label="<f0> SourceModule| <f1> huggingface_hub.utils.endpoint_helpers",shape="record"];
	"huggingface_hub._upload_large_folder" [label="<f0> SourceModule| <f1> huggingface_hub._upload_large_folder",shape="record"];
	"huggingface_hub.fastai_utils" [label="<f0> SourceModule| <f1> huggingface_hub.fastai_utils",shape="record"];
	"fastai" [label="<f0> MissingModule| <f1> fastai",shape="record"];
	"toml" [label="<f0> MissingModule| <f1> toml",shape="record"];
	"huggingface_hub.community" [label="<f0> SourceModule| <f1> huggingface_hub.community",shape="record"];
	"huggingface_hub._webhooks_server" [label="<f0> SourceModule| <f1> huggingface_hub._webhooks_server",shape="record"];
	"'fastapi.responses'" [label="<f0> MissingModule| <f1> 'fastapi.responses'",shape="record"];
	"fastapi" [label="<f0> MissingModule| <f1> fastapi",shape="record"];
	"gradio" [label="<f0> MissingModule| <f1> gradio",shape="record"];
	"huggingface_hub._webhooks_payload" [label="<f0> SourceModule| <f1> huggingface_hub._webhooks_payload",shape="record"];
	"huggingface_hub._tensorboard_logger" [label="<f0> SourceModule| <f1> huggingface_hub._tensorboard_logger",shape="record"];
	"tensorboardX" [label="<f0> MissingModule| <f1> tensorboardX",shape="record"];
	"huggingface_hub._space_api" [label="<f0> SourceModule| <f1> huggingface_hub._space_api",shape="record"];
	"huggingface_hub._snapshot_download" [label="<f0> SourceModule| <f1> huggingface_hub._snapshot_download",shape="record"];
	"huggingface_hub._multi_commits" [label="<f0> SourceModule| <f1> huggingface_hub._multi_commits",shape="record"];
	"huggingface_hub._login" [label="<f0> SourceModule| <f1> huggingface_hub._login",shape="record"];
	"'ipywidgets.widgets'" [label="<f0> MissingModule| <f1> 'ipywidgets.widgets'",shape="record"];
	"huggingface_hub.commands.delete_cache" [label="<f0> SourceModule| <f1> huggingface_hub.commands.delete_cache",shape="record"];
	"'InquirerPy.separator'" [label="<f0> MissingModule| <f1> 'InquirerPy.separator'",shape="record"];
	"'InquirerPy.base'" [label="<f0> MissingModule| <f1> 'InquirerPy.base'",shape="record"];
	"InquirerPy" [label="<f0> MissingModule| <f1> InquirerPy",shape="record"];
	"huggingface_hub._inference_endpoints" [label="<f0> SourceModule| <f1> huggingface_hub._inference_endpoints",shape="record"];
	"huggingface_hub._commit_scheduler" [label="<f0> SourceModule| <f1> huggingface_hub._commit_scheduler",shape="record"];
	"transformers.modeling_flax_pytorch_utils" [label="<f0> SourceModule| <f1> transformers.modeling_flax_pytorch_utils",shape="record"];
	"transformers.dynamic_module_utils" [label="<f0> SourceModule| <f1> transformers.dynamic_module_utils",shape="record"];
	"filecmp" [label="<f0> SourceModule| <f1> filecmp",shape="record"];
	"'jax.random'" [label="<f0> MissingModule| <f1> 'jax.random'",shape="record"];
	"'flax.traverse_util'" [label="<f0> MissingModule| <f1> 'flax.traverse_util'",shape="record"];
	"'flax.serialization'" [label="<f0> MissingModule| <f1> 'flax.serialization'",shape="record"];
	"'flax.core'" [label="<f0> MissingModule| <f1> 'flax.core'",shape="record"];
	"msgpack" [label="<f0> MissingModule| <f1> msgpack",shape="record"];
	"'jax.numpy'" [label="<f0> MissingModule| <f1> 'jax.numpy'",shape="record"];
	"jax" [label="<f0> MissingModule| <f1> jax",shape="record"];
	"'flax.linen'" [label="<f0> MissingModule| <f1> 'flax.linen'",shape="record"];
	"transformers.optimization_tf" [label="<f0> SourceModule| <f1> transformers.optimization_tf",shape="record"];
	"'tensorflow.keras'" [label="<f0> MissingModule| <f1> 'tensorflow.keras'",shape="record"];
	"'tf_keras.optimizers'" [label="<f0> MissingModule| <f1> 'tf_keras.optimizers'",shape="record"];
	"transformers.modeling_tf_utils" [label="<f0> SourceModule| <f1> transformers.modeling_tf_utils",shape="record"];
	"datasets" [label="<f0> MissingModule| <f1> datasets",shape="record"];
	"keras" [label="<f0> MissingModule| <f1> keras",shape="record"];
	"safetensors.tensorflow" [label="<f0> SourceModule| <f1> safetensors.tensorflow",shape="record"];
	"transformers.tf_utils" [label="<f0> SourceModule| <f1> transformers.tf_utils",shape="record"];
	"transformers.activations_tf" [label="<f0> SourceModule| <f1> transformers.activations_tf",shape="record"];
	"h5py" [label="<f0> MissingModule| <f1> h5py",shape="record"];
	"transformers.keras_callbacks" [label="<f0> SourceModule| <f1> transformers.keras_callbacks",shape="record"];
	"transformers.benchmark.benchmark_tf" [label="<f0> SourceModule| <f1> transformers.benchmark.benchmark_tf",shape="record"];
	"transformers.benchmark" [label="<f0> Package| <f1> transformers.benchmark",shape="record"];
	"'py3nvml.py3nvml'" [label="<f0> MissingModule| <f1> 'py3nvml.py3nvml'",shape="record"];
	"'tensorflow.python'" [label="<f0> MissingModule| <f1> 'tensorflow.python'",shape="record"];
	"transformers.benchmark.benchmark_utils" [label="<f0> SourceModule| <f1> transformers.benchmark.benchmark_utils",shape="record"];
	"py3nvml" [label="<f0> MissingModule| <f1> py3nvml",shape="record"];
	"transformers.benchmark.benchmark_args_utils" [label="<f0> SourceModule| <f1> transformers.benchmark.benchmark_args_utils",shape="record"];
	"transformers.models.auto.modeling_tf_auto" [label="<f0> SourceModule| <f1> transformers.models.auto.modeling_tf_auto",shape="record"];
	"transformers.models.auto.configuration_auto" [label="<f0> SourceModule| <f1> transformers.models.auto.configuration_auto",shape="record"];
	"transformers.models.auto.auto_factory" [label="<f0> SourceModule| <f1> transformers.models.auto.auto_factory",shape="record"];
	"transformers.benchmark.benchmark_args_tf" [label="<f0> SourceModule| <f1> transformers.benchmark.benchmark_args_tf",shape="record"];
	"transformers.trainer_seq2seq" [label="<f0> SourceModule| <f1> transformers.trainer_seq2seq",shape="record"];
	"transformers.utils.deprecation" [label="<f0> SourceModule| <f1> transformers.utils.deprecation",shape="record"];
	"transformers.integrations.fsdp" [label="<f0> SourceModule| <f1> transformers.integrations.fsdp",shape="record"];
	"transformers.integrations.deepspeed" [label="<f0> SourceModule| <f1> transformers.integrations.deepspeed",shape="record"];
	"deepspeed" [label="<f0> MissingModule| <f1> deepspeed",shape="record"];
	"'accelerate.utils'" [label="<f0> MissingModule| <f1> 'accelerate.utils'",shape="record"];
	"transformers.generation.configuration_utils" [label="<f0> SourceModule| <f1> transformers.generation.configuration_utils",shape="record"];
	"transformers.generation.logits_process" [label="<f0> SourceModule| <f1> transformers.generation.logits_process",shape="record"];
	"transformers.trainer_pt_utils" [label="<f0> SourceModule| <f1> transformers.trainer_pt_utils",shape="record"];
	"smdistributed" [label="<f0> MissingModule| <f1> smdistributed",shape="record"];
	"transformers.trainer" [label="<f0> SourceModule| <f1> transformers.trainer",shape="record"];
	"'peft.utils'" [label="<f0> MissingModule| <f1> 'peft.utils'",shape="record"];
	"wandb" [label="<f0> MissingModule| <f1> wandb",shape="record"];
	"'torch_xla.experimental'" [label="<f0> MissingModule| <f1> 'torch_xla.experimental'",shape="record"];
	"'ray.train'" [label="<f0> MissingModule| <f1> 'ray.train'",shape="record"];
	"schedulefree" [label="<f0> MissingModule| <f1> schedulefree",shape="record"];
	"'torchao.prototype'" [label="<f0> MissingModule| <f1> 'torchao.prototype'",shape="record"];
	"grokadamw" [label="<f0> MissingModule| <f1> grokadamw",shape="record"];
	"lomo_optim" [label="<f0> MissingModule| <f1> lomo_optim",shape="record"];
	"galore_torch" [label="<f0> MissingModule| <f1> galore_torch",shape="record"];
	"'torchdistx.optimizers'" [label="<f0> MissingModule| <f1> 'torchdistx.optimizers'",shape="record"];
	"'bitsandbytes.optim'" [label="<f0> MissingModule| <f1> 'bitsandbytes.optim'",shape="record"];
	"'apex.optimizers'" [label="<f0> MissingModule| <f1> 'apex.optimizers'",shape="record"];
	"'torch_npu.optim'" [label="<f0> MissingModule| <f1> 'torch_npu.optim'",shape="record"];
	"'torch_xla.amp'" [label="<f0> MissingModule| <f1> 'torch_xla.amp'",shape="record"];
	"liger_kernel" [label="<f0> MissingModule| <f1> liger_kernel",shape="record"];
	"optuna" [label="<f0> MissingModule| <f1> optuna",shape="record"];
	"'accelerate.data_loader'" [label="<f0> MissingModule| <f1> 'accelerate.data_loader'",shape="record"];
	"'accelerate.state'" [label="<f0> MissingModule| <f1> 'accelerate.state'",shape="record"];
	"accelerate" [label="<f0> MissingModule| <f1> accelerate",shape="record"];
	"peft" [label="<f0> MissingModule| <f1> peft",shape="record"];
	"'smdistributed.modelparallel'" [label="<f0> MissingModule| <f1> 'smdistributed.modelparallel'",shape="record"];
	"'torch_xla.runtime'" [label="<f0> MissingModule| <f1> 'torch_xla.runtime'",shape="record"];
	"'torch_xla.debug'" [label="<f0> MissingModule| <f1> 'torch_xla.debug'",shape="record"];
	"apex" [label="<f0> MissingModule| <f1> apex",shape="record"];
	"transformers.utils.notebook" [label="<f0> SourceModule| <f1> transformers.utils.notebook",shape="record"];
	"transformers.models.auto.modeling_auto" [label="<f0> SourceModule| <f1> transformers.models.auto.modeling_auto",shape="record"];
	"transformers.integrations.tpu" [label="<f0> SourceModule| <f1> transformers.integrations.tpu",shape="record"];
	"transformers.hyperparameter_search" [label="<f0> SourceModule| <f1> transformers.hyperparameter_search",shape="record"];
	"transformers.debug_utils" [label="<f0> SourceModule| <f1> transformers.debug_utils",shape="record"];
	"transformers.pytorch_utils" [label="<f0> SourceModule| <f1> transformers.pytorch_utils",shape="record"];
	"torch._softmax_backward_data" [label="<f0> MissingModule| <f1> torch._softmax_backward_data",shape="record"];
	"transformers.optimization" [label="<f0> SourceModule| <f1> transformers.optimization",shape="record"];
	"transformers.utils.versions" [label="<f0> SourceModule| <f1> transformers.utils.versions",shape="record"];
	"transformers.modeling_utils" [label="<f0> SourceModule| <f1> transformers.modeling_utils",shape="record"];
	"'optimum.bettertransformer'" [label="<f0> MissingModule| <f1> 'optimum.bettertransformer'",shape="record"];
	"'optimum.version'" [label="<f0> MissingModule| <f1> 'optimum.version'",shape="record"];
	"transformers.modeling_gguf_pytorch_utils" [label="<f0> SourceModule| <f1> transformers.modeling_gguf_pytorch_utils",shape="record"];
	"gguf" [label="<f0> MissingModule| <f1> gguf",shape="record"];
	"'accelerate.hooks'" [label="<f0> MissingModule| <f1> 'accelerate.hooks'",shape="record"];
	"transformers.safetensors_conversion" [label="<f0> SourceModule| <f1> transformers.safetensors_conversion",shape="record"];
	"transformers.quantizers.quantizers_utils" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizers_utils",shape="record"];
	"transformers.quantizers" [label="<f0> Package| <f1> transformers.quantizers",shape="record"];
	"transformers.quantizers.base" [label="<f0> SourceModule| <f1> transformers.quantizers.base",shape="record"];
	"transformers.quantizers.auto" [label="<f0> SourceModule| <f1> transformers.quantizers.auto",shape="record"];
	"transformers.quantizers.quantizer_torchao" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_torchao",shape="record"];
	"'torchao.quantization'" [label="<f0> MissingModule| <f1> 'torchao.quantization'",shape="record"];
	"transformers.quantizers.quantizer_quanto" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_quanto",shape="record"];
	"quanto" [label="<f0> MissingModule| <f1> quanto",shape="record"];
	"'optimum.quanto'" [label="<f0> MissingModule| <f1> 'optimum.quanto'",shape="record"];
	"transformers.quantizers.quantizer_hqq" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_hqq",shape="record"];
	"'hqq.core'" [label="<f0> MissingModule| <f1> 'hqq.core'",shape="record"];
	"transformers.quantizers.quantizer_gptq" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_gptq",shape="record"];
	"'optimum.gptq'" [label="<f0> MissingModule| <f1> 'optimum.gptq'",shape="record"];
	"transformers.quantizers.quantizer_fbgemm_fp8" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_fbgemm_fp8",shape="record"];
	"transformers.quantizers.quantizer_eetq" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_eetq",shape="record"];
	"eetq" [label="<f0> MissingModule| <f1> eetq",shape="record"];
	"transformers.quantizers.quantizer_compressed_tensors" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_compressed_tensors",shape="record"];
	"'compressed_tensors.quantization'" [label="<f0> MissingModule| <f1> 'compressed_tensors.quantization'",shape="record"];
	"'compressed_tensors.compressors'" [label="<f0> MissingModule| <f1> 'compressed_tensors.compressors'",shape="record"];
	"transformers.quantizers.quantizer_bnb_8bit" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_bnb_8bit",shape="record"];
	"transformers.quantizers.quantizer_bnb_4bit" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_bnb_4bit",shape="record"];
	"transformers.quantizers.quantizer_bitnet" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_bitnet",shape="record"];
	"transformers.quantizers.quantizer_awq" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_awq",shape="record"];
	"transformers.quantizers.quantizer_aqlm" [label="<f0> SourceModule| <f1> transformers.quantizers.quantizer_aqlm",shape="record"];
	"transformers.loss.loss_utils" [label="<f0> SourceModule| <f1> transformers.loss.loss_utils",shape="record"];
	"transformers.loss" [label="<f0> Package| <f1> transformers.loss",shape="record"];
	"transformers.loss.loss_rt_detr" [label="<f0> SourceModule| <f1> transformers.loss.loss_rt_detr",shape="record"];
	"transformers.image_transforms" [label="<f0> SourceModule| <f1> transformers.image_transforms",shape="record"];
	"'torchvision.transforms'" [label="<f0> MissingModule| <f1> 'torchvision.transforms'",shape="record"];
	"transformers.loss.loss_for_object_detection" [label="<f0> SourceModule| <f1> transformers.loss.loss_for_object_detection",shape="record"];
	"transformers.loss.loss_deformable_detr" [label="<f0> SourceModule| <f1> transformers.loss.loss_deformable_detr",shape="record"];
	"transformers.activations" [label="<f0> SourceModule| <f1> transformers.activations",shape="record"];
	"transformers.modeling_rope_utils" [label="<f0> SourceModule| <f1> transformers.modeling_rope_utils",shape="record"];
	"transformers.integrations.executorch" [label="<f0> SourceModule| <f1> transformers.integrations.executorch",shape="record"];
	"transformers.data.datasets" [label="<f0> Package| <f1> transformers.data.datasets",shape="record"];
	"transformers.data.datasets.squad" [label="<f0> SourceModule| <f1> transformers.data.datasets.squad",shape="record"];
	"transformers.data.processors.squad" [label="<f0> SourceModule| <f1> transformers.data.processors.squad",shape="record"];
	"transformers.data.processors" [label="<f0> Package| <f1> transformers.data.processors",shape="record"];
	"transformers.data.processors.xnli" [label="<f0> SourceModule| <f1> transformers.data.processors.xnli",shape="record"];
	"transformers.data.processors.glue" [label="<f0> SourceModule| <f1> transformers.data.processors.glue",shape="record"];
	"transformers.data.processors.utils" [label="<f0> SourceModule| <f1> transformers.data.processors.utils",shape="record"];
	"transformers.models.bert.tokenization_bert" [label="<f0> SourceModule| <f1> transformers.models.bert.tokenization_bert",shape="record"];
	"transformers.data.datasets.language_modeling" [label="<f0> SourceModule| <f1> transformers.data.datasets.language_modeling",shape="record"];
	"transformers.data.datasets.glue" [label="<f0> SourceModule| <f1> transformers.data.datasets.glue",shape="record"];
	"transformers.cache_utils" [label="<f0> SourceModule| <f1> transformers.cache_utils",shape="record"];
	"optimum" [label="<f0> MissingModule| <f1> optimum",shape="record"];
	"hqq" [label="<f0> MissingModule| <f1> hqq",shape="record"];
	"transformers.benchmark.benchmark_args" [label="<f0> SourceModule| <f1> transformers.benchmark.benchmark_args",shape="record"];
	"transformers.benchmark.benchmark" [label="<f0> SourceModule| <f1> transformers.benchmark.benchmark",shape="record"];
	"transformers.image_processing_utils_fast" [label="<f0> SourceModule| <f1> transformers.image_processing_utils_fast",shape="record"];
	"transformers.image_utils" [label="<f0> SourceModule| <f1> transformers.image_utils",shape="record"];
	"torchvision" [label="<f0> MissingModule| <f1> torchvision",shape="record"];
	"'PIL.ImageOps'" [label="<f0> MissingModule| <f1> 'PIL.ImageOps'",shape="record"];
	"transformers.utils.constants" [label="<f0> SourceModule| <f1> transformers.utils.constants",shape="record"];
	"transformers.image_processing_utils" [label="<f0> SourceModule| <f1> transformers.image_processing_utils",shape="record"];
	"transformers.image_processing_base" [label="<f0> SourceModule| <f1> transformers.image_processing_base",shape="record"];
	"transformers.convert_slow_tokenizer" [label="<f0> SourceModule| <f1> transformers.convert_slow_tokenizer",shape="record"];
	"tiktoken" [label="<f0> MissingModule| <f1> tiktoken",shape="record"];
	"transformers.models.roformer.tokenization_utils" [label="<f0> SourceModule| <f1> transformers.models.roformer.tokenization_utils",shape="record"];
	"rjieba" [label="<f0> MissingModule| <f1> rjieba",shape="record"];
	"transformers.utils.sentencepiece_model_pb2_new" [label="<f0> SourceModule| <f1> transformers.utils.sentencepiece_model_pb2_new",shape="record"];
	"transformers.utils.sentencepiece_model_pb2" [label="<f0> SourceModule| <f1> transformers.utils.sentencepiece_model_pb2",shape="record"];
	"sentencepiece" [label="<f0> MissingModule| <f1> sentencepiece",shape="record"];
	"tokenizers.models" [label="<f0> Package| <f1> tokenizers.models",shape="record"];
	"tokenizers.processors" [label="<f0> Package| <f1> tokenizers.processors",shape="record"];
	"tokenizers.pre_tokenizers" [label="<f0> Package| <f1> tokenizers.pre_tokenizers",shape="record"];
	"tokenizers.normalizers" [label="<f0> Package| <f1> tokenizers.normalizers",shape="record"];
	"tokenizers.decoders" [label="<f0> Package| <f1> tokenizers.decoders",shape="record"];
	"tokenizers" [label="<f0> Package| <f1> tokenizers",shape="record"];
	"tokenizers.implementations" [label="<f0> Package| <f1> tokenizers.implementations",shape="record"];
	"tokenizers.implementations.sentencepiece_unigram" [label="<f0> SourceModule| <f1> tokenizers.implementations.sentencepiece_unigram",shape="record"];
	"sentencepiece_model_pb2" [label="<f0> MissingModule| <f1> sentencepiece_model_pb2",shape="record"];
	"tokenizers.implementations.sentencepiece_bpe" [label="<f0> SourceModule| <f1> tokenizers.implementations.sentencepiece_bpe",shape="record"];
	"tokenizers.implementations.char_level_bpe" [label="<f0> SourceModule| <f1> tokenizers.implementations.char_level_bpe",shape="record"];
	"tokenizers.implementations.byte_level_bpe" [label="<f0> SourceModule| <f1> tokenizers.implementations.byte_level_bpe",shape="record"];
	"tokenizers.implementations.bert_wordpiece" [label="<f0> SourceModule| <f1> tokenizers.implementations.bert_wordpiece",shape="record"];
	"tokenizers.implementations.base_tokenizer" [label="<f0> SourceModule| <f1> tokenizers.implementations.base_tokenizer",shape="record"];
	"tokenizers.trainers" [label="<f0> Package| <f1> tokenizers.trainers",shape="record"];
	"tokenizers.tokenizers" [label="<f0> Extension| <f1> tokenizers.tokenizers",shape="record"];
	"'transformers.utils.dummies_sentencepiece_and_tokenizers_objects'" [label="<f0> MissingModule| <f1> 'transformers.utils.dummies_sentencepiece_and_tokenizers_objects'",shape="record"];
	"transformers.tokenization_utils_fast" [label="<f0> SourceModule| <f1> transformers.tokenization_utils_fast",shape="record"];
	"transformers.integrations.ggml" [label="<f0> SourceModule| <f1> transformers.integrations.ggml",shape="record"];
	"transformers.models.nllb" [label="<f0> Package| <f1> transformers.models.nllb",shape="record"];
	"transformers.models" [label="<f0> Package| <f1> transformers.models",shape="record"];
	"transformers.models.megatron_gpt2" [label="<f0> Package| <f1> transformers.models.megatron_gpt2",shape="record"];
	"transformers.models.dit" [label="<f0> Package| <f1> transformers.models.dit",shape="record"];
	"transformers.models.dialogpt" [label="<f0> Package| <f1> transformers.models.dialogpt",shape="record"];
	"transformers.models.deprecated" [label="<f0> Package| <f1> transformers.models.deprecated",shape="record"];
	"transformers.models.nllb.tokenization_nllb_fast" [label="<f0> SourceModule| <f1> transformers.models.nllb.tokenization_nllb_fast",shape="record"];
	"transformers.models.nllb.tokenization_nllb" [label="<f0> SourceModule| <f1> transformers.models.nllb.tokenization_nllb",shape="record"];
	"transformers.models.mluke" [label="<f0> Package| <f1> transformers.models.mluke",shape="record"];
	"transformers.models.mluke.tokenization_mluke" [label="<f0> SourceModule| <f1> transformers.models.mluke.tokenization_mluke",shape="record"];
	"transformers.models.mbart50" [label="<f0> Package| <f1> transformers.models.mbart50",shape="record"];
	"transformers.models.mbart50.tokenization_mbart50_fast" [label="<f0> SourceModule| <f1> transformers.models.mbart50.tokenization_mbart50_fast",shape="record"];
	"transformers.models.mbart50.tokenization_mbart50" [label="<f0> SourceModule| <f1> transformers.models.mbart50.tokenization_mbart50",shape="record"];
	"transformers.models.gpt_sw3" [label="<f0> Package| <f1> transformers.models.gpt_sw3",shape="record"];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" [label="<f0> SourceModule| <f1> transformers.models.gpt_sw3.tokenization_gpt_sw3",shape="record"];
	"transformers.models.cpm" [label="<f0> Package| <f1> transformers.models.cpm",shape="record"];
	"transformers.models.cpm.tokenization_cpm_fast" [label="<f0> SourceModule| <f1> transformers.models.cpm.tokenization_cpm_fast",shape="record"];
	"jieba" [label="<f0> MissingModule| <f1> jieba",shape="record"];
	"transformers.models.cpm.tokenization_cpm" [label="<f0> SourceModule| <f1> transformers.models.cpm.tokenization_cpm",shape="record"];
	"transformers.models.code_llama" [label="<f0> Package| <f1> transformers.models.code_llama",shape="record"];
	"transformers.models.code_llama.tokenization_code_llama_fast" [label="<f0> SourceModule| <f1> transformers.models.code_llama.tokenization_code_llama_fast",shape="record"];
	"transformers.models.code_llama.tokenization_code_llama" [label="<f0> SourceModule| <f1> transformers.models.code_llama.tokenization_code_llama",shape="record"];
	"transformers.models.bartpho" [label="<f0> Package| <f1> transformers.models.bartpho",shape="record"];
	"transformers.models.bartpho.tokenization_bartpho" [label="<f0> SourceModule| <f1> transformers.models.bartpho.tokenization_bartpho",shape="record"];
	"transformers.models.barthez" [label="<f0> Package| <f1> transformers.models.barthez",shape="record"];
	"transformers.models.barthez.tokenization_barthez_fast" [label="<f0> SourceModule| <f1> transformers.models.barthez.tokenization_barthez_fast",shape="record"];
	"transformers.models.barthez.tokenization_barthez" [label="<f0> SourceModule| <f1> transformers.models.barthez.tokenization_barthez",shape="record"];
	"transformers.utils.quantization_config" [label="<f0> SourceModule| <f1> transformers.utils.quantization_config",shape="record"];
	"torchao" [label="<f0> MissingModule| <f1> torchao",shape="record"];
	"'compressed_tensors.config'" [label="<f0> MissingModule| <f1> 'compressed_tensors.config'",shape="record"];
	"compressed_tensors" [label="<f0> MissingModule| <f1> compressed_tensors",shape="record"];
	"transformers.training_args_tf" [label="<f0> SourceModule| <f1> transformers.training_args_tf",shape="record"];
	"transformers.training_args_seq2seq" [label="<f0> SourceModule| <f1> transformers.training_args_seq2seq",shape="record"];
	"transformers.training_args" [label="<f0> SourceModule| <f1> transformers.training_args",shape="record"];
	"transformers.trainer_utils" [label="<f0> SourceModule| <f1> transformers.trainer_utils",shape="record"];
	"ray" [label="<f0> MissingModule| <f1> ray",shape="record"];
	"transformers.trainer_callback" [label="<f0> SourceModule| <f1> transformers.trainer_callback",shape="record"];
	"transformers.tokenization_utils_base" [label="<f0> SourceModule| <f1> transformers.tokenization_utils_base",shape="record"];
	"transformers.models.auto.tokenization_auto" [label="<f0> SourceModule| <f1> transformers.models.auto.tokenization_auto",shape="record"];
	"mlx" [label="<f0> MissingModule| <f1> mlx",shape="record"];
	"transformers.utils.chat_template_utils" [label="<f0> SourceModule| <f1> transformers.utils.chat_template_utils",shape="record"];
	"transformers.tokenization_utils" [label="<f0> SourceModule| <f1> transformers.tokenization_utils",shape="record"];
	"transformers.processing_utils" [label="<f0> SourceModule| <f1> transformers.processing_utils",shape="record"];
	"transformers.pipelines" [label="<f0> Package| <f1> transformers.pipelines",shape="record"];
	"pyctcdecode" [label="<f0> MissingModule| <f1> pyctcdecode",shape="record"];
	"kenlm" [label="<f0> MissingModule| <f1> kenlm",shape="record"];
	"transformers.pipelines.zero_shot_object_detection" [label="<f0> SourceModule| <f1> transformers.pipelines.zero_shot_object_detection",shape="record"];
	"transformers.pipelines.zero_shot_image_classification" [label="<f0> SourceModule| <f1> transformers.pipelines.zero_shot_image_classification",shape="record"];
	"transformers.pipelines.zero_shot_classification" [label="<f0> SourceModule| <f1> transformers.pipelines.zero_shot_classification",shape="record"];
	"transformers.pipelines.zero_shot_audio_classification" [label="<f0> SourceModule| <f1> transformers.pipelines.zero_shot_audio_classification",shape="record"];
	"transformers.pipelines.visual_question_answering" [label="<f0> SourceModule| <f1> transformers.pipelines.visual_question_answering",shape="record"];
	"transformers.pipelines.pt_utils" [label="<f0> SourceModule| <f1> transformers.pipelines.pt_utils",shape="record"];
	"transformers.pipelines.video_classification" [label="<f0> SourceModule| <f1> transformers.pipelines.video_classification",shape="record"];
	"av" [label="<f0> MissingModule| <f1> av",shape="record"];
	"transformers.pipelines.token_classification" [label="<f0> SourceModule| <f1> transformers.pipelines.token_classification",shape="record"];
	"transformers.pipelines.text_to_audio" [label="<f0> SourceModule| <f1> transformers.pipelines.text_to_audio",shape="record"];
	"transformers.models.speecht5.modeling_speecht5" [label="<f0> SourceModule| <f1> transformers.models.speecht5.modeling_speecht5",shape="record"];
	"transformers.models.speecht5.configuration_speecht5" [label="<f0> SourceModule| <f1> transformers.models.speecht5.configuration_speecht5",shape="record"];
	"transformers.modeling_attn_mask_utils" [label="<f0> SourceModule| <f1> transformers.modeling_attn_mask_utils",shape="record"];
	"transformers.pipelines.text_generation" [label="<f0> SourceModule| <f1> transformers.pipelines.text_generation",shape="record"];
	"transformers.pipelines.text_classification" [label="<f0> SourceModule| <f1> transformers.pipelines.text_classification",shape="record"];
	"transformers.pipelines.text2text_generation" [label="<f0> SourceModule| <f1> transformers.pipelines.text2text_generation",shape="record"];
	"transformers.pipelines.table_question_answering" [label="<f0> SourceModule| <f1> transformers.pipelines.table_question_answering",shape="record"];
	"transformers.pipelines.question_answering" [label="<f0> SourceModule| <f1> transformers.pipelines.question_answering",shape="record"];
	"transformers.pipelines.object_detection" [label="<f0> SourceModule| <f1> transformers.pipelines.object_detection",shape="record"];
	"transformers.pipelines.mask_generation" [label="<f0> SourceModule| <f1> transformers.pipelines.mask_generation",shape="record"];
	"transformers.pipelines.image_to_text" [label="<f0> SourceModule| <f1> transformers.pipelines.image_to_text",shape="record"];
	"transformers.pipelines.image_to_image" [label="<f0> SourceModule| <f1> transformers.pipelines.image_to_image",shape="record"];
	"transformers.pipelines.image_segmentation" [label="<f0> SourceModule| <f1> transformers.pipelines.image_segmentation",shape="record"];
	"transformers.pipelines.image_feature_extraction" [label="<f0> SourceModule| <f1> transformers.pipelines.image_feature_extraction",shape="record"];
	"transformers.pipelines.image_classification" [label="<f0> SourceModule| <f1> transformers.pipelines.image_classification",shape="record"];
	"transformers.pipelines.fill_mask" [label="<f0> SourceModule| <f1> transformers.pipelines.fill_mask",shape="record"];
	"transformers.pipelines.feature_extraction" [label="<f0> SourceModule| <f1> transformers.pipelines.feature_extraction",shape="record"];
	"transformers.pipelines.document_question_answering" [label="<f0> SourceModule| <f1> transformers.pipelines.document_question_answering",shape="record"];
	"pytesseract" [label="<f0> MissingModule| <f1> pytesseract",shape="record"];
	"transformers.pipelines.depth_estimation" [label="<f0> SourceModule| <f1> transformers.pipelines.depth_estimation",shape="record"];
	"transformers.pipelines.base" [label="<f0> SourceModule| <f1> transformers.pipelines.base",shape="record"];
	"transformers.pipelines.automatic_speech_recognition" [label="<f0> SourceModule| <f1> transformers.pipelines.automatic_speech_recognition",shape="record"];
	"transformers.pipelines.audio_utils" [label="<f0> SourceModule| <f1> transformers.pipelines.audio_utils",shape="record"];
	"transformers.pipelines.audio_classification" [label="<f0> SourceModule| <f1> transformers.pipelines.audio_classification",shape="record"];
	"transformers.models.auto.processing_auto" [label="<f0> SourceModule| <f1> transformers.models.auto.processing_auto",shape="record"];
	"transformers.models.auto.image_processing_auto" [label="<f0> SourceModule| <f1> transformers.models.auto.image_processing_auto",shape="record"];
	"transformers.models.auto.feature_extraction_auto" [label="<f0> SourceModule| <f1> transformers.models.auto.feature_extraction_auto",shape="record"];
	"transformers.models.zoedepth" [label="<f0> Package| <f1> transformers.models.zoedepth",shape="record"];
	"transformers.models.zoedepth.image_processing_zoedepth" [label="<f0> SourceModule| <f1> transformers.models.zoedepth.image_processing_zoedepth",shape="record"];
	"transformers.models.zoedepth.modeling_zoedepth" [label="<f0> SourceModule| <f1> transformers.models.zoedepth.modeling_zoedepth",shape="record"];
	"transformers.utils.backbone_utils" [label="<f0> SourceModule| <f1> transformers.utils.backbone_utils",shape="record"];
	"transformers.models.zoedepth.configuration_zoedepth" [label="<f0> SourceModule| <f1> transformers.models.zoedepth.configuration_zoedepth",shape="record"];
	"transformers.file_utils" [label="<f0> SourceModule| <f1> transformers.file_utils",shape="record"];
	"transformers.models.zamba" [label="<f0> Package| <f1> transformers.models.zamba",shape="record"];
	"transformers.models.zamba.modeling_zamba" [label="<f0> SourceModule| <f1> transformers.models.zamba.modeling_zamba",shape="record"];
	"causal_conv1d" [label="<f0> MissingModule| <f1> causal_conv1d",shape="record"];
	"'mamba_ssm.ops'" [label="<f0> MissingModule| <f1> 'mamba_ssm.ops'",shape="record"];
	"transformers.modeling_flash_attention_utils" [label="<f0> SourceModule| <f1> transformers.modeling_flash_attention_utils",shape="record"];
	"flash_attn" [label="<f0> MissingModule| <f1> flash_attn",shape="record"];
	"transformers.models.zamba.configuration_zamba" [label="<f0> SourceModule| <f1> transformers.models.zamba.configuration_zamba",shape="record"];
	"transformers.models.yoso" [label="<f0> Package| <f1> transformers.models.yoso",shape="record"];
	"transformers.models.yoso.modeling_yoso" [label="<f0> SourceModule| <f1> transformers.models.yoso.modeling_yoso",shape="record"];
	"fast_lsh_cumulation" [label="<f0> MissingModule| <f1> fast_lsh_cumulation",shape="record"];
	"transformers.models.yoso.configuration_yoso" [label="<f0> SourceModule| <f1> transformers.models.yoso.configuration_yoso",shape="record"];
	"transformers.models.yolos" [label="<f0> Package| <f1> transformers.models.yolos",shape="record"];
	"transformers.models.yolos.modeling_yolos" [label="<f0> SourceModule| <f1> transformers.models.yolos.modeling_yolos",shape="record"];
	"transformers.models.yolos.image_processing_yolos" [label="<f0> SourceModule| <f1> transformers.models.yolos.image_processing_yolos",shape="record"];
	"pycocotools" [label="<f0> MissingModule| <f1> pycocotools",shape="record"];
	"'scipy.stats'" [label="<f0> MissingModule| <f1> 'scipy.stats'",shape="record"];
	"transformers.models.yolos.feature_extraction_yolos" [label="<f0> SourceModule| <f1> transformers.models.yolos.feature_extraction_yolos",shape="record"];
	"transformers.models.yolos.configuration_yolos" [label="<f0> SourceModule| <f1> transformers.models.yolos.configuration_yolos",shape="record"];
	"transformers.onnx" [label="<f0> Package| <f1> transformers.onnx",shape="record"];
	"transformers.onnx.utils" [label="<f0> SourceModule| <f1> transformers.onnx.utils",shape="record"];
	"transformers.onnx.features" [label="<f0> SourceModule| <f1> transformers.onnx.features",shape="record"];
	"transformers.onnx.convert" [label="<f0> SourceModule| <f1> transformers.onnx.convert",shape="record"];
	"tf2onnx" [label="<f0> MissingModule| <f1> tf2onnx",shape="record"];
	"transformers.onnx.config" [label="<f0> SourceModule| <f1> transformers.onnx.config",shape="record"];
	"transformers.models.xmod" [label="<f0> Package| <f1> transformers.models.xmod",shape="record"];
	"transformers.models.xmod.modeling_xmod" [label="<f0> SourceModule| <f1> transformers.models.xmod.modeling_xmod",shape="record"];
	"transformers.models.xmod.configuration_xmod" [label="<f0> SourceModule| <f1> transformers.models.xmod.configuration_xmod",shape="record"];
	"transformers.models.xlnet" [label="<f0> Package| <f1> transformers.models.xlnet",shape="record"];
	"transformers.models.xlnet.modeling_tf_xlnet" [label="<f0> SourceModule| <f1> transformers.models.xlnet.modeling_tf_xlnet",shape="record"];
	"transformers.models.xlnet.modeling_xlnet" [label="<f0> SourceModule| <f1> transformers.models.xlnet.modeling_xlnet",shape="record"];
	"transformers.models.xlnet.tokenization_xlnet_fast" [label="<f0> SourceModule| <f1> transformers.models.xlnet.tokenization_xlnet_fast",shape="record"];
	"transformers.models.xlnet.tokenization_xlnet" [label="<f0> SourceModule| <f1> transformers.models.xlnet.tokenization_xlnet",shape="record"];
	"transformers.models.xlnet.configuration_xlnet" [label="<f0> SourceModule| <f1> transformers.models.xlnet.configuration_xlnet",shape="record"];
	"transformers.models.xlm_roberta_xl" [label="<f0> Package| <f1> transformers.models.xlm_roberta_xl",shape="record"];
	"transformers.models.xlm_roberta_xl.modeling_xlm_roberta_xl" [label="<f0> SourceModule| <f1> transformers.models.xlm_roberta_xl.modeling_xlm_roberta_xl",shape="record"];
	"transformers.models.xlm_roberta_xl.configuration_xlm_roberta_xl" [label="<f0> SourceModule| <f1> transformers.models.xlm_roberta_xl.configuration_xlm_roberta_xl",shape="record"];
	"transformers.models.xlm_roberta" [label="<f0> Package| <f1> transformers.models.xlm_roberta",shape="record"];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" [label="<f0> SourceModule| <f1> transformers.models.xlm_roberta.modeling_flax_xlm_roberta",shape="record"];
	"transformers.modeling_flax_outputs" [label="<f0> SourceModule| <f1> transformers.modeling_flax_outputs",shape="record"];
	"flax" [label="<f0> MissingModule| <f1> flax",shape="record"];
	"transformers.models.xlm_roberta.modeling_tf_xlm_roberta" [label="<f0> SourceModule| <f1> transformers.models.xlm_roberta.modeling_tf_xlm_roberta",shape="record"];
	"transformers.modeling_tf_outputs" [label="<f0> SourceModule| <f1> transformers.modeling_tf_outputs",shape="record"];
	"transformers.models.xlm_roberta.modeling_xlm_roberta" [label="<f0> SourceModule| <f1> transformers.models.xlm_roberta.modeling_xlm_roberta",shape="record"];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta_fast" [label="<f0> SourceModule| <f1> transformers.models.xlm_roberta.tokenization_xlm_roberta_fast",shape="record"];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta" [label="<f0> SourceModule| <f1> transformers.models.xlm_roberta.tokenization_xlm_roberta",shape="record"];
	"transformers.models.xlm_roberta.configuration_xlm_roberta" [label="<f0> SourceModule| <f1> transformers.models.xlm_roberta.configuration_xlm_roberta",shape="record"];
	"transformers.models.xlm" [label="<f0> Package| <f1> transformers.models.xlm",shape="record"];
	"transformers.models.xlm.modeling_tf_xlm" [label="<f0> SourceModule| <f1> transformers.models.xlm.modeling_tf_xlm",shape="record"];
	"transformers.models.xlm.modeling_xlm" [label="<f0> SourceModule| <f1> transformers.models.xlm.modeling_xlm",shape="record"];
	"transformers.models.xlm.tokenization_xlm" [label="<f0> SourceModule| <f1> transformers.models.xlm.tokenization_xlm",shape="record"];
	"pythainlp" [label="<f0> MissingModule| <f1> pythainlp",shape="record"];
	"Mykytea" [label="<f0> MissingModule| <f1> Mykytea",shape="record"];
	"sacremoses" [label="<f0> MissingModule| <f1> sacremoses",shape="record"];
	"transformers.models.xlm.configuration_xlm" [label="<f0> SourceModule| <f1> transformers.models.xlm.configuration_xlm",shape="record"];
	"transformers.models.xglm" [label="<f0> Package| <f1> transformers.models.xglm",shape="record"];
	"transformers.models.xglm.modeling_tf_xglm" [label="<f0> SourceModule| <f1> transformers.models.xglm.modeling_tf_xglm",shape="record"];
	"transformers.models.xglm.modeling_flax_xglm" [label="<f0> SourceModule| <f1> transformers.models.xglm.modeling_flax_xglm",shape="record"];
	"transformers.models.xglm.modeling_xglm" [label="<f0> SourceModule| <f1> transformers.models.xglm.modeling_xglm",shape="record"];
	"transformers.models.xglm.tokenization_xglm_fast" [label="<f0> SourceModule| <f1> transformers.models.xglm.tokenization_xglm_fast",shape="record"];
	"transformers.models.xglm.tokenization_xglm" [label="<f0> SourceModule| <f1> transformers.models.xglm.tokenization_xglm",shape="record"];
	"transformers.models.xglm.configuration_xglm" [label="<f0> SourceModule| <f1> transformers.models.xglm.configuration_xglm",shape="record"];
	"transformers.models.x_clip" [label="<f0> Package| <f1> transformers.models.x_clip",shape="record"];
	"transformers.models.x_clip.modeling_x_clip" [label="<f0> SourceModule| <f1> transformers.models.x_clip.modeling_x_clip",shape="record"];
	"transformers.models.x_clip.processing_x_clip" [label="<f0> SourceModule| <f1> transformers.models.x_clip.processing_x_clip",shape="record"];
	"transformers.models.x_clip.configuration_x_clip" [label="<f0> SourceModule| <f1> transformers.models.x_clip.configuration_x_clip",shape="record"];
	"transformers.models.whisper" [label="<f0> Package| <f1> transformers.models.whisper",shape="record"];
	"transformers.models.whisper.modeling_flax_whisper" [label="<f0> SourceModule| <f1> transformers.models.whisper.modeling_flax_whisper",shape="record"];
	"transformers.generation.flax_logits_process" [label="<f0> SourceModule| <f1> transformers.generation.flax_logits_process",shape="record"];
	"'jax.experimental'" [label="<f0> MissingModule| <f1> 'jax.experimental'",shape="record"];
	"'jax.lax'" [label="<f0> MissingModule| <f1> 'jax.lax'",shape="record"];
	"transformers.models.whisper.modeling_tf_whisper" [label="<f0> SourceModule| <f1> transformers.models.whisper.modeling_tf_whisper",shape="record"];
	"transformers.generation.tf_logits_process" [label="<f0> SourceModule| <f1> transformers.generation.tf_logits_process",shape="record"];
	"transformers.models.whisper.modeling_whisper" [label="<f0> SourceModule| <f1> transformers.models.whisper.modeling_whisper",shape="record"];
	"transformers.models.whisper.generation_whisper" [label="<f0> SourceModule| <f1> transformers.models.whisper.generation_whisper",shape="record"];
	"transformers.generation.stopping_criteria" [label="<f0> SourceModule| <f1> transformers.generation.stopping_criteria",shape="record"];
	"transformers.models.whisper.tokenization_whisper_fast" [label="<f0> SourceModule| <f1> transformers.models.whisper.tokenization_whisper_fast",shape="record"];
	"transformers.models.whisper.english_normalizer" [label="<f0> SourceModule| <f1> transformers.models.whisper.english_normalizer",shape="record"];
	"regex" [label="<f0> Package| <f1> regex",shape="record"];
	"regex.regex" [label="<f0> SourceModule| <f1> regex.regex",shape="record"];
	"regex._regex" [label="<f0> Extension| <f1> regex._regex",shape="record"];
	"regex._regex_core" [label="<f0> SourceModule| <f1> regex._regex_core",shape="record"];
	"regex.DEFAULT_VERSION" [label="<f0> MissingModule| <f1> regex.DEFAULT_VERSION",shape="record"];
	"transformers.models.whisper.tokenization_whisper" [label="<f0> SourceModule| <f1> transformers.models.whisper.tokenization_whisper",shape="record"];
	"transformers.models.whisper.processing_whisper" [label="<f0> SourceModule| <f1> transformers.models.whisper.processing_whisper",shape="record"];
	"transformers.models.whisper.feature_extraction_whisper" [label="<f0> SourceModule| <f1> transformers.models.whisper.feature_extraction_whisper",shape="record"];
	"transformers.audio_utils" [label="<f0> SourceModule| <f1> transformers.audio_utils",shape="record"];
	"transformers.models.whisper.configuration_whisper" [label="<f0> SourceModule| <f1> transformers.models.whisper.configuration_whisper",shape="record"];
	"transformers.models.wavlm" [label="<f0> Package| <f1> transformers.models.wavlm",shape="record"];
	"transformers.models.wavlm.modeling_wavlm" [label="<f0> SourceModule| <f1> transformers.models.wavlm.modeling_wavlm",shape="record"];
	"'peft.tuners'" [label="<f0> MissingModule| <f1> 'peft.tuners'",shape="record"];
	"transformers.models.wavlm.configuration_wavlm" [label="<f0> SourceModule| <f1> transformers.models.wavlm.configuration_wavlm",shape="record"];
	"transformers.models.wav2vec2_with_lm" [label="<f0> Package| <f1> transformers.models.wav2vec2_with_lm",shape="record"];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm",shape="record"];
	"'pyctcdecode.constants'" [label="<f0> MissingModule| <f1> 'pyctcdecode.constants'",shape="record"];
	"'pyctcdecode.alphabet'" [label="<f0> MissingModule| <f1> 'pyctcdecode.alphabet'",shape="record"];
	"transformers.models.wav2vec2_phoneme" [label="<f0> Package| <f1> transformers.models.wav2vec2_phoneme",shape="record"];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme",shape="record"];
	"'phonemizer.separator'" [label="<f0> MissingModule| <f1> 'phonemizer.separator'",shape="record"];
	"'phonemizer.backend'" [label="<f0> MissingModule| <f1> 'phonemizer.backend'",shape="record"];
	"transformers.models.wav2vec2_conformer" [label="<f0> Package| <f1> transformers.models.wav2vec2_conformer",shape="record"];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer",shape="record"];
	"transformers.models.wav2vec2_conformer.configuration_wav2vec2_conformer" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2_conformer.configuration_wav2vec2_conformer",shape="record"];
	"transformers.models.wav2vec2_bert" [label="<f0> Package| <f1> transformers.models.wav2vec2_bert",shape="record"];
	"transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2_bert.modeling_wav2vec2_bert",shape="record"];
	"transformers.models.wav2vec2_bert.processing_wav2vec2_bert" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2_bert.processing_wav2vec2_bert",shape="record"];
	"transformers.models.wav2vec2.tokenization_wav2vec2" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2.tokenization_wav2vec2",shape="record"];
	"transformers.models.seamless_m4t.feature_extraction_seamless_m4t" [label="<f0> SourceModule| <f1> transformers.models.seamless_m4t.feature_extraction_seamless_m4t",shape="record"];
	"transformers.models.wav2vec2_bert.configuration_wav2vec2_bert" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2_bert.configuration_wav2vec2_bert",shape="record"];
	"transformers.models.wav2vec2" [label="<f0> Package| <f1> transformers.models.wav2vec2",shape="record"];
	"transformers.models.wav2vec2.modeling_tf_wav2vec2" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2.modeling_tf_wav2vec2",shape="record"];
	"transformers.models.wav2vec2.modeling_wav2vec2" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2.modeling_wav2vec2",shape="record"];
	"transformers.models.wav2vec2.processing_wav2vec2" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2.processing_wav2vec2",shape="record"];
	"transformers.models.wav2vec2.feature_extraction_wav2vec2" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2.feature_extraction_wav2vec2",shape="record"];
	"transformers.models.wav2vec2.configuration_wav2vec2" [label="<f0> SourceModule| <f1> transformers.models.wav2vec2.configuration_wav2vec2",shape="record"];
	"transformers.models.vivit" [label="<f0> Package| <f1> transformers.models.vivit",shape="record"];
	"transformers.models.vivit.modeling_vivit" [label="<f0> SourceModule| <f1> transformers.models.vivit.modeling_vivit",shape="record"];
	"transformers.models.vivit.image_processing_vivit" [label="<f0> SourceModule| <f1> transformers.models.vivit.image_processing_vivit",shape="record"];
	"transformers.models.vivit.configuration_vivit" [label="<f0> SourceModule| <f1> transformers.models.vivit.configuration_vivit",shape="record"];
	"transformers.models.vits" [label="<f0> Package| <f1> transformers.models.vits",shape="record"];
	"transformers.models.vits.modeling_vits" [label="<f0> SourceModule| <f1> transformers.models.vits.modeling_vits",shape="record"];
	"transformers.models.vits.tokenization_vits" [label="<f0> SourceModule| <f1> transformers.models.vits.tokenization_vits",shape="record"];
	"uroman" [label="<f0> MissingModule| <f1> uroman",shape="record"];
	"phonemizer" [label="<f0> MissingModule| <f1> phonemizer",shape="record"];
	"transformers.models.vits.configuration_vits" [label="<f0> SourceModule| <f1> transformers.models.vits.configuration_vits",shape="record"];
	"transformers.models.vitmatte" [label="<f0> Package| <f1> transformers.models.vitmatte",shape="record"];
	"transformers.models.vitmatte.modeling_vitmatte" [label="<f0> SourceModule| <f1> transformers.models.vitmatte.modeling_vitmatte",shape="record"];
	"transformers.models.vitmatte.image_processing_vitmatte" [label="<f0> SourceModule| <f1> transformers.models.vitmatte.image_processing_vitmatte",shape="record"];
	"transformers.models.vitmatte.configuration_vitmatte" [label="<f0> SourceModule| <f1> transformers.models.vitmatte.configuration_vitmatte",shape="record"];
	"transformers.models.vitdet" [label="<f0> Package| <f1> transformers.models.vitdet",shape="record"];
	"transformers.models.vitdet.modeling_vitdet" [label="<f0> SourceModule| <f1> transformers.models.vitdet.modeling_vitdet",shape="record"];
	"transformers.models.vitdet.configuration_vitdet" [label="<f0> SourceModule| <f1> transformers.models.vitdet.configuration_vitdet",shape="record"];
	"transformers.models.vit_msn" [label="<f0> Package| <f1> transformers.models.vit_msn",shape="record"];
	"transformers.models.vit_msn.modeling_vit_msn" [label="<f0> SourceModule| <f1> transformers.models.vit_msn.modeling_vit_msn",shape="record"];
	"transformers.models.vit_msn.configuration_vit_msn" [label="<f0> SourceModule| <f1> transformers.models.vit_msn.configuration_vit_msn",shape="record"];
	"transformers.models.vit_mae" [label="<f0> Package| <f1> transformers.models.vit_mae",shape="record"];
	"transformers.models.vit_mae.modeling_tf_vit_mae" [label="<f0> SourceModule| <f1> transformers.models.vit_mae.modeling_tf_vit_mae",shape="record"];
	"transformers.models.vit_mae.modeling_vit_mae" [label="<f0> SourceModule| <f1> transformers.models.vit_mae.modeling_vit_mae",shape="record"];
	"transformers.models.vit_mae.configuration_vit_mae" [label="<f0> SourceModule| <f1> transformers.models.vit_mae.configuration_vit_mae",shape="record"];
	"transformers.models.vit" [label="<f0> Package| <f1> transformers.models.vit",shape="record"];
	"transformers.models.vit.modeling_flax_vit" [label="<f0> SourceModule| <f1> transformers.models.vit.modeling_flax_vit",shape="record"];
	"transformers.models.vit.modeling_tf_vit" [label="<f0> SourceModule| <f1> transformers.models.vit.modeling_tf_vit",shape="record"];
	"transformers.models.vit.modeling_vit" [label="<f0> SourceModule| <f1> transformers.models.vit.modeling_vit",shape="record"];
	"transformers.models.vit.image_processing_vit_fast" [label="<f0> SourceModule| <f1> transformers.models.vit.image_processing_vit_fast",shape="record"];
	"transformers.models.vit.image_processing_vit" [label="<f0> SourceModule| <f1> transformers.models.vit.image_processing_vit",shape="record"];
	"transformers.models.vit.feature_extraction_vit" [label="<f0> SourceModule| <f1> transformers.models.vit.feature_extraction_vit",shape="record"];
	"transformers.models.vit.configuration_vit" [label="<f0> SourceModule| <f1> transformers.models.vit.configuration_vit",shape="record"];
	"transformers.models.visual_bert" [label="<f0> Package| <f1> transformers.models.visual_bert",shape="record"];
	"transformers.models.visual_bert.modeling_visual_bert" [label="<f0> SourceModule| <f1> transformers.models.visual_bert.modeling_visual_bert",shape="record"];
	"transformers.models.visual_bert.configuration_visual_bert" [label="<f0> SourceModule| <f1> transformers.models.visual_bert.configuration_visual_bert",shape="record"];
	"transformers.models.vision_text_dual_encoder" [label="<f0> Package| <f1> transformers.models.vision_text_dual_encoder",shape="record"];
	"transformers.models.vision_text_dual_encoder.modeling_tf_vision_text_dual_encoder" [label="<f0> SourceModule| <f1> transformers.models.vision_text_dual_encoder.modeling_tf_vision_text_dual_encoder",shape="record"];
	"transformers.models.clip.modeling_tf_clip" [label="<f0> SourceModule| <f1> transformers.models.clip.modeling_tf_clip",shape="record"];
	"transformers.models.clip.configuration_clip" [label="<f0> SourceModule| <f1> transformers.models.clip.configuration_clip",shape="record"];
	"transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" [label="<f0> SourceModule| <f1> transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder",shape="record"];
	"transformers.models.clip.modeling_flax_clip" [label="<f0> SourceModule| <f1> transformers.models.clip.modeling_flax_clip",shape="record"];
	"transformers.models.auto.modeling_flax_auto" [label="<f0> SourceModule| <f1> transformers.models.auto.modeling_flax_auto",shape="record"];
	"transformers.models.vision_text_dual_encoder.modeling_vision_text_dual_encoder" [label="<f0> SourceModule| <f1> transformers.models.vision_text_dual_encoder.modeling_vision_text_dual_encoder",shape="record"];
	"transformers.models.clip.modeling_clip" [label="<f0> SourceModule| <f1> transformers.models.clip.modeling_clip",shape="record"];
	"transformers.models.vision_text_dual_encoder.processing_vision_text_dual_encoder" [label="<f0> SourceModule| <f1> transformers.models.vision_text_dual_encoder.processing_vision_text_dual_encoder",shape="record"];
	"transformers.models.vision_text_dual_encoder.configuration_vision_text_dual_encoder" [label="<f0> SourceModule| <f1> transformers.models.vision_text_dual_encoder.configuration_vision_text_dual_encoder",shape="record"];
	"transformers.models.siglip.configuration_siglip" [label="<f0> SourceModule| <f1> transformers.models.siglip.configuration_siglip",shape="record"];
	"transformers.models.chinese_clip.configuration_chinese_clip" [label="<f0> SourceModule| <f1> transformers.models.chinese_clip.configuration_chinese_clip",shape="record"];
	"transformers.models.vision_encoder_decoder" [label="<f0> Package| <f1> transformers.models.vision_encoder_decoder",shape="record"];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder",shape="record"];
	"transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder",shape="record"];
	"transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder",shape="record"];
	"transformers.models.vision_encoder_decoder.configuration_vision_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.vision_encoder_decoder.configuration_vision_encoder_decoder",shape="record"];
	"transformers.models.vipllava" [label="<f0> Package| <f1> transformers.models.vipllava",shape="record"];
	"transformers.models.vipllava.modeling_vipllava" [label="<f0> SourceModule| <f1> transformers.models.vipllava.modeling_vipllava",shape="record"];
	"transformers.models.vipllava.configuration_vipllava" [label="<f0> SourceModule| <f1> transformers.models.vipllava.configuration_vipllava",shape="record"];
	"transformers.models.vilt" [label="<f0> Package| <f1> transformers.models.vilt",shape="record"];
	"transformers.models.vilt.modeling_vilt" [label="<f0> SourceModule| <f1> transformers.models.vilt.modeling_vilt",shape="record"];
	"transformers.models.vilt.processing_vilt" [label="<f0> SourceModule| <f1> transformers.models.vilt.processing_vilt",shape="record"];
	"transformers.models.vilt.image_processing_vilt" [label="<f0> SourceModule| <f1> transformers.models.vilt.image_processing_vilt",shape="record"];
	"transformers.models.vilt.feature_extraction_vilt" [label="<f0> SourceModule| <f1> transformers.models.vilt.feature_extraction_vilt",shape="record"];
	"transformers.models.vilt.configuration_vilt" [label="<f0> SourceModule| <f1> transformers.models.vilt.configuration_vilt",shape="record"];
	"transformers.models.videomae" [label="<f0> Package| <f1> transformers.models.videomae",shape="record"];
	"transformers.models.videomae.image_processing_videomae" [label="<f0> SourceModule| <f1> transformers.models.videomae.image_processing_videomae",shape="record"];
	"transformers.models.videomae.feature_extraction_videomae" [label="<f0> SourceModule| <f1> transformers.models.videomae.feature_extraction_videomae",shape="record"];
	"transformers.models.videomae.modeling_videomae" [label="<f0> SourceModule| <f1> transformers.models.videomae.modeling_videomae",shape="record"];
	"transformers.models.videomae.configuration_videomae" [label="<f0> SourceModule| <f1> transformers.models.videomae.configuration_videomae",shape="record"];
	"transformers.models.video_llava" [label="<f0> Package| <f1> transformers.models.video_llava",shape="record"];
	"transformers.models.video_llava.modeling_video_llava" [label="<f0> SourceModule| <f1> transformers.models.video_llava.modeling_video_llava",shape="record"];
	"transformers.models.video_llava.image_processing_video_llava" [label="<f0> SourceModule| <f1> transformers.models.video_llava.image_processing_video_llava",shape="record"];
	"transformers.models.video_llava.configuration_video_llava" [label="<f0> SourceModule| <f1> transformers.models.video_llava.configuration_video_llava",shape="record"];
	"transformers.models.upernet" [label="<f0> Package| <f1> transformers.models.upernet",shape="record"];
	"transformers.models.upernet.modeling_upernet" [label="<f0> SourceModule| <f1> transformers.models.upernet.modeling_upernet",shape="record"];
	"transformers.models.upernet.configuration_upernet" [label="<f0> SourceModule| <f1> transformers.models.upernet.configuration_upernet",shape="record"];
	"transformers.models.univnet" [label="<f0> Package| <f1> transformers.models.univnet",shape="record"];
	"transformers.models.univnet.modeling_univnet" [label="<f0> SourceModule| <f1> transformers.models.univnet.modeling_univnet",shape="record"];
	"transformers.models.univnet.feature_extraction_univnet" [label="<f0> SourceModule| <f1> transformers.models.univnet.feature_extraction_univnet",shape="record"];
	"transformers.models.univnet.configuration_univnet" [label="<f0> SourceModule| <f1> transformers.models.univnet.configuration_univnet",shape="record"];
	"transformers.models.unispeech_sat" [label="<f0> Package| <f1> transformers.models.unispeech_sat",shape="record"];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" [label="<f0> SourceModule| <f1> transformers.models.unispeech_sat.modeling_unispeech_sat",shape="record"];
	"transformers.models.unispeech_sat.configuration_unispeech_sat" [label="<f0> SourceModule| <f1> transformers.models.unispeech_sat.configuration_unispeech_sat",shape="record"];
	"transformers.models.unispeech" [label="<f0> Package| <f1> transformers.models.unispeech",shape="record"];
	"transformers.models.unispeech.modeling_unispeech" [label="<f0> SourceModule| <f1> transformers.models.unispeech.modeling_unispeech",shape="record"];
	"transformers.models.unispeech.configuration_unispeech" [label="<f0> SourceModule| <f1> transformers.models.unispeech.configuration_unispeech",shape="record"];
	"transformers.models.umt5" [label="<f0> Package| <f1> transformers.models.umt5",shape="record"];
	"transformers.models.umt5.modeling_umt5" [label="<f0> SourceModule| <f1> transformers.models.umt5.modeling_umt5",shape="record"];
	"transformers.models.umt5.configuration_umt5" [label="<f0> SourceModule| <f1> transformers.models.umt5.configuration_umt5",shape="record"];
	"transformers.models.udop" [label="<f0> Package| <f1> transformers.models.udop",shape="record"];
	"transformers.models.udop.modeling_udop" [label="<f0> SourceModule| <f1> transformers.models.udop.modeling_udop",shape="record"];
	"transformers.models.udop.tokenization_udop_fast" [label="<f0> SourceModule| <f1> transformers.models.udop.tokenization_udop_fast",shape="record"];
	"transformers.models.udop.tokenization_udop" [label="<f0> SourceModule| <f1> transformers.models.udop.tokenization_udop",shape="record"];
	"transformers.models.udop.processing_udop" [label="<f0> SourceModule| <f1> transformers.models.udop.processing_udop",shape="record"];
	"transformers.models.udop.configuration_udop" [label="<f0> SourceModule| <f1> transformers.models.udop.configuration_udop",shape="record"];
	"transformers.models.tvp" [label="<f0> Package| <f1> transformers.models.tvp",shape="record"];
	"transformers.models.tvp.modeling_tvp" [label="<f0> SourceModule| <f1> transformers.models.tvp.modeling_tvp",shape="record"];
	"transformers.models.tvp.image_processing_tvp" [label="<f0> SourceModule| <f1> transformers.models.tvp.image_processing_tvp",shape="record"];
	"transformers.models.tvp.processing_tvp" [label="<f0> SourceModule| <f1> transformers.models.tvp.processing_tvp",shape="record"];
	"transformers.models.tvp.configuration_tvp" [label="<f0> SourceModule| <f1> transformers.models.tvp.configuration_tvp",shape="record"];
	"transformers.models.trocr" [label="<f0> Package| <f1> transformers.models.trocr",shape="record"];
	"transformers.models.trocr.modeling_trocr" [label="<f0> SourceModule| <f1> transformers.models.trocr.modeling_trocr",shape="record"];
	"transformers.models.trocr.processing_trocr" [label="<f0> SourceModule| <f1> transformers.models.trocr.processing_trocr",shape="record"];
	"transformers.models.trocr.configuration_trocr" [label="<f0> SourceModule| <f1> transformers.models.trocr.configuration_trocr",shape="record"];
	"transformers.models.timm_backbone" [label="<f0> Package| <f1> transformers.models.timm_backbone",shape="record"];
	"transformers.models.timm_backbone.modeling_timm_backbone" [label="<f0> SourceModule| <f1> transformers.models.timm_backbone.modeling_timm_backbone",shape="record"];
	"timm" [label="<f0> MissingModule| <f1> timm",shape="record"];
	"transformers.models.timm_backbone.configuration_timm_backbone" [label="<f0> SourceModule| <f1> transformers.models.timm_backbone.configuration_timm_backbone",shape="record"];
	"transformers.models.timesformer" [label="<f0> Package| <f1> transformers.models.timesformer",shape="record"];
	"transformers.models.timesformer.modeling_timesformer" [label="<f0> SourceModule| <f1> transformers.models.timesformer.modeling_timesformer",shape="record"];
	"transformers.models.timesformer.configuration_timesformer" [label="<f0> SourceModule| <f1> transformers.models.timesformer.configuration_timesformer",shape="record"];
	"transformers.models.time_series_transformer" [label="<f0> Package| <f1> transformers.models.time_series_transformer",shape="record"];
	"transformers.models.time_series_transformer.modeling_time_series_transformer" [label="<f0> SourceModule| <f1> transformers.models.time_series_transformer.modeling_time_series_transformer",shape="record"];
	"transformers.time_series_utils" [label="<f0> SourceModule| <f1> transformers.time_series_utils",shape="record"];
	"torch.distributions" [label="<f0> Package| <f1> torch.distributions",shape="record"];
	"torch.distributions.wishart" [label="<f0> SourceModule| <f1> torch.distributions.wishart",shape="record"];
	"torch.distributions.utils" [label="<f0> SourceModule| <f1> torch.distributions.utils",shape="record"];
	"torch.distributions.weibull" [label="<f0> SourceModule| <f1> torch.distributions.weibull",shape="record"];
	"torch.distributions.von_mises" [label="<f0> SourceModule| <f1> torch.distributions.von_mises",shape="record"];
	"torch.distributions.uniform" [label="<f0> SourceModule| <f1> torch.distributions.uniform",shape="record"];
	"torch.distributions.transformed_distribution" [label="<f0> SourceModule| <f1> torch.distributions.transformed_distribution",shape="record"];
	"torch.distributions.studentT" [label="<f0> SourceModule| <f1> torch.distributions.studentT",shape="record"];
	"torch.distributions.relaxed_categorical" [label="<f0> SourceModule| <f1> torch.distributions.relaxed_categorical",shape="record"];
	"torch.distributions.relaxed_bernoulli" [label="<f0> SourceModule| <f1> torch.distributions.relaxed_bernoulli",shape="record"];
	"torch.distributions.poisson" [label="<f0> SourceModule| <f1> torch.distributions.poisson",shape="record"];
	"torch.distributions.pareto" [label="<f0> SourceModule| <f1> torch.distributions.pareto",shape="record"];
	"torch.distributions.one_hot_categorical" [label="<f0> SourceModule| <f1> torch.distributions.one_hot_categorical",shape="record"];
	"torch.distributions.normal" [label="<f0> SourceModule| <f1> torch.distributions.normal",shape="record"];
	"torch.distributions.negative_binomial" [label="<f0> SourceModule| <f1> torch.distributions.negative_binomial",shape="record"];
	"torch.distributions.multivariate_normal" [label="<f0> SourceModule| <f1> torch.distributions.multivariate_normal",shape="record"];
	"torch.distributions.multinomial" [label="<f0> SourceModule| <f1> torch.distributions.multinomial",shape="record"];
	"torch.distributions.mixture_same_family" [label="<f0> SourceModule| <f1> torch.distributions.mixture_same_family",shape="record"];
	"torch.distributions.lowrank_multivariate_normal" [label="<f0> SourceModule| <f1> torch.distributions.lowrank_multivariate_normal",shape="record"];
	"torch.distributions.logistic_normal" [label="<f0> SourceModule| <f1> torch.distributions.logistic_normal",shape="record"];
	"torch.distributions.log_normal" [label="<f0> SourceModule| <f1> torch.distributions.log_normal",shape="record"];
	"torch.distributions.lkj_cholesky" [label="<f0> SourceModule| <f1> torch.distributions.lkj_cholesky",shape="record"];
	"torch.distributions.laplace" [label="<f0> SourceModule| <f1> torch.distributions.laplace",shape="record"];
	"torch.distributions.kumaraswamy" [label="<f0> SourceModule| <f1> torch.distributions.kumaraswamy",shape="record"];
	"torch.distributions.kl" [label="<f0> SourceModule| <f1> torch.distributions.kl",shape="record"];
	"torch.distributions.inverse_gamma" [label="<f0> SourceModule| <f1> torch.distributions.inverse_gamma",shape="record"];
	"torch.distributions.independent" [label="<f0> SourceModule| <f1> torch.distributions.independent",shape="record"];
	"torch.distributions.half_normal" [label="<f0> SourceModule| <f1> torch.distributions.half_normal",shape="record"];
	"torch.distributions.half_cauchy" [label="<f0> SourceModule| <f1> torch.distributions.half_cauchy",shape="record"];
	"torch.distributions.gumbel" [label="<f0> SourceModule| <f1> torch.distributions.gumbel",shape="record"];
	"torch.distributions.geometric" [label="<f0> SourceModule| <f1> torch.distributions.geometric",shape="record"];
	"torch.distributions.gamma" [label="<f0> SourceModule| <f1> torch.distributions.gamma",shape="record"];
	"torch.distributions.fishersnedecor" [label="<f0> SourceModule| <f1> torch.distributions.fishersnedecor",shape="record"];
	"torch.distributions.exponential" [label="<f0> SourceModule| <f1> torch.distributions.exponential",shape="record"];
	"torch.distributions.exp_family" [label="<f0> SourceModule| <f1> torch.distributions.exp_family",shape="record"];
	"torch.distributions.distribution" [label="<f0> SourceModule| <f1> torch.distributions.distribution",shape="record"];
	"torch.distributions.dirichlet" [label="<f0> SourceModule| <f1> torch.distributions.dirichlet",shape="record"];
	"torch.distributions.continuous_bernoulli" [label="<f0> SourceModule| <f1> torch.distributions.continuous_bernoulli",shape="record"];
	"torch.distributions.constraint_registry" [label="<f0> SourceModule| <f1> torch.distributions.constraint_registry",shape="record"];
	"torch.distributions.chi2" [label="<f0> SourceModule| <f1> torch.distributions.chi2",shape="record"];
	"torch.distributions.cauchy" [label="<f0> SourceModule| <f1> torch.distributions.cauchy",shape="record"];
	"torch.distributions.categorical" [label="<f0> SourceModule| <f1> torch.distributions.categorical",shape="record"];
	"torch.distributions.binomial" [label="<f0> SourceModule| <f1> torch.distributions.binomial",shape="record"];
	"torch.distributions.beta" [label="<f0> SourceModule| <f1> torch.distributions.beta",shape="record"];
	"torch.distributions.bernoulli" [label="<f0> SourceModule| <f1> torch.distributions.bernoulli",shape="record"];
	"torch.distributions.transforms" [label="<f0> SourceModule| <f1> torch.distributions.transforms",shape="record"];
	"torch.distributions.constraints" [label="<f0> SourceModule| <f1> torch.distributions.constraints",shape="record"];
	"transformers.models.time_series_transformer.configuration_time_series_transformer" [label="<f0> SourceModule| <f1> transformers.models.time_series_transformer.configuration_time_series_transformer",shape="record"];
	"transformers.models.tapas" [label="<f0> Package| <f1> transformers.models.tapas",shape="record"];
	"transformers.models.tapas.modeling_tf_tapas" [label="<f0> SourceModule| <f1> transformers.models.tapas.modeling_tf_tapas",shape="record"];
	"tensorflow_probability" [label="<f0> MissingModule| <f1> tensorflow_probability",shape="record"];
	"transformers.models.tapas.modeling_tapas" [label="<f0> SourceModule| <f1> transformers.models.tapas.modeling_tapas",shape="record"];
	"transformers.models.tapas.tokenization_tapas" [label="<f0> SourceModule| <f1> transformers.models.tapas.tokenization_tapas",shape="record"];
	"transformers.models.tapas.configuration_tapas" [label="<f0> SourceModule| <f1> transformers.models.tapas.configuration_tapas",shape="record"];
	"transformers.models.table_transformer" [label="<f0> Package| <f1> transformers.models.table_transformer",shape="record"];
	"transformers.models.table_transformer.modeling_table_transformer" [label="<f0> SourceModule| <f1> transformers.models.table_transformer.modeling_table_transformer",shape="record"];
	"transformers.models.table_transformer.configuration_table_transformer" [label="<f0> SourceModule| <f1> transformers.models.table_transformer.configuration_table_transformer",shape="record"];
	"transformers.models.t5" [label="<f0> Package| <f1> transformers.models.t5",shape="record"];
	"transformers.models.t5.modeling_flax_t5" [label="<f0> SourceModule| <f1> transformers.models.t5.modeling_flax_t5",shape="record"];
	"transformers.models.t5.modeling_tf_t5" [label="<f0> SourceModule| <f1> transformers.models.t5.modeling_tf_t5",shape="record"];
	"'tensorflow.compiler'" [label="<f0> MissingModule| <f1> 'tensorflow.compiler'",shape="record"];
	"transformers.models.t5.modeling_t5" [label="<f0> SourceModule| <f1> transformers.models.t5.modeling_t5",shape="record"];
	"'apex.normalization'" [label="<f0> MissingModule| <f1> 'apex.normalization'",shape="record"];
	"transformers.utils.model_parallel_utils" [label="<f0> SourceModule| <f1> transformers.utils.model_parallel_utils",shape="record"];
	"transformers.models.t5.tokenization_t5_fast" [label="<f0> SourceModule| <f1> transformers.models.t5.tokenization_t5_fast",shape="record"];
	"transformers.models.t5.tokenization_t5" [label="<f0> SourceModule| <f1> transformers.models.t5.tokenization_t5",shape="record"];
	"transformers.models.t5.configuration_t5" [label="<f0> SourceModule| <f1> transformers.models.t5.configuration_t5",shape="record"];
	"transformers.models.switch_transformers" [label="<f0> Package| <f1> transformers.models.switch_transformers",shape="record"];
	"transformers.models.switch_transformers.modeling_switch_transformers" [label="<f0> SourceModule| <f1> transformers.models.switch_transformers.modeling_switch_transformers",shape="record"];
	"transformers.models.switch_transformers.configuration_switch_transformers" [label="<f0> SourceModule| <f1> transformers.models.switch_transformers.configuration_switch_transformers",shape="record"];
	"transformers.models.swinv2" [label="<f0> Package| <f1> transformers.models.swinv2",shape="record"];
	"transformers.models.swinv2.modeling_swinv2" [label="<f0> SourceModule| <f1> transformers.models.swinv2.modeling_swinv2",shape="record"];
	"transformers.models.swinv2.configuration_swinv2" [label="<f0> SourceModule| <f1> transformers.models.swinv2.configuration_swinv2",shape="record"];
	"transformers.models.swin2sr" [label="<f0> Package| <f1> transformers.models.swin2sr",shape="record"];
	"transformers.models.swin2sr.image_processing_swin2sr" [label="<f0> SourceModule| <f1> transformers.models.swin2sr.image_processing_swin2sr",shape="record"];
	"transformers.models.swin2sr.modeling_swin2sr" [label="<f0> SourceModule| <f1> transformers.models.swin2sr.modeling_swin2sr",shape="record"];
	"transformers.models.swin2sr.configuration_swin2sr" [label="<f0> SourceModule| <f1> transformers.models.swin2sr.configuration_swin2sr",shape="record"];
	"transformers.models.swin" [label="<f0> Package| <f1> transformers.models.swin",shape="record"];
	"transformers.models.swin.modeling_tf_swin" [label="<f0> SourceModule| <f1> transformers.models.swin.modeling_tf_swin",shape="record"];
	"transformers.models.swin.modeling_swin" [label="<f0> SourceModule| <f1> transformers.models.swin.modeling_swin",shape="record"];
	"transformers.models.swin.configuration_swin" [label="<f0> SourceModule| <f1> transformers.models.swin.configuration_swin",shape="record"];
	"transformers.models.swiftformer" [label="<f0> Package| <f1> transformers.models.swiftformer",shape="record"];
	"transformers.models.swiftformer.modeling_tf_swiftformer" [label="<f0> SourceModule| <f1> transformers.models.swiftformer.modeling_tf_swiftformer",shape="record"];
	"transformers.models.swiftformer.modeling_swiftformer" [label="<f0> SourceModule| <f1> transformers.models.swiftformer.modeling_swiftformer",shape="record"];
	"transformers.models.swiftformer.configuration_swiftformer" [label="<f0> SourceModule| <f1> transformers.models.swiftformer.configuration_swiftformer",shape="record"];
	"transformers.models.superpoint" [label="<f0> Package| <f1> transformers.models.superpoint",shape="record"];
	"transformers.models.superpoint.modeling_superpoint" [label="<f0> SourceModule| <f1> transformers.models.superpoint.modeling_superpoint",shape="record"];
	"transformers.models.superpoint.image_processing_superpoint" [label="<f0> SourceModule| <f1> transformers.models.superpoint.image_processing_superpoint",shape="record"];
	"transformers.models.superpoint.configuration_superpoint" [label="<f0> SourceModule| <f1> transformers.models.superpoint.configuration_superpoint",shape="record"];
	"transformers.models.starcoder2" [label="<f0> Package| <f1> transformers.models.starcoder2",shape="record"];
	"transformers.models.starcoder2.modeling_starcoder2" [label="<f0> SourceModule| <f1> transformers.models.starcoder2.modeling_starcoder2",shape="record"];
	"transformers.models.starcoder2.configuration_starcoder2" [label="<f0> SourceModule| <f1> transformers.models.starcoder2.configuration_starcoder2",shape="record"];
	"transformers.models.stablelm" [label="<f0> Package| <f1> transformers.models.stablelm",shape="record"];
	"transformers.models.stablelm.modeling_stablelm" [label="<f0> SourceModule| <f1> transformers.models.stablelm.modeling_stablelm",shape="record"];
	"transformers.models.stablelm.configuration_stablelm" [label="<f0> SourceModule| <f1> transformers.models.stablelm.configuration_stablelm",shape="record"];
	"transformers.models.squeezebert" [label="<f0> Package| <f1> transformers.models.squeezebert",shape="record"];
	"transformers.models.squeezebert.modeling_squeezebert" [label="<f0> SourceModule| <f1> transformers.models.squeezebert.modeling_squeezebert",shape="record"];
	"transformers.models.squeezebert.tokenization_squeezebert_fast" [label="<f0> SourceModule| <f1> transformers.models.squeezebert.tokenization_squeezebert_fast",shape="record"];
	"transformers.models.squeezebert.tokenization_squeezebert" [label="<f0> SourceModule| <f1> transformers.models.squeezebert.tokenization_squeezebert",shape="record"];
	"transformers.models.squeezebert.configuration_squeezebert" [label="<f0> SourceModule| <f1> transformers.models.squeezebert.configuration_squeezebert",shape="record"];
	"transformers.models.splinter" [label="<f0> Package| <f1> transformers.models.splinter",shape="record"];
	"transformers.models.splinter.modeling_splinter" [label="<f0> SourceModule| <f1> transformers.models.splinter.modeling_splinter",shape="record"];
	"transformers.models.splinter.tokenization_splinter_fast" [label="<f0> SourceModule| <f1> transformers.models.splinter.tokenization_splinter_fast",shape="record"];
	"transformers.models.splinter.tokenization_splinter" [label="<f0> SourceModule| <f1> transformers.models.splinter.tokenization_splinter",shape="record"];
	"transformers.models.splinter.configuration_splinter" [label="<f0> SourceModule| <f1> transformers.models.splinter.configuration_splinter",shape="record"];
	"transformers.models.speecht5" [label="<f0> Package| <f1> transformers.models.speecht5",shape="record"];
	"transformers.models.speecht5.tokenization_speecht5" [label="<f0> SourceModule| <f1> transformers.models.speecht5.tokenization_speecht5",shape="record"];
	"transformers.models.speecht5.number_normalizer" [label="<f0> SourceModule| <f1> transformers.models.speecht5.number_normalizer",shape="record"];
	"transformers.models.speecht5.processing_speecht5" [label="<f0> SourceModule| <f1> transformers.models.speecht5.processing_speecht5",shape="record"];
	"transformers.models.speecht5.feature_extraction_speecht5" [label="<f0> SourceModule| <f1> transformers.models.speecht5.feature_extraction_speecht5",shape="record"];
	"transformers.models.speech_to_text" [label="<f0> Package| <f1> transformers.models.speech_to_text",shape="record"];
	"transformers.models.speech_to_text.modeling_speech_to_text" [label="<f0> SourceModule| <f1> transformers.models.speech_to_text.modeling_speech_to_text",shape="record"];
	"transformers.models.speech_to_text.modeling_tf_speech_to_text" [label="<f0> SourceModule| <f1> transformers.models.speech_to_text.modeling_tf_speech_to_text",shape="record"];
	"transformers.models.speech_to_text.tokenization_speech_to_text" [label="<f0> SourceModule| <f1> transformers.models.speech_to_text.tokenization_speech_to_text",shape="record"];
	"transformers.models.speech_to_text.processing_speech_to_text" [label="<f0> SourceModule| <f1> transformers.models.speech_to_text.processing_speech_to_text",shape="record"];
	"transformers.models.speech_to_text.feature_extraction_speech_to_text" [label="<f0> SourceModule| <f1> transformers.models.speech_to_text.feature_extraction_speech_to_text",shape="record"];
	"'torchaudio.compliance'" [label="<f0> MissingModule| <f1> 'torchaudio.compliance'",shape="record"];
	"transformers.models.speech_to_text.configuration_speech_to_text" [label="<f0> SourceModule| <f1> transformers.models.speech_to_text.configuration_speech_to_text",shape="record"];
	"transformers.models.speech_encoder_decoder" [label="<f0> Package| <f1> transformers.models.speech_encoder_decoder",shape="record"];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder",shape="record"];
	"transformers.models.speech_encoder_decoder.modeling_speech_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.speech_encoder_decoder.modeling_speech_encoder_decoder",shape="record"];
	"transformers.models.speech_encoder_decoder.configuration_speech_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.speech_encoder_decoder.configuration_speech_encoder_decoder",shape="record"];
	"transformers.models.siglip" [label="<f0> Package| <f1> transformers.models.siglip",shape="record"];
	"transformers.models.siglip.modeling_siglip" [label="<f0> SourceModule| <f1> transformers.models.siglip.modeling_siglip",shape="record"];
	"transformers.models.siglip.image_processing_siglip" [label="<f0> SourceModule| <f1> transformers.models.siglip.image_processing_siglip",shape="record"];
	"transformers.models.siglip.tokenization_siglip" [label="<f0> SourceModule| <f1> transformers.models.siglip.tokenization_siglip",shape="record"];
	"transformers.models.siglip.processing_siglip" [label="<f0> SourceModule| <f1> transformers.models.siglip.processing_siglip",shape="record"];
	"transformers.models.sew_d" [label="<f0> Package| <f1> transformers.models.sew_d",shape="record"];
	"transformers.models.sew_d.modeling_sew_d" [label="<f0> SourceModule| <f1> transformers.models.sew_d.modeling_sew_d",shape="record"];
	"transformers.models.sew_d.configuration_sew_d" [label="<f0> SourceModule| <f1> transformers.models.sew_d.configuration_sew_d",shape="record"];
	"transformers.models.sew" [label="<f0> Package| <f1> transformers.models.sew",shape="record"];
	"transformers.models.sew.modeling_sew" [label="<f0> SourceModule| <f1> transformers.models.sew.modeling_sew",shape="record"];
	"transformers.models.sew.configuration_sew" [label="<f0> SourceModule| <f1> transformers.models.sew.configuration_sew",shape="record"];
	"transformers.models.seggpt" [label="<f0> Package| <f1> transformers.models.seggpt",shape="record"];
	"transformers.models.seggpt.image_processing_seggpt" [label="<f0> SourceModule| <f1> transformers.models.seggpt.image_processing_seggpt",shape="record"];
	"transformers.models.seggpt.modeling_seggpt" [label="<f0> SourceModule| <f1> transformers.models.seggpt.modeling_seggpt",shape="record"];
	"transformers.models.seggpt.configuration_seggpt" [label="<f0> SourceModule| <f1> transformers.models.seggpt.configuration_seggpt",shape="record"];
	"transformers.models.segformer" [label="<f0> Package| <f1> transformers.models.segformer",shape="record"];
	"transformers.models.segformer.modeling_tf_segformer" [label="<f0> SourceModule| <f1> transformers.models.segformer.modeling_tf_segformer",shape="record"];
	"transformers.models.segformer.modeling_segformer" [label="<f0> SourceModule| <f1> transformers.models.segformer.modeling_segformer",shape="record"];
	"transformers.models.segformer.image_processing_segformer" [label="<f0> SourceModule| <f1> transformers.models.segformer.image_processing_segformer",shape="record"];
	"transformers.models.segformer.feature_extraction_segformer" [label="<f0> SourceModule| <f1> transformers.models.segformer.feature_extraction_segformer",shape="record"];
	"transformers.models.segformer.configuration_segformer" [label="<f0> SourceModule| <f1> transformers.models.segformer.configuration_segformer",shape="record"];
	"transformers.models.seamless_m4t_v2" [label="<f0> Package| <f1> transformers.models.seamless_m4t_v2",shape="record"];
	"transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2" [label="<f0> SourceModule| <f1> transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2",shape="record"];
	"transformers.models.seamless_m4t_v2.configuration_seamless_m4t_v2" [label="<f0> SourceModule| <f1> transformers.models.seamless_m4t_v2.configuration_seamless_m4t_v2",shape="record"];
	"transformers.models.seamless_m4t" [label="<f0> Package| <f1> transformers.models.seamless_m4t",shape="record"];
	"transformers.models.seamless_m4t.modeling_seamless_m4t" [label="<f0> SourceModule| <f1> transformers.models.seamless_m4t.modeling_seamless_m4t",shape="record"];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t_fast" [label="<f0> SourceModule| <f1> transformers.models.seamless_m4t.tokenization_seamless_m4t_fast",shape="record"];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t" [label="<f0> SourceModule| <f1> transformers.models.seamless_m4t.tokenization_seamless_m4t",shape="record"];
	"transformers.models.seamless_m4t.processing_seamless_m4t" [label="<f0> SourceModule| <f1> transformers.models.seamless_m4t.processing_seamless_m4t",shape="record"];
	"transformers.models.seamless_m4t.configuration_seamless_m4t" [label="<f0> SourceModule| <f1> transformers.models.seamless_m4t.configuration_seamless_m4t",shape="record"];
	"transformers.models.sam" [label="<f0> Package| <f1> transformers.models.sam",shape="record"];
	"transformers.models.sam.image_processing_sam" [label="<f0> SourceModule| <f1> transformers.models.sam.image_processing_sam",shape="record"];
	"'tensorflow.experimental'" [label="<f0> MissingModule| <f1> 'tensorflow.experimental'",shape="record"];
	"transformers.models.sam.modeling_tf_sam" [label="<f0> SourceModule| <f1> transformers.models.sam.modeling_tf_sam",shape="record"];
	"transformers.models.sam.modeling_sam" [label="<f0> SourceModule| <f1> transformers.models.sam.modeling_sam",shape="record"];
	"transformers.models.sam.processing_sam" [label="<f0> SourceModule| <f1> transformers.models.sam.processing_sam",shape="record"];
	"transformers.models.sam.configuration_sam" [label="<f0> SourceModule| <f1> transformers.models.sam.configuration_sam",shape="record"];
	"transformers.models.rwkv" [label="<f0> Package| <f1> transformers.models.rwkv",shape="record"];
	"transformers.models.rwkv.modeling_rwkv" [label="<f0> SourceModule| <f1> transformers.models.rwkv.modeling_rwkv",shape="record"];
	"transformers.models.rwkv.configuration_rwkv" [label="<f0> SourceModule| <f1> transformers.models.rwkv.configuration_rwkv",shape="record"];
	"transformers.models.rt_detr" [label="<f0> Package| <f1> transformers.models.rt_detr",shape="record"];
	"transformers.models.rt_detr.modeling_rt_detr_resnet" [label="<f0> SourceModule| <f1> transformers.models.rt_detr.modeling_rt_detr_resnet",shape="record"];
	"transformers.models.rt_detr.modeling_rt_detr" [label="<f0> SourceModule| <f1> transformers.models.rt_detr.modeling_rt_detr",shape="record"];
	"transformers.models.rt_detr.image_processing_rt_detr" [label="<f0> SourceModule| <f1> transformers.models.rt_detr.image_processing_rt_detr",shape="record"];
	"transformers.models.rt_detr.configuration_rt_detr_resnet" [label="<f0> SourceModule| <f1> transformers.models.rt_detr.configuration_rt_detr_resnet",shape="record"];
	"transformers.models.rt_detr.configuration_rt_detr" [label="<f0> SourceModule| <f1> transformers.models.rt_detr.configuration_rt_detr",shape="record"];
	"transformers.models.roformer" [label="<f0> Package| <f1> transformers.models.roformer",shape="record"];
	"transformers.models.roformer.modeling_flax_roformer" [label="<f0> SourceModule| <f1> transformers.models.roformer.modeling_flax_roformer",shape="record"];
	"transformers.models.roformer.modeling_tf_roformer" [label="<f0> SourceModule| <f1> transformers.models.roformer.modeling_tf_roformer",shape="record"];
	"transformers.models.roformer.modeling_roformer" [label="<f0> SourceModule| <f1> transformers.models.roformer.modeling_roformer",shape="record"];
	"transformers.models.roformer.tokenization_roformer_fast" [label="<f0> SourceModule| <f1> transformers.models.roformer.tokenization_roformer_fast",shape="record"];
	"transformers.models.roformer.tokenization_roformer" [label="<f0> SourceModule| <f1> transformers.models.roformer.tokenization_roformer",shape="record"];
	"transformers.models.roformer.configuration_roformer" [label="<f0> SourceModule| <f1> transformers.models.roformer.configuration_roformer",shape="record"];
	"transformers.models.roc_bert" [label="<f0> Package| <f1> transformers.models.roc_bert",shape="record"];
	"transformers.models.roc_bert.modeling_roc_bert" [label="<f0> SourceModule| <f1> transformers.models.roc_bert.modeling_roc_bert",shape="record"];
	"transformers.models.roc_bert.tokenization_roc_bert" [label="<f0> SourceModule| <f1> transformers.models.roc_bert.tokenization_roc_bert",shape="record"];
	"transformers.models.roc_bert.configuration_roc_bert" [label="<f0> SourceModule| <f1> transformers.models.roc_bert.configuration_roc_bert",shape="record"];
	"transformers.models.roberta_prelayernorm" [label="<f0> Package| <f1> transformers.models.roberta_prelayernorm",shape="record"];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" [label="<f0> SourceModule| <f1> transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm",shape="record"];
	"transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" [label="<f0> SourceModule| <f1> transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm",shape="record"];
	"transformers.models.roberta_prelayernorm.modeling_roberta_prelayernorm" [label="<f0> SourceModule| <f1> transformers.models.roberta_prelayernorm.modeling_roberta_prelayernorm",shape="record"];
	"transformers.models.roberta_prelayernorm.configuration_roberta_prelayernorm" [label="<f0> SourceModule| <f1> transformers.models.roberta_prelayernorm.configuration_roberta_prelayernorm",shape="record"];
	"transformers.models.roberta" [label="<f0> Package| <f1> transformers.models.roberta",shape="record"];
	"transformers.models.roberta.modeling_flax_roberta" [label="<f0> SourceModule| <f1> transformers.models.roberta.modeling_flax_roberta",shape="record"];
	"transformers.models.roberta.modeling_tf_roberta" [label="<f0> SourceModule| <f1> transformers.models.roberta.modeling_tf_roberta",shape="record"];
	"transformers.models.roberta.modeling_roberta" [label="<f0> SourceModule| <f1> transformers.models.roberta.modeling_roberta",shape="record"];
	"transformers.models.roberta.tokenization_roberta_fast" [label="<f0> SourceModule| <f1> transformers.models.roberta.tokenization_roberta_fast",shape="record"];
	"transformers.models.roberta.tokenization_roberta" [label="<f0> SourceModule| <f1> transformers.models.roberta.tokenization_roberta",shape="record"];
	"transformers.models.roberta.configuration_roberta" [label="<f0> SourceModule| <f1> transformers.models.roberta.configuration_roberta",shape="record"];
	"transformers.models.resnet" [label="<f0> Package| <f1> transformers.models.resnet",shape="record"];
	"transformers.models.resnet.modeling_flax_resnet" [label="<f0> SourceModule| <f1> transformers.models.resnet.modeling_flax_resnet",shape="record"];
	"transformers.models.resnet.modeling_tf_resnet" [label="<f0> SourceModule| <f1> transformers.models.resnet.modeling_tf_resnet",shape="record"];
	"transformers.models.resnet.modeling_resnet" [label="<f0> SourceModule| <f1> transformers.models.resnet.modeling_resnet",shape="record"];
	"transformers.models.resnet.configuration_resnet" [label="<f0> SourceModule| <f1> transformers.models.resnet.configuration_resnet",shape="record"];
	"transformers.models.rembert" [label="<f0> Package| <f1> transformers.models.rembert",shape="record"];
	"transformers.models.rembert.modeling_tf_rembert" [label="<f0> SourceModule| <f1> transformers.models.rembert.modeling_tf_rembert",shape="record"];
	"transformers.models.rembert.modeling_rembert" [label="<f0> SourceModule| <f1> transformers.models.rembert.modeling_rembert",shape="record"];
	"transformers.models.rembert.tokenization_rembert_fast" [label="<f0> SourceModule| <f1> transformers.models.rembert.tokenization_rembert_fast",shape="record"];
	"transformers.models.rembert.tokenization_rembert" [label="<f0> SourceModule| <f1> transformers.models.rembert.tokenization_rembert",shape="record"];
	"transformers.models.rembert.configuration_rembert" [label="<f0> SourceModule| <f1> transformers.models.rembert.configuration_rembert",shape="record"];
	"transformers.models.regnet" [label="<f0> Package| <f1> transformers.models.regnet",shape="record"];
	"transformers.models.regnet.modeling_flax_regnet" [label="<f0> SourceModule| <f1> transformers.models.regnet.modeling_flax_regnet",shape="record"];
	"transformers.models.regnet.modeling_tf_regnet" [label="<f0> SourceModule| <f1> transformers.models.regnet.modeling_tf_regnet",shape="record"];
	"transformers.models.regnet.modeling_regnet" [label="<f0> SourceModule| <f1> transformers.models.regnet.modeling_regnet",shape="record"];
	"transformers.models.regnet.configuration_regnet" [label="<f0> SourceModule| <f1> transformers.models.regnet.configuration_regnet",shape="record"];
	"transformers.models.reformer" [label="<f0> Package| <f1> transformers.models.reformer",shape="record"];
	"transformers.models.reformer.modeling_reformer" [label="<f0> SourceModule| <f1> transformers.models.reformer.modeling_reformer",shape="record"];
	"transformers.models.reformer.tokenization_reformer_fast" [label="<f0> SourceModule| <f1> transformers.models.reformer.tokenization_reformer_fast",shape="record"];
	"transformers.models.reformer.tokenization_reformer" [label="<f0> SourceModule| <f1> transformers.models.reformer.tokenization_reformer",shape="record"];
	"transformers.models.reformer.configuration_reformer" [label="<f0> SourceModule| <f1> transformers.models.reformer.configuration_reformer",shape="record"];
	"transformers.models.recurrent_gemma" [label="<f0> Package| <f1> transformers.models.recurrent_gemma",shape="record"];
	"transformers.models.recurrent_gemma.modeling_recurrent_gemma" [label="<f0> SourceModule| <f1> transformers.models.recurrent_gemma.modeling_recurrent_gemma",shape="record"];
	"transformers.models.recurrent_gemma.configuration_recurrent_gemma" [label="<f0> SourceModule| <f1> transformers.models.recurrent_gemma.configuration_recurrent_gemma",shape="record"];
	"transformers.models.rag" [label="<f0> Package| <f1> transformers.models.rag",shape="record"];
	"transformers.models.rag.modeling_tf_rag" [label="<f0> SourceModule| <f1> transformers.models.rag.modeling_tf_rag",shape="record"];
	"transformers.models.rag.modeling_rag" [label="<f0> SourceModule| <f1> transformers.models.rag.modeling_rag",shape="record"];
	"transformers.models.rag.tokenization_rag" [label="<f0> SourceModule| <f1> transformers.models.rag.tokenization_rag",shape="record"];
	"transformers.models.rag.retrieval_rag" [label="<f0> SourceModule| <f1> transformers.models.rag.retrieval_rag",shape="record"];
	"faiss" [label="<f0> MissingModule| <f1> faiss",shape="record"];
	"transformers.models.rag.configuration_rag" [label="<f0> SourceModule| <f1> transformers.models.rag.configuration_rag",shape="record"];
	"transformers.models.qwen2_vl" [label="<f0> Package| <f1> transformers.models.qwen2_vl",shape="record"];
	"transformers.models.qwen2_vl.image_processing_qwen2_vl" [label="<f0> SourceModule| <f1> transformers.models.qwen2_vl.image_processing_qwen2_vl",shape="record"];
	"transformers.models.qwen2_vl.modeling_qwen2_vl" [label="<f0> SourceModule| <f1> transformers.models.qwen2_vl.modeling_qwen2_vl",shape="record"];
	"transformers.models.qwen2_vl.processing_qwen2_vl" [label="<f0> SourceModule| <f1> transformers.models.qwen2_vl.processing_qwen2_vl",shape="record"];
	"transformers.models.qwen2_vl.configuration_qwen2_vl" [label="<f0> SourceModule| <f1> transformers.models.qwen2_vl.configuration_qwen2_vl",shape="record"];
	"transformers.models.qwen2_moe" [label="<f0> Package| <f1> transformers.models.qwen2_moe",shape="record"];
	"transformers.models.qwen2_moe.modeling_qwen2_moe" [label="<f0> SourceModule| <f1> transformers.models.qwen2_moe.modeling_qwen2_moe",shape="record"];
	"transformers.models.qwen2_moe.configuration_qwen2_moe" [label="<f0> SourceModule| <f1> transformers.models.qwen2_moe.configuration_qwen2_moe",shape="record"];
	"transformers.models.qwen2_audio" [label="<f0> Package| <f1> transformers.models.qwen2_audio",shape="record"];
	"transformers.models.qwen2_audio.modeling_qwen2_audio" [label="<f0> SourceModule| <f1> transformers.models.qwen2_audio.modeling_qwen2_audio",shape="record"];
	"transformers.models.qwen2_audio.processing_qwen2_audio" [label="<f0> SourceModule| <f1> transformers.models.qwen2_audio.processing_qwen2_audio",shape="record"];
	"transformers.models.qwen2_audio.configuration_qwen2_audio" [label="<f0> SourceModule| <f1> transformers.models.qwen2_audio.configuration_qwen2_audio",shape="record"];
	"transformers.models.qwen2" [label="<f0> Package| <f1> transformers.models.qwen2",shape="record"];
	"transformers.models.qwen2.modeling_qwen2" [label="<f0> SourceModule| <f1> transformers.models.qwen2.modeling_qwen2",shape="record"];
	"transformers.models.qwen2.tokenization_qwen2_fast" [label="<f0> SourceModule| <f1> transformers.models.qwen2.tokenization_qwen2_fast",shape="record"];
	"transformers.models.qwen2.tokenization_qwen2" [label="<f0> SourceModule| <f1> transformers.models.qwen2.tokenization_qwen2",shape="record"];
	"transformers.models.qwen2.configuration_qwen2" [label="<f0> SourceModule| <f1> transformers.models.qwen2.configuration_qwen2",shape="record"];
	"transformers.models.pvt_v2" [label="<f0> Package| <f1> transformers.models.pvt_v2",shape="record"];
	"transformers.models.pvt_v2.modeling_pvt_v2" [label="<f0> SourceModule| <f1> transformers.models.pvt_v2.modeling_pvt_v2",shape="record"];
	"transformers.models.pvt_v2.configuration_pvt_v2" [label="<f0> SourceModule| <f1> transformers.models.pvt_v2.configuration_pvt_v2",shape="record"];
	"transformers.models.pvt" [label="<f0> Package| <f1> transformers.models.pvt",shape="record"];
	"transformers.models.pvt.modeling_pvt" [label="<f0> SourceModule| <f1> transformers.models.pvt.modeling_pvt",shape="record"];
	"transformers.models.pvt.image_processing_pvt" [label="<f0> SourceModule| <f1> transformers.models.pvt.image_processing_pvt",shape="record"];
	"transformers.models.pvt.configuration_pvt" [label="<f0> SourceModule| <f1> transformers.models.pvt.configuration_pvt",shape="record"];
	"transformers.models.prophetnet" [label="<f0> Package| <f1> transformers.models.prophetnet",shape="record"];
	"transformers.models.prophetnet.modeling_prophetnet" [label="<f0> SourceModule| <f1> transformers.models.prophetnet.modeling_prophetnet",shape="record"];
	"transformers.models.prophetnet.tokenization_prophetnet" [label="<f0> SourceModule| <f1> transformers.models.prophetnet.tokenization_prophetnet",shape="record"];
	"transformers.models.prophetnet.configuration_prophetnet" [label="<f0> SourceModule| <f1> transformers.models.prophetnet.configuration_prophetnet",shape="record"];
	"transformers.models.pop2piano" [label="<f0> Package| <f1> transformers.models.pop2piano",shape="record"];
	"transformers.models.pop2piano.processing_pop2piano" [label="<f0> SourceModule| <f1> transformers.models.pop2piano.processing_pop2piano",shape="record"];
	"transformers.models.pop2piano.tokenization_pop2piano" [label="<f0> SourceModule| <f1> transformers.models.pop2piano.tokenization_pop2piano",shape="record"];
	"pretty_midi" [label="<f0> MissingModule| <f1> pretty_midi",shape="record"];
	"transformers.models.pop2piano.feature_extraction_pop2piano" [label="<f0> SourceModule| <f1> transformers.models.pop2piano.feature_extraction_pop2piano",shape="record"];
	"librosa" [label="<f0> MissingModule| <f1> librosa",shape="record"];
	"'essentia.standard'" [label="<f0> MissingModule| <f1> 'essentia.standard'",shape="record"];
	"essentia" [label="<f0> MissingModule| <f1> essentia",shape="record"];
	"transformers.models.pop2piano.modeling_pop2piano" [label="<f0> SourceModule| <f1> transformers.models.pop2piano.modeling_pop2piano",shape="record"];
	"transformers.models.pop2piano.configuration_pop2piano" [label="<f0> SourceModule| <f1> transformers.models.pop2piano.configuration_pop2piano",shape="record"];
	"transformers.models.poolformer" [label="<f0> Package| <f1> transformers.models.poolformer",shape="record"];
	"transformers.models.poolformer.modeling_poolformer" [label="<f0> SourceModule| <f1> transformers.models.poolformer.modeling_poolformer",shape="record"];
	"transformers.models.poolformer.image_processing_poolformer" [label="<f0> SourceModule| <f1> transformers.models.poolformer.image_processing_poolformer",shape="record"];
	"transformers.models.poolformer.feature_extraction_poolformer" [label="<f0> SourceModule| <f1> transformers.models.poolformer.feature_extraction_poolformer",shape="record"];
	"transformers.models.poolformer.configuration_poolformer" [label="<f0> SourceModule| <f1> transformers.models.poolformer.configuration_poolformer",shape="record"];
	"transformers.models.plbart" [label="<f0> Package| <f1> transformers.models.plbart",shape="record"];
	"transformers.models.plbart.modeling_plbart" [label="<f0> SourceModule| <f1> transformers.models.plbart.modeling_plbart",shape="record"];
	"transformers.models.plbart.tokenization_plbart" [label="<f0> SourceModule| <f1> transformers.models.plbart.tokenization_plbart",shape="record"];
	"transformers.models.plbart.configuration_plbart" [label="<f0> SourceModule| <f1> transformers.models.plbart.configuration_plbart",shape="record"];
	"transformers.models.pixtral" [label="<f0> Package| <f1> transformers.models.pixtral",shape="record"];
	"transformers.models.pixtral.image_processing_pixtral" [label="<f0> SourceModule| <f1> transformers.models.pixtral.image_processing_pixtral",shape="record"];
	"transformers.models.pixtral.modeling_pixtral" [label="<f0> SourceModule| <f1> transformers.models.pixtral.modeling_pixtral",shape="record"];
	"transformers.models.pixtral.processing_pixtral" [label="<f0> SourceModule| <f1> transformers.models.pixtral.processing_pixtral",shape="record"];
	"transformers.models.pixtral.configuration_pixtral" [label="<f0> SourceModule| <f1> transformers.models.pixtral.configuration_pixtral",shape="record"];
	"transformers.models.pix2struct" [label="<f0> Package| <f1> transformers.models.pix2struct",shape="record"];
	"transformers.models.pix2struct.modeling_pix2struct" [label="<f0> SourceModule| <f1> transformers.models.pix2struct.modeling_pix2struct",shape="record"];
	"transformers.models.pix2struct.image_processing_pix2struct" [label="<f0> SourceModule| <f1> transformers.models.pix2struct.image_processing_pix2struct",shape="record"];
	"transformers.models.pix2struct.processing_pix2struct" [label="<f0> SourceModule| <f1> transformers.models.pix2struct.processing_pix2struct",shape="record"];
	"transformers.models.pix2struct.configuration_pix2struct" [label="<f0> SourceModule| <f1> transformers.models.pix2struct.configuration_pix2struct",shape="record"];
	"transformers.models.phobert" [label="<f0> Package| <f1> transformers.models.phobert",shape="record"];
	"transformers.models.phobert.tokenization_phobert" [label="<f0> SourceModule| <f1> transformers.models.phobert.tokenization_phobert",shape="record"];
	"transformers.models.phimoe" [label="<f0> Package| <f1> transformers.models.phimoe",shape="record"];
	"transformers.models.phimoe.modeling_phimoe" [label="<f0> SourceModule| <f1> transformers.models.phimoe.modeling_phimoe",shape="record"];
	"transformers.models.phimoe.configuration_phimoe" [label="<f0> SourceModule| <f1> transformers.models.phimoe.configuration_phimoe",shape="record"];
	"transformers.models.phi3" [label="<f0> Package| <f1> transformers.models.phi3",shape="record"];
	"transformers.models.phi3.modeling_phi3" [label="<f0> SourceModule| <f1> transformers.models.phi3.modeling_phi3",shape="record"];
	"transformers.models.phi3.configuration_phi3" [label="<f0> SourceModule| <f1> transformers.models.phi3.configuration_phi3",shape="record"];
	"transformers.models.phi" [label="<f0> Package| <f1> transformers.models.phi",shape="record"];
	"transformers.models.phi.modeling_phi" [label="<f0> SourceModule| <f1> transformers.models.phi.modeling_phi",shape="record"];
	"transformers.models.phi.configuration_phi" [label="<f0> SourceModule| <f1> transformers.models.phi.configuration_phi",shape="record"];
	"transformers.models.persimmon" [label="<f0> Package| <f1> transformers.models.persimmon",shape="record"];
	"transformers.models.persimmon.modeling_persimmon" [label="<f0> SourceModule| <f1> transformers.models.persimmon.modeling_persimmon",shape="record"];
	"transformers.models.persimmon.configuration_persimmon" [label="<f0> SourceModule| <f1> transformers.models.persimmon.configuration_persimmon",shape="record"];
	"transformers.models.perceiver" [label="<f0> Package| <f1> transformers.models.perceiver",shape="record"];
	"transformers.models.perceiver.modeling_perceiver" [label="<f0> SourceModule| <f1> transformers.models.perceiver.modeling_perceiver",shape="record"];
	"transformers.models.perceiver.image_processing_perceiver" [label="<f0> SourceModule| <f1> transformers.models.perceiver.image_processing_perceiver",shape="record"];
	"transformers.models.perceiver.feature_extraction_perceiver" [label="<f0> SourceModule| <f1> transformers.models.perceiver.feature_extraction_perceiver",shape="record"];
	"transformers.models.perceiver.tokenization_perceiver" [label="<f0> SourceModule| <f1> transformers.models.perceiver.tokenization_perceiver",shape="record"];
	"transformers.models.perceiver.configuration_perceiver" [label="<f0> SourceModule| <f1> transformers.models.perceiver.configuration_perceiver",shape="record"];
	"transformers.models.pegasus_x" [label="<f0> Package| <f1> transformers.models.pegasus_x",shape="record"];
	"transformers.models.pegasus_x.modeling_pegasus_x" [label="<f0> SourceModule| <f1> transformers.models.pegasus_x.modeling_pegasus_x",shape="record"];
	"transformers.models.pegasus_x.configuration_pegasus_x" [label="<f0> SourceModule| <f1> transformers.models.pegasus_x.configuration_pegasus_x",shape="record"];
	"transformers.models.pegasus" [label="<f0> Package| <f1> transformers.models.pegasus",shape="record"];
	"transformers.models.pegasus.modeling_flax_pegasus" [label="<f0> SourceModule| <f1> transformers.models.pegasus.modeling_flax_pegasus",shape="record"];
	"transformers.models.pegasus.modeling_tf_pegasus" [label="<f0> SourceModule| <f1> transformers.models.pegasus.modeling_tf_pegasus",shape="record"];
	"transformers.models.pegasus.modeling_pegasus" [label="<f0> SourceModule| <f1> transformers.models.pegasus.modeling_pegasus",shape="record"];
	"transformers.models.pegasus.tokenization_pegasus_fast" [label="<f0> SourceModule| <f1> transformers.models.pegasus.tokenization_pegasus_fast",shape="record"];
	"transformers.models.pegasus.tokenization_pegasus" [label="<f0> SourceModule| <f1> transformers.models.pegasus.tokenization_pegasus",shape="record"];
	"transformers.models.pegasus.configuration_pegasus" [label="<f0> SourceModule| <f1> transformers.models.pegasus.configuration_pegasus",shape="record"];
	"transformers.models.patchtst" [label="<f0> Package| <f1> transformers.models.patchtst",shape="record"];
	"transformers.models.patchtst.modeling_patchtst" [label="<f0> SourceModule| <f1> transformers.models.patchtst.modeling_patchtst",shape="record"];
	"transformers.models.patchtst.configuration_patchtst" [label="<f0> SourceModule| <f1> transformers.models.patchtst.configuration_patchtst",shape="record"];
	"transformers.models.patchtsmixer" [label="<f0> Package| <f1> transformers.models.patchtsmixer",shape="record"];
	"transformers.models.patchtsmixer.modeling_patchtsmixer" [label="<f0> SourceModule| <f1> transformers.models.patchtsmixer.modeling_patchtsmixer",shape="record"];
	"transformers.models.patchtsmixer.configuration_patchtsmixer" [label="<f0> SourceModule| <f1> transformers.models.patchtsmixer.configuration_patchtsmixer",shape="record"];
	"transformers.models.paligemma" [label="<f0> Package| <f1> transformers.models.paligemma",shape="record"];
	"transformers.models.paligemma.processing_paligemma" [label="<f0> SourceModule| <f1> transformers.models.paligemma.processing_paligemma",shape="record"];
	"transformers.models.paligemma.modeling_paligemma" [label="<f0> SourceModule| <f1> transformers.models.paligemma.modeling_paligemma",shape="record"];
	"'flash_attn.bert_padding'" [label="<f0> MissingModule| <f1> 'flash_attn.bert_padding'",shape="record"];
	"transformers.models.paligemma.configuration_paligemma" [label="<f0> SourceModule| <f1> transformers.models.paligemma.configuration_paligemma",shape="record"];
	"transformers.models.owlvit" [label="<f0> Package| <f1> transformers.models.owlvit",shape="record"];
	"transformers.models.owlvit.modeling_owlvit" [label="<f0> SourceModule| <f1> transformers.models.owlvit.modeling_owlvit",shape="record"];
	"transformers.models.owlvit.image_processing_owlvit" [label="<f0> SourceModule| <f1> transformers.models.owlvit.image_processing_owlvit",shape="record"];
	"transformers.models.owlvit.feature_extraction_owlvit" [label="<f0> SourceModule| <f1> transformers.models.owlvit.feature_extraction_owlvit",shape="record"];
	"transformers.models.owlvit.processing_owlvit" [label="<f0> SourceModule| <f1> transformers.models.owlvit.processing_owlvit",shape="record"];
	"transformers.models.owlvit.configuration_owlvit" [label="<f0> SourceModule| <f1> transformers.models.owlvit.configuration_owlvit",shape="record"];
	"transformers.models.owlv2" [label="<f0> Package| <f1> transformers.models.owlv2",shape="record"];
	"transformers.models.owlv2.modeling_owlv2" [label="<f0> SourceModule| <f1> transformers.models.owlv2.modeling_owlv2",shape="record"];
	"transformers.models.owlv2.image_processing_owlv2" [label="<f0> SourceModule| <f1> transformers.models.owlv2.image_processing_owlv2",shape="record"];
	"transformers.models.owlv2.processing_owlv2" [label="<f0> SourceModule| <f1> transformers.models.owlv2.processing_owlv2",shape="record"];
	"transformers.models.owlv2.configuration_owlv2" [label="<f0> SourceModule| <f1> transformers.models.owlv2.configuration_owlv2",shape="record"];
	"transformers.models.opt" [label="<f0> Package| <f1> transformers.models.opt",shape="record"];
	"transformers.models.opt.modeling_flax_opt" [label="<f0> SourceModule| <f1> transformers.models.opt.modeling_flax_opt",shape="record"];
	"transformers.models.opt.modeling_tf_opt" [label="<f0> SourceModule| <f1> transformers.models.opt.modeling_tf_opt",shape="record"];
	"transformers.models.opt.modeling_opt" [label="<f0> SourceModule| <f1> transformers.models.opt.modeling_opt",shape="record"];
	"transformers.models.opt.configuration_opt" [label="<f0> SourceModule| <f1> transformers.models.opt.configuration_opt",shape="record"];
	"transformers.models.openai" [label="<f0> Package| <f1> transformers.models.openai",shape="record"];
	"transformers.models.openai.modeling_tf_openai" [label="<f0> SourceModule| <f1> transformers.models.openai.modeling_tf_openai",shape="record"];
	"transformers.models.openai.modeling_openai" [label="<f0> SourceModule| <f1> transformers.models.openai.modeling_openai",shape="record"];
	"transformers.models.openai.tokenization_openai_fast" [label="<f0> SourceModule| <f1> transformers.models.openai.tokenization_openai_fast",shape="record"];
	"transformers.models.openai.tokenization_openai" [label="<f0> SourceModule| <f1> transformers.models.openai.tokenization_openai",shape="record"];
	"spacy" [label="<f0> MissingModule| <f1> spacy",shape="record"];
	"ftfy" [label="<f0> MissingModule| <f1> ftfy",shape="record"];
	"transformers.models.openai.configuration_openai" [label="<f0> SourceModule| <f1> transformers.models.openai.configuration_openai",shape="record"];
	"transformers.models.oneformer" [label="<f0> Package| <f1> transformers.models.oneformer",shape="record"];
	"transformers.models.oneformer.modeling_oneformer" [label="<f0> SourceModule| <f1> transformers.models.oneformer.modeling_oneformer",shape="record"];
	"transformers.models.oneformer.image_processing_oneformer" [label="<f0> SourceModule| <f1> transformers.models.oneformer.image_processing_oneformer",shape="record"];
	"transformers.models.oneformer.processing_oneformer" [label="<f0> SourceModule| <f1> transformers.models.oneformer.processing_oneformer",shape="record"];
	"transformers.models.oneformer.configuration_oneformer" [label="<f0> SourceModule| <f1> transformers.models.oneformer.configuration_oneformer",shape="record"];
	"transformers.models.omdet_turbo" [label="<f0> Package| <f1> transformers.models.omdet_turbo",shape="record"];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" [label="<f0> SourceModule| <f1> transformers.models.omdet_turbo.modeling_omdet_turbo",shape="record"];
	"transformers.models.omdet_turbo.processing_omdet_turbo" [label="<f0> SourceModule| <f1> transformers.models.omdet_turbo.processing_omdet_turbo",shape="record"];
	"transformers.models.omdet_turbo.configuration_omdet_turbo" [label="<f0> SourceModule| <f1> transformers.models.omdet_turbo.configuration_omdet_turbo",shape="record"];
	"transformers.models.olmoe" [label="<f0> Package| <f1> transformers.models.olmoe",shape="record"];
	"transformers.models.olmoe.modeling_olmoe" [label="<f0> SourceModule| <f1> transformers.models.olmoe.modeling_olmoe",shape="record"];
	"transformers.models.olmoe.configuration_olmoe" [label="<f0> SourceModule| <f1> transformers.models.olmoe.configuration_olmoe",shape="record"];
	"transformers.models.olmo" [label="<f0> Package| <f1> transformers.models.olmo",shape="record"];
	"transformers.models.olmo.modeling_olmo" [label="<f0> SourceModule| <f1> transformers.models.olmo.modeling_olmo",shape="record"];
	"transformers.models.olmo.configuration_olmo" [label="<f0> SourceModule| <f1> transformers.models.olmo.configuration_olmo",shape="record"];
	"transformers.models.nystromformer" [label="<f0> Package| <f1> transformers.models.nystromformer",shape="record"];
	"transformers.models.nystromformer.modeling_nystromformer" [label="<f0> SourceModule| <f1> transformers.models.nystromformer.modeling_nystromformer",shape="record"];
	"transformers.models.nystromformer.configuration_nystromformer" [label="<f0> SourceModule| <f1> transformers.models.nystromformer.configuration_nystromformer",shape="record"];
	"transformers.models.nougat" [label="<f0> Package| <f1> transformers.models.nougat",shape="record"];
	"transformers.models.nougat.image_processing_nougat" [label="<f0> SourceModule| <f1> transformers.models.nougat.image_processing_nougat",shape="record"];
	"transformers.models.nougat.tokenization_nougat_fast" [label="<f0> SourceModule| <f1> transformers.models.nougat.tokenization_nougat_fast",shape="record"];
	"nltk" [label="<f0> MissingModule| <f1> nltk",shape="record"];
	"Levenshtein" [label="<f0> MissingModule| <f1> Levenshtein",shape="record"];
	"transformers.models.nougat.processing_nougat" [label="<f0> SourceModule| <f1> transformers.models.nougat.processing_nougat",shape="record"];
	"transformers.models.nllb_moe" [label="<f0> Package| <f1> transformers.models.nllb_moe",shape="record"];
	"transformers.models.nllb_moe.modeling_nllb_moe" [label="<f0> SourceModule| <f1> transformers.models.nllb_moe.modeling_nllb_moe",shape="record"];
	"transformers.models.nllb_moe.configuration_nllb_moe" [label="<f0> SourceModule| <f1> transformers.models.nllb_moe.configuration_nllb_moe",shape="record"];
	"transformers.models.nemotron" [label="<f0> Package| <f1> transformers.models.nemotron",shape="record"];
	"transformers.models.nemotron.modeling_nemotron" [label="<f0> SourceModule| <f1> transformers.models.nemotron.modeling_nemotron",shape="record"];
	"transformers.models.nemotron.configuration_nemotron" [label="<f0> SourceModule| <f1> transformers.models.nemotron.configuration_nemotron",shape="record"];
	"transformers.models.myt5" [label="<f0> Package| <f1> transformers.models.myt5",shape="record"];
	"transformers.models.myt5.tokenization_myt5" [label="<f0> SourceModule| <f1> transformers.models.myt5.tokenization_myt5",shape="record"];
	"transformers.models.mvp" [label="<f0> Package| <f1> transformers.models.mvp",shape="record"];
	"transformers.models.mvp.modeling_mvp" [label="<f0> SourceModule| <f1> transformers.models.mvp.modeling_mvp",shape="record"];
	"transformers.models.mvp.tokenization_mvp_fast" [label="<f0> SourceModule| <f1> transformers.models.mvp.tokenization_mvp_fast",shape="record"];
	"transformers.models.mvp.tokenization_mvp" [label="<f0> SourceModule| <f1> transformers.models.mvp.tokenization_mvp",shape="record"];
	"transformers.models.mvp.configuration_mvp" [label="<f0> SourceModule| <f1> transformers.models.mvp.configuration_mvp",shape="record"];
	"transformers.models.musicgen_melody" [label="<f0> Package| <f1> transformers.models.musicgen_melody",shape="record"];
	"transformers.models.musicgen_melody.processing_musicgen_melody" [label="<f0> SourceModule| <f1> transformers.models.musicgen_melody.processing_musicgen_melody",shape="record"];
	"transformers.models.musicgen_melody.feature_extraction_musicgen_melody" [label="<f0> SourceModule| <f1> transformers.models.musicgen_melody.feature_extraction_musicgen_melody",shape="record"];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" [label="<f0> SourceModule| <f1> transformers.models.musicgen_melody.modeling_musicgen_melody",shape="record"];
	"transformers.generation.streamers" [label="<f0> SourceModule| <f1> transformers.generation.streamers",shape="record"];
	"transformers.models.musicgen_melody.configuration_musicgen_melody" [label="<f0> SourceModule| <f1> transformers.models.musicgen_melody.configuration_musicgen_melody",shape="record"];
	"transformers.models.musicgen" [label="<f0> Package| <f1> transformers.models.musicgen",shape="record"];
	"transformers.models.musicgen.modeling_musicgen" [label="<f0> SourceModule| <f1> transformers.models.musicgen.modeling_musicgen",shape="record"];
	"transformers.models.musicgen.processing_musicgen" [label="<f0> SourceModule| <f1> transformers.models.musicgen.processing_musicgen",shape="record"];
	"transformers.models.musicgen.configuration_musicgen" [label="<f0> SourceModule| <f1> transformers.models.musicgen.configuration_musicgen",shape="record"];
	"transformers.models.mt5" [label="<f0> Package| <f1> transformers.models.mt5",shape="record"];
	"transformers.models.mt5.modeling_flax_mt5" [label="<f0> SourceModule| <f1> transformers.models.mt5.modeling_flax_mt5",shape="record"];
	"transformers.models.mt5.modeling_tf_mt5" [label="<f0> SourceModule| <f1> transformers.models.mt5.modeling_tf_mt5",shape="record"];
	"transformers.models.mt5.modeling_mt5" [label="<f0> SourceModule| <f1> transformers.models.mt5.modeling_mt5",shape="record"];
	"transformers.models.mt5.configuration_mt5" [label="<f0> SourceModule| <f1> transformers.models.mt5.configuration_mt5",shape="record"];
	"transformers.models.mra" [label="<f0> Package| <f1> transformers.models.mra",shape="record"];
	"transformers.models.mra.modeling_mra" [label="<f0> SourceModule| <f1> transformers.models.mra.modeling_mra",shape="record"];
	"transformers.models.mra.configuration_mra" [label="<f0> SourceModule| <f1> transformers.models.mra.configuration_mra",shape="record"];
	"transformers.models.mpt" [label="<f0> Package| <f1> transformers.models.mpt",shape="record"];
	"transformers.models.mpt.modeling_mpt" [label="<f0> SourceModule| <f1> transformers.models.mpt.modeling_mpt",shape="record"];
	"transformers.models.mpt.configuration_mpt" [label="<f0> SourceModule| <f1> transformers.models.mpt.configuration_mpt",shape="record"];
	"transformers.models.mpnet" [label="<f0> Package| <f1> transformers.models.mpnet",shape="record"];
	"transformers.models.mpnet.modeling_tf_mpnet" [label="<f0> SourceModule| <f1> transformers.models.mpnet.modeling_tf_mpnet",shape="record"];
	"transformers.models.mpnet.modeling_mpnet" [label="<f0> SourceModule| <f1> transformers.models.mpnet.modeling_mpnet",shape="record"];
	"transformers.models.mpnet.tokenization_mpnet_fast" [label="<f0> SourceModule| <f1> transformers.models.mpnet.tokenization_mpnet_fast",shape="record"];
	"transformers.models.mpnet.tokenization_mpnet" [label="<f0> SourceModule| <f1> transformers.models.mpnet.tokenization_mpnet",shape="record"];
	"transformers.models.mpnet.configuration_mpnet" [label="<f0> SourceModule| <f1> transformers.models.mpnet.configuration_mpnet",shape="record"];
	"transformers.models.moshi" [label="<f0> Package| <f1> transformers.models.moshi",shape="record"];
	"transformers.models.moshi.modeling_moshi" [label="<f0> SourceModule| <f1> transformers.models.moshi.modeling_moshi",shape="record"];
	"transformers.models.moshi.configuration_moshi" [label="<f0> SourceModule| <f1> transformers.models.moshi.configuration_moshi",shape="record"];
	"transformers.models.mobilevitv2" [label="<f0> Package| <f1> transformers.models.mobilevitv2",shape="record"];
	"transformers.models.mobilevitv2.modeling_mobilevitv2" [label="<f0> SourceModule| <f1> transformers.models.mobilevitv2.modeling_mobilevitv2",shape="record"];
	"transformers.models.mobilevitv2.configuration_mobilevitv2" [label="<f0> SourceModule| <f1> transformers.models.mobilevitv2.configuration_mobilevitv2",shape="record"];
	"transformers.models.mobilevit" [label="<f0> Package| <f1> transformers.models.mobilevit",shape="record"];
	"transformers.models.mobilevit.modeling_tf_mobilevit" [label="<f0> SourceModule| <f1> transformers.models.mobilevit.modeling_tf_mobilevit",shape="record"];
	"transformers.models.mobilevit.modeling_mobilevit" [label="<f0> SourceModule| <f1> transformers.models.mobilevit.modeling_mobilevit",shape="record"];
	"transformers.models.mobilevit.image_processing_mobilevit" [label="<f0> SourceModule| <f1> transformers.models.mobilevit.image_processing_mobilevit",shape="record"];
	"transformers.models.mobilevit.feature_extraction_mobilevit" [label="<f0> SourceModule| <f1> transformers.models.mobilevit.feature_extraction_mobilevit",shape="record"];
	"transformers.models.mobilevit.configuration_mobilevit" [label="<f0> SourceModule| <f1> transformers.models.mobilevit.configuration_mobilevit",shape="record"];
	"transformers.models.mobilenet_v2" [label="<f0> Package| <f1> transformers.models.mobilenet_v2",shape="record"];
	"transformers.models.mobilenet_v2.modeling_mobilenet_v2" [label="<f0> SourceModule| <f1> transformers.models.mobilenet_v2.modeling_mobilenet_v2",shape="record"];
	"transformers.models.mobilenet_v2.image_processing_mobilenet_v2" [label="<f0> SourceModule| <f1> transformers.models.mobilenet_v2.image_processing_mobilenet_v2",shape="record"];
	"transformers.models.mobilenet_v2.feature_extraction_mobilenet_v2" [label="<f0> SourceModule| <f1> transformers.models.mobilenet_v2.feature_extraction_mobilenet_v2",shape="record"];
	"transformers.models.mobilenet_v2.configuration_mobilenet_v2" [label="<f0> SourceModule| <f1> transformers.models.mobilenet_v2.configuration_mobilenet_v2",shape="record"];
	"transformers.models.mobilenet_v1" [label="<f0> Package| <f1> transformers.models.mobilenet_v1",shape="record"];
	"transformers.models.mobilenet_v1.modeling_mobilenet_v1" [label="<f0> SourceModule| <f1> transformers.models.mobilenet_v1.modeling_mobilenet_v1",shape="record"];
	"transformers.models.mobilenet_v1.image_processing_mobilenet_v1" [label="<f0> SourceModule| <f1> transformers.models.mobilenet_v1.image_processing_mobilenet_v1",shape="record"];
	"transformers.models.mobilenet_v1.feature_extraction_mobilenet_v1" [label="<f0> SourceModule| <f1> transformers.models.mobilenet_v1.feature_extraction_mobilenet_v1",shape="record"];
	"transformers.models.mobilenet_v1.configuration_mobilenet_v1" [label="<f0> SourceModule| <f1> transformers.models.mobilenet_v1.configuration_mobilenet_v1",shape="record"];
	"transformers.models.mobilebert" [label="<f0> Package| <f1> transformers.models.mobilebert",shape="record"];
	"transformers.models.mobilebert.modeling_tf_mobilebert" [label="<f0> SourceModule| <f1> transformers.models.mobilebert.modeling_tf_mobilebert",shape="record"];
	"transformers.models.mobilebert.modeling_mobilebert" [label="<f0> SourceModule| <f1> transformers.models.mobilebert.modeling_mobilebert",shape="record"];
	"transformers.models.mobilebert.tokenization_mobilebert_fast" [label="<f0> SourceModule| <f1> transformers.models.mobilebert.tokenization_mobilebert_fast",shape="record"];
	"transformers.models.mobilebert.tokenization_mobilebert" [label="<f0> SourceModule| <f1> transformers.models.mobilebert.tokenization_mobilebert",shape="record"];
	"transformers.models.mobilebert.configuration_mobilebert" [label="<f0> SourceModule| <f1> transformers.models.mobilebert.configuration_mobilebert",shape="record"];
	"transformers.models.mllama" [label="<f0> Package| <f1> transformers.models.mllama",shape="record"];
	"transformers.models.mllama.image_processing_mllama" [label="<f0> SourceModule| <f1> transformers.models.mllama.image_processing_mllama",shape="record"];
	"transformers.models.mllama.modeling_mllama" [label="<f0> SourceModule| <f1> transformers.models.mllama.modeling_mllama",shape="record"];
	"transformers.models.mllama.processing_mllama" [label="<f0> SourceModule| <f1> transformers.models.mllama.processing_mllama",shape="record"];
	"transformers.models.mllama.configuration_mllama" [label="<f0> SourceModule| <f1> transformers.models.mllama.configuration_mllama",shape="record"];
	"transformers.models.mixtral" [label="<f0> Package| <f1> transformers.models.mixtral",shape="record"];
	"transformers.models.mixtral.modeling_mixtral" [label="<f0> SourceModule| <f1> transformers.models.mixtral.modeling_mixtral",shape="record"];
	"transformers.models.mixtral.configuration_mixtral" [label="<f0> SourceModule| <f1> transformers.models.mixtral.configuration_mixtral",shape="record"];
	"transformers.models.mistral" [label="<f0> Package| <f1> transformers.models.mistral",shape="record"];
	"transformers.models.mistral.modeling_tf_mistral" [label="<f0> SourceModule| <f1> transformers.models.mistral.modeling_tf_mistral",shape="record"];
	"transformers.models.mistral.modeling_flax_mistral" [label="<f0> SourceModule| <f1> transformers.models.mistral.modeling_flax_mistral",shape="record"];
	"transformers.models.mistral.modeling_mistral" [label="<f0> SourceModule| <f1> transformers.models.mistral.modeling_mistral",shape="record"];
	"transformers.models.mistral.configuration_mistral" [label="<f0> SourceModule| <f1> transformers.models.mistral.configuration_mistral",shape="record"];
	"transformers.models.mimi" [label="<f0> Package| <f1> transformers.models.mimi",shape="record"];
	"transformers.models.mimi.modeling_mimi" [label="<f0> SourceModule| <f1> transformers.models.mimi.modeling_mimi",shape="record"];
	"transformers.models.mimi.configuration_mimi" [label="<f0> SourceModule| <f1> transformers.models.mimi.configuration_mimi",shape="record"];
	"transformers.models.mgp_str" [label="<f0> Package| <f1> transformers.models.mgp_str",shape="record"];
	"transformers.models.mgp_str.modeling_mgp_str" [label="<f0> SourceModule| <f1> transformers.models.mgp_str.modeling_mgp_str",shape="record"];
	"transformers.models.mgp_str.tokenization_mgp_str" [label="<f0> SourceModule| <f1> transformers.models.mgp_str.tokenization_mgp_str",shape="record"];
	"transformers.models.mgp_str.processing_mgp_str" [label="<f0> SourceModule| <f1> transformers.models.mgp_str.processing_mgp_str",shape="record"];
	"transformers.models.mgp_str.configuration_mgp_str" [label="<f0> SourceModule| <f1> transformers.models.mgp_str.configuration_mgp_str",shape="record"];
	"transformers.models.megatron_bert" [label="<f0> Package| <f1> transformers.models.megatron_bert",shape="record"];
	"transformers.models.megatron_bert.modeling_megatron_bert" [label="<f0> SourceModule| <f1> transformers.models.megatron_bert.modeling_megatron_bert",shape="record"];
	"transformers.models.megatron_bert.configuration_megatron_bert" [label="<f0> SourceModule| <f1> transformers.models.megatron_bert.configuration_megatron_bert",shape="record"];
	"transformers.models.mbart" [label="<f0> Package| <f1> transformers.models.mbart",shape="record"];
	"transformers.models.mbart.modeling_flax_mbart" [label="<f0> SourceModule| <f1> transformers.models.mbart.modeling_flax_mbart",shape="record"];
	"transformers.models.mbart.modeling_tf_mbart" [label="<f0> SourceModule| <f1> transformers.models.mbart.modeling_tf_mbart",shape="record"];
	"transformers.models.mbart.modeling_mbart" [label="<f0> SourceModule| <f1> transformers.models.mbart.modeling_mbart",shape="record"];
	"transformers.models.mbart.tokenization_mbart_fast" [label="<f0> SourceModule| <f1> transformers.models.mbart.tokenization_mbart_fast",shape="record"];
	"transformers.models.mbart.tokenization_mbart" [label="<f0> SourceModule| <f1> transformers.models.mbart.tokenization_mbart",shape="record"];
	"transformers.models.mbart.configuration_mbart" [label="<f0> SourceModule| <f1> transformers.models.mbart.configuration_mbart",shape="record"];
	"transformers.models.maskformer" [label="<f0> Package| <f1> transformers.models.maskformer",shape="record"];
	"transformers.models.maskformer.modeling_maskformer_swin" [label="<f0> SourceModule| <f1> transformers.models.maskformer.modeling_maskformer_swin",shape="record"];
	"transformers.models.maskformer.modeling_maskformer" [label="<f0> SourceModule| <f1> transformers.models.maskformer.modeling_maskformer",shape="record"];
	"transformers.models.maskformer.image_processing_maskformer" [label="<f0> SourceModule| <f1> transformers.models.maskformer.image_processing_maskformer",shape="record"];
	"transformers.models.maskformer.feature_extraction_maskformer" [label="<f0> SourceModule| <f1> transformers.models.maskformer.feature_extraction_maskformer",shape="record"];
	"transformers.models.maskformer.configuration_maskformer_swin" [label="<f0> SourceModule| <f1> transformers.models.maskformer.configuration_maskformer_swin",shape="record"];
	"transformers.models.maskformer.configuration_maskformer" [label="<f0> SourceModule| <f1> transformers.models.maskformer.configuration_maskformer",shape="record"];
	"transformers.models.mask2former" [label="<f0> Package| <f1> transformers.models.mask2former",shape="record"];
	"transformers.models.mask2former.modeling_mask2former" [label="<f0> SourceModule| <f1> transformers.models.mask2former.modeling_mask2former",shape="record"];
	"transformers.models.mask2former.image_processing_mask2former" [label="<f0> SourceModule| <f1> transformers.models.mask2former.image_processing_mask2former",shape="record"];
	"transformers.models.mask2former.configuration_mask2former" [label="<f0> SourceModule| <f1> transformers.models.mask2former.configuration_mask2former",shape="record"];
	"transformers.models.markuplm" [label="<f0> Package| <f1> transformers.models.markuplm",shape="record"];
	"transformers.models.markuplm.modeling_markuplm" [label="<f0> SourceModule| <f1> transformers.models.markuplm.modeling_markuplm",shape="record"];
	"transformers.models.markuplm.tokenization_markuplm_fast" [label="<f0> SourceModule| <f1> transformers.models.markuplm.tokenization_markuplm_fast",shape="record"];
	"transformers.models.markuplm.tokenization_markuplm" [label="<f0> SourceModule| <f1> transformers.models.markuplm.tokenization_markuplm",shape="record"];
	"transformers.models.markuplm.processing_markuplm" [label="<f0> SourceModule| <f1> transformers.models.markuplm.processing_markuplm",shape="record"];
	"transformers.models.markuplm.feature_extraction_markuplm" [label="<f0> SourceModule| <f1> transformers.models.markuplm.feature_extraction_markuplm",shape="record"];
	"bs4" [label="<f0> MissingModule| <f1> bs4",shape="record"];
	"transformers.models.markuplm.configuration_markuplm" [label="<f0> SourceModule| <f1> transformers.models.markuplm.configuration_markuplm",shape="record"];
	"transformers.models.marian" [label="<f0> Package| <f1> transformers.models.marian",shape="record"];
	"transformers.models.marian.modeling_flax_marian" [label="<f0> SourceModule| <f1> transformers.models.marian.modeling_flax_marian",shape="record"];
	"transformers.models.marian.modeling_tf_marian" [label="<f0> SourceModule| <f1> transformers.models.marian.modeling_tf_marian",shape="record"];
	"transformers.models.marian.modeling_marian" [label="<f0> SourceModule| <f1> transformers.models.marian.modeling_marian",shape="record"];
	"transformers.models.marian.tokenization_marian" [label="<f0> SourceModule| <f1> transformers.models.marian.tokenization_marian",shape="record"];
	"transformers.models.marian.configuration_marian" [label="<f0> SourceModule| <f1> transformers.models.marian.configuration_marian",shape="record"];
	"transformers.models.mamba2" [label="<f0> Package| <f1> transformers.models.mamba2",shape="record"];
	"transformers.models.mamba2.modeling_mamba2" [label="<f0> SourceModule| <f1> transformers.models.mamba2.modeling_mamba2",shape="record"];
	"transformers.models.mamba2.configuration_mamba2" [label="<f0> SourceModule| <f1> transformers.models.mamba2.configuration_mamba2",shape="record"];
	"transformers.models.mamba" [label="<f0> Package| <f1> transformers.models.mamba",shape="record"];
	"transformers.models.mamba.modeling_mamba" [label="<f0> SourceModule| <f1> transformers.models.mamba.modeling_mamba",shape="record"];
	"'mambapy.pscan'" [label="<f0> MissingModule| <f1> 'mambapy.pscan'",shape="record"];
	"transformers.models.mamba.configuration_mamba" [label="<f0> SourceModule| <f1> transformers.models.mamba.configuration_mamba",shape="record"];
	"transformers.models.m2m_100" [label="<f0> Package| <f1> transformers.models.m2m_100",shape="record"];
	"transformers.models.m2m_100.modeling_m2m_100" [label="<f0> SourceModule| <f1> transformers.models.m2m_100.modeling_m2m_100",shape="record"];
	"transformers.models.m2m_100.tokenization_m2m_100" [label="<f0> SourceModule| <f1> transformers.models.m2m_100.tokenization_m2m_100",shape="record"];
	"transformers.models.m2m_100.configuration_m2m_100" [label="<f0> SourceModule| <f1> transformers.models.m2m_100.configuration_m2m_100",shape="record"];
	"transformers.models.lxmert" [label="<f0> Package| <f1> transformers.models.lxmert",shape="record"];
	"transformers.models.lxmert.modeling_tf_lxmert" [label="<f0> SourceModule| <f1> transformers.models.lxmert.modeling_tf_lxmert",shape="record"];
	"transformers.models.lxmert.modeling_lxmert" [label="<f0> SourceModule| <f1> transformers.models.lxmert.modeling_lxmert",shape="record"];
	"transformers.models.lxmert.tokenization_lxmert_fast" [label="<f0> SourceModule| <f1> transformers.models.lxmert.tokenization_lxmert_fast",shape="record"];
	"transformers.models.lxmert.tokenization_lxmert" [label="<f0> SourceModule| <f1> transformers.models.lxmert.tokenization_lxmert",shape="record"];
	"transformers.models.lxmert.configuration_lxmert" [label="<f0> SourceModule| <f1> transformers.models.lxmert.configuration_lxmert",shape="record"];
	"transformers.models.luke" [label="<f0> Package| <f1> transformers.models.luke",shape="record"];
	"transformers.models.luke.modeling_luke" [label="<f0> SourceModule| <f1> transformers.models.luke.modeling_luke",shape="record"];
	"transformers.models.luke.tokenization_luke" [label="<f0> SourceModule| <f1> transformers.models.luke.tokenization_luke",shape="record"];
	"transformers.models.luke.configuration_luke" [label="<f0> SourceModule| <f1> transformers.models.luke.configuration_luke",shape="record"];
	"transformers.models.longt5" [label="<f0> Package| <f1> transformers.models.longt5",shape="record"];
	"transformers.models.longt5.modeling_flax_longt5" [label="<f0> SourceModule| <f1> transformers.models.longt5.modeling_flax_longt5",shape="record"];
	"transformers.models.longt5.modeling_longt5" [label="<f0> SourceModule| <f1> transformers.models.longt5.modeling_longt5",shape="record"];
	"transformers.models.longt5.configuration_longt5" [label="<f0> SourceModule| <f1> transformers.models.longt5.configuration_longt5",shape="record"];
	"transformers.models.longformer" [label="<f0> Package| <f1> transformers.models.longformer",shape="record"];
	"transformers.models.longformer.modeling_tf_longformer" [label="<f0> SourceModule| <f1> transformers.models.longformer.modeling_tf_longformer",shape="record"];
	"transformers.models.longformer.modeling_longformer" [label="<f0> SourceModule| <f1> transformers.models.longformer.modeling_longformer",shape="record"];
	"transformers.models.longformer.tokenization_longformer_fast" [label="<f0> SourceModule| <f1> transformers.models.longformer.tokenization_longformer_fast",shape="record"];
	"transformers.models.longformer.tokenization_longformer" [label="<f0> SourceModule| <f1> transformers.models.longformer.tokenization_longformer",shape="record"];
	"transformers.models.longformer.configuration_longformer" [label="<f0> SourceModule| <f1> transformers.models.longformer.configuration_longformer",shape="record"];
	"transformers.models.llava_onevision" [label="<f0> Package| <f1> transformers.models.llava_onevision",shape="record"];
	"transformers.models.llava_onevision.modeling_llava_onevision" [label="<f0> SourceModule| <f1> transformers.models.llava_onevision.modeling_llava_onevision",shape="record"];
	"transformers.models.llava_onevision.video_processing_llava_onevision" [label="<f0> SourceModule| <f1> transformers.models.llava_onevision.video_processing_llava_onevision",shape="record"];
	"transformers.models.llava_onevision.image_processing_llava_onevision" [label="<f0> SourceModule| <f1> transformers.models.llava_onevision.image_processing_llava_onevision",shape="record"];
	"transformers.models.llava_onevision.processing_llava_onevision" [label="<f0> SourceModule| <f1> transformers.models.llava_onevision.processing_llava_onevision",shape="record"];
	"transformers.models.llava_onevision.configuration_llava_onevision" [label="<f0> SourceModule| <f1> transformers.models.llava_onevision.configuration_llava_onevision",shape="record"];
	"transformers.models.llava_next_video" [label="<f0> Package| <f1> transformers.models.llava_next_video",shape="record"];
	"transformers.models.llava_next_video.modeling_llava_next_video" [label="<f0> SourceModule| <f1> transformers.models.llava_next_video.modeling_llava_next_video",shape="record"];
	"transformers.models.llava_next_video.image_processing_llava_next_video" [label="<f0> SourceModule| <f1> transformers.models.llava_next_video.image_processing_llava_next_video",shape="record"];
	"transformers.models.llava_next_video.processing_llava_next_video" [label="<f0> SourceModule| <f1> transformers.models.llava_next_video.processing_llava_next_video",shape="record"];
	"transformers.models.llava_next_video.configuration_llava_next_video" [label="<f0> SourceModule| <f1> transformers.models.llava_next_video.configuration_llava_next_video",shape="record"];
	"transformers.models.llava_next" [label="<f0> Package| <f1> transformers.models.llava_next",shape="record"];
	"transformers.models.llava_next.image_processing_llava_next" [label="<f0> SourceModule| <f1> transformers.models.llava_next.image_processing_llava_next",shape="record"];
	"transformers.models.llava_next.modeling_llava_next" [label="<f0> SourceModule| <f1> transformers.models.llava_next.modeling_llava_next",shape="record"];
	"transformers.models.llava_next.processing_llava_next" [label="<f0> SourceModule| <f1> transformers.models.llava_next.processing_llava_next",shape="record"];
	"transformers.models.llava_next.configuration_llava_next" [label="<f0> SourceModule| <f1> transformers.models.llava_next.configuration_llava_next",shape="record"];
	"transformers.models.llava" [label="<f0> Package| <f1> transformers.models.llava",shape="record"];
	"transformers.models.llava.modeling_llava" [label="<f0> SourceModule| <f1> transformers.models.llava.modeling_llava",shape="record"];
	"transformers.models.llava.processing_llava" [label="<f0> SourceModule| <f1> transformers.models.llava.processing_llava",shape="record"];
	"transformers.models.llava.configuration_llava" [label="<f0> SourceModule| <f1> transformers.models.llava.configuration_llava",shape="record"];
	"transformers.models.llama" [label="<f0> Package| <f1> transformers.models.llama",shape="record"];
	"transformers.models.llama.modeling_flax_llama" [label="<f0> SourceModule| <f1> transformers.models.llama.modeling_flax_llama",shape="record"];
	"transformers.models.llama.modeling_llama" [label="<f0> SourceModule| <f1> transformers.models.llama.modeling_llama",shape="record"];
	"transformers.models.llama.tokenization_llama_fast" [label="<f0> SourceModule| <f1> transformers.models.llama.tokenization_llama_fast",shape="record"];
	"transformers.models.llama.tokenization_llama" [label="<f0> SourceModule| <f1> transformers.models.llama.tokenization_llama",shape="record"];
	"transformers.models.llama.configuration_llama" [label="<f0> SourceModule| <f1> transformers.models.llama.configuration_llama",shape="record"];
	"transformers.models.lilt" [label="<f0> Package| <f1> transformers.models.lilt",shape="record"];
	"transformers.models.lilt.modeling_lilt" [label="<f0> SourceModule| <f1> transformers.models.lilt.modeling_lilt",shape="record"];
	"transformers.models.lilt.configuration_lilt" [label="<f0> SourceModule| <f1> transformers.models.lilt.configuration_lilt",shape="record"];
	"transformers.models.levit" [label="<f0> Package| <f1> transformers.models.levit",shape="record"];
	"transformers.models.levit.modeling_levit" [label="<f0> SourceModule| <f1> transformers.models.levit.modeling_levit",shape="record"];
	"transformers.models.levit.image_processing_levit" [label="<f0> SourceModule| <f1> transformers.models.levit.image_processing_levit",shape="record"];
	"transformers.models.levit.feature_extraction_levit" [label="<f0> SourceModule| <f1> transformers.models.levit.feature_extraction_levit",shape="record"];
	"transformers.models.levit.configuration_levit" [label="<f0> SourceModule| <f1> transformers.models.levit.configuration_levit",shape="record"];
	"transformers.models.led" [label="<f0> Package| <f1> transformers.models.led",shape="record"];
	"transformers.models.led.modeling_tf_led" [label="<f0> SourceModule| <f1> transformers.models.led.modeling_tf_led",shape="record"];
	"transformers.models.led.modeling_led" [label="<f0> SourceModule| <f1> transformers.models.led.modeling_led",shape="record"];
	"transformers.models.led.tokenization_led_fast" [label="<f0> SourceModule| <f1> transformers.models.led.tokenization_led_fast",shape="record"];
	"transformers.models.led.tokenization_led" [label="<f0> SourceModule| <f1> transformers.models.led.tokenization_led",shape="record"];
	"transformers.models.led.configuration_led" [label="<f0> SourceModule| <f1> transformers.models.led.configuration_led",shape="record"];
	"transformers.models.layoutxlm" [label="<f0> Package| <f1> transformers.models.layoutxlm",shape="record"];
	"transformers.models.layoutxlm.tokenization_layoutxlm_fast" [label="<f0> SourceModule| <f1> transformers.models.layoutxlm.tokenization_layoutxlm_fast",shape="record"];
	"transformers.models.layoutxlm.tokenization_layoutxlm" [label="<f0> SourceModule| <f1> transformers.models.layoutxlm.tokenization_layoutxlm",shape="record"];
	"transformers.models.layoutxlm.processing_layoutxlm" [label="<f0> SourceModule| <f1> transformers.models.layoutxlm.processing_layoutxlm",shape="record"];
	"transformers.models.layoutlmv3" [label="<f0> Package| <f1> transformers.models.layoutlmv3",shape="record"];
	"transformers.models.layoutlmv3.image_processing_layoutlmv3" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv3.image_processing_layoutlmv3",shape="record"];
	"transformers.models.layoutlmv3.feature_extraction_layoutlmv3" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv3.feature_extraction_layoutlmv3",shape="record"];
	"transformers.models.layoutlmv3.modeling_tf_layoutlmv3" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv3.modeling_tf_layoutlmv3",shape="record"];
	"transformers.models.layoutlmv3.modeling_layoutlmv3" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv3.modeling_layoutlmv3",shape="record"];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3_fast" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv3.tokenization_layoutlmv3_fast",shape="record"];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv3.tokenization_layoutlmv3",shape="record"];
	"transformers.models.layoutlmv3.processing_layoutlmv3" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv3.processing_layoutlmv3",shape="record"];
	"transformers.models.layoutlmv3.configuration_layoutlmv3" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv3.configuration_layoutlmv3",shape="record"];
	"transformers.models.layoutlmv2" [label="<f0> Package| <f1> transformers.models.layoutlmv2",shape="record"];
	"transformers.models.layoutlmv2.modeling_layoutlmv2" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv2.modeling_layoutlmv2",shape="record"];
	"'detectron2.modeling'" [label="<f0> MissingModule| <f1> 'detectron2.modeling'",shape="record"];
	"detectron2" [label="<f0> MissingModule| <f1> detectron2",shape="record"];
	"transformers.models.layoutlmv2.feature_extraction_layoutlmv2" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv2.feature_extraction_layoutlmv2",shape="record"];
	"transformers.models.layoutlmv2.image_processing_layoutlmv2" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv2.image_processing_layoutlmv2",shape="record"];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2_fast" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv2.tokenization_layoutlmv2_fast",shape="record"];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv2.tokenization_layoutlmv2",shape="record"];
	"transformers.models.layoutlmv2.processing_layoutlmv2" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv2.processing_layoutlmv2",shape="record"];
	"transformers.models.layoutlmv2.configuration_layoutlmv2" [label="<f0> SourceModule| <f1> transformers.models.layoutlmv2.configuration_layoutlmv2",shape="record"];
	"transformers.models.layoutlm" [label="<f0> Package| <f1> transformers.models.layoutlm",shape="record"];
	"transformers.models.layoutlm.modeling_tf_layoutlm" [label="<f0> SourceModule| <f1> transformers.models.layoutlm.modeling_tf_layoutlm",shape="record"];
	"transformers.models.layoutlm.modeling_layoutlm" [label="<f0> SourceModule| <f1> transformers.models.layoutlm.modeling_layoutlm",shape="record"];
	"transformers.models.layoutlm.tokenization_layoutlm_fast" [label="<f0> SourceModule| <f1> transformers.models.layoutlm.tokenization_layoutlm_fast",shape="record"];
	"transformers.models.layoutlm.tokenization_layoutlm" [label="<f0> SourceModule| <f1> transformers.models.layoutlm.tokenization_layoutlm",shape="record"];
	"transformers.models.layoutlm.configuration_layoutlm" [label="<f0> SourceModule| <f1> transformers.models.layoutlm.configuration_layoutlm",shape="record"];
	"transformers.models.kosmos2" [label="<f0> Package| <f1> transformers.models.kosmos2",shape="record"];
	"transformers.models.kosmos2.modeling_kosmos2" [label="<f0> SourceModule| <f1> transformers.models.kosmos2.modeling_kosmos2",shape="record"];
	"transformers.models.kosmos2.processing_kosmos2" [label="<f0> SourceModule| <f1> transformers.models.kosmos2.processing_kosmos2",shape="record"];
	"transformers.models.kosmos2.configuration_kosmos2" [label="<f0> SourceModule| <f1> transformers.models.kosmos2.configuration_kosmos2",shape="record"];
	"transformers.models.jetmoe" [label="<f0> Package| <f1> transformers.models.jetmoe",shape="record"];
	"transformers.models.jetmoe.modeling_jetmoe" [label="<f0> SourceModule| <f1> transformers.models.jetmoe.modeling_jetmoe",shape="record"];
	"transformers.models.jetmoe.configuration_jetmoe" [label="<f0> SourceModule| <f1> transformers.models.jetmoe.configuration_jetmoe",shape="record"];
	"transformers.models.jamba" [label="<f0> Package| <f1> transformers.models.jamba",shape="record"];
	"transformers.models.jamba.modeling_jamba" [label="<f0> SourceModule| <f1> transformers.models.jamba.modeling_jamba",shape="record"];
	"transformers.models.jamba.configuration_jamba" [label="<f0> SourceModule| <f1> transformers.models.jamba.configuration_jamba",shape="record"];
	"transformers.models.instructblipvideo" [label="<f0> Package| <f1> transformers.models.instructblipvideo",shape="record"];
	"transformers.models.instructblipvideo.modeling_instructblipvideo" [label="<f0> SourceModule| <f1> transformers.models.instructblipvideo.modeling_instructblipvideo",shape="record"];
	"transformers.models.instructblipvideo.image_processing_instructblipvideo" [label="<f0> SourceModule| <f1> transformers.models.instructblipvideo.image_processing_instructblipvideo",shape="record"];
	"transformers.models.instructblipvideo.processing_instructblipvideo" [label="<f0> SourceModule| <f1> transformers.models.instructblipvideo.processing_instructblipvideo",shape="record"];
	"transformers.models.instructblipvideo.configuration_instructblipvideo" [label="<f0> SourceModule| <f1> transformers.models.instructblipvideo.configuration_instructblipvideo",shape="record"];
	"transformers.models.instructblip" [label="<f0> Package| <f1> transformers.models.instructblip",shape="record"];
	"transformers.models.instructblip.modeling_instructblip" [label="<f0> SourceModule| <f1> transformers.models.instructblip.modeling_instructblip",shape="record"];
	"transformers.models.instructblip.processing_instructblip" [label="<f0> SourceModule| <f1> transformers.models.instructblip.processing_instructblip",shape="record"];
	"transformers.models.instructblip.configuration_instructblip" [label="<f0> SourceModule| <f1> transformers.models.instructblip.configuration_instructblip",shape="record"];
	"transformers.models.informer" [label="<f0> Package| <f1> transformers.models.informer",shape="record"];
	"transformers.models.informer.modeling_informer" [label="<f0> SourceModule| <f1> transformers.models.informer.modeling_informer",shape="record"];
	"transformers.models.informer.configuration_informer" [label="<f0> SourceModule| <f1> transformers.models.informer.configuration_informer",shape="record"];
	"transformers.models.imagegpt" [label="<f0> Package| <f1> transformers.models.imagegpt",shape="record"];
	"transformers.models.imagegpt.modeling_imagegpt" [label="<f0> SourceModule| <f1> transformers.models.imagegpt.modeling_imagegpt",shape="record"];
	"transformers.models.imagegpt.image_processing_imagegpt" [label="<f0> SourceModule| <f1> transformers.models.imagegpt.image_processing_imagegpt",shape="record"];
	"transformers.models.imagegpt.feature_extraction_imagegpt" [label="<f0> SourceModule| <f1> transformers.models.imagegpt.feature_extraction_imagegpt",shape="record"];
	"transformers.models.imagegpt.configuration_imagegpt" [label="<f0> SourceModule| <f1> transformers.models.imagegpt.configuration_imagegpt",shape="record"];
	"transformers.models.idefics3" [label="<f0> Package| <f1> transformers.models.idefics3",shape="record"];
	"transformers.models.idefics3.processing_idefics3" [label="<f0> SourceModule| <f1> transformers.models.idefics3.processing_idefics3",shape="record"];
	"transformers.models.idefics3.modeling_idefics3" [label="<f0> SourceModule| <f1> transformers.models.idefics3.modeling_idefics3",shape="record"];
	"transformers.models.idefics3.image_processing_idefics3" [label="<f0> SourceModule| <f1> transformers.models.idefics3.image_processing_idefics3",shape="record"];
	"transformers.models.idefics3.configuration_idefics3" [label="<f0> SourceModule| <f1> transformers.models.idefics3.configuration_idefics3",shape="record"];
	"transformers.models.idefics2" [label="<f0> Package| <f1> transformers.models.idefics2",shape="record"];
	"transformers.models.idefics2.processing_idefics2" [label="<f0> SourceModule| <f1> transformers.models.idefics2.processing_idefics2",shape="record"];
	"transformers.models.idefics2.modeling_idefics2" [label="<f0> SourceModule| <f1> transformers.models.idefics2.modeling_idefics2",shape="record"];
	"transformers.models.idefics2.image_processing_idefics2" [label="<f0> SourceModule| <f1> transformers.models.idefics2.image_processing_idefics2",shape="record"];
	"transformers.models.idefics2.configuration_idefics2" [label="<f0> SourceModule| <f1> transformers.models.idefics2.configuration_idefics2",shape="record"];
	"transformers.models.idefics" [label="<f0> Package| <f1> transformers.models.idefics",shape="record"];
	"transformers.models.idefics.modeling_tf_idefics" [label="<f0> SourceModule| <f1> transformers.models.idefics.modeling_tf_idefics",shape="record"];
	"transformers.models.idefics.vision_tf" [label="<f0> SourceModule| <f1> transformers.models.idefics.vision_tf",shape="record"];
	"transformers.models.idefics.perceiver_tf" [label="<f0> SourceModule| <f1> transformers.models.idefics.perceiver_tf",shape="record"];
	"transformers.models.idefics.processing_idefics" [label="<f0> SourceModule| <f1> transformers.models.idefics.processing_idefics",shape="record"];
	"transformers.models.idefics.modeling_idefics" [label="<f0> SourceModule| <f1> transformers.models.idefics.modeling_idefics",shape="record"];
	"transformers.models.idefics.vision" [label="<f0> SourceModule| <f1> transformers.models.idefics.vision",shape="record"];
	"transformers.models.idefics.perceiver" [label="<f0> SourceModule| <f1> transformers.models.idefics.perceiver",shape="record"];
	"transformers.models.idefics.image_processing_idefics" [label="<f0> SourceModule| <f1> transformers.models.idefics.image_processing_idefics",shape="record"];
	"transformers.models.idefics.configuration_idefics" [label="<f0> SourceModule| <f1> transformers.models.idefics.configuration_idefics",shape="record"];
	"transformers.models.ibert" [label="<f0> Package| <f1> transformers.models.ibert",shape="record"];
	"transformers.models.ibert.modeling_ibert" [label="<f0> SourceModule| <f1> transformers.models.ibert.modeling_ibert",shape="record"];
	"transformers.models.ibert.quant_modules" [label="<f0> SourceModule| <f1> transformers.models.ibert.quant_modules",shape="record"];
	"transformers.models.ibert.configuration_ibert" [label="<f0> SourceModule| <f1> transformers.models.ibert.configuration_ibert",shape="record"];
	"transformers.models.hubert" [label="<f0> Package| <f1> transformers.models.hubert",shape="record"];
	"transformers.models.hubert.modeling_tf_hubert" [label="<f0> SourceModule| <f1> transformers.models.hubert.modeling_tf_hubert",shape="record"];
	"transformers.models.hubert.modeling_hubert" [label="<f0> SourceModule| <f1> transformers.models.hubert.modeling_hubert",shape="record"];
	"transformers.models.hubert.configuration_hubert" [label="<f0> SourceModule| <f1> transformers.models.hubert.configuration_hubert",shape="record"];
	"transformers.models.hiera" [label="<f0> Package| <f1> transformers.models.hiera",shape="record"];
	"transformers.models.hiera.modeling_hiera" [label="<f0> SourceModule| <f1> transformers.models.hiera.modeling_hiera",shape="record"];
	"transformers.models.hiera.configuration_hiera" [label="<f0> SourceModule| <f1> transformers.models.hiera.configuration_hiera",shape="record"];
	"transformers.models.herbert" [label="<f0> Package| <f1> transformers.models.herbert",shape="record"];
	"transformers.models.herbert.tokenization_herbert_fast" [label="<f0> SourceModule| <f1> transformers.models.herbert.tokenization_herbert_fast",shape="record"];
	"transformers.models.herbert.tokenization_herbert" [label="<f0> SourceModule| <f1> transformers.models.herbert.tokenization_herbert",shape="record"];
	"transformers.models.groupvit" [label="<f0> Package| <f1> transformers.models.groupvit",shape="record"];
	"transformers.models.groupvit.modeling_tf_groupvit" [label="<f0> SourceModule| <f1> transformers.models.groupvit.modeling_tf_groupvit",shape="record"];
	"transformers.models.groupvit.modeling_groupvit" [label="<f0> SourceModule| <f1> transformers.models.groupvit.modeling_groupvit",shape="record"];
	"transformers.models.groupvit.configuration_groupvit" [label="<f0> SourceModule| <f1> transformers.models.groupvit.configuration_groupvit",shape="record"];
	"transformers.models.grounding_dino" [label="<f0> Package| <f1> transformers.models.grounding_dino",shape="record"];
	"transformers.models.grounding_dino.image_processing_grounding_dino" [label="<f0> SourceModule| <f1> transformers.models.grounding_dino.image_processing_grounding_dino",shape="record"];
	"transformers.models.grounding_dino.modeling_grounding_dino" [label="<f0> SourceModule| <f1> transformers.models.grounding_dino.modeling_grounding_dino",shape="record"];
	"transformers.models.grounding_dino.processing_grounding_dino" [label="<f0> SourceModule| <f1> transformers.models.grounding_dino.processing_grounding_dino",shape="record"];
	"transformers.models.grounding_dino.configuration_grounding_dino" [label="<f0> SourceModule| <f1> transformers.models.grounding_dino.configuration_grounding_dino",shape="record"];
	"transformers.models.granitemoe" [label="<f0> Package| <f1> transformers.models.granitemoe",shape="record"];
	"transformers.models.granitemoe.modeling_granitemoe" [label="<f0> SourceModule| <f1> transformers.models.granitemoe.modeling_granitemoe",shape="record"];
	"transformers.models.granitemoe.configuration_granitemoe" [label="<f0> SourceModule| <f1> transformers.models.granitemoe.configuration_granitemoe",shape="record"];
	"transformers.models.granite" [label="<f0> Package| <f1> transformers.models.granite",shape="record"];
	"transformers.models.granite.modeling_granite" [label="<f0> SourceModule| <f1> transformers.models.granite.modeling_granite",shape="record"];
	"transformers.models.granite.configuration_granite" [label="<f0> SourceModule| <f1> transformers.models.granite.configuration_granite",shape="record"];
	"transformers.models.gptj" [label="<f0> Package| <f1> transformers.models.gptj",shape="record"];
	"transformers.models.gptj.modeling_flax_gptj" [label="<f0> SourceModule| <f1> transformers.models.gptj.modeling_flax_gptj",shape="record"];
	"transformers.models.gptj.modeling_tf_gptj" [label="<f0> SourceModule| <f1> transformers.models.gptj.modeling_tf_gptj",shape="record"];
	"transformers.models.gptj.modeling_gptj" [label="<f0> SourceModule| <f1> transformers.models.gptj.modeling_gptj",shape="record"];
	"transformers.models.gptj.configuration_gptj" [label="<f0> SourceModule| <f1> transformers.models.gptj.configuration_gptj",shape="record"];
	"transformers.models.gpt_neox_japanese" [label="<f0> Package| <f1> transformers.models.gpt_neox_japanese",shape="record"];
	"transformers.models.gpt_neox_japanese.modeling_gpt_neox_japanese" [label="<f0> SourceModule| <f1> transformers.models.gpt_neox_japanese.modeling_gpt_neox_japanese",shape="record"];
	"transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" [label="<f0> SourceModule| <f1> transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese",shape="record"];
	"transformers.models.gpt_neox_japanese.configuration_gpt_neox_japanese" [label="<f0> SourceModule| <f1> transformers.models.gpt_neox_japanese.configuration_gpt_neox_japanese",shape="record"];
	"transformers.models.gpt_neox" [label="<f0> Package| <f1> transformers.models.gpt_neox",shape="record"];
	"transformers.models.gpt_neox.modeling_gpt_neox" [label="<f0> SourceModule| <f1> transformers.models.gpt_neox.modeling_gpt_neox",shape="record"];
	"transformers.models.gpt_neox.tokenization_gpt_neox_fast" [label="<f0> SourceModule| <f1> transformers.models.gpt_neox.tokenization_gpt_neox_fast",shape="record"];
	"transformers.models.gpt_neox.configuration_gpt_neox" [label="<f0> SourceModule| <f1> transformers.models.gpt_neox.configuration_gpt_neox",shape="record"];
	"transformers.models.gpt_neo" [label="<f0> Package| <f1> transformers.models.gpt_neo",shape="record"];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" [label="<f0> SourceModule| <f1> transformers.models.gpt_neo.modeling_flax_gpt_neo",shape="record"];
	"transformers.models.gpt_neo.modeling_gpt_neo" [label="<f0> SourceModule| <f1> transformers.models.gpt_neo.modeling_gpt_neo",shape="record"];
	"transformers.models.gpt_neo.configuration_gpt_neo" [label="<f0> SourceModule| <f1> transformers.models.gpt_neo.configuration_gpt_neo",shape="record"];
	"transformers.models.gpt_bigcode" [label="<f0> Package| <f1> transformers.models.gpt_bigcode",shape="record"];
	"transformers.models.gpt_bigcode.modeling_gpt_bigcode" [label="<f0> SourceModule| <f1> transformers.models.gpt_bigcode.modeling_gpt_bigcode",shape="record"];
	"transformers.models.gpt_bigcode.configuration_gpt_bigcode" [label="<f0> SourceModule| <f1> transformers.models.gpt_bigcode.configuration_gpt_bigcode",shape="record"];
	"transformers.models.gpt2" [label="<f0> Package| <f1> transformers.models.gpt2",shape="record"];
	"transformers.models.gpt2.modeling_flax_gpt2" [label="<f0> SourceModule| <f1> transformers.models.gpt2.modeling_flax_gpt2",shape="record"];
	"transformers.models.gpt2.tokenization_gpt2_tf" [label="<f0> SourceModule| <f1> transformers.models.gpt2.tokenization_gpt2_tf",shape="record"];
	"tensorflow_text" [label="<f0> MissingModule| <f1> tensorflow_text",shape="record"];
	"keras_nlp" [label="<f0> MissingModule| <f1> keras_nlp",shape="record"];
	"transformers.models.gpt2.modeling_tf_gpt2" [label="<f0> SourceModule| <f1> transformers.models.gpt2.modeling_tf_gpt2",shape="record"];
	"transformers.models.gpt2.modeling_gpt2" [label="<f0> SourceModule| <f1> transformers.models.gpt2.modeling_gpt2",shape="record"];
	"transformers.models.gpt2.tokenization_gpt2_fast" [label="<f0> SourceModule| <f1> transformers.models.gpt2.tokenization_gpt2_fast",shape="record"];
	"transformers.models.gpt2.tokenization_gpt2" [label="<f0> SourceModule| <f1> transformers.models.gpt2.tokenization_gpt2",shape="record"];
	"transformers.models.gpt2.configuration_gpt2" [label="<f0> SourceModule| <f1> transformers.models.gpt2.configuration_gpt2",shape="record"];
	"transformers.models.glpn" [label="<f0> Package| <f1> transformers.models.glpn",shape="record"];
	"transformers.models.glpn.modeling_glpn" [label="<f0> SourceModule| <f1> transformers.models.glpn.modeling_glpn",shape="record"];
	"transformers.models.glpn.image_processing_glpn" [label="<f0> SourceModule| <f1> transformers.models.glpn.image_processing_glpn",shape="record"];
	"transformers.models.glpn.feature_extraction_glpn" [label="<f0> SourceModule| <f1> transformers.models.glpn.feature_extraction_glpn",shape="record"];
	"transformers.models.glpn.configuration_glpn" [label="<f0> SourceModule| <f1> transformers.models.glpn.configuration_glpn",shape="record"];
	"transformers.models.glm" [label="<f0> Package| <f1> transformers.models.glm",shape="record"];
	"transformers.models.glm.modeling_glm" [label="<f0> SourceModule| <f1> transformers.models.glm.modeling_glm",shape="record"];
	"transformers.models.glm.configuration_glm" [label="<f0> SourceModule| <f1> transformers.models.glm.configuration_glm",shape="record"];
	"transformers.models.git" [label="<f0> Package| <f1> transformers.models.git",shape="record"];
	"transformers.models.git.modeling_git" [label="<f0> SourceModule| <f1> transformers.models.git.modeling_git",shape="record"];
	"transformers.models.git.processing_git" [label="<f0> SourceModule| <f1> transformers.models.git.processing_git",shape="record"];
	"transformers.models.git.configuration_git" [label="<f0> SourceModule| <f1> transformers.models.git.configuration_git",shape="record"];
	"transformers.models.gemma2" [label="<f0> Package| <f1> transformers.models.gemma2",shape="record"];
	"transformers.models.gemma2.modeling_gemma2" [label="<f0> SourceModule| <f1> transformers.models.gemma2.modeling_gemma2",shape="record"];
	"transformers.models.gemma2.configuration_gemma2" [label="<f0> SourceModule| <f1> transformers.models.gemma2.configuration_gemma2",shape="record"];
	"transformers.models.gemma" [label="<f0> Package| <f1> transformers.models.gemma",shape="record"];
	"transformers.models.gemma.modeling_flax_gemma" [label="<f0> SourceModule| <f1> transformers.models.gemma.modeling_flax_gemma",shape="record"];
	"transformers.models.gemma.modeling_gemma" [label="<f0> SourceModule| <f1> transformers.models.gemma.modeling_gemma",shape="record"];
	"transformers.models.gemma.tokenization_gemma_fast" [label="<f0> SourceModule| <f1> transformers.models.gemma.tokenization_gemma_fast",shape="record"];
	"transformers.models.gemma.tokenization_gemma" [label="<f0> SourceModule| <f1> transformers.models.gemma.tokenization_gemma",shape="record"];
	"transformers.models.gemma.configuration_gemma" [label="<f0> SourceModule| <f1> transformers.models.gemma.configuration_gemma",shape="record"];
	"transformers.models.fuyu" [label="<f0> Package| <f1> transformers.models.fuyu",shape="record"];
	"transformers.models.fuyu.modeling_fuyu" [label="<f0> SourceModule| <f1> transformers.models.fuyu.modeling_fuyu",shape="record"];
	"transformers.models.fuyu.processing_fuyu" [label="<f0> SourceModule| <f1> transformers.models.fuyu.processing_fuyu",shape="record"];
	"transformers.models.fuyu.image_processing_fuyu" [label="<f0> SourceModule| <f1> transformers.models.fuyu.image_processing_fuyu",shape="record"];
	"transformers.models.fuyu.configuration_fuyu" [label="<f0> SourceModule| <f1> transformers.models.fuyu.configuration_fuyu",shape="record"];
	"transformers.models.funnel" [label="<f0> Package| <f1> transformers.models.funnel",shape="record"];
	"transformers.models.funnel.modeling_tf_funnel" [label="<f0> SourceModule| <f1> transformers.models.funnel.modeling_tf_funnel",shape="record"];
	"transformers.models.funnel.modeling_funnel" [label="<f0> SourceModule| <f1> transformers.models.funnel.modeling_funnel",shape="record"];
	"transformers.models.funnel.tokenization_funnel_fast" [label="<f0> SourceModule| <f1> transformers.models.funnel.tokenization_funnel_fast",shape="record"];
	"transformers.models.funnel.tokenization_funnel" [label="<f0> SourceModule| <f1> transformers.models.funnel.tokenization_funnel",shape="record"];
	"transformers.models.funnel.configuration_funnel" [label="<f0> SourceModule| <f1> transformers.models.funnel.configuration_funnel",shape="record"];
	"transformers.models.fsmt" [label="<f0> Package| <f1> transformers.models.fsmt",shape="record"];
	"transformers.models.fsmt.modeling_fsmt" [label="<f0> SourceModule| <f1> transformers.models.fsmt.modeling_fsmt",shape="record"];
	"transformers.models.fsmt.tokenization_fsmt" [label="<f0> SourceModule| <f1> transformers.models.fsmt.tokenization_fsmt",shape="record"];
	"transformers.models.fsmt.configuration_fsmt" [label="<f0> SourceModule| <f1> transformers.models.fsmt.configuration_fsmt",shape="record"];
	"transformers.models.focalnet" [label="<f0> Package| <f1> transformers.models.focalnet",shape="record"];
	"transformers.models.focalnet.modeling_focalnet" [label="<f0> SourceModule| <f1> transformers.models.focalnet.modeling_focalnet",shape="record"];
	"transformers.models.focalnet.configuration_focalnet" [label="<f0> SourceModule| <f1> transformers.models.focalnet.configuration_focalnet",shape="record"];
	"transformers.models.fnet" [label="<f0> Package| <f1> transformers.models.fnet",shape="record"];
	"transformers.models.fnet.modeling_fnet" [label="<f0> SourceModule| <f1> transformers.models.fnet.modeling_fnet",shape="record"];
	"transformers.models.fnet.tokenization_fnet_fast" [label="<f0> SourceModule| <f1> transformers.models.fnet.tokenization_fnet_fast",shape="record"];
	"transformers.models.fnet.tokenization_fnet" [label="<f0> SourceModule| <f1> transformers.models.fnet.tokenization_fnet",shape="record"];
	"transformers.models.fnet.configuration_fnet" [label="<f0> SourceModule| <f1> transformers.models.fnet.configuration_fnet",shape="record"];
	"transformers.models.flava" [label="<f0> Package| <f1> transformers.models.flava",shape="record"];
	"transformers.models.flava.modeling_flava" [label="<f0> SourceModule| <f1> transformers.models.flava.modeling_flava",shape="record"];
	"transformers.models.flava.processing_flava" [label="<f0> SourceModule| <f1> transformers.models.flava.processing_flava",shape="record"];
	"transformers.models.flava.image_processing_flava" [label="<f0> SourceModule| <f1> transformers.models.flava.image_processing_flava",shape="record"];
	"transformers.models.flava.feature_extraction_flava" [label="<f0> SourceModule| <f1> transformers.models.flava.feature_extraction_flava",shape="record"];
	"transformers.models.flava.configuration_flava" [label="<f0> SourceModule| <f1> transformers.models.flava.configuration_flava",shape="record"];
	"transformers.models.flaubert" [label="<f0> Package| <f1> transformers.models.flaubert",shape="record"];
	"transformers.models.flaubert.modeling_tf_flaubert" [label="<f0> SourceModule| <f1> transformers.models.flaubert.modeling_tf_flaubert",shape="record"];
	"transformers.models.flaubert.modeling_flaubert" [label="<f0> SourceModule| <f1> transformers.models.flaubert.modeling_flaubert",shape="record"];
	"transformers.models.flaubert.tokenization_flaubert" [label="<f0> SourceModule| <f1> transformers.models.flaubert.tokenization_flaubert",shape="record"];
	"transformers.models.flaubert.configuration_flaubert" [label="<f0> SourceModule| <f1> transformers.models.flaubert.configuration_flaubert",shape="record"];
	"transformers.models.fastspeech2_conformer" [label="<f0> Package| <f1> transformers.models.fastspeech2_conformer",shape="record"];
	"transformers.models.fastspeech2_conformer.modeling_fastspeech2_conformer" [label="<f0> SourceModule| <f1> transformers.models.fastspeech2_conformer.modeling_fastspeech2_conformer",shape="record"];
	"transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer" [label="<f0> SourceModule| <f1> transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer",shape="record"];
	"g2p_en" [label="<f0> MissingModule| <f1> g2p_en",shape="record"];
	"transformers.models.fastspeech2_conformer.configuration_fastspeech2_conformer" [label="<f0> SourceModule| <f1> transformers.models.fastspeech2_conformer.configuration_fastspeech2_conformer",shape="record"];
	"transformers.models.falcon_mamba" [label="<f0> Package| <f1> transformers.models.falcon_mamba",shape="record"];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" [label="<f0> SourceModule| <f1> transformers.models.falcon_mamba.modeling_falcon_mamba",shape="record"];
	"transformers.kernels.falcon_mamba" [label="<f0> Package| <f1> transformers.kernels.falcon_mamba",shape="record"];
	"transformers.kernels" [label="<f0> Package| <f1> transformers.kernels",shape="record"];
	"transformers.kernels.falcon_mamba.selective_scan_with_ln_interface" [label="<f0> SourceModule| <f1> transformers.kernels.falcon_mamba.selective_scan_with_ln_interface",shape="record"];
	"selective_scan_cuda" [label="<f0> MissingModule| <f1> selective_scan_cuda",shape="record"];
	"causal_conv1d_cuda" [label="<f0> MissingModule| <f1> causal_conv1d_cuda",shape="record"];
	"mambapy" [label="<f0> MissingModule| <f1> mambapy",shape="record"];
	"transformers.models.falcon_mamba.configuration_falcon_mamba" [label="<f0> SourceModule| <f1> transformers.models.falcon_mamba.configuration_falcon_mamba",shape="record"];
	"transformers.models.falcon" [label="<f0> Package| <f1> transformers.models.falcon",shape="record"];
	"transformers.models.falcon.modeling_falcon" [label="<f0> SourceModule| <f1> transformers.models.falcon.modeling_falcon",shape="record"];
	"transformers.models.falcon.configuration_falcon" [label="<f0> SourceModule| <f1> transformers.models.falcon.configuration_falcon",shape="record"];
	"transformers.models.esm" [label="<f0> Package| <f1> transformers.models.esm",shape="record"];
	"transformers.models.esm.modeling_tf_esm" [label="<f0> SourceModule| <f1> transformers.models.esm.modeling_tf_esm",shape="record"];
	"transformers.models.esm.modeling_esmfold" [label="<f0> SourceModule| <f1> transformers.models.esm.modeling_esmfold",shape="record"];
	"transformers.models.esm.openfold_utils.residue_constants" [label="<f0> SourceModule| <f1> transformers.models.esm.openfold_utils.residue_constants",shape="record"];
	"transformers.models.esm.openfold_utils" [label="<f0> Package| <f1> transformers.models.esm.openfold_utils",shape="record"];
	"transformers.models.esm.openfold_utils.tensor_utils" [label="<f0> SourceModule| <f1> transformers.models.esm.openfold_utils.tensor_utils",shape="record"];
	"transformers.models.esm.openfold_utils.rigid_utils" [label="<f0> SourceModule| <f1> transformers.models.esm.openfold_utils.rigid_utils",shape="record"];
	"transformers.models.esm.openfold_utils.protein" [label="<f0> SourceModule| <f1> transformers.models.esm.openfold_utils.protein",shape="record"];
	"transformers.models.esm.openfold_utils.loss" [label="<f0> SourceModule| <f1> transformers.models.esm.openfold_utils.loss",shape="record"];
	"transformers.models.esm.openfold_utils.feats" [label="<f0> SourceModule| <f1> transformers.models.esm.openfold_utils.feats",shape="record"];
	"transformers.models.esm.openfold_utils.data_transforms" [label="<f0> SourceModule| <f1> transformers.models.esm.openfold_utils.data_transforms",shape="record"];
	"transformers.models.esm.openfold_utils.chunk_utils" [label="<f0> SourceModule| <f1> transformers.models.esm.openfold_utils.chunk_utils",shape="record"];
	"transformers.models.esm.modeling_esm" [label="<f0> SourceModule| <f1> transformers.models.esm.modeling_esm",shape="record"];
	"transformers.models.esm.tokenization_esm" [label="<f0> SourceModule| <f1> transformers.models.esm.tokenization_esm",shape="record"];
	"transformers.models.esm.configuration_esm" [label="<f0> SourceModule| <f1> transformers.models.esm.configuration_esm",shape="record"];
	"transformers.models.ernie" [label="<f0> Package| <f1> transformers.models.ernie",shape="record"];
	"transformers.models.ernie.modeling_ernie" [label="<f0> SourceModule| <f1> transformers.models.ernie.modeling_ernie",shape="record"];
	"transformers.models.ernie.configuration_ernie" [label="<f0> SourceModule| <f1> transformers.models.ernie.configuration_ernie",shape="record"];
	"transformers.models.encoder_decoder" [label="<f0> Package| <f1> transformers.models.encoder_decoder",shape="record"];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.encoder_decoder.modeling_flax_encoder_decoder",shape="record"];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.encoder_decoder.modeling_tf_encoder_decoder",shape="record"];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.encoder_decoder.modeling_encoder_decoder",shape="record"];
	"transformers.models.encoder_decoder.configuration_encoder_decoder" [label="<f0> SourceModule| <f1> transformers.models.encoder_decoder.configuration_encoder_decoder",shape="record"];
	"transformers.models.encodec" [label="<f0> Package| <f1> transformers.models.encodec",shape="record"];
	"transformers.models.encodec.modeling_encodec" [label="<f0> SourceModule| <f1> transformers.models.encodec.modeling_encodec",shape="record"];
	"transformers.models.encodec.feature_extraction_encodec" [label="<f0> SourceModule| <f1> transformers.models.encodec.feature_extraction_encodec",shape="record"];
	"transformers.models.encodec.configuration_encodec" [label="<f0> SourceModule| <f1> transformers.models.encodec.configuration_encodec",shape="record"];
	"transformers.models.electra" [label="<f0> Package| <f1> transformers.models.electra",shape="record"];
	"transformers.models.electra.modeling_flax_electra" [label="<f0> SourceModule| <f1> transformers.models.electra.modeling_flax_electra",shape="record"];
	"transformers.models.electra.modeling_tf_electra" [label="<f0> SourceModule| <f1> transformers.models.electra.modeling_tf_electra",shape="record"];
	"transformers.models.electra.modeling_electra" [label="<f0> SourceModule| <f1> transformers.models.electra.modeling_electra",shape="record"];
	"transformers.models.electra.tokenization_electra_fast" [label="<f0> SourceModule| <f1> transformers.models.electra.tokenization_electra_fast",shape="record"];
	"transformers.models.electra.tokenization_electra" [label="<f0> SourceModule| <f1> transformers.models.electra.tokenization_electra",shape="record"];
	"transformers.models.electra.configuration_electra" [label="<f0> SourceModule| <f1> transformers.models.electra.configuration_electra",shape="record"];
	"transformers.models.efficientnet" [label="<f0> Package| <f1> transformers.models.efficientnet",shape="record"];
	"transformers.models.efficientnet.modeling_efficientnet" [label="<f0> SourceModule| <f1> transformers.models.efficientnet.modeling_efficientnet",shape="record"];
	"transformers.models.efficientnet.image_processing_efficientnet" [label="<f0> SourceModule| <f1> transformers.models.efficientnet.image_processing_efficientnet",shape="record"];
	"transformers.models.efficientnet.configuration_efficientnet" [label="<f0> SourceModule| <f1> transformers.models.efficientnet.configuration_efficientnet",shape="record"];
	"transformers.models.dpt" [label="<f0> Package| <f1> transformers.models.dpt",shape="record"];
	"transformers.models.dpt.modeling_dpt" [label="<f0> SourceModule| <f1> transformers.models.dpt.modeling_dpt",shape="record"];
	"transformers.models.dpt.image_processing_dpt" [label="<f0> SourceModule| <f1> transformers.models.dpt.image_processing_dpt",shape="record"];
	"transformers.models.dpt.feature_extraction_dpt" [label="<f0> SourceModule| <f1> transformers.models.dpt.feature_extraction_dpt",shape="record"];
	"transformers.models.dpt.configuration_dpt" [label="<f0> SourceModule| <f1> transformers.models.dpt.configuration_dpt",shape="record"];
	"transformers.models.dpr" [label="<f0> Package| <f1> transformers.models.dpr",shape="record"];
	"transformers.models.dpr.modeling_tf_dpr" [label="<f0> SourceModule| <f1> transformers.models.dpr.modeling_tf_dpr",shape="record"];
	"transformers.models.bert.modeling_tf_bert" [label="<f0> SourceModule| <f1> transformers.models.bert.modeling_tf_bert",shape="record"];
	"transformers.models.bert.configuration_bert" [label="<f0> SourceModule| <f1> transformers.models.bert.configuration_bert",shape="record"];
	"transformers.models.dpr.modeling_dpr" [label="<f0> SourceModule| <f1> transformers.models.dpr.modeling_dpr",shape="record"];
	"transformers.models.bert.modeling_bert" [label="<f0> SourceModule| <f1> transformers.models.bert.modeling_bert",shape="record"];
	"transformers.models.dpr.tokenization_dpr_fast" [label="<f0> SourceModule| <f1> transformers.models.dpr.tokenization_dpr_fast",shape="record"];
	"transformers.models.bert.tokenization_bert_fast" [label="<f0> SourceModule| <f1> transformers.models.bert.tokenization_bert_fast",shape="record"];
	"transformers.models.dpr.tokenization_dpr" [label="<f0> SourceModule| <f1> transformers.models.dpr.tokenization_dpr",shape="record"];
	"transformers.models.dpr.configuration_dpr" [label="<f0> SourceModule| <f1> transformers.models.dpr.configuration_dpr",shape="record"];
	"transformers.models.donut" [label="<f0> Package| <f1> transformers.models.donut",shape="record"];
	"transformers.models.donut.image_processing_donut" [label="<f0> SourceModule| <f1> transformers.models.donut.image_processing_donut",shape="record"];
	"transformers.models.donut.feature_extraction_donut" [label="<f0> SourceModule| <f1> transformers.models.donut.feature_extraction_donut",shape="record"];
	"transformers.models.donut.modeling_donut_swin" [label="<f0> SourceModule| <f1> transformers.models.donut.modeling_donut_swin",shape="record"];
	"transformers.models.donut.processing_donut" [label="<f0> SourceModule| <f1> transformers.models.donut.processing_donut",shape="record"];
	"transformers.models.donut.configuration_donut_swin" [label="<f0> SourceModule| <f1> transformers.models.donut.configuration_donut_swin",shape="record"];
	"transformers.models.distilbert" [label="<f0> Package| <f1> transformers.models.distilbert",shape="record"];
	"transformers.models.distilbert.modeling_flax_distilbert" [label="<f0> SourceModule| <f1> transformers.models.distilbert.modeling_flax_distilbert",shape="record"];
	"transformers.models.distilbert.modeling_tf_distilbert" [label="<f0> SourceModule| <f1> transformers.models.distilbert.modeling_tf_distilbert",shape="record"];
	"transformers.models.distilbert.modeling_distilbert" [label="<f0> SourceModule| <f1> transformers.models.distilbert.modeling_distilbert",shape="record"];
	"transformers.models.distilbert.tokenization_distilbert_fast" [label="<f0> SourceModule| <f1> transformers.models.distilbert.tokenization_distilbert_fast",shape="record"];
	"transformers.models.distilbert.tokenization_distilbert" [label="<f0> SourceModule| <f1> transformers.models.distilbert.tokenization_distilbert",shape="record"];
	"transformers.models.distilbert.configuration_distilbert" [label="<f0> SourceModule| <f1> transformers.models.distilbert.configuration_distilbert",shape="record"];
	"transformers.models.dinov2" [label="<f0> Package| <f1> transformers.models.dinov2",shape="record"];
	"transformers.models.dinov2.modeling_flax_dinov2" [label="<f0> SourceModule| <f1> transformers.models.dinov2.modeling_flax_dinov2",shape="record"];
	"transformers.models.dinov2.modeling_dinov2" [label="<f0> SourceModule| <f1> transformers.models.dinov2.modeling_dinov2",shape="record"];
	"transformers.models.dinov2.configuration_dinov2" [label="<f0> SourceModule| <f1> transformers.models.dinov2.configuration_dinov2",shape="record"];
	"transformers.models.dinat" [label="<f0> Package| <f1> transformers.models.dinat",shape="record"];
	"transformers.models.dinat.modeling_dinat" [label="<f0> SourceModule| <f1> transformers.models.dinat.modeling_dinat",shape="record"];
	"natten" [label="<f0> MissingModule| <f1> natten",shape="record"];
	"transformers.models.dinat.configuration_dinat" [label="<f0> SourceModule| <f1> transformers.models.dinat.configuration_dinat",shape="record"];
	"transformers.models.detr" [label="<f0> Package| <f1> transformers.models.detr",shape="record"];
	"transformers.models.detr.modeling_detr" [label="<f0> SourceModule| <f1> transformers.models.detr.modeling_detr",shape="record"];
	"transformers.models.detr.image_processing_detr_fast" [label="<f0> SourceModule| <f1> transformers.models.detr.image_processing_detr_fast",shape="record"];
	"transformers.models.detr.image_processing_detr" [label="<f0> SourceModule| <f1> transformers.models.detr.image_processing_detr",shape="record"];
	"transformers.models.detr.feature_extraction_detr" [label="<f0> SourceModule| <f1> transformers.models.detr.feature_extraction_detr",shape="record"];
	"transformers.models.detr.configuration_detr" [label="<f0> SourceModule| <f1> transformers.models.detr.configuration_detr",shape="record"];
	"transformers.models.depth_anything" [label="<f0> Package| <f1> transformers.models.depth_anything",shape="record"];
	"transformers.models.depth_anything.modeling_depth_anything" [label="<f0> SourceModule| <f1> transformers.models.depth_anything.modeling_depth_anything",shape="record"];
	"transformers.models.depth_anything.configuration_depth_anything" [label="<f0> SourceModule| <f1> transformers.models.depth_anything.configuration_depth_anything",shape="record"];
	"transformers.models.deprecated.xlm_prophetnet" [label="<f0> Package| <f1> transformers.models.deprecated.xlm_prophetnet",shape="record"];
	"transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" [label="<f0> SourceModule| <f1> transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet",shape="record"];
	"transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet" [label="<f0> SourceModule| <f1> transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet",shape="record"];
	"transformers.models.deprecated.xlm_prophetnet.configuration_xlm_prophetnet" [label="<f0> SourceModule| <f1> transformers.models.deprecated.xlm_prophetnet.configuration_xlm_prophetnet",shape="record"];
	"transformers.models.deprecated.vit_hybrid" [label="<f0> Package| <f1> transformers.models.deprecated.vit_hybrid",shape="record"];
	"transformers.models.deprecated.vit_hybrid.image_processing_vit_hybrid" [label="<f0> SourceModule| <f1> transformers.models.deprecated.vit_hybrid.image_processing_vit_hybrid",shape="record"];
	"transformers.models.deprecated.vit_hybrid.modeling_vit_hybrid" [label="<f0> SourceModule| <f1> transformers.models.deprecated.vit_hybrid.modeling_vit_hybrid",shape="record"];
	"transformers.models.deprecated.vit_hybrid.configuration_vit_hybrid" [label="<f0> SourceModule| <f1> transformers.models.deprecated.vit_hybrid.configuration_vit_hybrid",shape="record"];
	"transformers.models.deprecated.van" [label="<f0> Package| <f1> transformers.models.deprecated.van",shape="record"];
	"transformers.models.deprecated.van.modeling_van" [label="<f0> SourceModule| <f1> transformers.models.deprecated.van.modeling_van",shape="record"];
	"transformers.models.deprecated.van.configuration_van" [label="<f0> SourceModule| <f1> transformers.models.deprecated.van.configuration_van",shape="record"];
	"transformers.models.deprecated.tvlt" [label="<f0> Package| <f1> transformers.models.deprecated.tvlt",shape="record"];
	"transformers.models.deprecated.tvlt.image_processing_tvlt" [label="<f0> SourceModule| <f1> transformers.models.deprecated.tvlt.image_processing_tvlt",shape="record"];
	"transformers.models.deprecated.tvlt.modeling_tvlt" [label="<f0> SourceModule| <f1> transformers.models.deprecated.tvlt.modeling_tvlt",shape="record"];
	"transformers.models.deprecated.tvlt.feature_extraction_tvlt" [label="<f0> SourceModule| <f1> transformers.models.deprecated.tvlt.feature_extraction_tvlt",shape="record"];
	"transformers.models.deprecated.tvlt.processing_tvlt" [label="<f0> SourceModule| <f1> transformers.models.deprecated.tvlt.processing_tvlt",shape="record"];
	"transformers.models.deprecated.tvlt.configuration_tvlt" [label="<f0> SourceModule| <f1> transformers.models.deprecated.tvlt.configuration_tvlt",shape="record"];
	"transformers.models.deprecated.transfo_xl" [label="<f0> Package| <f1> transformers.models.deprecated.transfo_xl",shape="record"];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl" [label="<f0> SourceModule| <f1> transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl",shape="record"];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl_utilities" [label="<f0> SourceModule| <f1> transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl_utilities",shape="record"];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl" [label="<f0> SourceModule| <f1> transformers.models.deprecated.transfo_xl.modeling_transfo_xl",shape="record"];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl_utilities" [label="<f0> SourceModule| <f1> transformers.models.deprecated.transfo_xl.modeling_transfo_xl_utilities",shape="record"];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" [label="<f0> SourceModule| <f1> transformers.models.deprecated.transfo_xl.tokenization_transfo_xl",shape="record"];
	"transformers.models.deprecated.transfo_xl.configuration_transfo_xl" [label="<f0> SourceModule| <f1> transformers.models.deprecated.transfo_xl.configuration_transfo_xl",shape="record"];
	"transformers.models.deprecated.trajectory_transformer" [label="<f0> Package| <f1> transformers.models.deprecated.trajectory_transformer",shape="record"];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" [label="<f0> SourceModule| <f1> transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer",shape="record"];
	"transformers.models.deprecated.trajectory_transformer.configuration_trajectory_transformer" [label="<f0> SourceModule| <f1> transformers.models.deprecated.trajectory_transformer.configuration_trajectory_transformer",shape="record"];
	"transformers.models.deprecated.tapex" [label="<f0> Package| <f1> transformers.models.deprecated.tapex",shape="record"];
	"transformers.models.deprecated.tapex.tokenization_tapex" [label="<f0> SourceModule| <f1> transformers.models.deprecated.tapex.tokenization_tapex",shape="record"];
	"transformers.models.deprecated.speech_to_text_2" [label="<f0> Package| <f1> transformers.models.deprecated.speech_to_text_2",shape="record"];
	"transformers.models.deprecated.speech_to_text_2.modeling_speech_to_text_2" [label="<f0> SourceModule| <f1> transformers.models.deprecated.speech_to_text_2.modeling_speech_to_text_2",shape="record"];
	"transformers.models.deprecated.speech_to_text_2.tokenization_speech_to_text_2" [label="<f0> SourceModule| <f1> transformers.models.deprecated.speech_to_text_2.tokenization_speech_to_text_2",shape="record"];
	"transformers.models.deprecated.speech_to_text_2.processing_speech_to_text_2" [label="<f0> SourceModule| <f1> transformers.models.deprecated.speech_to_text_2.processing_speech_to_text_2",shape="record"];
	"transformers.models.deprecated.speech_to_text_2.configuration_speech_to_text_2" [label="<f0> SourceModule| <f1> transformers.models.deprecated.speech_to_text_2.configuration_speech_to_text_2",shape="record"];
	"transformers.models.deprecated.retribert" [label="<f0> Package| <f1> transformers.models.deprecated.retribert",shape="record"];
	"transformers.models.deprecated.retribert.modeling_retribert" [label="<f0> SourceModule| <f1> transformers.models.deprecated.retribert.modeling_retribert",shape="record"];
	"transformers.models.deprecated.retribert.tokenization_retribert_fast" [label="<f0> SourceModule| <f1> transformers.models.deprecated.retribert.tokenization_retribert_fast",shape="record"];
	"transformers.models.deprecated.retribert.tokenization_retribert" [label="<f0> SourceModule| <f1> transformers.models.deprecated.retribert.tokenization_retribert",shape="record"];
	"transformers.models.deprecated.retribert.configuration_retribert" [label="<f0> SourceModule| <f1> transformers.models.deprecated.retribert.configuration_retribert",shape="record"];
	"transformers.models.deprecated.realm" [label="<f0> Package| <f1> transformers.models.deprecated.realm",shape="record"];
	"transformers.models.deprecated.realm.retrieval_realm" [label="<f0> SourceModule| <f1> transformers.models.deprecated.realm.retrieval_realm",shape="record"];
	"scann" [label="<f0> MissingModule| <f1> scann",shape="record"];
	"'tensorflow.compat'" [label="<f0> MissingModule| <f1> 'tensorflow.compat'",shape="record"];
	"transformers.models.deprecated.realm.modeling_realm" [label="<f0> SourceModule| <f1> transformers.models.deprecated.realm.modeling_realm",shape="record"];
	"transformers.models.deprecated.realm.tokenization_realm" [label="<f0> SourceModule| <f1> transformers.models.deprecated.realm.tokenization_realm",shape="record"];
	"transformers.models.deprecated.realm.configuration_realm" [label="<f0> SourceModule| <f1> transformers.models.deprecated.realm.configuration_realm",shape="record"];
	"transformers.models.deprecated.qdqbert" [label="<f0> Package| <f1> transformers.models.deprecated.qdqbert",shape="record"];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" [label="<f0> SourceModule| <f1> transformers.models.deprecated.qdqbert.modeling_qdqbert",shape="record"];
	"'pytorch_quantization.nn'" [label="<f0> MissingModule| <f1> 'pytorch_quantization.nn'",shape="record"];
	"pytorch_quantization" [label="<f0> MissingModule| <f1> pytorch_quantization",shape="record"];
	"transformers.models.deprecated.qdqbert.configuration_qdqbert" [label="<f0> SourceModule| <f1> transformers.models.deprecated.qdqbert.configuration_qdqbert",shape="record"];
	"transformers.models.deprecated.open_llama" [label="<f0> Package| <f1> transformers.models.deprecated.open_llama",shape="record"];
	"transformers.models.deprecated.open_llama.modeling_open_llama" [label="<f0> SourceModule| <f1> transformers.models.deprecated.open_llama.modeling_open_llama",shape="record"];
	"xformers" [label="<f0> MissingModule| <f1> xformers",shape="record"];
	"transformers.models.deprecated.open_llama.configuration_open_llama" [label="<f0> SourceModule| <f1> transformers.models.deprecated.open_llama.configuration_open_llama",shape="record"];
	"transformers.models.deprecated.nezha" [label="<f0> Package| <f1> transformers.models.deprecated.nezha",shape="record"];
	"transformers.models.deprecated.nezha.modeling_nezha" [label="<f0> SourceModule| <f1> transformers.models.deprecated.nezha.modeling_nezha",shape="record"];
	"transformers.models.deprecated.nezha.configuration_nezha" [label="<f0> SourceModule| <f1> transformers.models.deprecated.nezha.configuration_nezha",shape="record"];
	"transformers.models.deprecated.nat" [label="<f0> Package| <f1> transformers.models.deprecated.nat",shape="record"];
	"transformers.models.deprecated.nat.modeling_nat" [label="<f0> SourceModule| <f1> transformers.models.deprecated.nat.modeling_nat",shape="record"];
	"'natten.functional'" [label="<f0> MissingModule| <f1> 'natten.functional'",shape="record"];
	"transformers.models.deprecated.nat.configuration_nat" [label="<f0> SourceModule| <f1> transformers.models.deprecated.nat.configuration_nat",shape="record"];
	"transformers.models.deprecated.mmbt" [label="<f0> Package| <f1> transformers.models.deprecated.mmbt",shape="record"];
	"transformers.models.deprecated.mmbt.modeling_mmbt" [label="<f0> SourceModule| <f1> transformers.models.deprecated.mmbt.modeling_mmbt",shape="record"];
	"transformers.models.deprecated.mmbt.configuration_mmbt" [label="<f0> SourceModule| <f1> transformers.models.deprecated.mmbt.configuration_mmbt",shape="record"];
	"transformers.models.deprecated.mega" [label="<f0> Package| <f1> transformers.models.deprecated.mega",shape="record"];
	"transformers.models.deprecated.mega.modeling_mega" [label="<f0> SourceModule| <f1> transformers.models.deprecated.mega.modeling_mega",shape="record"];
	"transformers.models.deprecated.mega.configuration_mega" [label="<f0> SourceModule| <f1> transformers.models.deprecated.mega.configuration_mega",shape="record"];
	"transformers.models.deprecated.mctct" [label="<f0> Package| <f1> transformers.models.deprecated.mctct",shape="record"];
	"transformers.models.deprecated.mctct.modeling_mctct" [label="<f0> SourceModule| <f1> transformers.models.deprecated.mctct.modeling_mctct",shape="record"];
	"transformers.models.deprecated.mctct.processing_mctct" [label="<f0> SourceModule| <f1> transformers.models.deprecated.mctct.processing_mctct",shape="record"];
	"transformers.models.deprecated.mctct.feature_extraction_mctct" [label="<f0> SourceModule| <f1> transformers.models.deprecated.mctct.feature_extraction_mctct",shape="record"];
	"transformers.models.deprecated.mctct.configuration_mctct" [label="<f0> SourceModule| <f1> transformers.models.deprecated.mctct.configuration_mctct",shape="record"];
	"transformers.models.deprecated.jukebox" [label="<f0> Package| <f1> transformers.models.deprecated.jukebox",shape="record"];
	"transformers.models.deprecated.jukebox.modeling_jukebox" [label="<f0> SourceModule| <f1> transformers.models.deprecated.jukebox.modeling_jukebox",shape="record"];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" [label="<f0> SourceModule| <f1> transformers.models.deprecated.jukebox.tokenization_jukebox",shape="record"];
	"transformers.models.deprecated.jukebox.configuration_jukebox" [label="<f0> SourceModule| <f1> transformers.models.deprecated.jukebox.configuration_jukebox",shape="record"];
	"transformers.models.deprecated.graphormer" [label="<f0> Package| <f1> transformers.models.deprecated.graphormer",shape="record"];
	"transformers.models.deprecated.graphormer.modeling_graphormer" [label="<f0> SourceModule| <f1> transformers.models.deprecated.graphormer.modeling_graphormer",shape="record"];
	"transformers.models.deprecated.graphormer.configuration_graphormer" [label="<f0> SourceModule| <f1> transformers.models.deprecated.graphormer.configuration_graphormer",shape="record"];
	"transformers.models.deprecated.gptsan_japanese" [label="<f0> Package| <f1> transformers.models.deprecated.gptsan_japanese",shape="record"];
	"transformers.models.deprecated.gptsan_japanese.modeling_gptsan_japanese" [label="<f0> SourceModule| <f1> transformers.models.deprecated.gptsan_japanese.modeling_gptsan_japanese",shape="record"];
	"transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" [label="<f0> SourceModule| <f1> transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese",shape="record"];
	"transformers.models.deprecated.gptsan_japanese.configuration_gptsan_japanese" [label="<f0> SourceModule| <f1> transformers.models.deprecated.gptsan_japanese.configuration_gptsan_japanese",shape="record"];
	"transformers.models.deprecated.ernie_m" [label="<f0> Package| <f1> transformers.models.deprecated.ernie_m",shape="record"];
	"transformers.models.deprecated.ernie_m.modeling_ernie_m" [label="<f0> SourceModule| <f1> transformers.models.deprecated.ernie_m.modeling_ernie_m",shape="record"];
	"torch.tensor" [label="<f0> MissingModule| <f1> torch.tensor",shape="record"];
	"transformers.models.deprecated.ernie_m.tokenization_ernie_m" [label="<f0> SourceModule| <f1> transformers.models.deprecated.ernie_m.tokenization_ernie_m",shape="record"];
	"transformers.models.deprecated.ernie_m.configuration_ernie_m" [label="<f0> SourceModule| <f1> transformers.models.deprecated.ernie_m.configuration_ernie_m",shape="record"];
	"transformers.models.deprecated.efficientformer" [label="<f0> Package| <f1> transformers.models.deprecated.efficientformer",shape="record"];
	"transformers.models.deprecated.efficientformer.modeling_tf_efficientformer" [label="<f0> SourceModule| <f1> transformers.models.deprecated.efficientformer.modeling_tf_efficientformer",shape="record"];
	"transformers.models.deprecated.efficientformer.modeling_efficientformer" [label="<f0> SourceModule| <f1> transformers.models.deprecated.efficientformer.modeling_efficientformer",shape="record"];
	"transformers.models.deprecated.efficientformer.image_processing_efficientformer" [label="<f0> SourceModule| <f1> transformers.models.deprecated.efficientformer.image_processing_efficientformer",shape="record"];
	"transformers.models.deprecated.efficientformer.configuration_efficientformer" [label="<f0> SourceModule| <f1> transformers.models.deprecated.efficientformer.configuration_efficientformer",shape="record"];
	"transformers.models.deprecated.deta" [label="<f0> Package| <f1> transformers.models.deprecated.deta",shape="record"];
	"transformers.models.deprecated.deta.modeling_deta" [label="<f0> SourceModule| <f1> transformers.models.deprecated.deta.modeling_deta",shape="record"];
	"transformers.models.deprecated.deta.image_processing_deta" [label="<f0> SourceModule| <f1> transformers.models.deprecated.deta.image_processing_deta",shape="record"];
	"transformers.models.deprecated.deta.configuration_deta" [label="<f0> SourceModule| <f1> transformers.models.deprecated.deta.configuration_deta",shape="record"];
	"transformers.models.deit" [label="<f0> Package| <f1> transformers.models.deit",shape="record"];
	"transformers.models.deit.modeling_tf_deit" [label="<f0> SourceModule| <f1> transformers.models.deit.modeling_tf_deit",shape="record"];
	"transformers.models.deit.modeling_deit" [label="<f0> SourceModule| <f1> transformers.models.deit.modeling_deit",shape="record"];
	"transformers.models.deit.image_processing_deit" [label="<f0> SourceModule| <f1> transformers.models.deit.image_processing_deit",shape="record"];
	"transformers.models.deit.feature_extraction_deit" [label="<f0> SourceModule| <f1> transformers.models.deit.feature_extraction_deit",shape="record"];
	"transformers.models.deit.configuration_deit" [label="<f0> SourceModule| <f1> transformers.models.deit.configuration_deit",shape="record"];
	"transformers.models.deformable_detr" [label="<f0> Package| <f1> transformers.models.deformable_detr",shape="record"];
	"transformers.models.deformable_detr.modeling_deformable_detr" [label="<f0> SourceModule| <f1> transformers.models.deformable_detr.modeling_deformable_detr",shape="record"];
	"transformers.models.deformable_detr.image_processing_deformable_detr" [label="<f0> SourceModule| <f1> transformers.models.deformable_detr.image_processing_deformable_detr",shape="record"];
	"transformers.models.deformable_detr.feature_extraction_deformable_detr" [label="<f0> SourceModule| <f1> transformers.models.deformable_detr.feature_extraction_deformable_detr",shape="record"];
	"transformers.models.deformable_detr.configuration_deformable_detr" [label="<f0> SourceModule| <f1> transformers.models.deformable_detr.configuration_deformable_detr",shape="record"];
	"transformers.models.decision_transformer" [label="<f0> Package| <f1> transformers.models.decision_transformer",shape="record"];
	"transformers.models.decision_transformer.modeling_decision_transformer" [label="<f0> SourceModule| <f1> transformers.models.decision_transformer.modeling_decision_transformer",shape="record"];
	"transformers.models.decision_transformer.configuration_decision_transformer" [label="<f0> SourceModule| <f1> transformers.models.decision_transformer.configuration_decision_transformer",shape="record"];
	"transformers.models.deberta_v2" [label="<f0> Package| <f1> transformers.models.deberta_v2",shape="record"];
	"transformers.models.deberta_v2.modeling_deberta_v2" [label="<f0> SourceModule| <f1> transformers.models.deberta_v2.modeling_deberta_v2",shape="record"];
	"transformers.models.deberta_v2.modeling_tf_deberta_v2" [label="<f0> SourceModule| <f1> transformers.models.deberta_v2.modeling_tf_deberta_v2",shape="record"];
	"transformers.models.deberta_v2.tokenization_deberta_v2_fast" [label="<f0> SourceModule| <f1> transformers.models.deberta_v2.tokenization_deberta_v2_fast",shape="record"];
	"transformers.models.deberta_v2.tokenization_deberta_v2" [label="<f0> SourceModule| <f1> transformers.models.deberta_v2.tokenization_deberta_v2",shape="record"];
	"transformers.models.deberta_v2.configuration_deberta_v2" [label="<f0> SourceModule| <f1> transformers.models.deberta_v2.configuration_deberta_v2",shape="record"];
	"transformers.models.deberta" [label="<f0> Package| <f1> transformers.models.deberta",shape="record"];
	"transformers.models.deberta.modeling_tf_deberta" [label="<f0> SourceModule| <f1> transformers.models.deberta.modeling_tf_deberta",shape="record"];
	"transformers.models.deberta.modeling_deberta" [label="<f0> SourceModule| <f1> transformers.models.deberta.modeling_deberta",shape="record"];
	"transformers.models.deberta.tokenization_deberta_fast" [label="<f0> SourceModule| <f1> transformers.models.deberta.tokenization_deberta_fast",shape="record"];
	"transformers.models.deberta.tokenization_deberta" [label="<f0> SourceModule| <f1> transformers.models.deberta.tokenization_deberta",shape="record"];
	"transformers.models.deberta.configuration_deberta" [label="<f0> SourceModule| <f1> transformers.models.deberta.configuration_deberta",shape="record"];
	"transformers.models.dbrx" [label="<f0> Package| <f1> transformers.models.dbrx",shape="record"];
	"transformers.models.dbrx.modeling_dbrx" [label="<f0> SourceModule| <f1> transformers.models.dbrx.modeling_dbrx",shape="record"];
	"transformers.models.dbrx.configuration_dbrx" [label="<f0> SourceModule| <f1> transformers.models.dbrx.configuration_dbrx",shape="record"];
	"transformers.models.data2vec" [label="<f0> Package| <f1> transformers.models.data2vec",shape="record"];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" [label="<f0> SourceModule| <f1> transformers.models.data2vec.modeling_tf_data2vec_vision",shape="record"];
	"transformers.models.data2vec.modeling_data2vec_vision" [label="<f0> SourceModule| <f1> transformers.models.data2vec.modeling_data2vec_vision",shape="record"];
	"transformers.models.data2vec.modeling_data2vec_text" [label="<f0> SourceModule| <f1> transformers.models.data2vec.modeling_data2vec_text",shape="record"];
	"transformers.models.data2vec.modeling_data2vec_audio" [label="<f0> SourceModule| <f1> transformers.models.data2vec.modeling_data2vec_audio",shape="record"];
	"transformers.models.data2vec.configuration_data2vec_vision" [label="<f0> SourceModule| <f1> transformers.models.data2vec.configuration_data2vec_vision",shape="record"];
	"transformers.models.data2vec.configuration_data2vec_text" [label="<f0> SourceModule| <f1> transformers.models.data2vec.configuration_data2vec_text",shape="record"];
	"transformers.models.data2vec.configuration_data2vec_audio" [label="<f0> SourceModule| <f1> transformers.models.data2vec.configuration_data2vec_audio",shape="record"];
	"transformers.models.dac" [label="<f0> Package| <f1> transformers.models.dac",shape="record"];
	"transformers.models.dac.modeling_dac" [label="<f0> SourceModule| <f1> transformers.models.dac.modeling_dac",shape="record"];
	"transformers.models.dac.feature_extraction_dac" [label="<f0> SourceModule| <f1> transformers.models.dac.feature_extraction_dac",shape="record"];
	"transformers.models.dac.configuration_dac" [label="<f0> SourceModule| <f1> transformers.models.dac.configuration_dac",shape="record"];
	"transformers.models.cvt" [label="<f0> Package| <f1> transformers.models.cvt",shape="record"];
	"transformers.models.cvt.modeling_tf_cvt" [label="<f0> SourceModule| <f1> transformers.models.cvt.modeling_tf_cvt",shape="record"];
	"transformers.models.cvt.modeling_cvt" [label="<f0> SourceModule| <f1> transformers.models.cvt.modeling_cvt",shape="record"];
	"transformers.models.cvt.configuration_cvt" [label="<f0> SourceModule| <f1> transformers.models.cvt.configuration_cvt",shape="record"];
	"transformers.models.ctrl" [label="<f0> Package| <f1> transformers.models.ctrl",shape="record"];
	"transformers.models.ctrl.modeling_tf_ctrl" [label="<f0> SourceModule| <f1> transformers.models.ctrl.modeling_tf_ctrl",shape="record"];
	"transformers.models.ctrl.modeling_ctrl" [label="<f0> SourceModule| <f1> transformers.models.ctrl.modeling_ctrl",shape="record"];
	"transformers.models.ctrl.tokenization_ctrl" [label="<f0> SourceModule| <f1> transformers.models.ctrl.tokenization_ctrl",shape="record"];
	"transformers.models.ctrl.configuration_ctrl" [label="<f0> SourceModule| <f1> transformers.models.ctrl.configuration_ctrl",shape="record"];
	"transformers.models.cpmant" [label="<f0> Package| <f1> transformers.models.cpmant",shape="record"];
	"transformers.models.cpmant.modeling_cpmant" [label="<f0> SourceModule| <f1> transformers.models.cpmant.modeling_cpmant",shape="record"];
	"transformers.models.cpmant.tokenization_cpmant" [label="<f0> SourceModule| <f1> transformers.models.cpmant.tokenization_cpmant",shape="record"];
	"transformers.models.cpmant.configuration_cpmant" [label="<f0> SourceModule| <f1> transformers.models.cpmant.configuration_cpmant",shape="record"];
	"transformers.models.convnextv2" [label="<f0> Package| <f1> transformers.models.convnextv2",shape="record"];
	"transformers.models.convnextv2.modeling_tf_convnextv2" [label="<f0> SourceModule| <f1> transformers.models.convnextv2.modeling_tf_convnextv2",shape="record"];
	"transformers.models.convnextv2.modeling_convnextv2" [label="<f0> SourceModule| <f1> transformers.models.convnextv2.modeling_convnextv2",shape="record"];
	"transformers.models.convnextv2.configuration_convnextv2" [label="<f0> SourceModule| <f1> transformers.models.convnextv2.configuration_convnextv2",shape="record"];
	"transformers.models.convnext" [label="<f0> Package| <f1> transformers.models.convnext",shape="record"];
	"transformers.models.convnext.modeling_tf_convnext" [label="<f0> SourceModule| <f1> transformers.models.convnext.modeling_tf_convnext",shape="record"];
	"transformers.models.convnext.modeling_convnext" [label="<f0> SourceModule| <f1> transformers.models.convnext.modeling_convnext",shape="record"];
	"transformers.models.convnext.image_processing_convnext" [label="<f0> SourceModule| <f1> transformers.models.convnext.image_processing_convnext",shape="record"];
	"transformers.models.convnext.feature_extraction_convnext" [label="<f0> SourceModule| <f1> transformers.models.convnext.feature_extraction_convnext",shape="record"];
	"transformers.models.convnext.configuration_convnext" [label="<f0> SourceModule| <f1> transformers.models.convnext.configuration_convnext",shape="record"];
	"transformers.models.convbert" [label="<f0> Package| <f1> transformers.models.convbert",shape="record"];
	"transformers.models.convbert.modeling_tf_convbert" [label="<f0> SourceModule| <f1> transformers.models.convbert.modeling_tf_convbert",shape="record"];
	"transformers.models.convbert.modeling_convbert" [label="<f0> SourceModule| <f1> transformers.models.convbert.modeling_convbert",shape="record"];
	"transformers.models.convbert.tokenization_convbert_fast" [label="<f0> SourceModule| <f1> transformers.models.convbert.tokenization_convbert_fast",shape="record"];
	"transformers.models.convbert.tokenization_convbert" [label="<f0> SourceModule| <f1> transformers.models.convbert.tokenization_convbert",shape="record"];
	"transformers.models.convbert.configuration_convbert" [label="<f0> SourceModule| <f1> transformers.models.convbert.configuration_convbert",shape="record"];
	"transformers.models.conditional_detr" [label="<f0> Package| <f1> transformers.models.conditional_detr",shape="record"];
	"transformers.models.conditional_detr.modeling_conditional_detr" [label="<f0> SourceModule| <f1> transformers.models.conditional_detr.modeling_conditional_detr",shape="record"];
	"transformers.models.conditional_detr.image_processing_conditional_detr" [label="<f0> SourceModule| <f1> transformers.models.conditional_detr.image_processing_conditional_detr",shape="record"];
	"transformers.models.conditional_detr.feature_extraction_conditional_detr" [label="<f0> SourceModule| <f1> transformers.models.conditional_detr.feature_extraction_conditional_detr",shape="record"];
	"transformers.models.conditional_detr.configuration_conditional_detr" [label="<f0> SourceModule| <f1> transformers.models.conditional_detr.configuration_conditional_detr",shape="record"];
	"transformers.models.cohere" [label="<f0> Package| <f1> transformers.models.cohere",shape="record"];
	"transformers.models.cohere.modeling_cohere" [label="<f0> SourceModule| <f1> transformers.models.cohere.modeling_cohere",shape="record"];
	"transformers.models.cohere.tokenization_cohere_fast" [label="<f0> SourceModule| <f1> transformers.models.cohere.tokenization_cohere_fast",shape="record"];
	"transformers.models.cohere.configuration_cohere" [label="<f0> SourceModule| <f1> transformers.models.cohere.configuration_cohere",shape="record"];
	"transformers.models.codegen" [label="<f0> Package| <f1> transformers.models.codegen",shape="record"];
	"transformers.models.codegen.modeling_codegen" [label="<f0> SourceModule| <f1> transformers.models.codegen.modeling_codegen",shape="record"];
	"transformers.models.codegen.tokenization_codegen_fast" [label="<f0> SourceModule| <f1> transformers.models.codegen.tokenization_codegen_fast",shape="record"];
	"transformers.models.codegen.tokenization_codegen" [label="<f0> SourceModule| <f1> transformers.models.codegen.tokenization_codegen",shape="record"];
	"transformers.models.codegen.configuration_codegen" [label="<f0> SourceModule| <f1> transformers.models.codegen.configuration_codegen",shape="record"];
	"transformers.models.clvp" [label="<f0> Package| <f1> transformers.models.clvp",shape="record"];
	"transformers.models.clvp.modeling_clvp" [label="<f0> SourceModule| <f1> transformers.models.clvp.modeling_clvp",shape="record"];
	"transformers.models.clvp.tokenization_clvp" [label="<f0> SourceModule| <f1> transformers.models.clvp.tokenization_clvp",shape="record"];
	"transformers.models.clvp.number_normalizer" [label="<f0> SourceModule| <f1> transformers.models.clvp.number_normalizer",shape="record"];
	"transformers.models.clvp.processing_clvp" [label="<f0> SourceModule| <f1> transformers.models.clvp.processing_clvp",shape="record"];
	"transformers.models.clvp.feature_extraction_clvp" [label="<f0> SourceModule| <f1> transformers.models.clvp.feature_extraction_clvp",shape="record"];
	"transformers.models.clvp.configuration_clvp" [label="<f0> SourceModule| <f1> transformers.models.clvp.configuration_clvp",shape="record"];
	"transformers.models.clipseg" [label="<f0> Package| <f1> transformers.models.clipseg",shape="record"];
	"transformers.models.clipseg.modeling_clipseg" [label="<f0> SourceModule| <f1> transformers.models.clipseg.modeling_clipseg",shape="record"];
	"transformers.models.clipseg.processing_clipseg" [label="<f0> SourceModule| <f1> transformers.models.clipseg.processing_clipseg",shape="record"];
	"transformers.models.clipseg.configuration_clipseg" [label="<f0> SourceModule| <f1> transformers.models.clipseg.configuration_clipseg",shape="record"];
	"transformers.models.clip" [label="<f0> Package| <f1> transformers.models.clip",shape="record"];
	"transformers.models.clip.image_processing_clip" [label="<f0> SourceModule| <f1> transformers.models.clip.image_processing_clip",shape="record"];
	"transformers.models.clip.feature_extraction_clip" [label="<f0> SourceModule| <f1> transformers.models.clip.feature_extraction_clip",shape="record"];
	"transformers.models.clip.tokenization_clip_fast" [label="<f0> SourceModule| <f1> transformers.models.clip.tokenization_clip_fast",shape="record"];
	"transformers.models.clip.tokenization_clip" [label="<f0> SourceModule| <f1> transformers.models.clip.tokenization_clip",shape="record"];
	"transformers.models.clip.processing_clip" [label="<f0> SourceModule| <f1> transformers.models.clip.processing_clip",shape="record"];
	"transformers.models.clap" [label="<f0> Package| <f1> transformers.models.clap",shape="record"];
	"transformers.models.clap.modeling_clap" [label="<f0> SourceModule| <f1> transformers.models.clap.modeling_clap",shape="record"];
	"transformers.models.clap.feature_extraction_clap" [label="<f0> SourceModule| <f1> transformers.models.clap.feature_extraction_clap",shape="record"];
	"transformers.models.clap.processing_clap" [label="<f0> SourceModule| <f1> transformers.models.clap.processing_clap",shape="record"];
	"transformers.models.clap.configuration_clap" [label="<f0> SourceModule| <f1> transformers.models.clap.configuration_clap",shape="record"];
	"transformers.models.chinese_clip" [label="<f0> Package| <f1> transformers.models.chinese_clip",shape="record"];
	"transformers.models.chinese_clip.modeling_chinese_clip" [label="<f0> SourceModule| <f1> transformers.models.chinese_clip.modeling_chinese_clip",shape="record"];
	"transformers.models.chinese_clip.feature_extraction_chinese_clip" [label="<f0> SourceModule| <f1> transformers.models.chinese_clip.feature_extraction_chinese_clip",shape="record"];
	"transformers.models.chinese_clip.image_processing_chinese_clip" [label="<f0> SourceModule| <f1> transformers.models.chinese_clip.image_processing_chinese_clip",shape="record"];
	"transformers.models.chinese_clip.processing_chinese_clip" [label="<f0> SourceModule| <f1> transformers.models.chinese_clip.processing_chinese_clip",shape="record"];
	"transformers.models.chameleon" [label="<f0> Package| <f1> transformers.models.chameleon",shape="record"];
	"transformers.models.chameleon.image_processing_chameleon" [label="<f0> SourceModule| <f1> transformers.models.chameleon.image_processing_chameleon",shape="record"];
	"transformers.models.chameleon.modeling_chameleon" [label="<f0> SourceModule| <f1> transformers.models.chameleon.modeling_chameleon",shape="record"];
	"transformers.models.chameleon.processing_chameleon" [label="<f0> SourceModule| <f1> transformers.models.chameleon.processing_chameleon",shape="record"];
	"transformers.models.chameleon.configuration_chameleon" [label="<f0> SourceModule| <f1> transformers.models.chameleon.configuration_chameleon",shape="record"];
	"transformers.models.canine" [label="<f0> Package| <f1> transformers.models.canine",shape="record"];
	"transformers.models.canine.modeling_canine" [label="<f0> SourceModule| <f1> transformers.models.canine.modeling_canine",shape="record"];
	"transformers.models.canine.tokenization_canine" [label="<f0> SourceModule| <f1> transformers.models.canine.tokenization_canine",shape="record"];
	"transformers.models.canine.configuration_canine" [label="<f0> SourceModule| <f1> transformers.models.canine.configuration_canine",shape="record"];
	"transformers.models.camembert" [label="<f0> Package| <f1> transformers.models.camembert",shape="record"];
	"transformers.models.camembert.modeling_tf_camembert" [label="<f0> SourceModule| <f1> transformers.models.camembert.modeling_tf_camembert",shape="record"];
	"transformers.models.camembert.modeling_camembert" [label="<f0> SourceModule| <f1> transformers.models.camembert.modeling_camembert",shape="record"];
	"transformers.models.camembert.tokenization_camembert_fast" [label="<f0> SourceModule| <f1> transformers.models.camembert.tokenization_camembert_fast",shape="record"];
	"transformers.models.camembert.tokenization_camembert" [label="<f0> SourceModule| <f1> transformers.models.camembert.tokenization_camembert",shape="record"];
	"transformers.models.camembert.configuration_camembert" [label="<f0> SourceModule| <f1> transformers.models.camembert.configuration_camembert",shape="record"];
	"transformers.models.byt5" [label="<f0> Package| <f1> transformers.models.byt5",shape="record"];
	"transformers.models.byt5.tokenization_byt5" [label="<f0> SourceModule| <f1> transformers.models.byt5.tokenization_byt5",shape="record"];
	"transformers.models.bros" [label="<f0> Package| <f1> transformers.models.bros",shape="record"];
	"transformers.models.bros.modeling_bros" [label="<f0> SourceModule| <f1> transformers.models.bros.modeling_bros",shape="record"];
	"transformers.models.bros.processing_bros" [label="<f0> SourceModule| <f1> transformers.models.bros.processing_bros",shape="record"];
	"transformers.models.bros.configuration_bros" [label="<f0> SourceModule| <f1> transformers.models.bros.configuration_bros",shape="record"];
	"transformers.models.bridgetower" [label="<f0> Package| <f1> transformers.models.bridgetower",shape="record"];
	"transformers.models.bridgetower.modeling_bridgetower" [label="<f0> SourceModule| <f1> transformers.models.bridgetower.modeling_bridgetower",shape="record"];
	"transformers.models.bridgetower.image_processing_bridgetower" [label="<f0> SourceModule| <f1> transformers.models.bridgetower.image_processing_bridgetower",shape="record"];
	"transformers.models.bridgetower.processing_bridgetower" [label="<f0> SourceModule| <f1> transformers.models.bridgetower.processing_bridgetower",shape="record"];
	"transformers.models.bridgetower.configuration_bridgetower" [label="<f0> SourceModule| <f1> transformers.models.bridgetower.configuration_bridgetower",shape="record"];
	"transformers.models.bloom" [label="<f0> Package| <f1> transformers.models.bloom",shape="record"];
	"transformers.models.bloom.modeling_flax_bloom" [label="<f0> SourceModule| <f1> transformers.models.bloom.modeling_flax_bloom",shape="record"];
	"transformers.models.bloom.modeling_bloom" [label="<f0> SourceModule| <f1> transformers.models.bloom.modeling_bloom",shape="record"];
	"transformers.models.bloom.tokenization_bloom_fast" [label="<f0> SourceModule| <f1> transformers.models.bloom.tokenization_bloom_fast",shape="record"];
	"transformers.models.bloom.configuration_bloom" [label="<f0> SourceModule| <f1> transformers.models.bloom.configuration_bloom",shape="record"];
	"transformers.models.blip_2" [label="<f0> Package| <f1> transformers.models.blip_2",shape="record"];
	"transformers.models.blip_2.modeling_blip_2" [label="<f0> SourceModule| <f1> transformers.models.blip_2.modeling_blip_2",shape="record"];
	"transformers.models.blip_2.processing_blip_2" [label="<f0> SourceModule| <f1> transformers.models.blip_2.processing_blip_2",shape="record"];
	"transformers.models.blip_2.configuration_blip_2" [label="<f0> SourceModule| <f1> transformers.models.blip_2.configuration_blip_2",shape="record"];
	"transformers.models.blip" [label="<f0> Package| <f1> transformers.models.blip",shape="record"];
	"transformers.models.blip.modeling_tf_blip" [label="<f0> SourceModule| <f1> transformers.models.blip.modeling_tf_blip",shape="record"];
	"transformers.models.blip.modeling_tf_blip_text" [label="<f0> SourceModule| <f1> transformers.models.blip.modeling_tf_blip_text",shape="record"];
	"transformers.models.blip.modeling_blip" [label="<f0> SourceModule| <f1> transformers.models.blip.modeling_blip",shape="record"];
	"transformers.models.blip.modeling_blip_text" [label="<f0> SourceModule| <f1> transformers.models.blip.modeling_blip_text",shape="record"];
	"transformers.models.blip.image_processing_blip" [label="<f0> SourceModule| <f1> transformers.models.blip.image_processing_blip",shape="record"];
	"transformers.models.blip.processing_blip" [label="<f0> SourceModule| <f1> transformers.models.blip.processing_blip",shape="record"];
	"transformers.models.blip.configuration_blip" [label="<f0> SourceModule| <f1> transformers.models.blip.configuration_blip",shape="record"];
	"transformers.models.blenderbot_small" [label="<f0> Package| <f1> transformers.models.blenderbot_small",shape="record"];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" [label="<f0> SourceModule| <f1> transformers.models.blenderbot_small.modeling_flax_blenderbot_small",shape="record"];
	"transformers.models.blenderbot_small.modeling_tf_blenderbot_small" [label="<f0> SourceModule| <f1> transformers.models.blenderbot_small.modeling_tf_blenderbot_small",shape="record"];
	"transformers.models.blenderbot_small.modeling_blenderbot_small" [label="<f0> SourceModule| <f1> transformers.models.blenderbot_small.modeling_blenderbot_small",shape="record"];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small_fast" [label="<f0> SourceModule| <f1> transformers.models.blenderbot_small.tokenization_blenderbot_small_fast",shape="record"];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small" [label="<f0> SourceModule| <f1> transformers.models.blenderbot_small.tokenization_blenderbot_small",shape="record"];
	"transformers.models.blenderbot_small.configuration_blenderbot_small" [label="<f0> SourceModule| <f1> transformers.models.blenderbot_small.configuration_blenderbot_small",shape="record"];
	"transformers.models.blenderbot" [label="<f0> Package| <f1> transformers.models.blenderbot",shape="record"];
	"transformers.models.blenderbot.modeling_flax_blenderbot" [label="<f0> SourceModule| <f1> transformers.models.blenderbot.modeling_flax_blenderbot",shape="record"];
	"transformers.models.blenderbot.modeling_tf_blenderbot" [label="<f0> SourceModule| <f1> transformers.models.blenderbot.modeling_tf_blenderbot",shape="record"];
	"transformers.models.blenderbot.modeling_blenderbot" [label="<f0> SourceModule| <f1> transformers.models.blenderbot.modeling_blenderbot",shape="record"];
	"transformers.models.blenderbot.tokenization_blenderbot_fast" [label="<f0> SourceModule| <f1> transformers.models.blenderbot.tokenization_blenderbot_fast",shape="record"];
	"transformers.models.blenderbot.tokenization_blenderbot" [label="<f0> SourceModule| <f1> transformers.models.blenderbot.tokenization_blenderbot",shape="record"];
	"transformers.models.blenderbot.configuration_blenderbot" [label="<f0> SourceModule| <f1> transformers.models.blenderbot.configuration_blenderbot",shape="record"];
	"transformers.models.bit" [label="<f0> Package| <f1> transformers.models.bit",shape="record"];
	"transformers.models.bit.image_processing_bit" [label="<f0> SourceModule| <f1> transformers.models.bit.image_processing_bit",shape="record"];
	"transformers.models.bit.modeling_bit" [label="<f0> SourceModule| <f1> transformers.models.bit.modeling_bit",shape="record"];
	"transformers.models.bit.configuration_bit" [label="<f0> SourceModule| <f1> transformers.models.bit.configuration_bit",shape="record"];
	"transformers.models.biogpt" [label="<f0> Package| <f1> transformers.models.biogpt",shape="record"];
	"transformers.models.biogpt.modeling_biogpt" [label="<f0> SourceModule| <f1> transformers.models.biogpt.modeling_biogpt",shape="record"];
	"transformers.models.biogpt.tokenization_biogpt" [label="<f0> SourceModule| <f1> transformers.models.biogpt.tokenization_biogpt",shape="record"];
	"transformers.models.biogpt.configuration_biogpt" [label="<f0> SourceModule| <f1> transformers.models.biogpt.configuration_biogpt",shape="record"];
	"transformers.models.bigbird_pegasus" [label="<f0> Package| <f1> transformers.models.bigbird_pegasus",shape="record"];
	"transformers.models.bigbird_pegasus.modeling_bigbird_pegasus" [label="<f0> SourceModule| <f1> transformers.models.bigbird_pegasus.modeling_bigbird_pegasus",shape="record"];
	"transformers.models.bigbird_pegasus.configuration_bigbird_pegasus" [label="<f0> SourceModule| <f1> transformers.models.bigbird_pegasus.configuration_bigbird_pegasus",shape="record"];
	"transformers.models.big_bird" [label="<f0> Package| <f1> transformers.models.big_bird",shape="record"];
	"transformers.models.big_bird.modeling_flax_big_bird" [label="<f0> SourceModule| <f1> transformers.models.big_bird.modeling_flax_big_bird",shape="record"];
	"transformers.models.big_bird.modeling_big_bird" [label="<f0> SourceModule| <f1> transformers.models.big_bird.modeling_big_bird",shape="record"];
	"transformers.models.big_bird.tokenization_big_bird_fast" [label="<f0> SourceModule| <f1> transformers.models.big_bird.tokenization_big_bird_fast",shape="record"];
	"transformers.models.big_bird.tokenization_big_bird" [label="<f0> SourceModule| <f1> transformers.models.big_bird.tokenization_big_bird",shape="record"];
	"transformers.models.big_bird.configuration_big_bird" [label="<f0> SourceModule| <f1> transformers.models.big_bird.configuration_big_bird",shape="record"];
	"transformers.models.bertweet" [label="<f0> Package| <f1> transformers.models.bertweet",shape="record"];
	"transformers.models.bertweet.tokenization_bertweet" [label="<f0> SourceModule| <f1> transformers.models.bertweet.tokenization_bertweet",shape="record"];
	"emoji" [label="<f0> MissingModule| <f1> emoji",shape="record"];
	"transformers.models.bert_japanese" [label="<f0> Package| <f1> transformers.models.bert_japanese",shape="record"];
	"transformers.models.bert_japanese.tokenization_bert_japanese" [label="<f0> SourceModule| <f1> transformers.models.bert_japanese.tokenization_bert_japanese",shape="record"];
	"rhoknp" [label="<f0> MissingModule| <f1> rhoknp",shape="record"];
	"sudachipy" [label="<f0> MissingModule| <f1> sudachipy",shape="record"];
	"unidic" [label="<f0> MissingModule| <f1> unidic",shape="record"];
	"unidic_lite" [label="<f0> MissingModule| <f1> unidic_lite",shape="record"];
	"ipadic" [label="<f0> MissingModule| <f1> ipadic",shape="record"];
	"fugashi" [label="<f0> MissingModule| <f1> fugashi",shape="record"];
	"transformers.models.bert_generation" [label="<f0> Package| <f1> transformers.models.bert_generation",shape="record"];
	"transformers.models.bert_generation.modeling_bert_generation" [label="<f0> SourceModule| <f1> transformers.models.bert_generation.modeling_bert_generation",shape="record"];
	"tensorflow_hub" [label="<f0> MissingModule| <f1> tensorflow_hub",shape="record"];
	"transformers.models.bert_generation.tokenization_bert_generation" [label="<f0> SourceModule| <f1> transformers.models.bert_generation.tokenization_bert_generation",shape="record"];
	"transformers.models.bert_generation.configuration_bert_generation" [label="<f0> SourceModule| <f1> transformers.models.bert_generation.configuration_bert_generation",shape="record"];
	"transformers.models.bert" [label="<f0> Package| <f1> transformers.models.bert",shape="record"];
	"transformers.models.bert.modeling_flax_bert" [label="<f0> SourceModule| <f1> transformers.models.bert.modeling_flax_bert",shape="record"];
	"transformers.models.bert.tokenization_bert_tf" [label="<f0> SourceModule| <f1> transformers.models.bert.tokenization_bert_tf",shape="record"];
	"transformers.models.beit" [label="<f0> Package| <f1> transformers.models.beit",shape="record"];
	"transformers.models.beit.modeling_flax_beit" [label="<f0> SourceModule| <f1> transformers.models.beit.modeling_flax_beit",shape="record"];
	"transformers.models.beit.modeling_beit" [label="<f0> SourceModule| <f1> transformers.models.beit.modeling_beit",shape="record"];
	"transformers.models.beit.image_processing_beit" [label="<f0> SourceModule| <f1> transformers.models.beit.image_processing_beit",shape="record"];
	"transformers.models.beit.feature_extraction_beit" [label="<f0> SourceModule| <f1> transformers.models.beit.feature_extraction_beit",shape="record"];
	"transformers.models.beit.configuration_beit" [label="<f0> SourceModule| <f1> transformers.models.beit.configuration_beit",shape="record"];
	"transformers.models.bart" [label="<f0> Package| <f1> transformers.models.bart",shape="record"];
	"transformers.models.bart.modeling_flax_bart" [label="<f0> SourceModule| <f1> transformers.models.bart.modeling_flax_bart",shape="record"];
	"transformers.models.bart.modeling_tf_bart" [label="<f0> SourceModule| <f1> transformers.models.bart.modeling_tf_bart",shape="record"];
	"transformers.models.bart.modeling_bart" [label="<f0> SourceModule| <f1> transformers.models.bart.modeling_bart",shape="record"];
	"transformers.models.bart.tokenization_bart_fast" [label="<f0> SourceModule| <f1> transformers.models.bart.tokenization_bart_fast",shape="record"];
	"transformers.models.bart.tokenization_bart" [label="<f0> SourceModule| <f1> transformers.models.bart.tokenization_bart",shape="record"];
	"transformers.models.bart.configuration_bart" [label="<f0> SourceModule| <f1> transformers.models.bart.configuration_bart",shape="record"];
	"transformers.models.bark" [label="<f0> Package| <f1> transformers.models.bark",shape="record"];
	"transformers.models.bark.modeling_bark" [label="<f0> SourceModule| <f1> transformers.models.bark.modeling_bark",shape="record"];
	"transformers.models.bark.generation_configuration_bark" [label="<f0> SourceModule| <f1> transformers.models.bark.generation_configuration_bark",shape="record"];
	"transformers.models.bark.processing_bark" [label="<f0> SourceModule| <f1> transformers.models.bark.processing_bark",shape="record"];
	"transformers.models.bark.configuration_bark" [label="<f0> SourceModule| <f1> transformers.models.bark.configuration_bark",shape="record"];
	"transformers.models.autoformer" [label="<f0> Package| <f1> transformers.models.autoformer",shape="record"];
	"transformers.models.autoformer.modeling_autoformer" [label="<f0> SourceModule| <f1> transformers.models.autoformer.modeling_autoformer",shape="record"];
	"transformers.models.autoformer.configuration_autoformer" [label="<f0> SourceModule| <f1> transformers.models.autoformer.configuration_autoformer",shape="record"];
	"transformers.models.auto" [label="<f0> Package| <f1> transformers.models.auto",shape="record"];
	"transformers.models.audio_spectrogram_transformer" [label="<f0> Package| <f1> transformers.models.audio_spectrogram_transformer",shape="record"];
	"transformers.models.audio_spectrogram_transformer.modeling_audio_spectrogram_transformer" [label="<f0> SourceModule| <f1> transformers.models.audio_spectrogram_transformer.modeling_audio_spectrogram_transformer",shape="record"];
	"transformers.models.audio_spectrogram_transformer.feature_extraction_audio_spectrogram_transformer" [label="<f0> SourceModule| <f1> transformers.models.audio_spectrogram_transformer.feature_extraction_audio_spectrogram_transformer",shape="record"];
	"transformers.models.audio_spectrogram_transformer.configuration_audio_spectrogram_transformer" [label="<f0> SourceModule| <f1> transformers.models.audio_spectrogram_transformer.configuration_audio_spectrogram_transformer",shape="record"];
	"transformers.models.altclip" [label="<f0> Package| <f1> transformers.models.altclip",shape="record"];
	"transformers.models.altclip.processing_altclip" [label="<f0> SourceModule| <f1> transformers.models.altclip.processing_altclip",shape="record"];
	"transformers.models.altclip.modeling_altclip" [label="<f0> SourceModule| <f1> transformers.models.altclip.modeling_altclip",shape="record"];
	"transformers.models.altclip.configuration_altclip" [label="<f0> SourceModule| <f1> transformers.models.altclip.configuration_altclip",shape="record"];
	"transformers.models.align" [label="<f0> Package| <f1> transformers.models.align",shape="record"];
	"transformers.models.align.processing_align" [label="<f0> SourceModule| <f1> transformers.models.align.processing_align",shape="record"];
	"transformers.models.align.modeling_align" [label="<f0> SourceModule| <f1> transformers.models.align.modeling_align",shape="record"];
	"transformers.models.align.configuration_align" [label="<f0> SourceModule| <f1> transformers.models.align.configuration_align",shape="record"];
	"transformers.models.albert" [label="<f0> Package| <f1> transformers.models.albert",shape="record"];
	"transformers.models.albert.tokenization_albert_fast" [label="<f0> SourceModule| <f1> transformers.models.albert.tokenization_albert_fast",shape="record"];
	"transformers.models.albert.tokenization_albert" [label="<f0> SourceModule| <f1> transformers.models.albert.tokenization_albert",shape="record"];
	"transformers.models.albert.modeling_tf_albert" [label="<f0> SourceModule| <f1> transformers.models.albert.modeling_tf_albert",shape="record"];
	"transformers.models.albert.modeling_flax_albert" [label="<f0> SourceModule| <f1> transformers.models.albert.modeling_flax_albert",shape="record"];
	"transformers.models.albert.modeling_albert" [label="<f0> SourceModule| <f1> transformers.models.albert.modeling_albert",shape="record"];
	"transformers.models.albert.configuration_albert" [label="<f0> SourceModule| <f1> transformers.models.albert.configuration_albert",shape="record"];
	"transformers.modeling_tf_pytorch_utils" [label="<f0> SourceModule| <f1> transformers.modeling_tf_pytorch_utils",shape="record"];
	"transformers.modelcard" [label="<f0> SourceModule| <f1> transformers.modelcard",shape="record"];
	"transformers.integrations" [label="<f0> Package| <f1> transformers.integrations",shape="record"];
	"transformers.integrations.quanto" [label="<f0> SourceModule| <f1> transformers.integrations.quanto",shape="record"];
	"transformers.integrations.peft" [label="<f0> SourceModule| <f1> transformers.integrations.peft",shape="record"];
	"transformers.integrations.integration_utils" [label="<f0> SourceModule| <f1> transformers.integrations.integration_utils",shape="record"];
	"'dvclive.utils'" [label="<f0> MissingModule| <f1> 'dvclive.utils'",shape="record"];
	"'dvclive.plots'" [label="<f0> MissingModule| <f1> 'dvclive.plots'",shape="record"];
	"dvclive" [label="<f0> MissingModule| <f1> dvclive",shape="record"];
	"flytekitplugins" [label="<f0> MissingModule| <f1> flytekitplugins",shape="record"];
	"flytekit" [label="<f0> MissingModule| <f1> flytekit",shape="record"];
	"clearml" [label="<f0> MissingModule| <f1> clearml",shape="record"];
	"codecarbon" [label="<f0> MissingModule| <f1> codecarbon",shape="record"];
	"'neptune.utils'" [label="<f0> MissingModule| <f1> 'neptune.utils'",shape="record"];
	"'neptune.exceptions'" [label="<f0> MissingModule| <f1> 'neptune.exceptions'",shape="record"];
	"'neptune.new'" [label="<f0> MissingModule| <f1> 'neptune.new'",shape="record"];
	"'neptune.internal'" [label="<f0> MissingModule| <f1> 'neptune.internal'",shape="record"];
	"neptune" [label="<f0> MissingModule| <f1> neptune",shape="record"];
	"dagshub" [label="<f0> MissingModule| <f1> dagshub",shape="record"];
	"mlflow" [label="<f0> MissingModule| <f1> mlflow",shape="record"];
	"azureml" [label="<f0> MissingModule| <f1> azureml",shape="record"];
	"'wandb.sdk'" [label="<f0> MissingModule| <f1> 'wandb.sdk'",shape="record"];
	"sigopt" [label="<f0> MissingModule| <f1> sigopt",shape="record"];
	"'datasets.load'" [label="<f0> MissingModule| <f1> 'datasets.load'",shape="record"];
	"'ray.tune'" [label="<f0> MissingModule| <f1> 'ray.tune'",shape="record"];
	"comet_ml" [label="<f0> MissingModule| <f1> comet_ml",shape="record"];
	"transformers.integrations.hqq" [label="<f0> SourceModule| <f1> transformers.integrations.hqq",shape="record"];
	"transformers.integrations.fbgemm_fp8" [label="<f0> SourceModule| <f1> transformers.integrations.fbgemm_fp8",shape="record"];
	"fbgemm_gpu" [label="<f0> MissingModule| <f1> fbgemm_gpu",shape="record"];
	"transformers.integrations.eetq" [label="<f0> SourceModule| <f1> transformers.integrations.eetq",shape="record"];
	"transformers.integrations.bitsandbytes" [label="<f0> SourceModule| <f1> transformers.integrations.bitsandbytes",shape="record"];
	"transformers.integrations.bitnet" [label="<f0> SourceModule| <f1> transformers.integrations.bitnet",shape="record"];
	"transformers.integrations.awq" [label="<f0> SourceModule| <f1> transformers.integrations.awq",shape="record"];
	"'awq.quantize'" [label="<f0> MissingModule| <f1> 'awq.quantize'",shape="record"];
	"'awq.modules'" [label="<f0> MissingModule| <f1> 'awq.modules'",shape="record"];
	"awq" [label="<f0> MissingModule| <f1> awq",shape="record"];
	"transformers.integrations.aqlm" [label="<f0> SourceModule| <f1> transformers.integrations.aqlm",shape="record"];
	"aqlm" [label="<f0> MissingModule| <f1> aqlm",shape="record"];
	"transformers.hf_argparser" [label="<f0> SourceModule| <f1> transformers.hf_argparser",shape="record"];
	"transformers.generation" [label="<f0> Package| <f1> transformers.generation",shape="record"];
	"transformers.generation.flax_utils" [label="<f0> SourceModule| <f1> transformers.generation.flax_utils",shape="record"];
	"transformers.generation.tf_utils" [label="<f0> SourceModule| <f1> transformers.generation.tf_utils",shape="record"];
	"transformers.generation.watermarking" [label="<f0> SourceModule| <f1> transformers.generation.watermarking",shape="record"];
	"transformers.generation.utils" [label="<f0> SourceModule| <f1> transformers.generation.utils",shape="record"];
	"transformers.generation.candidate_generator" [label="<f0> SourceModule| <f1> transformers.generation.candidate_generator",shape="record"];
	"transformers.generation.beam_search" [label="<f0> SourceModule| <f1> transformers.generation.beam_search",shape="record"];
	"transformers.generation.beam_constraints" [label="<f0> SourceModule| <f1> transformers.generation.beam_constraints",shape="record"];
	"transformers.feature_extraction_utils" [label="<f0> SourceModule| <f1> transformers.feature_extraction_utils",shape="record"];
	"transformers.feature_extraction_sequence_utils" [label="<f0> SourceModule| <f1> transformers.feature_extraction_sequence_utils",shape="record"];
	"transformers.data.data_collator" [label="<f0> SourceModule| <f1> transformers.data.data_collator",shape="record"];
	"transformers.data" [label="<f0> Package| <f1> transformers.data",shape="record"];
	"transformers.data.metrics" [label="<f0> Package| <f1> transformers.data.metrics",shape="record"];
	"sklearn" [label="<f0> MissingModule| <f1> sklearn",shape="record"];
	"transformers.configuration_utils" [label="<f0> SourceModule| <f1> transformers.configuration_utils",shape="record"];
	"transformers.agents" [label="<f0> Package| <f1> transformers.agents",shape="record"];
	"transformers.agents.translation" [label="<f0> SourceModule| <f1> transformers.agents.translation",shape="record"];
	"transformers.agents.text_to_speech" [label="<f0> SourceModule| <f1> transformers.agents.text_to_speech",shape="record"];
	"transformers.agents.speech_to_text" [label="<f0> SourceModule| <f1> transformers.agents.speech_to_text",shape="record"];
	"transformers.agents.search" [label="<f0> SourceModule| <f1> transformers.agents.search",shape="record"];
	"markdownify" [label="<f0> MissingModule| <f1> markdownify",shape="record"];
	"duckduckgo_search" [label="<f0> MissingModule| <f1> duckduckgo_search",shape="record"];
	"transformers.agents.image_question_answering" [label="<f0> SourceModule| <f1> transformers.agents.image_question_answering",shape="record"];
	"transformers.agents.document_question_answering" [label="<f0> SourceModule| <f1> transformers.agents.document_question_answering",shape="record"];
	"transformers.agents.default_tools" [label="<f0> SourceModule| <f1> transformers.agents.default_tools",shape="record"];
	"transformers.agents.python_interpreter" [label="<f0> SourceModule| <f1> transformers.agents.python_interpreter",shape="record"];
	"transformers.agents.tools" [label="<f0> SourceModule| <f1> transformers.agents.tools",shape="record"];
	"transformers.agents.agent_types" [label="<f0> SourceModule| <f1> transformers.agents.agent_types",shape="record"];
	"soundfile" [label="<f0> MissingModule| <f1> soundfile",shape="record"];
	"transformers.agents.monitoring" [label="<f0> SourceModule| <f1> transformers.agents.monitoring",shape="record"];
	"transformers.agents.llm_engine" [label="<f0> SourceModule| <f1> transformers.agents.llm_engine",shape="record"];
	"transformers.agents.agents" [label="<f0> SourceModule| <f1> transformers.agents.agents",shape="record"];
	"transformers.agents.prompts" [label="<f0> SourceModule| <f1> transformers.agents.prompts",shape="record"];
	"transformers.utils.dummy_flax_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_flax_objects",shape="record"];
	"transformers.utils.dummy_torchaudio_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_torchaudio_objects",shape="record"];
	"transformers.utils.dummy_essentia_and_librosa_and_pretty_midi_and_scipy_and_torch_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_essentia_and_librosa_and_pretty_midi_and_scipy_and_torch_objects",shape="record"];
	"transformers.utils.dummy_tf_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_tf_objects",shape="record"];
	"transformers.utils.dummy_pt_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_pt_objects",shape="record"];
	"transformers.utils.dummy_torchvision_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_torchvision_objects",shape="record"];
	"transformers.utils.dummy_vision_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_vision_objects",shape="record"];
	"transformers.utils.dummy_keras_nlp_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_keras_nlp_objects",shape="record"];
	"transformers.utils.dummy_tensorflow_text_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_tensorflow_text_objects",shape="record"];
	"transformers.utils.dummy_sentencepiece_and_tokenizers_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_sentencepiece_and_tokenizers_objects",shape="record"];
	"transformers.utils.dummy_tokenizers_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_tokenizers_objects",shape="record"];
	"transformers.utils.dummy_sentencepiece_objects" [label="<f0> SourceModule| <f1> transformers.utils.dummy_sentencepiece_objects",shape="record"];
	"transformers.utils.logging" [label="<f0> SourceModule| <f1> transformers.utils.logging",shape="record"];
	"transformers.utils" [label="<f0> Package| <f1> transformers.utils",shape="record"];
	"transformers.utils.peft_utils" [label="<f0> SourceModule| <f1> transformers.utils.peft_utils",shape="record"];
	"transformers.utils.doc" [label="<f0> SourceModule| <f1> transformers.utils.doc",shape="record"];
	"transformers.dependency_versions_check" [label="<f0> SourceModule| <f1> transformers.dependency_versions_check",shape="record"];
	"transformers.MaskFormerForInstanceSegmentationOutput" [label="<f0> MissingModule| <f1> transformers.MaskFormerForInstanceSegmentationOutput",shape="record"];
	"torch" [label="<f0> Package| <f1> torch",shape="record"];
	"torch.xpu._gpu_trace" [label="<f0> SourceModule| <f1> torch.xpu._gpu_trace",shape="record"];
	"torch.utils.viz._cycles" [label="<f0> SourceModule| <f1> torch.utils.viz._cycles",shape="record"];
	"torch.utils.viz" [label="<f0> Package| <f1> torch.utils.viz",shape="record"];
	"torch.utils.show_pickle" [label="<f0> SourceModule| <f1> torch.utils.show_pickle",shape="record"];
	"torch.utils.model_zoo" [label="<f0> SourceModule| <f1> torch.utils.model_zoo",shape="record"];
	"torch.utils.model_dump.__main__" [label="<f0> SourceModule| <f1> torch.utils.model_dump.__main__",shape="record"];
	"torch.utils.model_dump" [label="<f0> Package| <f1> torch.utils.model_dump",shape="record"];
	"torch.utils.mobile_optimizer" [label="<f0> SourceModule| <f1> torch.utils.mobile_optimizer",shape="record"];
	"torch.utils.jit.log_extract" [label="<f0> SourceModule| <f1> torch.utils.jit.log_extract",shape="record"];
	"torch.utils.jit" [label="<f0> Package| <f1> torch.utils.jit",shape="record"];
	"torch.utils.data.datapipes.utils.snapshot" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.utils.snapshot",shape="record"];
	"torch.utils.data.datapipes.gen_pyi" [label="<f0> SourceModule| <f1> torch.utils.data.datapipes.gen_pyi",shape="record"];
	"torch.utils.data.backward_compatibility" [label="<f0> SourceModule| <f1> torch.utils.data.backward_compatibility",shape="record"];
	"torch.utils.bundled_inputs" [label="<f0> SourceModule| <f1> torch.utils.bundled_inputs",shape="record"];
	"torch.utils.bottleneck.__main__" [label="<f0> SourceModule| <f1> torch.utils.bottleneck.__main__",shape="record"];
	"torch.utils.bottleneck" [label="<f0> Package| <f1> torch.utils.bottleneck",shape="record"];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils.valgrind_wrapper.timer_interface",shape="record"];
	"torch.utils.benchmark.utils.valgrind_wrapper" [label="<f0> Package| <f1> torch.utils.benchmark.utils.valgrind_wrapper",shape="record"];
	"torch.utils.benchmark.utils.timer" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils.timer",shape="record"];
	"torch.utils.benchmark.utils.sparse_fuzzer" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils.sparse_fuzzer",shape="record"];
	"torch.utils.benchmark.utils.fuzzer" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils.fuzzer",shape="record"];
	"torch.utils.benchmark.utils.cpp_jit" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils.cpp_jit",shape="record"];
	"torch.utils.benchmark.utils.compile" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils.compile",shape="record"];
	"torch.utils.benchmark.utils.compare" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils.compare",shape="record"];
	"torch.utils.benchmark.utils.common" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils.common",shape="record"];
	"torch.utils.benchmark.utils._stubs" [label="<f0> SourceModule| <f1> torch.utils.benchmark.utils._stubs",shape="record"];
	"torch.utils.benchmark.utils" [label="<f0> Package| <f1> torch.utils.benchmark.utils",shape="record"];
	"torch.utils.benchmark.op_fuzzers.unary" [label="<f0> SourceModule| <f1> torch.utils.benchmark.op_fuzzers.unary",shape="record"];
	"torch.utils.benchmark.op_fuzzers.spectral" [label="<f0> SourceModule| <f1> torch.utils.benchmark.op_fuzzers.spectral",shape="record"];
	"torch.utils.benchmark.op_fuzzers.sparse_unary" [label="<f0> SourceModule| <f1> torch.utils.benchmark.op_fuzzers.sparse_unary",shape="record"];
	"torch.utils.benchmark.op_fuzzers.sparse_binary" [label="<f0> SourceModule| <f1> torch.utils.benchmark.op_fuzzers.sparse_binary",shape="record"];
	"torch.utils.benchmark.op_fuzzers.binary" [label="<f0> SourceModule| <f1> torch.utils.benchmark.op_fuzzers.binary",shape="record"];
	"torch.utils.benchmark.op_fuzzers" [label="<f0> Package| <f1> torch.utils.benchmark.op_fuzzers",shape="record"];
	"torch.utils.benchmark.examples.spectral_ops_fuzz_test" [label="<f0> SourceModule| <f1> torch.utils.benchmark.examples.spectral_ops_fuzz_test",shape="record"];
	"torch.utils.benchmark.examples.simple_timeit" [label="<f0> SourceModule| <f1> torch.utils.benchmark.examples.simple_timeit",shape="record"];
	"torch.utils.benchmark.examples.op_benchmark" [label="<f0> SourceModule| <f1> torch.utils.benchmark.examples.op_benchmark",shape="record"];
	"torch.utils.benchmark.examples.fuzzer" [label="<f0> SourceModule| <f1> torch.utils.benchmark.examples.fuzzer",shape="record"];
	"torch.utils.benchmark.examples.compare" [label="<f0> SourceModule| <f1> torch.utils.benchmark.examples.compare",shape="record"];
	"torch.utils.benchmark.examples.blas_compare_setup" [label="<f0> SourceModule| <f1> torch.utils.benchmark.examples.blas_compare_setup",shape="record"];
	"'conda.cli'" [label="<f0> MissingModule| <f1> 'conda.cli'",shape="record"];
	"conda" [label="<f0> MissingModule| <f1> conda",shape="record"];
	"torch.utils.benchmark.examples" [label="<f0> Package| <f1> torch.utils.benchmark.examples",shape="record"];
	"torch.utils.benchmark" [label="<f0> Package| <f1> torch.utils.benchmark",shape="record"];
	"torch.utils._zip" [label="<f0> SourceModule| <f1> torch.utils._zip",shape="record"];
	"torch.utils._strobelight.cli_function_profiler" [label="<f0> SourceModule| <f1> torch.utils._strobelight.cli_function_profiler",shape="record"];
	"torch.utils._strobelight" [label="<f0> Package| <f1> torch.utils._strobelight",shape="record"];
	"torch.utils._get_clean_triton" [label="<f0> SourceModule| <f1> torch.utils._get_clean_triton",shape="record"];
	"torch.utils._freeze" [label="<f0> SourceModule| <f1> torch.utils._freeze",shape="record"];
	"torch.testing._internal.two_tensor" [label="<f0> SourceModule| <f1> torch.testing._internal.two_tensor",shape="record"];
	"torch.testing._internal.triton_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.triton_utils",shape="record"];
	"torch.testing._internal.torchbind_impls" [label="<f0> SourceModule| <f1> torch.testing._internal.torchbind_impls",shape="record"];
	"torch.testing._internal.test_module.no_future_div" [label="<f0> SourceModule| <f1> torch.testing._internal.test_module.no_future_div",shape="record"];
	"torch.testing._internal.test_module.future_div" [label="<f0> SourceModule| <f1> torch.testing._internal.test_module.future_div",shape="record"];
	"torch.testing._internal.test_module" [label="<f0> Package| <f1> torch.testing._internal.test_module",shape="record"];
	"torch.testing._internal.static_module" [label="<f0> SourceModule| <f1> torch.testing._internal.static_module",shape="record"];
	"torch.testing._internal.quantization_torch_package_models" [label="<f0> SourceModule| <f1> torch.testing._internal.quantization_torch_package_models",shape="record"];
	"torch.testing._internal.logging_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.logging_utils",shape="record"];
	"torch.testing._internal.jit_metaprogramming_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.jit_metaprogramming_utils",shape="record"];
	"torch.testing._internal.inductor_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.inductor_utils",shape="record"];
	"torch.testing._internal.hypothesis_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.hypothesis_utils",shape="record"];
	"'hypothesis.strategies'" [label="<f0> MissingModule| <f1> 'hypothesis.strategies'",shape="record"];
	"'hypothesis.extra'" [label="<f0> MissingModule| <f1> 'hypothesis.extra'",shape="record"];
	"torch.testing._internal.hop_db" [label="<f0> SourceModule| <f1> torch.testing._internal.hop_db",shape="record"];
	"torch.testing._internal.opinfo.core" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.core",shape="record"];
	"torch.testing._internal.opinfo.utils" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.utils",shape="record"];
	"torch.testing._internal.opinfo" [label="<f0> Package| <f1> torch.testing._internal.opinfo",shape="record"];
	"torch.testing._internal.opinfo.definitions" [label="<f0> Package| <f1> torch.testing._internal.opinfo.definitions",shape="record"];
	"torch.testing._internal.opinfo.definitions.special" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.definitions.special",shape="record"];
	"torch.testing._internal.opinfo.refs" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.refs",shape="record"];
	"torch.testing._internal.opinfo.definitions.signal" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.definitions.signal",shape="record"];
	"'scipy.signal'" [label="<f0> MissingModule| <f1> 'scipy.signal'",shape="record"];
	"torch.testing._internal.opinfo.definitions.linalg" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.definitions.linalg",shape="record"];
	"torch.testing._internal.opinfo.definitions.fft" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.definitions.fft",shape="record"];
	"'scipy.fft'" [label="<f0> MissingModule| <f1> 'scipy.fft'",shape="record"];
	"torch.testing._internal.opinfo.definitions._masked" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.definitions._masked",shape="record"];
	"torch.testing._internal.generated.annotated_fn_args" [label="<f0> SourceModule| <f1> torch.testing._internal.generated.annotated_fn_args",shape="record"];
	"torch.testing._internal.generated" [label="<f0> Package| <f1> torch.testing._internal.generated",shape="record"];
	"torch.testing._internal.distributed.rpc_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc_utils",shape="record"];
	"torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture",shape="record"];
	"torch.testing._internal.distributed.rpc.rpc_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.rpc_test",shape="record"];
	"torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.rpc_agent_test_fixture",shape="record"];
	"torch.testing._internal.distributed.rpc.jit.rpc_test_faulty" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.jit.rpc_test_faulty",shape="record"];
	"torch.testing._internal.distributed.rpc.jit.rpc_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.jit.rpc_test",shape="record"];
	"torch.testing._internal.distributed.rpc.jit.dist_autograd_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.jit.dist_autograd_test",shape="record"];
	"torch.testing._internal.distributed.rpc.jit" [label="<f0> Package| <f1> torch.testing._internal.distributed.rpc.jit",shape="record"];
	"torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture",shape="record"];
	"torch.testing._internal.distributed.rpc.faulty_agent_rpc_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.faulty_agent_rpc_test",shape="record"];
	"torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test",shape="record"];
	"torch.testing._internal.distributed.rpc.examples.parameter_server_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.examples.parameter_server_test",shape="record"];
	"torch.testing._internal.distributed.rpc.examples" [label="<f0> Package| <f1> torch.testing._internal.distributed.rpc.examples",shape="record"];
	"torch.testing._internal.distributed.rpc.dist_optimizer_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.dist_optimizer_test",shape="record"];
	"torch.testing._internal.distributed.rpc.dist_autograd_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.rpc.dist_autograd_test",shape="record"];
	"torch.testing._internal.distributed.rpc" [label="<f0> Package| <f1> torch.testing._internal.distributed.rpc",shape="record"];
	"torch.testing._internal.distributed.nn.api.remote_module_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.nn.api.remote_module_test",shape="record"];
	"torch.testing._internal.distributed.nn.api" [label="<f0> Package| <f1> torch.testing._internal.distributed.nn.api",shape="record"];
	"torch.testing._internal.distributed.nn" [label="<f0> Package| <f1> torch.testing._internal.distributed.nn",shape="record"];
	"torch.testing._internal.distributed.multi_threaded_pg" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.multi_threaded_pg",shape="record"];
	"torch.testing._internal.distributed.distributed_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.distributed_utils",shape="record"];
	"torch.testing._internal.distributed.distributed_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.distributed_test",shape="record"];
	"torch.testing._internal.distributed.ddp_under_dist_autograd_test" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.ddp_under_dist_autograd_test",shape="record"];
	"torch.testing._internal.distributed.common_state_dict" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.common_state_dict",shape="record"];
	"torch.testing._internal.distributed.checkpoint_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed.checkpoint_utils",shape="record"];
	"torch.testing._internal.distributed._tensor.common_dtensor" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed._tensor.common_dtensor",shape="record"];
	"torch.testing._internal.distributed._tensor" [label="<f0> Package| <f1> torch.testing._internal.distributed._tensor",shape="record"];
	"torch.testing._internal.distributed._shard.test_common" [label="<f0> SourceModule| <f1> torch.testing._internal.distributed._shard.test_common",shape="record"];
	"torch.testing._internal.distributed._shard" [label="<f0> Package| <f1> torch.testing._internal.distributed._shard",shape="record"];
	"torch.testing._internal.dist_utils" [label="<f0> SourceModule| <f1> torch.testing._internal.dist_utils",shape="record"];
	"torch.testing._internal.data.network2" [label="<f0> SourceModule| <f1> torch.testing._internal.data.network2",shape="record"];
	"torch.testing._internal.data.network1" [label="<f0> SourceModule| <f1> torch.testing._internal.data.network1",shape="record"];
	"torch.testing._internal.data" [label="<f0> Package| <f1> torch.testing._internal.data",shape="record"];
	"torch.testing._internal.custom_tensor" [label="<f0> SourceModule| <f1> torch.testing._internal.custom_tensor",shape="record"];
	"torch.testing._internal.custom_op_db" [label="<f0> SourceModule| <f1> torch.testing._internal.custom_op_db",shape="record"];
	"torch.testing._internal.composite_compliance" [label="<f0> SourceModule| <f1> torch.testing._internal.composite_compliance",shape="record"];
	"torch.testing._internal.common_subclass" [label="<f0> SourceModule| <f1> torch.testing._internal.common_subclass",shape="record"];
	"torch.testing._internal.common_quantized" [label="<f0> SourceModule| <f1> torch.testing._internal.common_quantized",shape="record"];
	"torch.testing._internal.common_quantization" [label="<f0> SourceModule| <f1> torch.testing._internal.common_quantization",shape="record"];
	"torch.testing._internal.common_pruning" [label="<f0> SourceModule| <f1> torch.testing._internal.common_pruning",shape="record"];
	"torch.testing._internal.common_optimizers" [label="<f0> SourceModule| <f1> torch.testing._internal.common_optimizers",shape="record"];
	"torch.testing._internal.common_nn" [label="<f0> SourceModule| <f1> torch.testing._internal.common_nn",shape="record"];
	"torch.testing._internal.common_modules" [label="<f0> SourceModule| <f1> torch.testing._internal.common_modules",shape="record"];
	"torch.testing._internal.common_mkldnn" [label="<f0> SourceModule| <f1> torch.testing._internal.common_mkldnn",shape="record"];
	"torch.testing._internal.common_methods_invocations" [label="<f0> SourceModule| <f1> torch.testing._internal.common_methods_invocations",shape="record"];
	"'scipy.spatial'" [label="<f0> MissingModule| <f1> 'scipy.spatial'",shape="record"];
	"torch.testing._internal.opinfo.definitions.sparse" [label="<f0> SourceModule| <f1> torch.testing._internal.opinfo.definitions.sparse",shape="record"];
	"torch.testing._internal.common_fsdp" [label="<f0> SourceModule| <f1> torch.testing._internal.common_fsdp",shape="record"];
	"torch.testing._internal.common_distributed" [label="<f0> SourceModule| <f1> torch.testing._internal.common_distributed",shape="record"];
	"torch.testing._internal.common_dist_composable" [label="<f0> SourceModule| <f1> torch.testing._internal.common_dist_composable",shape="record"];
	"torch.testing._internal.codegen" [label="<f0> Package| <f1> torch.testing._internal.codegen",shape="record"];
	"torch.testing._internal.check_kernel_launches" [label="<f0> SourceModule| <f1> torch.testing._internal.check_kernel_launches",shape="record"];
	"torch.testing._internal.autograd_function_db" [label="<f0> SourceModule| <f1> torch.testing._internal.autograd_function_db",shape="record"];
	"torch.testing._internal.autocast_test_lists" [label="<f0> SourceModule| <f1> torch.testing._internal.autocast_test_lists",shape="record"];
	"torch.signal.windows.windows" [label="<f0> SourceModule| <f1> torch.signal.windows.windows",shape="record"];
	"torch.quantization.utils" [label="<f0> SourceModule| <f1> torch.quantization.utils",shape="record"];
	"torch.quantization.stubs" [label="<f0> SourceModule| <f1> torch.quantization.stubs",shape="record"];
	"torch.quantization.quantize_jit" [label="<f0> SourceModule| <f1> torch.quantization.quantize_jit",shape="record"];
	"torch.quantization.quantize_fx" [label="<f0> SourceModule| <f1> torch.quantization.quantize_fx",shape="record"];
	"torch.quantization.quantize" [label="<f0> SourceModule| <f1> torch.quantization.quantize",shape="record"];
	"torch.quantization.quantization_mappings" [label="<f0> SourceModule| <f1> torch.quantization.quantization_mappings",shape="record"];
	"torch.quantization.quant_type" [label="<f0> SourceModule| <f1> torch.quantization.quant_type",shape="record"];
	"torch.quantization.qconfig" [label="<f0> SourceModule| <f1> torch.quantization.qconfig",shape="record"];
	"torch.quantization.observer" [label="<f0> SourceModule| <f1> torch.quantization.observer",shape="record"];
	"torch.quantization.fx.utils" [label="<f0> SourceModule| <f1> torch.quantization.fx.utils",shape="record"];
	"torch.quantization.fx.quantization_types" [label="<f0> SourceModule| <f1> torch.quantization.fx.quantization_types",shape="record"];
	"torch.quantization.fx.quantization_patterns" [label="<f0> SourceModule| <f1> torch.quantization.fx.quantization_patterns",shape="record"];
	"torch.quantization.fx.prepare" [label="<f0> SourceModule| <f1> torch.quantization.fx.prepare",shape="record"];
	"torch.quantization.fx.pattern_utils" [label="<f0> SourceModule| <f1> torch.quantization.fx.pattern_utils",shape="record"];
	"torch.quantization.fx.match_utils" [label="<f0> SourceModule| <f1> torch.quantization.fx.match_utils",shape="record"];
	"torch.quantization.fx.graph_module" [label="<f0> SourceModule| <f1> torch.quantization.fx.graph_module",shape="record"];
	"torch.quantization.fx.fusion_patterns" [label="<f0> SourceModule| <f1> torch.quantization.fx.fusion_patterns",shape="record"];
	"torch.quantization.fx.fuse" [label="<f0> SourceModule| <f1> torch.quantization.fx.fuse",shape="record"];
	"torch.quantization.fx.convert" [label="<f0> SourceModule| <f1> torch.quantization.fx.convert",shape="record"];
	"torch.quantization.fx._equalize" [label="<f0> SourceModule| <f1> torch.quantization.fx._equalize",shape="record"];
	"torch.quantization.fx" [label="<f0> Package| <f1> torch.quantization.fx",shape="record"];
	"torch.quantization.fuser_method_mappings" [label="<f0> SourceModule| <f1> torch.quantization.fuser_method_mappings",shape="record"];
	"torch.quantization.fuse_modules" [label="<f0> SourceModule| <f1> torch.quantization.fuse_modules",shape="record"];
	"torch.quantization.fake_quantize" [label="<f0> SourceModule| <f1> torch.quantization.fake_quantize",shape="record"];
	"torch.quantization._quantized_conversions" [label="<f0> SourceModule| <f1> torch.quantization._quantized_conversions",shape="record"];
	"torch.quantization._numeric_suite_fx" [label="<f0> SourceModule| <f1> torch.quantization._numeric_suite_fx",shape="record"];
	"torch.quantization._numeric_suite" [label="<f0> SourceModule| <f1> torch.quantization._numeric_suite",shape="record"];
	"torch.profiler.python_tracer" [label="<f0> SourceModule| <f1> torch.profiler.python_tracer",shape="record"];
	"torch.profiler._pattern_matcher" [label="<f0> SourceModule| <f1> torch.profiler._pattern_matcher",shape="record"];
	"torch.package._mock" [label="<f0> SourceModule| <f1> torch.package._mock",shape="record"];
	"torch.optim._multi_tensor" [label="<f0> Package| <f1> torch.optim._multi_tensor",shape="record"];
	"torch.onnx.verification" [label="<f0> SourceModule| <f1> torch.onnx.verification",shape="record"];
	"torch.onnx._onnx_supported_ops" [label="<f0> SourceModule| <f1> torch.onnx._onnx_supported_ops",shape="record"];
	"torch.onnx._experimental" [label="<f0> SourceModule| <f1> torch.onnx._experimental",shape="record"];
	"torch.nn.utils.prune" [label="<f0> SourceModule| <f1> torch.nn.utils.prune",shape="record"];
	"torch.nn.utils._per_sample_grad" [label="<f0> SourceModule| <f1> torch.nn.utils._per_sample_grad",shape="record"];
	"torch.nn.utils._expanded_weights.linear_expanded_weights" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.linear_expanded_weights",shape="record"];
	"torch.nn.utils._expanded_weights.layer_norm_expanded_weights" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.layer_norm_expanded_weights",shape="record"];
	"torch.nn.utils._expanded_weights.instance_norm_expanded_weights" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.instance_norm_expanded_weights",shape="record"];
	"torch.nn.utils._expanded_weights.group_norm_expanded_weights" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.group_norm_expanded_weights",shape="record"];
	"torch.nn.utils._expanded_weights.expanded_weights_utils" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.expanded_weights_utils",shape="record"];
	"torch.nn.utils._expanded_weights.expanded_weights_impl" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.expanded_weights_impl",shape="record"];
	"torch.nn.utils._expanded_weights.embedding_expanded_weights" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.embedding_expanded_weights",shape="record"];
	"torch.nn.utils._expanded_weights.conv_utils" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.conv_utils",shape="record"];
	"torch.nn.utils._expanded_weights.conv_expanded_weights" [label="<f0> SourceModule| <f1> torch.nn.utils._expanded_weights.conv_expanded_weights",shape="record"];
	"torch.nn.utils._expanded_weights" [label="<f0> Package| <f1> torch.nn.utils._expanded_weights",shape="record"];
	"torch.nn.utils._deprecation_utils" [label="<f0> SourceModule| <f1> torch.nn.utils._deprecation_utils",shape="record"];
	"torch.nn.quantized.modules.utils" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.utils",shape="record"];
	"torch.nn.quantized.modules.rnn" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.rnn",shape="record"];
	"torch.nn.quantized.modules.normalization" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.normalization",shape="record"];
	"torch.nn.quantized.modules.linear" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.linear",shape="record"];
	"torch.nn.quantized.modules.functional_modules" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.functional_modules",shape="record"];
	"torch.nn.quantized.modules.embedding_ops" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.embedding_ops",shape="record"];
	"torch.nn.quantized.modules.dropout" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.dropout",shape="record"];
	"torch.nn.quantized.modules.conv" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.conv",shape="record"];
	"torch.nn.quantized.modules.batchnorm" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.batchnorm",shape="record"];
	"torch.nn.quantized.modules.activation" [label="<f0> SourceModule| <f1> torch.nn.quantized.modules.activation",shape="record"];
	"torch.nn.quantized.modules" [label="<f0> Package| <f1> torch.nn.quantized.modules",shape="record"];
	"torch.nn.quantized.functional" [label="<f0> SourceModule| <f1> torch.nn.quantized.functional",shape="record"];
	"torch.nn.quantized.dynamic.modules.rnn" [label="<f0> SourceModule| <f1> torch.nn.quantized.dynamic.modules.rnn",shape="record"];
	"torch.nn.quantized.dynamic.modules.linear" [label="<f0> SourceModule| <f1> torch.nn.quantized.dynamic.modules.linear",shape="record"];
	"torch.nn.quantized.dynamic.modules.conv" [label="<f0> SourceModule| <f1> torch.nn.quantized.dynamic.modules.conv",shape="record"];
	"torch.nn.quantized.dynamic.modules" [label="<f0> Package| <f1> torch.nn.quantized.dynamic.modules",shape="record"];
	"torch.nn.quantized.dynamic" [label="<f0> Package| <f1> torch.nn.quantized.dynamic",shape="record"];
	"torch.nn.quantized._reference.modules.utils" [label="<f0> SourceModule| <f1> torch.nn.quantized._reference.modules.utils",shape="record"];
	"torch.nn.quantized._reference.modules.sparse" [label="<f0> SourceModule| <f1> torch.nn.quantized._reference.modules.sparse",shape="record"];
	"torch.nn.quantized._reference.modules.rnn" [label="<f0> SourceModule| <f1> torch.nn.quantized._reference.modules.rnn",shape="record"];
	"torch.nn.quantized._reference.modules.linear" [label="<f0> SourceModule| <f1> torch.nn.quantized._reference.modules.linear",shape="record"];
	"torch.nn.quantized._reference.modules.conv" [label="<f0> SourceModule| <f1> torch.nn.quantized._reference.modules.conv",shape="record"];
	"torch.nn.quantized._reference.modules" [label="<f0> Package| <f1> torch.nn.quantized._reference.modules",shape="record"];
	"torch.nn.quantized._reference" [label="<f0> Package| <f1> torch.nn.quantized._reference",shape="record"];
	"torch.nn.quantizable.modules.rnn" [label="<f0> SourceModule| <f1> torch.nn.quantizable.modules.rnn",shape="record"];
	"torch.nn.quantizable.modules.activation" [label="<f0> SourceModule| <f1> torch.nn.quantizable.modules.activation",shape="record"];
	"torch.nn.quantizable.modules" [label="<f0> Package| <f1> torch.nn.quantizable.modules",shape="record"];
	"torch.nn.qat.modules.linear" [label="<f0> SourceModule| <f1> torch.nn.qat.modules.linear",shape="record"];
	"torch.nn.qat.modules.embedding_ops" [label="<f0> SourceModule| <f1> torch.nn.qat.modules.embedding_ops",shape="record"];
	"torch.nn.qat.modules.conv" [label="<f0> SourceModule| <f1> torch.nn.qat.modules.conv",shape="record"];
	"torch.nn.qat.modules" [label="<f0> Package| <f1> torch.nn.qat.modules",shape="record"];
	"torch.nn.qat.dynamic.modules.linear" [label="<f0> SourceModule| <f1> torch.nn.qat.dynamic.modules.linear",shape="record"];
	"torch.nn.qat.dynamic.modules" [label="<f0> Package| <f1> torch.nn.qat.dynamic.modules",shape="record"];
	"torch.nn.qat.dynamic" [label="<f0> Package| <f1> torch.nn.qat.dynamic",shape="record"];
	"torch.nn.intrinsic.quantized.modules.linear_relu" [label="<f0> SourceModule| <f1> torch.nn.intrinsic.quantized.modules.linear_relu",shape="record"];
	"torch.nn.intrinsic.quantized.modules.conv_relu" [label="<f0> SourceModule| <f1> torch.nn.intrinsic.quantized.modules.conv_relu",shape="record"];
	"torch.nn.intrinsic.quantized.modules.bn_relu" [label="<f0> SourceModule| <f1> torch.nn.intrinsic.quantized.modules.bn_relu",shape="record"];
	"torch.nn.intrinsic.quantized.modules" [label="<f0> Package| <f1> torch.nn.intrinsic.quantized.modules",shape="record"];
	"torch.nn.intrinsic.quantized.dynamic.modules.linear_relu" [label="<f0> SourceModule| <f1> torch.nn.intrinsic.quantized.dynamic.modules.linear_relu",shape="record"];
	"torch.nn.intrinsic.quantized.dynamic.modules" [label="<f0> Package| <f1> torch.nn.intrinsic.quantized.dynamic.modules",shape="record"];
	"torch.nn.intrinsic.quantized.dynamic" [label="<f0> Package| <f1> torch.nn.intrinsic.quantized.dynamic",shape="record"];
	"torch.nn.intrinsic.quantized" [label="<f0> Package| <f1> torch.nn.intrinsic.quantized",shape="record"];
	"torch.nn.intrinsic.qat.modules.linear_relu" [label="<f0> SourceModule| <f1> torch.nn.intrinsic.qat.modules.linear_relu",shape="record"];
	"torch.nn.intrinsic.qat.modules.linear_fused" [label="<f0> SourceModule| <f1> torch.nn.intrinsic.qat.modules.linear_fused",shape="record"];
	"torch.nn.intrinsic.qat.modules.conv_fused" [label="<f0> SourceModule| <f1> torch.nn.intrinsic.qat.modules.conv_fused",shape="record"];
	"torch.nn.intrinsic.qat.modules" [label="<f0> Package| <f1> torch.nn.intrinsic.qat.modules",shape="record"];
	"torch.nn.intrinsic.qat" [label="<f0> Package| <f1> torch.nn.intrinsic.qat",shape="record"];
	"torch.nn.intrinsic.modules.fused" [label="<f0> SourceModule| <f1> torch.nn.intrinsic.modules.fused",shape="record"];
	"torch.nn.intrinsic.modules" [label="<f0> Package| <f1> torch.nn.intrinsic.modules",shape="record"];
	"torch.nn.cpp" [label="<f0> SourceModule| <f1> torch.nn.cpp",shape="record"];
	"torch.nn.backends.thnn" [label="<f0> SourceModule| <f1> torch.nn.backends.thnn",shape="record"];
	"torch.nn.backends" [label="<f0> Package| <f1> torch.nn.backends",shape="record"];
	"torch.nn.attention.bias" [label="<f0> SourceModule| <f1> torch.nn.attention.bias",shape="record"];
	"torch.multiprocessing.queue" [label="<f0> SourceModule| <f1> torch.multiprocessing.queue",shape="record"];
	"torch.multiprocessing.pool" [label="<f0> SourceModule| <f1> torch.multiprocessing.pool",shape="record"];
	"torch.mtia._utils" [label="<f0> SourceModule| <f1> torch.mtia._utils",shape="record"];
	"torch.masked.maskedtensor.unary" [label="<f0> SourceModule| <f1> torch.masked.maskedtensor.unary",shape="record"];
	"torch.masked.maskedtensor.reductions" [label="<f0> SourceModule| <f1> torch.masked.maskedtensor.reductions",shape="record"];
	"torch.masked.maskedtensor.passthrough" [label="<f0> SourceModule| <f1> torch.masked.maskedtensor.passthrough",shape="record"];
	"torch.masked.maskedtensor.creation" [label="<f0> SourceModule| <f1> torch.masked.maskedtensor.creation",shape="record"];
	"torch.masked.maskedtensor.core" [label="<f0> SourceModule| <f1> torch.masked.maskedtensor.core",shape="record"];
	"torch.masked.maskedtensor.binary" [label="<f0> SourceModule| <f1> torch.masked.maskedtensor.binary",shape="record"];
	"torch.masked.maskedtensor._ops_refs" [label="<f0> SourceModule| <f1> torch.masked.maskedtensor._ops_refs",shape="record"];
	"torch.masked.maskedtensor" [label="<f0> Package| <f1> torch.masked.maskedtensor",shape="record"];
	"torch.masked._ops" [label="<f0> SourceModule| <f1> torch.masked._ops",shape="record"];
	"torch.masked._docs" [label="<f0> SourceModule| <f1> torch.masked._docs",shape="record"];
	"torch.jit.unsupported_tensor_ops" [label="<f0> SourceModule| <f1> torch.jit.unsupported_tensor_ops",shape="record"];
	"torch.jit.supported_ops" [label="<f0> SourceModule| <f1> torch.jit.supported_ops",shape="record"];
	"torch.jit.mobile" [label="<f0> Package| <f1> torch.jit.mobile",shape="record"];
	"torch.jit.generate_bytecode" [label="<f0> SourceModule| <f1> torch.jit.generate_bytecode",shape="record"];
	"torch.jit._shape_functions" [label="<f0> SourceModule| <f1> torch.jit._shape_functions",shape="record"];
	"torch.jit._pickle" [label="<f0> SourceModule| <f1> torch.jit._pickle",shape="record"];
	"torch.jit._passes._property_propagation" [label="<f0> SourceModule| <f1> torch.jit._passes._property_propagation",shape="record"];
	"torch.TensorType" [label="<f0> MissingModule| <f1> torch.TensorType",shape="record"];
	"torch.jit._passes" [label="<f0> Package| <f1> torch.jit._passes",shape="record"];
	"torch.jit._decompositions" [label="<f0> SourceModule| <f1> torch.jit._decompositions",shape="record"];
	"torch.fx.tensor_type" [label="<f0> SourceModule| <f1> torch.fx.tensor_type",shape="record"];
	"torch.fx.passes.utils.source_matcher_utils" [label="<f0> SourceModule| <f1> torch.fx.passes.utils.source_matcher_utils",shape="record"];
	"torch.fx.passes.tests.test_pass_manager" [label="<f0> SourceModule| <f1> torch.fx.passes.tests.test_pass_manager",shape="record"];
	"torch.fx.passes.tests" [label="<f0> Package| <f1> torch.fx.passes.tests",shape="record"];
	"torch.fx.passes.pass_manager" [label="<f0> SourceModule| <f1> torch.fx.passes.pass_manager",shape="record"];
	"torch.fx.passes.dialect.common.cse_pass" [label="<f0> SourceModule| <f1> torch.fx.passes.dialect.common.cse_pass",shape="record"];
	"torch.fx.passes.dialect.common" [label="<f0> Package| <f1> torch.fx.passes.dialect.common",shape="record"];
	"torch.fx.passes.dialect" [label="<f0> Package| <f1> torch.fx.passes.dialect",shape="record"];
	"torch.fx.passes.backends.cudagraphs" [label="<f0> SourceModule| <f1> torch.fx.passes.backends.cudagraphs",shape="record"];
	"torch.fx.passes.backends" [label="<f0> Package| <f1> torch.fx.passes.backends",shape="record"];
	"torch.fx.passes.annotate_getitem_nodes" [label="<f0> SourceModule| <f1> torch.fx.passes.annotate_getitem_nodes",shape="record"];
	"torch.fx.experimental.unify_refinements" [label="<f0> SourceModule| <f1> torch.fx.experimental.unify_refinements",shape="record"];
	"torch.fx.experimental.unification.variable" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.variable",shape="record"];
	"torch.fx.experimental.unification.utils" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.utils",shape="record"];
	"torch.fx.experimental.unification.unification_tools" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.unification_tools",shape="record"];
	"torch.fx.experimental.unification.multipledispatch.variadic" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.multipledispatch.variadic",shape="record"];
	"torch.fx.experimental.unification.multipledispatch.utils" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.multipledispatch.utils",shape="record"];
	"torch.fx.experimental.unification.multipledispatch.dispatcher" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.multipledispatch.dispatcher",shape="record"];
	"torch.fx.experimental.unification.multipledispatch.core" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.multipledispatch.core",shape="record"];
	"torch.fx.experimental.unification.multipledispatch.conflict" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.multipledispatch.conflict",shape="record"];
	"torch.fx.experimental.unification.multipledispatch" [label="<f0> Package| <f1> torch.fx.experimental.unification.multipledispatch",shape="record"];
	"torch.fx.experimental.unification.more" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.more",shape="record"];
	"torch.fx.experimental.unification.match" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.match",shape="record"];
	"torch.fx.experimental.unification.dispatch" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.dispatch",shape="record"];
	"torch.fx.experimental.unification.core" [label="<f0> SourceModule| <f1> torch.fx.experimental.unification.core",shape="record"];
	"torch.fx.experimental.unification" [label="<f0> Package| <f1> torch.fx.experimental.unification",shape="record"];
	"torch.fx.experimental.schema_type_annotation" [label="<f0> SourceModule| <f1> torch.fx.experimental.schema_type_annotation",shape="record"];
	"torch.fx.experimental.rewriter" [label="<f0> SourceModule| <f1> torch.fx.experimental.rewriter",shape="record"];
	"torch.fx.experimental.refinement_types" [label="<f0> SourceModule| <f1> torch.fx.experimental.refinement_types",shape="record"];
	"torch.fx.experimental.partitioner_utils" [label="<f0> SourceModule| <f1> torch.fx.experimental.partitioner_utils",shape="record"];
	"torch.fx.experimental.normalize" [label="<f0> SourceModule| <f1> torch.fx.experimental.normalize",shape="record"];
	"torch.fx.experimental.migrate_gradual_types.z3_types" [label="<f0> SourceModule| <f1> torch.fx.experimental.migrate_gradual_types.z3_types",shape="record"];
	"torch.fx.experimental.migrate_gradual_types.util" [label="<f0> SourceModule| <f1> torch.fx.experimental.migrate_gradual_types.util",shape="record"];
	"torch.fx.experimental.migrate_gradual_types.transform_to_z3" [label="<f0> SourceModule| <f1> torch.fx.experimental.migrate_gradual_types.transform_to_z3",shape="record"];
	"torch.fx.experimental.migrate_gradual_types.operation" [label="<f0> SourceModule| <f1> torch.fx.experimental.migrate_gradual_types.operation",shape="record"];
	"torch.fx.experimental.migrate_gradual_types.constraint_transformation" [label="<f0> SourceModule| <f1> torch.fx.experimental.migrate_gradual_types.constraint_transformation",shape="record"];
	"torch.fx.experimental.migrate_gradual_types.constraint_generator" [label="<f0> SourceModule| <f1> torch.fx.experimental.migrate_gradual_types.constraint_generator",shape="record"];
	"torch.fx.experimental.migrate_gradual_types.constraint" [label="<f0> SourceModule| <f1> torch.fx.experimental.migrate_gradual_types.constraint",shape="record"];
	"torch.fx.experimental.migrate_gradual_types" [label="<f0> Package| <f1> torch.fx.experimental.migrate_gradual_types",shape="record"];
	"torch.fx.experimental.meta_tracer" [label="<f0> SourceModule| <f1> torch.fx.experimental.meta_tracer",shape="record"];
	"torch.fx.experimental.merge_matmul" [label="<f0> SourceModule| <f1> torch.fx.experimental.merge_matmul",shape="record"];
	"torch.fx.experimental.graph_gradual_typechecker" [label="<f0> SourceModule| <f1> torch.fx.experimental.graph_gradual_typechecker",shape="record"];
	"torch.fx.experimental.debug" [label="<f0> SourceModule| <f1> torch.fx.experimental.debug",shape="record"];
	"torch.fx.experimental.accelerator_partitioner" [label="<f0> SourceModule| <f1> torch.fx.experimental.accelerator_partitioner",shape="record"];
	"torch.fx.annotate" [label="<f0> SourceModule| <f1> torch.fx.annotate",shape="record"];
	"torch.export.passes" [label="<f0> Package| <f1> torch.export.passes",shape="record"];
	"torch.export.experimental" [label="<f0> Package| <f1> torch.export.experimental",shape="record"];
	"torch.export.custom_obj" [label="<f0> SourceModule| <f1> torch.export.custom_obj",shape="record"];
	"torch.export._remove_auto_functionalized_pass" [label="<f0> SourceModule| <f1> torch.export._remove_auto_functionalized_pass",shape="record"];
	"torch.distributed.tensor.parallel.input_reshard" [label="<f0> SourceModule| <f1> torch.distributed.tensor.parallel.input_reshard",shape="record"];
	"torch.distributed.tensor.experimental._tp_transform" [label="<f0> SourceModule| <f1> torch.distributed.tensor.experimental._tp_transform",shape="record"];
	"torch.distributed.tensor.experimental._register_sharding" [label="<f0> SourceModule| <f1> torch.distributed.tensor.experimental._register_sharding",shape="record"];
	"torch.distributed.tensor.experimental._func_map" [label="<f0> SourceModule| <f1> torch.distributed.tensor.experimental._func_map",shape="record"];
	"torch.distributed.tensor.experimental._attention" [label="<f0> SourceModule| <f1> torch.distributed.tensor.experimental._attention",shape="record"];
	"torch.distributed.tensor.experimental" [label="<f0> Package| <f1> torch.distributed.tensor.experimental",shape="record"];
	"torch.distributed.tensor.debug._visualize_sharding" [label="<f0> SourceModule| <f1> torch.distributed.tensor.debug._visualize_sharding",shape="record"];
	"torch.distributed.tensor.debug._op_coverage" [label="<f0> SourceModule| <f1> torch.distributed.tensor.debug._op_coverage",shape="record"];
	"torch.distributed.tensor.debug._comm_mode" [label="<f0> SourceModule| <f1> torch.distributed.tensor.debug._comm_mode",shape="record"];
	"torch.distributed.tensor.debug" [label="<f0> Package| <f1> torch.distributed.tensor.debug",shape="record"];
	"torch.distributed.tensor._shards_wrapper" [label="<f0> SourceModule| <f1> torch.distributed.tensor._shards_wrapper",shape="record"];
	"torch.distributed.run" [label="<f0> SourceModule| <f1> torch.distributed.run",shape="record"];
	"torch.distributed.rpc.rref_proxy" [label="<f0> SourceModule| <f1> torch.distributed.rpc.rref_proxy",shape="record"];
	"torch.distributed.rpc._testing.faulty_agent_backend_registry" [label="<f0> SourceModule| <f1> torch.distributed.rpc._testing.faulty_agent_backend_registry",shape="record"];
	"torch.distributed.rpc._testing" [label="<f0> Package| <f1> torch.distributed.rpc._testing",shape="record"];
	"'torch._C._distributed_rpc_testing'" [label="<f0> MissingModule| <f1> 'torch._C._distributed_rpc_testing'",shape="record"];
	"torch.distributed.pipelining.stage" [label="<f0> SourceModule| <f1> torch.distributed.pipelining.stage",shape="record"];
	"torch.distributed.pipelining.schedules" [label="<f0> SourceModule| <f1> torch.distributed.pipelining.schedules",shape="record"];
	"torch.distributed.pipelining.microbatch" [label="<f0> SourceModule| <f1> torch.distributed.pipelining.microbatch",shape="record"];
	"torch.distributed.pipelining._utils" [label="<f0> SourceModule| <f1> torch.distributed.pipelining._utils",shape="record"];
	"torch.distributed.pipelining._unflatten" [label="<f0> SourceModule| <f1> torch.distributed.pipelining._unflatten",shape="record"];
	"torch.distributed.pipelining._debug" [label="<f0> SourceModule| <f1> torch.distributed.pipelining._debug",shape="record"];
	"torch.distributed.pipelining._backward" [label="<f0> SourceModule| <f1> torch.distributed.pipelining._backward",shape="record"];
	"torch.distributed.pipelining._IR" [label="<f0> SourceModule| <f1> torch.distributed.pipelining._IR",shape="record"];
	"torch.distributed.pipelining" [label="<f0> Package| <f1> torch.distributed.pipelining",shape="record"];
	"torch.distributed.launcher.api" [label="<f0> SourceModule| <f1> torch.distributed.launcher.api",shape="record"];
	"torch.distributed.launcher" [label="<f0> Package| <f1> torch.distributed.launcher",shape="record"];
	"torch.distributed.launch" [label="<f0> SourceModule| <f1> torch.distributed.launch",shape="record"];
	"torch.distributed.fsdp.sharded_grad_scaler" [label="<f0> SourceModule| <f1> torch.distributed.fsdp.sharded_grad_scaler",shape="record"];
	"torch.distributed.fsdp._trace_utils" [label="<f0> SourceModule| <f1> torch.distributed.fsdp._trace_utils",shape="record"];
	"torch.distributed.elastic.utils.store" [label="<f0> SourceModule| <f1> torch.distributed.elastic.utils.store",shape="record"];
	"torch.distributed.elastic.utils.logging" [label="<f0> SourceModule| <f1> torch.distributed.elastic.utils.logging",shape="record"];
	"torch.distributed.elastic.utils.log_level" [label="<f0> SourceModule| <f1> torch.distributed.elastic.utils.log_level",shape="record"];
	"torch.distributed.elastic.utils.distributed" [label="<f0> SourceModule| <f1> torch.distributed.elastic.utils.distributed",shape="record"];
	"torch.distributed.elastic.utils.data.elastic_distributed_sampler" [label="<f0> SourceModule| <f1> torch.distributed.elastic.utils.data.elastic_distributed_sampler",shape="record"];
	"torch.distributed.elastic.utils.data.cycling_iterator" [label="<f0> SourceModule| <f1> torch.distributed.elastic.utils.data.cycling_iterator",shape="record"];
	"torch.distributed.elastic.utils.data" [label="<f0> Package| <f1> torch.distributed.elastic.utils.data",shape="record"];
	"torch.distributed.elastic.utils.api" [label="<f0> SourceModule| <f1> torch.distributed.elastic.utils.api",shape="record"];
	"torch.distributed.elastic.utils" [label="<f0> Package| <f1> torch.distributed.elastic.utils",shape="record"];
	"torch.distributed.elastic.timer.local_timer" [label="<f0> SourceModule| <f1> torch.distributed.elastic.timer.local_timer",shape="record"];
	"torch.distributed.elastic.timer.file_based_local_timer" [label="<f0> SourceModule| <f1> torch.distributed.elastic.timer.file_based_local_timer",shape="record"];
	"torch.distributed.elastic.timer.debug_info_logging" [label="<f0> SourceModule| <f1> torch.distributed.elastic.timer.debug_info_logging",shape="record"];
	"torch.distributed.elastic.timer.api" [label="<f0> SourceModule| <f1> torch.distributed.elastic.timer.api",shape="record"];
	"torch.distributed.elastic.timer" [label="<f0> Package| <f1> torch.distributed.elastic.timer",shape="record"];
	"torch.distributed.elastic.rendezvous.utils" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.utils",shape="record"];
	"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.static_tcp_rendezvous",shape="record"];
	"torch.distributed.elastic.rendezvous.registry" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.registry",shape="record"];
	"torch.distributed.elastic.rendezvous.etcd_store" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.etcd_store",shape="record"];
	"etcd" [label="<f0> MissingModule| <f1> etcd",shape="record"];
	"torch.distributed.elastic.rendezvous.etcd_server" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.etcd_server",shape="record"];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.etcd_rendezvous_backend",shape="record"];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.etcd_rendezvous",shape="record"];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.dynamic_rendezvous",shape="record"];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.c10d_rendezvous_backend",shape="record"];
	"torch.distributed.elastic.rendezvous.api" [label="<f0> SourceModule| <f1> torch.distributed.elastic.rendezvous.api",shape="record"];
	"torch.distributed.elastic.rendezvous" [label="<f0> Package| <f1> torch.distributed.elastic.rendezvous",shape="record"];
	"torch.distributed.elastic.multiprocessing.tail_log" [label="<f0> SourceModule| <f1> torch.distributed.elastic.multiprocessing.tail_log",shape="record"];
	"torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" [label="<f0> SourceModule| <f1> torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler",shape="record"];
	"torch.distributed.elastic.multiprocessing.subprocess_handler.handlers" [label="<f0> SourceModule| <f1> torch.distributed.elastic.multiprocessing.subprocess_handler.handlers",shape="record"];
	"torch.distributed.elastic.multiprocessing.subprocess_handler" [label="<f0> Package| <f1> torch.distributed.elastic.multiprocessing.subprocess_handler",shape="record"];
	"torch.distributed.elastic.multiprocessing.redirects" [label="<f0> SourceModule| <f1> torch.distributed.elastic.multiprocessing.redirects",shape="record"];
	"torch.distributed.elastic.multiprocessing.errors.handlers" [label="<f0> SourceModule| <f1> torch.distributed.elastic.multiprocessing.errors.handlers",shape="record"];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" [label="<f0> SourceModule| <f1> torch.distributed.elastic.multiprocessing.errors.error_handler",shape="record"];
	"torch.distributed.elastic.multiprocessing.errors" [label="<f0> Package| <f1> torch.distributed.elastic.multiprocessing.errors",shape="record"];
	"torch.distributed.elastic.multiprocessing.api" [label="<f0> SourceModule| <f1> torch.distributed.elastic.multiprocessing.api",shape="record"];
	"torch.distributed.elastic.multiprocessing" [label="<f0> Package| <f1> torch.distributed.elastic.multiprocessing",shape="record"];
	"torch.distributed.elastic.metrics.api" [label="<f0> SourceModule| <f1> torch.distributed.elastic.metrics.api",shape="record"];
	"torch.distributed.elastic.metrics" [label="<f0> Package| <f1> torch.distributed.elastic.metrics",shape="record"];
	"'torch.distributed.elastic.metrics.static_init'" [label="<f0> MissingModule| <f1> 'torch.distributed.elastic.metrics.static_init'",shape="record"];
	"torch.distributed.elastic.events.handlers" [label="<f0> SourceModule| <f1> torch.distributed.elastic.events.handlers",shape="record"];
	"torch.distributed.elastic.events.api" [label="<f0> SourceModule| <f1> torch.distributed.elastic.events.api",shape="record"];
	"torch.distributed.elastic.events" [label="<f0> Package| <f1> torch.distributed.elastic.events",shape="record"];
	"torch.distributed.elastic.control_plane" [label="<f0> SourceModule| <f1> torch.distributed.elastic.control_plane",shape="record"];
	"torch.distributed.elastic.agent.server.local_elastic_agent" [label="<f0> SourceModule| <f1> torch.distributed.elastic.agent.server.local_elastic_agent",shape="record"];
	"torch.distributed.elastic.agent.server.health_check_server" [label="<f0> SourceModule| <f1> torch.distributed.elastic.agent.server.health_check_server",shape="record"];
	"torch.distributed.elastic.agent.server.api" [label="<f0> SourceModule| <f1> torch.distributed.elastic.agent.server.api",shape="record"];
	"torch.distributed.elastic.agent.server" [label="<f0> Package| <f1> torch.distributed.elastic.agent.server",shape="record"];
	"torch.distributed.elastic.agent" [label="<f0> Package| <f1> torch.distributed.elastic.agent",shape="record"];
	"torch.distributed.elastic" [label="<f0> Package| <f1> torch.distributed.elastic",shape="record"];
	"torch.distributed.collective_utils" [label="<f0> SourceModule| <f1> torch.distributed.collective_utils",shape="record"];
	"torch.distributed.checkpoint.state_dict" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.state_dict",shape="record"];
	"torch.distributed.checkpoint.format_utils" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint.format_utils",shape="record"];
	"torch.distributed.checkpoint._dedup_tensors" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._dedup_tensors",shape="record"];
	"torch.distributed.checkpoint._checkpointer" [label="<f0> SourceModule| <f1> torch.distributed.checkpoint._checkpointer",shape="record"];
	"torch.distributed.argparse_util" [label="<f0> SourceModule| <f1> torch.distributed.argparse_util",shape="record"];
	"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.model_averaging.hierarchical_model_averager",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook",shape="record"];
	"torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook" [label="<f0> SourceModule| <f1> torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook",shape="record"];
	"torch.distributed.algorithms._quantization.quantization" [label="<f0> SourceModule| <f1> torch.distributed.algorithms._quantization.quantization",shape="record"];
	"torch.distributed.algorithms._quantization" [label="<f0> Package| <f1> torch.distributed.algorithms._quantization",shape="record"];
	"torch.distributed._tools.runtime_estimator" [label="<f0> SourceModule| <f1> torch.distributed._tools.runtime_estimator",shape="record"];
	"torch.distributed._tools.mod_tracker" [label="<f0> SourceModule| <f1> torch.distributed._tools.mod_tracker",shape="record"];
	"torch.distributed._tools.memory_tracker" [label="<f0> SourceModule| <f1> torch.distributed._tools.memory_tracker",shape="record"];
	"torch.distributed._tools.mem_tracker" [label="<f0> SourceModule| <f1> torch.distributed._tools.mem_tracker",shape="record"];
	"torch.distributed._tools.fsdp2_mem_tracker" [label="<f0> SourceModule| <f1> torch.distributed._tools.fsdp2_mem_tracker",shape="record"];
	"torch.distributed._tools" [label="<f0> Package| <f1> torch.distributed._tools",shape="record"];
	"torch.distributed._tensor.placement_types" [label="<f0> SourceModule| <f1> torch.distributed._tensor.placement_types",shape="record"];
	"torch.distributed._tensor.api" [label="<f0> SourceModule| <f1> torch.distributed._tensor.api",shape="record"];
	"torch.distributed._tensor" [label="<f0> Package| <f1> torch.distributed._tensor",shape="record"];
	"torch.distributed._sharding_spec" [label="<f0> Package| <f1> torch.distributed._sharding_spec",shape="record"];
	"torch.distributed._sharded_tensor" [label="<f0> Package| <f1> torch.distributed._sharded_tensor",shape="record"];
	"torch.distributed._shard.sharded_tensor.logging_handlers" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor.logging_handlers",shape="record"];
	"torch.distributed._shard.sharded_tensor.logger" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_tensor.logger",shape="record"];
	"torch.distributed._shard.sharded_optim.api" [label="<f0> SourceModule| <f1> torch.distributed._shard.sharded_optim.api",shape="record"];
	"torch.distributed._shard.sharded_optim" [label="<f0> Package| <f1> torch.distributed._shard.sharded_optim",shape="record"];
	"torch.distributed._shard.checkpoint" [label="<f0> Package| <f1> torch.distributed._shard.checkpoint",shape="record"];
	"torch.distributed._checkpointable" [label="<f0> SourceModule| <f1> torch.distributed._checkpointable",shape="record"];
	"torch.cuda.error" [label="<f0> SourceModule| <f1> torch.cuda.error",shape="record"];
	"torch.cuda.comm" [label="<f0> SourceModule| <f1> torch.cuda.comm",shape="record"];
	"torch.cuda._gpu_trace" [label="<f0> SourceModule| <f1> torch.cuda._gpu_trace",shape="record"];
	"torch.cpu.amp.grad_scaler" [label="<f0> SourceModule| <f1> torch.cpu.amp.grad_scaler",shape="record"];
	"torch.cpu.amp.autocast_mode" [label="<f0> SourceModule| <f1> torch.cpu.amp.autocast_mode",shape="record"];
	"torch.cpu.amp" [label="<f0> Package| <f1> torch.cpu.amp",shape="record"];
	"torch.contrib._tensorboard_vis" [label="<f0> SourceModule| <f1> torch.contrib._tensorboard_vis",shape="record"];
	"'tensorflow.core'" [label="<f0> MissingModule| <f1> 'tensorflow.core'",shape="record"];
	"torch.contrib" [label="<f0> Package| <f1> torch.contrib",shape="record"];
	"torch.backends.xeon.run_cpu" [label="<f0> SourceModule| <f1> torch.backends.xeon.run_cpu",shape="record"];
	"torch.backends.xeon" [label="<f0> Package| <f1> torch.backends.xeon",shape="record"];
	"torch.backends._nnapi.serializer" [label="<f0> SourceModule| <f1> torch.backends._nnapi.serializer",shape="record"];
	"torch.backends._nnapi.prepare" [label="<f0> SourceModule| <f1> torch.backends._nnapi.prepare",shape="record"];
	"torch.backends._nnapi" [label="<f0> Package| <f1> torch.backends._nnapi",shape="record"];
	"torch.backends._coreml.preprocess" [label="<f0> SourceModule| <f1> torch.backends._coreml.preprocess",shape="record"];
	"'coremltools.models'" [label="<f0> MissingModule| <f1> 'coremltools.models'",shape="record"];
	"'coremltools.converters'" [label="<f0> MissingModule| <f1> 'coremltools.converters'",shape="record"];
	"coremltools" [label="<f0> MissingModule| <f1> coremltools",shape="record"];
	"torch.backends._coreml" [label="<f0> Package| <f1> torch.backends._coreml",shape="record"];
	"torch.autograd._functions.utils" [label="<f0> SourceModule| <f1> torch.autograd._functions.utils",shape="record"];
	"torch.autograd._functions.tensor" [label="<f0> SourceModule| <f1> torch.autograd._functions.tensor",shape="record"];
	"torch.autograd._functions" [label="<f0> Package| <f1> torch.autograd._functions",shape="record"];
	"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantizer.xnnpack_quantizer_utils",shape="record"];
	"torch.ao.quantization.quantizer.xnnpack_quantizer" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantizer.xnnpack_quantizer",shape="record"];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantizer.x86_inductor_quantizer",shape="record"];
	"torch.ao.quantization.quantizer.utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantizer.utils",shape="record"];
	"torch.ao.quantization.quantizer.embedding_quantizer" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantizer.embedding_quantizer",shape="record"];
	"torch.ao.quantization.quantizer.composable_quantizer" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantizer.composable_quantizer",shape="record"];
	"torch.ao.quantization.quantize_pt2e" [label="<f0> SourceModule| <f1> torch.ao.quantization.quantize_pt2e",shape="record"];
	"torch.ao.quantization.pt2e.representation.rewrite" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e.representation.rewrite",shape="record"];
	"torch.ao.quantization.pt2e.representation" [label="<f0> Package| <f1> torch.ao.quantization.pt2e.representation",shape="record"];
	"torch.ao.quantization.pt2e.qat_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e.qat_utils",shape="record"];
	"torch.ao.quantization.pt2e.prepare" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e.prepare",shape="record"];
	"torch.ao.quantization.pt2e.port_metadata_pass" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e.port_metadata_pass",shape="record"];
	"torch.ao.quantization.pt2e.graph_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e.graph_utils",shape="record"];
	"torch.ao.quantization.pt2e.duplicate_dq_pass" [label="<f0> SourceModule| <f1> torch.ao.quantization.pt2e.duplicate_dq_pass",shape="record"];
	"torch.ao.quantization.fx.lstm_utils" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.lstm_utils",shape="record"];
	"torch.ao.quantization.fx.lower_to_qnnpack" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx.lower_to_qnnpack",shape="record"];
	"torch.ao.quantization.fx._model_report.model_report_visualizer" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx._model_report.model_report_visualizer",shape="record"];
	"torch.ao.quantization.fx._model_report.model_report_observer" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx._model_report.model_report_observer",shape="record"];
	"torch.ao.quantization.fx._model_report.model_report" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx._model_report.model_report",shape="record"];
	"torch.ao.quantization.fx._model_report.detector" [label="<f0> SourceModule| <f1> torch.ao.quantization.fx._model_report.detector",shape="record"];
	"torch.ao.quantization.fx._model_report" [label="<f0> Package| <f1> torch.ao.quantization.fx._model_report",shape="record"];
	"torch.ao.quantization.backend_config.x86" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.x86",shape="record"];
	"torch.ao.quantization.backend_config.observation_type" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config.observation_type",shape="record"];
	"torch.ao.quantization.backend_config._qnnpack_pt2e" [label="<f0> SourceModule| <f1> torch.ao.quantization.backend_config._qnnpack_pt2e",shape="record"];
	"torch.ao.quantization._learnable_fake_quantize" [label="<f0> SourceModule| <f1> torch.ao.quantization._learnable_fake_quantize",shape="record"];
	"torch.ao.quantization._equalize" [label="<f0> SourceModule| <f1> torch.ao.quantization._equalize",shape="record"];
	"torch.ao.quantization._correct_bias" [label="<f0> SourceModule| <f1> torch.ao.quantization._correct_bias",shape="record"];
	"torch.ao.pruning.sparsifier.weight_norm_sparsifier" [label="<f0> SourceModule| <f1> torch.ao.pruning.sparsifier.weight_norm_sparsifier",shape="record"];
	"torch.ao.pruning.sparsifier.utils" [label="<f0> SourceModule| <f1> torch.ao.pruning.sparsifier.utils",shape="record"];
	"torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier" [label="<f0> SourceModule| <f1> torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier",shape="record"];
	"torch.ao.pruning.sparsifier.base_sparsifier" [label="<f0> SourceModule| <f1> torch.ao.pruning.sparsifier.base_sparsifier",shape="record"];
	"torch.ao.pruning.sparsifier" [label="<f0> Package| <f1> torch.ao.pruning.sparsifier",shape="record"];
	"torch.ao.pruning.scheduler.lambda_scheduler" [label="<f0> SourceModule| <f1> torch.ao.pruning.scheduler.lambda_scheduler",shape="record"];
	"torch.ao.pruning.scheduler.cubic_scheduler" [label="<f0> SourceModule| <f1> torch.ao.pruning.scheduler.cubic_scheduler",shape="record"];
	"torch.ao.pruning.scheduler.base_scheduler" [label="<f0> SourceModule| <f1> torch.ao.pruning.scheduler.base_scheduler",shape="record"];
	"torch.ao.pruning.scheduler" [label="<f0> Package| <f1> torch.ao.pruning.scheduler",shape="record"];
	"torch.ao.pruning._mappings" [label="<f0> SourceModule| <f1> torch.ao.pruning._mappings",shape="record"];
	"torch.ao.pruning._experimental.pruner.saliency_pruner" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.pruner.saliency_pruner",shape="record"];
	"torch.ao.pruning._experimental.pruner.prune_functions" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.pruner.prune_functions",shape="record"];
	"torch.ao.pruning._experimental.pruner.parametrization" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.pruner.parametrization",shape="record"];
	"torch.ao.pruning._experimental.pruner.match_utils" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.pruner.match_utils",shape="record"];
	"torch.ao.pruning._experimental.pruner.lstm_saliency_pruner" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.pruner.lstm_saliency_pruner",shape="record"];
	"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.pruner.base_structured_sparsifier",shape="record"];
	"torch.ao.pruning._experimental.pruner.FPGM_pruner" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.pruner.FPGM_pruner",shape="record"];
	"torch.ao.pruning._experimental.pruner" [label="<f0> Package| <f1> torch.ao.pruning._experimental.pruner",shape="record"];
	"torch.ao.pruning._experimental.data_sparsifier.quantization_utils" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.data_sparsifier.quantization_utils",shape="record"];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity",shape="record"];
	"pytorch_lightning" [label="<f0> MissingModule| <f1> pytorch_lightning",shape="record"];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks._data_sparstity_utils" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks._data_sparstity_utils",shape="record"];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks" [label="<f0> Package| <f1> torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks",shape="record"];
	"torch.ao.pruning._experimental.data_sparsifier.lightning" [label="<f0> Package| <f1> torch.ao.pruning._experimental.data_sparsifier.lightning",shape="record"];
	"torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier",shape="record"];
	"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier",shape="record"];
	"torch.ao.pruning._experimental.data_sparsifier" [label="<f0> Package| <f1> torch.ao.pruning._experimental.data_sparsifier",shape="record"];
	"torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.data_scheduler.base_data_scheduler",shape="record"];
	"torch.ao.pruning._experimental.data_scheduler" [label="<f0> Package| <f1> torch.ao.pruning._experimental.data_scheduler",shape="record"];
	"torch.ao.pruning._experimental.activation_sparsifier.activation_sparsifier" [label="<f0> SourceModule| <f1> torch.ao.pruning._experimental.activation_sparsifier.activation_sparsifier",shape="record"];
	"torch.ao.pruning._experimental.activation_sparsifier" [label="<f0> Package| <f1> torch.ao.pruning._experimental.activation_sparsifier",shape="record"];
	"torch.ao.pruning._experimental" [label="<f0> Package| <f1> torch.ao.pruning._experimental",shape="record"];
	"torch.ao.pruning" [label="<f0> Package| <f1> torch.ao.pruning",shape="record"];
	"torch.ao.ns._numeric_suite" [label="<f0> SourceModule| <f1> torch.ao.ns._numeric_suite",shape="record"];
	"torch._python_dispatcher" [label="<f0> SourceModule| <f1> torch._python_dispatcher",shape="record"];
	"torch._numpy.testing.utils" [label="<f0> SourceModule| <f1> torch._numpy.testing.utils",shape="record"];
	"torch._numpy.testing" [label="<f0> Package| <f1> torch._numpy.testing",shape="record"];
	"torch._lowrank" [label="<f0> SourceModule| <f1> torch._lowrank",shape="record"];
	"torch._logging.scribe" [label="<f0> SourceModule| <f1> torch._logging.scribe",shape="record"];
	"fbscribelogger" [label="<f0> MissingModule| <f1> fbscribelogger",shape="record"];
	"torch._lazy.tensor_factory_functions" [label="<f0> SourceModule| <f1> torch._lazy.tensor_factory_functions",shape="record"];
	"torch._lazy.ir_cache" [label="<f0> SourceModule| <f1> torch._lazy.ir_cache",shape="record"];
	"torch._lazy.extract_compiled_graph" [label="<f0> SourceModule| <f1> torch._lazy.extract_compiled_graph",shape="record"];
	"torch._lazy.debug" [label="<f0> SourceModule| <f1> torch._lazy.debug",shape="record"];
	"torch._lazy.config" [label="<f0> SourceModule| <f1> torch._lazy.config",shape="record"];
	"torch._lazy.computation" [label="<f0> SourceModule| <f1> torch._lazy.computation",shape="record"];
	"torch._inductor.test_case" [label="<f0> SourceModule| <f1> torch._inductor.test_case",shape="record"];
	"torch._inductor.runtime.triton_helpers" [label="<f0> SourceModule| <f1> torch._inductor.runtime.triton_helpers",shape="record"];
	"torch._inductor.runtime.halide_helpers" [label="<f0> SourceModule| <f1> torch._inductor.runtime.halide_helpers",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns.mm_pattern" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns.mm_pattern",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns.bmm_pattern" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns.bmm_pattern",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns.addmm_pattern" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns.addmm_pattern",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_9" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_9",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_8" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_8",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_7" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_7",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_6" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_6",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_5" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_5",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_4" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_4",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_3" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_3",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_2" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_2",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_19" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_19",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_18" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_18",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_17" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_17",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_16" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_16",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_15" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_15",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_14" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_14",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_13" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_13",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_12" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_12",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_11" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_11",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_10" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_10",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_1" [label="<f0> SourceModule| <f1> torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_1",shape="record"];
	"torch._inductor.fx_passes.serialized_patterns" [label="<f0> Package| <f1> torch._inductor.fx_passes.serialized_patterns",shape="record"];
	"torch._inductor.compile_worker.__main__" [label="<f0> SourceModule| <f1> torch._inductor.compile_worker.__main__",shape="record"];
	"torch._inductor.codegen.cuda.cutlass_lib_extensions.gemm_operation_extensions" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.cutlass_lib_extensions.gemm_operation_extensions",shape="record"];
	"torch._inductor.codegen.cuda.cutlass_lib_extensions" [label="<f0> Package| <f1> torch._inductor.codegen.cuda.cutlass_lib_extensions",shape="record"];
	"torch._inductor.codegen.cuda.cutlass_epilogue_gen" [label="<f0> SourceModule| <f1> torch._inductor.codegen.cuda.cutlass_epilogue_gen",shape="record"];
	"torch._inductor.autoheuristic.artifacts._PadMMA100" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.artifacts._PadMMA100",shape="record"];
	"torch._inductor.autoheuristic.artifacts._MixedMMH100" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.artifacts._MixedMMH100",shape="record"];
	"torch._inductor.autoheuristic.artifacts._MixedMMA100" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.artifacts._MixedMMA100",shape="record"];
	"torch._inductor.autoheuristic.artifacts._MMRankingH100" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.artifacts._MMRankingH100",shape="record"];
	"torch._inductor.autoheuristic.artifacts._MMRankingA100" [label="<f0> SourceModule| <f1> torch._inductor.autoheuristic.artifacts._MMRankingA100",shape="record"];
	"torch._inductor.autoheuristic.artifacts" [label="<f0> Package| <f1> torch._inductor.autoheuristic.artifacts",shape="record"];
	"torch._inductor.aoti_eager" [label="<f0> SourceModule| <f1> torch._inductor.aoti_eager",shape="record"];
	"torch._higher_order_ops.run_const_graph" [label="<f0> SourceModule| <f1> torch._higher_order_ops.run_const_graph",shape="record"];
	"torch._higher_order_ops.executorch_call_delegate" [label="<f0> SourceModule| <f1> torch._higher_order_ops.executorch_call_delegate",shape="record"];
	"torch._functorch.top_operators_github_usage" [label="<f0> SourceModule| <f1> torch._functorch.top_operators_github_usage",shape="record"];
	"torch._functorch.pytree_hacks" [label="<f0> SourceModule| <f1> torch._functorch.pytree_hacks",shape="record"];
	"torch._functorch.benchmark_utils" [label="<f0> SourceModule| <f1> torch._functorch.benchmark_utils",shape="record"];
	"torch._export.tools" [label="<f0> SourceModule| <f1> torch._export.tools",shape="record"];
	"torch._export.serde.schema_check" [label="<f0> SourceModule| <f1> torch._export.serde.schema_check",shape="record"];
	"torch._export.serde.dynamic_shapes" [label="<f0> SourceModule| <f1> torch._export.serde.dynamic_shapes",shape="record"];
	"torch._export.passes.remove_runtime_assertions" [label="<f0> SourceModule| <f1> torch._export.passes.remove_runtime_assertions",shape="record"];
	"torch._export.passes.functionalize_side_effectful_ops_pass" [label="<f0> SourceModule| <f1> torch._export.passes.functionalize_side_effectful_ops_pass",shape="record"];
	"torch._export.passes.constant_folding" [label="<f0> SourceModule| <f1> torch._export.passes.constant_folding",shape="record"];
	"torch._export.db.gen_example" [label="<f0> SourceModule| <f1> torch._export.db.gen_example",shape="record"];
	"torch._export.db.examples.user_input_mutation" [label="<f0> SourceModule| <f1> torch._export.db.examples.user_input_mutation",shape="record"];
	"torch._export.db.examples.unsupported_operator" [label="<f0> SourceModule| <f1> torch._export.db.examples.unsupported_operator",shape="record"];
	"torch._export.db.examples.type_reflection_method" [label="<f0> SourceModule| <f1> torch._export.db.examples.type_reflection_method",shape="record"];
	"torch._export.db.examples.tensor_setattr" [label="<f0> SourceModule| <f1> torch._export.db.examples.tensor_setattr",shape="record"];
	"torch._export.db.examples.static_if" [label="<f0> SourceModule| <f1> torch._export.db.examples.static_if",shape="record"];
	"torch._export.db.examples.static_for_loop" [label="<f0> SourceModule| <f1> torch._export.db.examples.static_for_loop",shape="record"];
	"torch._export.db.examples.specialized_attribute" [label="<f0> SourceModule| <f1> torch._export.db.examples.specialized_attribute",shape="record"];
	"torch._export.db.examples.scalar_output" [label="<f0> SourceModule| <f1> torch._export.db.examples.scalar_output",shape="record"];
	"torch._export.db.examples.pytree_flatten" [label="<f0> SourceModule| <f1> torch._export.db.examples.pytree_flatten",shape="record"];
	"torch._export.db.examples.optional_input" [label="<f0> SourceModule| <f1> torch._export.db.examples.optional_input",shape="record"];
	"torch._export.db.examples.null_context_manager" [label="<f0> SourceModule| <f1> torch._export.db.examples.null_context_manager",shape="record"];
	"torch._export.db.examples.nested_function" [label="<f0> SourceModule| <f1> torch._export.db.examples.nested_function",shape="record"];
	"torch._export.db.examples.model_attr_mutation" [label="<f0> SourceModule| <f1> torch._export.db.examples.model_attr_mutation",shape="record"];
	"torch._export.db.examples.list_unpack" [label="<f0> SourceModule| <f1> torch._export.db.examples.list_unpack",shape="record"];
	"torch._export.db.examples.list_contains" [label="<f0> SourceModule| <f1> torch._export.db.examples.list_contains",shape="record"];
	"torch._export.db.examples.fn_with_kwargs" [label="<f0> SourceModule| <f1> torch._export.db.examples.fn_with_kwargs",shape="record"];
	"torch._export.db.examples.dynamic_shape_view" [label="<f0> SourceModule| <f1> torch._export.db.examples.dynamic_shape_view",shape="record"];
	"torch._export.db.examples.dynamic_shape_slicing" [label="<f0> SourceModule| <f1> torch._export.db.examples.dynamic_shape_slicing",shape="record"];
	"torch._export.db.examples.dynamic_shape_round" [label="<f0> SourceModule| <f1> torch._export.db.examples.dynamic_shape_round",shape="record"];
	"torch._export.db.examples.dynamic_shape_map" [label="<f0> SourceModule| <f1> torch._export.db.examples.dynamic_shape_map",shape="record"];
	"torch._export.db.examples.dynamic_shape_if_guard" [label="<f0> SourceModule| <f1> torch._export.db.examples.dynamic_shape_if_guard",shape="record"];
	"torch._export.db.examples.dynamic_shape_constructor" [label="<f0> SourceModule| <f1> torch._export.db.examples.dynamic_shape_constructor",shape="record"];
	"torch._export.db.examples.dynamic_shape_assert" [label="<f0> SourceModule| <f1> torch._export.db.examples.dynamic_shape_assert",shape="record"];
	"torch._export.db.examples.dictionary" [label="<f0> SourceModule| <f1> torch._export.db.examples.dictionary",shape="record"];
	"torch._export.db.examples.decorator" [label="<f0> SourceModule| <f1> torch._export.db.examples.decorator",shape="record"];
	"torch._export.db.examples.constrain_as_value_example" [label="<f0> SourceModule| <f1> torch._export.db.examples.constrain_as_value_example",shape="record"];
	"torch._export.db.examples.constrain_as_size_example" [label="<f0> SourceModule| <f1> torch._export.db.examples.constrain_as_size_example",shape="record"];
	"torch._export.db.examples.cond_predicate" [label="<f0> SourceModule| <f1> torch._export.db.examples.cond_predicate",shape="record"];
	"torch._export.db.examples.cond_operands" [label="<f0> SourceModule| <f1> torch._export.db.examples.cond_operands",shape="record"];
	"torch._export.db.examples.cond_closed_over_variable" [label="<f0> SourceModule| <f1> torch._export.db.examples.cond_closed_over_variable",shape="record"];
	"torch._export.db.examples.cond_branch_nonlocal_variables" [label="<f0> SourceModule| <f1> torch._export.db.examples.cond_branch_nonlocal_variables",shape="record"];
	"torch._export.db.examples.cond_branch_nested_function" [label="<f0> SourceModule| <f1> torch._export.db.examples.cond_branch_nested_function",shape="record"];
	"torch._export.db.examples.cond_branch_class_method" [label="<f0> SourceModule| <f1> torch._export.db.examples.cond_branch_class_method",shape="record"];
	"torch._export.db.examples.class_method" [label="<f0> SourceModule| <f1> torch._export.db.examples.class_method",shape="record"];
	"torch._export.db.examples.autograd_function" [label="<f0> SourceModule| <f1> torch._export.db.examples.autograd_function",shape="record"];
	"torch._export.db.examples.assume_constant_result" [label="<f0> SourceModule| <f1> torch._export.db.examples.assume_constant_result",shape="record"];
	"torch._dynamo.test_minifier_common" [label="<f0> SourceModule| <f1> torch._dynamo.test_minifier_common",shape="record"];
	"torch._dynamo.test_case" [label="<f0> SourceModule| <f1> torch._dynamo.test_case",shape="record"];
	"torch._dynamo.profiler" [label="<f0> SourceModule| <f1> torch._dynamo.profiler",shape="record"];
	"torch._dynamo.backends.tvm" [label="<f0> SourceModule| <f1> torch._dynamo.backends.tvm",shape="record"];
	"'tvm.contrib'" [label="<f0> MissingModule| <f1> 'tvm.contrib'",shape="record"];
	"tvm" [label="<f0> MissingModule| <f1> tvm",shape="record"];
	"torch._dynamo.backends.torchxla" [label="<f0> SourceModule| <f1> torch._dynamo.backends.torchxla",shape="record"];
	"torch._dynamo.backends.tensorrt" [label="<f0> SourceModule| <f1> torch._dynamo.backends.tensorrt",shape="record"];
	"torch._dynamo.backends.onnxrt" [label="<f0> SourceModule| <f1> torch._dynamo.backends.onnxrt",shape="record"];
	"torch._dynamo.backends.inductor" [label="<f0> SourceModule| <f1> torch._dynamo.backends.inductor",shape="record"];
	"torch._dynamo.backends.cudagraphs" [label="<f0> SourceModule| <f1> torch._dynamo.backends.cudagraphs",shape="record"];
	"torch._deploy" [label="<f0> SourceModule| <f1> torch._deploy",shape="record"];
	"torch._custom_op.functional" [label="<f0> SourceModule| <f1> torch._custom_op.functional",shape="record"];
	"torch.cuda._sanitizer" [label="<f0> SourceModule| <f1> torch.cuda._sanitizer",shape="record"];
	"torch._linalg_utils" [label="<f0> SourceModule| <f1> torch._linalg_utils",shape="record"];
	"torch.masked" [label="<f0> Package| <f1> torch.masked",shape="record"];
	"torch._lobpcg" [label="<f0> SourceModule| <f1> torch._lobpcg",shape="record"];
	"torch.multiprocessing._atfork" [label="<f0> SourceModule| <f1> torch.multiprocessing._atfork",shape="record"];
	"torch.quasirandom" [label="<f0> SourceModule| <f1> torch.quasirandom",shape="record"];
	"torch.quantization" [label="<f0> Package| <f1> torch.quantization",shape="record"];
	"torch._tensor_docs" [label="<f0> SourceModule| <f1> torch._tensor_docs",shape="record"];
	"torch._storage_docs" [label="<f0> SourceModule| <f1> torch._storage_docs",shape="record"];
	"torch._size_docs" [label="<f0> SourceModule| <f1> torch._size_docs",shape="record"];
	"torch.nn.quantized" [label="<f0> Package| <f1> torch.nn.quantized",shape="record"];
	"torch.nn.quantizable" [label="<f0> Package| <f1> torch.nn.quantizable",shape="record"];
	"torch.nn.qat" [label="<f0> Package| <f1> torch.nn.qat",shape="record"];
	"torch.nn.intrinsic" [label="<f0> Package| <f1> torch.nn.intrinsic",shape="record"];
	"torch.signal.windows" [label="<f0> Package| <f1> torch.signal.windows",shape="record"];
	"torch.signal" [label="<f0> Package| <f1> torch.signal",shape="record"];
	"torch.special" [label="<f0> Package| <f1> torch.special",shape="record"];
	"torch.mtia" [label="<f0> Package| <f1> torch.mtia",shape="record"];
	"torch.linalg" [label="<f0> Package| <f1> torch.linalg",shape="record"];
	"torch.fft" [label="<f0> Package| <f1> torch.fft",shape="record"];
	"torch.cpu" [label="<f0> Package| <f1> torch.cpu",shape="record"];
	"torch.__config__" [label="<f0> SourceModule| <f1> torch.__config__",shape="record"];
	"torch.functional" [label="<f0> SourceModule| <f1> torch.functional",shape="record"];
	"torch._compile" [label="<f0> SourceModule| <f1> torch._compile",shape="record"];
	"'torch._C._VariableFunctions'" [label="<f0> MissingModule| <f1> 'torch._C._VariableFunctions'",shape="record"];
	"torch._tensor" [label="<f0> SourceModule| <f1> torch._tensor",shape="record"];
	"sre_constants" [label="<f0> SourceModule| <f1> sre_constants",shape="record"];
	"linecache" [label="<f0> SourceModule| <f1> linecache",shape="record"];
	"sre_compile" [label="<f0> SourceModule| <f1> sre_compile",shape="record"];
	"warnings" [label="<f0> SourceModule| <f1> warnings",shape="record"];
	"re._parser" [label="<f0> SourceModule| <f1> re._parser",shape="record"];
	"re._constants" [label="<f0> SourceModule| <f1> re._constants",shape="record"];
	"re._compiler" [label="<f0> SourceModule| <f1> re._compiler",shape="record"];
	"re._casefix" [label="<f0> SourceModule| <f1> re._casefix",shape="record"];
	"re" [label="<f0> Package| <f1> re",shape="record"];
	"collections.abc" [label="<f0> SourceModule| <f1> collections.abc",shape="record"];
	"collections" [label="<f0> Package| <f1> collections",shape="record"];
	"locale" [label="<f0> SourceModule| <f1> locale",shape="record"];
	"_locale" [label="<f0> BuiltinModule| <f1> _locale",shape="record"];
	"keyword" [label="<f0> SourceModule| <f1> keyword",shape="record"];
	"copyreg" [label="<f0> SourceModule| <f1> copyreg",shape="record"];
	"enum" [label="<f0> SourceModule| <f1> enum",shape="record"];
	"heapq" [label="<f0> SourceModule| <f1> heapq",shape="record"];
	"_heapq" [label="<f0> BuiltinModule| <f1> _heapq",shape="record"];
	"sre_parse" [label="<f0> SourceModule| <f1> sre_parse",shape="record"];
	"encodings.zlib_codec" [label="<f0> SourceModule| <f1> encodings.zlib_codec",shape="record"];
	"encodings.uu_codec" [label="<f0> SourceModule| <f1> encodings.uu_codec",shape="record"];
	"encodings.utf_8_sig" [label="<f0> SourceModule| <f1> encodings.utf_8_sig",shape="record"];
	"encodings.utf_8" [label="<f0> SourceModule| <f1> encodings.utf_8",shape="record"];
	"encodings.utf_7" [label="<f0> SourceModule| <f1> encodings.utf_7",shape="record"];
	"encodings.utf_32_le" [label="<f0> SourceModule| <f1> encodings.utf_32_le",shape="record"];
	"encodings.utf_32_be" [label="<f0> SourceModule| <f1> encodings.utf_32_be",shape="record"];
	"encodings.utf_32" [label="<f0> SourceModule| <f1> encodings.utf_32",shape="record"];
	"encodings.utf_16_le" [label="<f0> SourceModule| <f1> encodings.utf_16_le",shape="record"];
	"encodings.utf_16_be" [label="<f0> SourceModule| <f1> encodings.utf_16_be",shape="record"];
	"encodings.utf_16" [label="<f0> SourceModule| <f1> encodings.utf_16",shape="record"];
	"encodings.unicode_escape" [label="<f0> SourceModule| <f1> encodings.unicode_escape",shape="record"];
	"encodings.undefined" [label="<f0> SourceModule| <f1> encodings.undefined",shape="record"];
	"encodings.tis_620" [label="<f0> SourceModule| <f1> encodings.tis_620",shape="record"];
	"encodings.shift_jisx0213" [label="<f0> SourceModule| <f1> encodings.shift_jisx0213",shape="record"];
	"_codecs_jp" [label="<f0> BuiltinModule| <f1> _codecs_jp",shape="record"];
	"encodings.shift_jis_2004" [label="<f0> SourceModule| <f1> encodings.shift_jis_2004",shape="record"];
	"encodings.shift_jis" [label="<f0> SourceModule| <f1> encodings.shift_jis",shape="record"];
	"encodings.rot_13" [label="<f0> SourceModule| <f1> encodings.rot_13",shape="record"];
	"encodings.raw_unicode_escape" [label="<f0> SourceModule| <f1> encodings.raw_unicode_escape",shape="record"];
	"encodings.quopri_codec" [label="<f0> SourceModule| <f1> encodings.quopri_codec",shape="record"];
	"encodings.punycode" [label="<f0> SourceModule| <f1> encodings.punycode",shape="record"];
	"encodings.ptcp154" [label="<f0> SourceModule| <f1> encodings.ptcp154",shape="record"];
	"encodings.palmos" [label="<f0> SourceModule| <f1> encodings.palmos",shape="record"];
	"encodings.oem" [label="<f0> SourceModule| <f1> encodings.oem",shape="record"];
	"encodings.mbcs" [label="<f0> SourceModule| <f1> encodings.mbcs",shape="record"];
	"encodings.mac_turkish" [label="<f0> SourceModule| <f1> encodings.mac_turkish",shape="record"];
	"encodings.mac_romanian" [label="<f0> SourceModule| <f1> encodings.mac_romanian",shape="record"];
	"encodings.mac_roman" [label="<f0> SourceModule| <f1> encodings.mac_roman",shape="record"];
	"encodings.mac_latin2" [label="<f0> SourceModule| <f1> encodings.mac_latin2",shape="record"];
	"encodings.mac_iceland" [label="<f0> SourceModule| <f1> encodings.mac_iceland",shape="record"];
	"encodings.mac_greek" [label="<f0> SourceModule| <f1> encodings.mac_greek",shape="record"];
	"encodings.mac_farsi" [label="<f0> SourceModule| <f1> encodings.mac_farsi",shape="record"];
	"encodings.mac_cyrillic" [label="<f0> SourceModule| <f1> encodings.mac_cyrillic",shape="record"];
	"encodings.mac_croatian" [label="<f0> SourceModule| <f1> encodings.mac_croatian",shape="record"];
	"encodings.mac_arabic" [label="<f0> SourceModule| <f1> encodings.mac_arabic",shape="record"];
	"encodings.latin_1" [label="<f0> SourceModule| <f1> encodings.latin_1",shape="record"];
	"encodings.kz1048" [label="<f0> SourceModule| <f1> encodings.kz1048",shape="record"];
	"encodings.koi8_u" [label="<f0> SourceModule| <f1> encodings.koi8_u",shape="record"];
	"encodings.koi8_t" [label="<f0> SourceModule| <f1> encodings.koi8_t",shape="record"];
	"encodings.koi8_r" [label="<f0> SourceModule| <f1> encodings.koi8_r",shape="record"];
	"encodings.johab" [label="<f0> SourceModule| <f1> encodings.johab",shape="record"];
	"_codecs_kr" [label="<f0> BuiltinModule| <f1> _codecs_kr",shape="record"];
	"encodings.iso8859_9" [label="<f0> SourceModule| <f1> encodings.iso8859_9",shape="record"];
	"encodings.iso8859_8" [label="<f0> SourceModule| <f1> encodings.iso8859_8",shape="record"];
	"encodings.iso8859_7" [label="<f0> SourceModule| <f1> encodings.iso8859_7",shape="record"];
	"encodings.iso8859_6" [label="<f0> SourceModule| <f1> encodings.iso8859_6",shape="record"];
	"encodings.iso8859_5" [label="<f0> SourceModule| <f1> encodings.iso8859_5",shape="record"];
	"encodings.iso8859_4" [label="<f0> SourceModule| <f1> encodings.iso8859_4",shape="record"];
	"encodings.iso8859_3" [label="<f0> SourceModule| <f1> encodings.iso8859_3",shape="record"];
	"encodings.iso8859_2" [label="<f0> SourceModule| <f1> encodings.iso8859_2",shape="record"];
	"encodings.iso8859_16" [label="<f0> SourceModule| <f1> encodings.iso8859_16",shape="record"];
	"encodings.iso8859_15" [label="<f0> SourceModule| <f1> encodings.iso8859_15",shape="record"];
	"encodings.iso8859_14" [label="<f0> SourceModule| <f1> encodings.iso8859_14",shape="record"];
	"encodings.iso8859_13" [label="<f0> SourceModule| <f1> encodings.iso8859_13",shape="record"];
	"encodings.iso8859_11" [label="<f0> SourceModule| <f1> encodings.iso8859_11",shape="record"];
	"encodings.iso8859_10" [label="<f0> SourceModule| <f1> encodings.iso8859_10",shape="record"];
	"encodings.iso8859_1" [label="<f0> SourceModule| <f1> encodings.iso8859_1",shape="record"];
	"encodings.iso2022_kr" [label="<f0> SourceModule| <f1> encodings.iso2022_kr",shape="record"];
	"_codecs_iso2022" [label="<f0> BuiltinModule| <f1> _codecs_iso2022",shape="record"];
	"encodings.iso2022_jp_ext" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_ext",shape="record"];
	"encodings.iso2022_jp_3" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_3",shape="record"];
	"encodings.iso2022_jp_2004" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_2004",shape="record"];
	"encodings.iso2022_jp_2" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_2",shape="record"];
	"encodings.iso2022_jp_1" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_1",shape="record"];
	"encodings.iso2022_jp" [label="<f0> SourceModule| <f1> encodings.iso2022_jp",shape="record"];
	"encodings.idna" [label="<f0> SourceModule| <f1> encodings.idna",shape="record"];
	"stringprep" [label="<f0> SourceModule| <f1> stringprep",shape="record"];
	"encodings.hz" [label="<f0> SourceModule| <f1> encodings.hz",shape="record"];
	"_codecs_cn" [label="<f0> BuiltinModule| <f1> _codecs_cn",shape="record"];
	"encodings.hp_roman8" [label="<f0> SourceModule| <f1> encodings.hp_roman8",shape="record"];
	"encodings.hex_codec" [label="<f0> SourceModule| <f1> encodings.hex_codec",shape="record"];
	"encodings.gbk" [label="<f0> SourceModule| <f1> encodings.gbk",shape="record"];
	"encodings.gb2312" [label="<f0> SourceModule| <f1> encodings.gb2312",shape="record"];
	"encodings.gb18030" [label="<f0> SourceModule| <f1> encodings.gb18030",shape="record"];
	"encodings.euc_kr" [label="<f0> SourceModule| <f1> encodings.euc_kr",shape="record"];
	"encodings.euc_jp" [label="<f0> SourceModule| <f1> encodings.euc_jp",shape="record"];
	"encodings.euc_jisx0213" [label="<f0> SourceModule| <f1> encodings.euc_jisx0213",shape="record"];
	"encodings.euc_jis_2004" [label="<f0> SourceModule| <f1> encodings.euc_jis_2004",shape="record"];
	"encodings.cp950" [label="<f0> SourceModule| <f1> encodings.cp950",shape="record"];
	"_codecs_tw" [label="<f0> BuiltinModule| <f1> _codecs_tw",shape="record"];
	"encodings.cp949" [label="<f0> SourceModule| <f1> encodings.cp949",shape="record"];
	"encodings.cp932" [label="<f0> SourceModule| <f1> encodings.cp932",shape="record"];
	"encodings.cp875" [label="<f0> SourceModule| <f1> encodings.cp875",shape="record"];
	"encodings.cp874" [label="<f0> SourceModule| <f1> encodings.cp874",shape="record"];
	"encodings.cp869" [label="<f0> SourceModule| <f1> encodings.cp869",shape="record"];
	"encodings.cp866" [label="<f0> SourceModule| <f1> encodings.cp866",shape="record"];
	"encodings.cp865" [label="<f0> SourceModule| <f1> encodings.cp865",shape="record"];
	"encodings.cp864" [label="<f0> SourceModule| <f1> encodings.cp864",shape="record"];
	"encodings.cp863" [label="<f0> SourceModule| <f1> encodings.cp863",shape="record"];
	"encodings.cp862" [label="<f0> SourceModule| <f1> encodings.cp862",shape="record"];
	"encodings.cp861" [label="<f0> SourceModule| <f1> encodings.cp861",shape="record"];
	"encodings.cp860" [label="<f0> SourceModule| <f1> encodings.cp860",shape="record"];
	"encodings.cp858" [label="<f0> SourceModule| <f1> encodings.cp858",shape="record"];
	"encodings.cp857" [label="<f0> SourceModule| <f1> encodings.cp857",shape="record"];
	"encodings.cp856" [label="<f0> SourceModule| <f1> encodings.cp856",shape="record"];
	"encodings.cp855" [label="<f0> SourceModule| <f1> encodings.cp855",shape="record"];
	"encodings.cp852" [label="<f0> SourceModule| <f1> encodings.cp852",shape="record"];
	"encodings.cp850" [label="<f0> SourceModule| <f1> encodings.cp850",shape="record"];
	"encodings.cp775" [label="<f0> SourceModule| <f1> encodings.cp775",shape="record"];
	"encodings.cp737" [label="<f0> SourceModule| <f1> encodings.cp737",shape="record"];
	"encodings.cp720" [label="<f0> SourceModule| <f1> encodings.cp720",shape="record"];
	"encodings.cp500" [label="<f0> SourceModule| <f1> encodings.cp500",shape="record"];
	"encodings.cp437" [label="<f0> SourceModule| <f1> encodings.cp437",shape="record"];
	"encodings.cp424" [label="<f0> SourceModule| <f1> encodings.cp424",shape="record"];
	"encodings.cp273" [label="<f0> SourceModule| <f1> encodings.cp273",shape="record"];
	"encodings.cp1258" [label="<f0> SourceModule| <f1> encodings.cp1258",shape="record"];
	"encodings.cp1257" [label="<f0> SourceModule| <f1> encodings.cp1257",shape="record"];
	"encodings.cp1256" [label="<f0> SourceModule| <f1> encodings.cp1256",shape="record"];
	"encodings.cp1255" [label="<f0> SourceModule| <f1> encodings.cp1255",shape="record"];
	"encodings.cp1254" [label="<f0> SourceModule| <f1> encodings.cp1254",shape="record"];
	"encodings.cp1253" [label="<f0> SourceModule| <f1> encodings.cp1253",shape="record"];
	"encodings.cp1252" [label="<f0> SourceModule| <f1> encodings.cp1252",shape="record"];
	"encodings.cp1251" [label="<f0> SourceModule| <f1> encodings.cp1251",shape="record"];
	"encodings.cp1250" [label="<f0> SourceModule| <f1> encodings.cp1250",shape="record"];
	"encodings.cp1140" [label="<f0> SourceModule| <f1> encodings.cp1140",shape="record"];
	"encodings.cp1125" [label="<f0> SourceModule| <f1> encodings.cp1125",shape="record"];
	"encodings.cp1026" [label="<f0> SourceModule| <f1> encodings.cp1026",shape="record"];
	"encodings.cp1006" [label="<f0> SourceModule| <f1> encodings.cp1006",shape="record"];
	"encodings.cp037" [label="<f0> SourceModule| <f1> encodings.cp037",shape="record"];
	"encodings.charmap" [label="<f0> SourceModule| <f1> encodings.charmap",shape="record"];
	"encodings.bz2_codec" [label="<f0> SourceModule| <f1> encodings.bz2_codec",shape="record"];
	"encodings.big5hkscs" [label="<f0> SourceModule| <f1> encodings.big5hkscs",shape="record"];
	"_codecs_hk" [label="<f0> BuiltinModule| <f1> _codecs_hk",shape="record"];
	"encodings.big5" [label="<f0> SourceModule| <f1> encodings.big5",shape="record"];
	"encodings.base64_codec" [label="<f0> SourceModule| <f1> encodings.base64_codec",shape="record"];
	"encodings.ascii" [label="<f0> SourceModule| <f1> encodings.ascii",shape="record"];
	"encodings.aliases" [label="<f0> SourceModule| <f1> encodings.aliases",shape="record"];
	"encodings" [label="<f0> Package| <f1> encodings",shape="record"];
	"operator" [label="<f0> SourceModule| <f1> operator",shape="record"];
	"traceback" [label="<f0> SourceModule| <f1> traceback",shape="record"];
	"os" [label="<f0> SourceModule| <f1> os",shape="record"];
	"abc" [label="<f0> SourceModule| <f1> abc",shape="record"];
	"_py_abc" [label="<f0> SourceModule| <f1> _py_abc",shape="record"];
	"_abc" [label="<f0> BuiltinModule| <f1> _abc",shape="record"];
	"_weakrefset" [label="<f0> SourceModule| <f1> _weakrefset",shape="record"];
	"_collections_abc" [label="<f0> SourceModule| <f1> _collections_abc",shape="record"];
	"stat" [label="<f0> SourceModule| <f1> stat",shape="record"];
	"_stat" [label="<f0> BuiltinModule| <f1> _stat",shape="record"];
	"reprlib" [label="<f0> SourceModule| <f1> reprlib",shape="record"];
	"io" [label="<f0> SourceModule| <f1> io",shape="record"];
	"posixpath" [label="<f0> SourceModule| <f1> posixpath",shape="record"];
	"genericpath" [label="<f0> SourceModule| <f1> genericpath",shape="record"];
	"functools" [label="<f0> SourceModule| <f1> functools",shape="record"];
	"_functools" [label="<f0> BuiltinModule| <f1> _functools",shape="record"];
	"weakref" [label="<f0> SourceModule| <f1> weakref",shape="record"];
	"types" [label="<f0> SourceModule| <f1> types",shape="record"];
	"_sre" [label="<f0> BuiltinModule| <f1> _sre",shape="record"];
	"_posixsubprocess" [label="<f0> MissingModule| <f1> _posixsubprocess",shape="record"];
	"datetime" [label="<f0> SourceModule| <f1> datetime",shape="record"];
	"_datetime" [label="<f0> BuiltinModule| <f1> _datetime",shape="record"];
	"_pickle" [label="<f0> BuiltinModule| <f1> _pickle",shape="record"];
	"ntpath" [label="<f0> SourceModule| <f1> ntpath",shape="record"];
	"posix" [label="<f0> MissingModule| <f1> posix",shape="record"];
	"codecs" [label="<f0> SourceModule| <f1> codecs",shape="record"];
	"time" [label="<f0> BuiltinModule| <f1> time",shape="record"];
	"gc" [label="<f0> BuiltinModule| <f1> gc",shape="record"];
	subgraph "cluster_mpmath.tests" {
		label="mpmath.tests";
		"mpmath.tests" -> "mpmath.tests.runtests" [style="dotted"];
	}
	subgraph "cluster_transformers.models.wav2vec2_with_lm" {
		label="transformers.models.wav2vec2_with_lm";
		"transformers.models.wav2vec2_with_lm" -> "transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mobilevitv2" {
		label="transformers.models.mobilevitv2";
		"transformers.models.mobilevitv2" -> "transformers.models.mobilevitv2.configuration_mobilevitv2" [style="dotted"];
		"transformers.models.mobilevitv2" -> "transformers.models.mobilevitv2.modeling_mobilevitv2" [style="dotted"];
	}
	subgraph "cluster_asyncio" {
		label="asyncio";
		"asyncio" -> "asyncio.constants" [style="dotted"];
		"asyncio" -> "asyncio.coroutines" [style="dotted"];
		"asyncio" -> "asyncio.format_helpers" [style="dotted"];
		"asyncio" -> "asyncio.DefaultEventLoopPolicy" [style="dotted"];
		"asyncio" -> "asyncio.events" [style="dotted"];
		"asyncio" -> "asyncio.exceptions" [style="dotted"];
		"asyncio" -> "asyncio.base_futures" [style="dotted"];
		"asyncio" -> "asyncio.futures" [style="dotted"];
		"asyncio" -> "asyncio.protocols" [style="dotted"];
		"asyncio" -> "asyncio.transports" [style="dotted"];
		"asyncio" -> "asyncio.sslproto" [style="dotted"];
		"asyncio" -> "asyncio.mixins" [style="dotted"];
		"asyncio" -> "asyncio.base_tasks" [style="dotted"];
		"asyncio" -> "asyncio.locks" [style="dotted"];
		"asyncio" -> "asyncio.tasks" [style="dotted"];
		"asyncio" -> "asyncio.staggered" [style="dotted"];
		"asyncio" -> "asyncio.trsock" [style="dotted"];
		"asyncio" -> "asyncio.base_events" [style="dotted"];
		"asyncio" -> "asyncio.runners" [style="dotted"];
		"asyncio" -> "asyncio.queues" [style="dotted"];
		"asyncio" -> "asyncio.streams" [style="dotted"];
		"asyncio" -> "asyncio.subprocess" [style="dotted"];
		"asyncio" -> "asyncio.taskgroups" [style="dotted"];
		"asyncio" -> "asyncio.timeouts" [style="dotted"];
		"asyncio" -> "asyncio.threads" [style="dotted"];
		"asyncio" -> "asyncio.base_subprocess" [style="dotted"];
		"asyncio" -> "asyncio.proactor_events" [style="dotted"];
		"asyncio" -> "asyncio.selector_events" [style="dotted"];
		"asyncio" -> "asyncio.windows_utils" [style="dotted"];
		"asyncio" -> "asyncio.windows_events" [style="dotted"];
		"asyncio" -> "asyncio.unix_events" [style="dotted"];
		"asyncio" -> "asyncio.log" [style="dotted"];
	}
	subgraph "cluster_xmlrpc" {
		label="xmlrpc";
		"xmlrpc" -> "xmlrpc.client" [style="dotted"];
	}
	subgraph "cluster_transformers.models.rt_detr" {
		label="transformers.models.rt_detr";
		"transformers.models.rt_detr" -> "transformers.models.rt_detr.configuration_rt_detr" [style="dotted"];
		"transformers.models.rt_detr" -> "transformers.models.rt_detr.configuration_rt_detr_resnet" [style="dotted"];
		"transformers.models.rt_detr" -> "transformers.models.rt_detr.image_processing_rt_detr" [style="dotted"];
		"transformers.models.rt_detr" -> "transformers.models.rt_detr.modeling_rt_detr" [style="dotted"];
		"transformers.models.rt_detr" -> "transformers.models.rt_detr.modeling_rt_detr_resnet" [style="dotted"];
	}
	subgraph "cluster_torch.utils.benchmark.utils" {
		label="torch.utils.benchmark.utils";
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils.cpp_jit" [style="dotted"];
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils._stubs" [style="dotted"];
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils.common" [style="dotted"];
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils.compare" [style="dotted"];
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils.compile" [style="dotted"];
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils.fuzzer" [style="dotted"];
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils.sparse_fuzzer" [style="dotted"];
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils.timer" [style="dotted"];
		"torch.utils.benchmark.utils" -> "torch.utils.benchmark.utils.valgrind_wrapper" [style="dotted"];
	}
	subgraph "cluster_transformers.models.resnet" {
		label="transformers.models.resnet";
		"transformers.models.resnet" -> "transformers.models.resnet.configuration_resnet" [style="dotted"];
		"transformers.models.resnet" -> "transformers.models.resnet.modeling_resnet" [style="dotted"];
		"transformers.models.resnet" -> "transformers.models.resnet.modeling_tf_resnet" [style="dotted"];
		"transformers.models.resnet" -> "transformers.models.resnet.modeling_flax_resnet" [style="dotted"];
	}
	subgraph "cluster_transformers.agents" {
		label="transformers.agents";
		"transformers.agents" -> "transformers.agents.agents" [style="dotted"];
		"transformers.agents" -> "transformers.agents.llm_engine" [style="dotted"];
		"transformers.agents" -> "transformers.agents.monitoring" [style="dotted"];
		"transformers.agents" -> "transformers.agents.tools" [style="dotted"];
		"transformers.agents" -> "transformers.agents.default_tools" [style="dotted"];
		"transformers.agents" -> "transformers.agents.document_question_answering" [style="dotted"];
		"transformers.agents" -> "transformers.agents.image_question_answering" [style="dotted"];
		"transformers.agents" -> "transformers.agents.search" [style="dotted"];
		"transformers.agents" -> "transformers.agents.speech_to_text" [style="dotted"];
		"transformers.agents" -> "transformers.agents.text_to_speech" [style="dotted"];
		"transformers.agents" -> "transformers.agents.translation" [style="dotted"];
		"transformers.agents" -> "transformers.agents.python_interpreter" [style="dotted"];
		"transformers.agents" -> "transformers.agents.agent_types" [style="dotted"];
		"transformers.agents" -> "transformers.agents.prompts" [style="dotted"];
	}
	subgraph "cluster_encodings" {
		label="encodings";
		"encodings" -> "encodings.aliases" [style="dotted"];
		"encodings" -> "encodings.mbcs" [style="dotted"];
		"encodings" -> "encodings.ascii" [style="dotted"];
		"encodings" -> "encodings.base64_codec" [style="dotted"];
		"encodings" -> "encodings.big5" [style="dotted"];
		"encodings" -> "encodings.big5hkscs" [style="dotted"];
		"encodings" -> "encodings.bz2_codec" [style="dotted"];
		"encodings" -> "encodings.charmap" [style="dotted"];
		"encodings" -> "encodings.cp037" [style="dotted"];
		"encodings" -> "encodings.cp1006" [style="dotted"];
		"encodings" -> "encodings.cp1026" [style="dotted"];
		"encodings" -> "encodings.cp1125" [style="dotted"];
		"encodings" -> "encodings.cp1140" [style="dotted"];
		"encodings" -> "encodings.cp1250" [style="dotted"];
		"encodings" -> "encodings.cp1251" [style="dotted"];
		"encodings" -> "encodings.cp1252" [style="dotted"];
		"encodings" -> "encodings.cp1253" [style="dotted"];
		"encodings" -> "encodings.cp1254" [style="dotted"];
		"encodings" -> "encodings.cp1255" [style="dotted"];
		"encodings" -> "encodings.cp1256" [style="dotted"];
		"encodings" -> "encodings.cp1257" [style="dotted"];
		"encodings" -> "encodings.cp1258" [style="dotted"];
		"encodings" -> "encodings.cp273" [style="dotted"];
		"encodings" -> "encodings.cp424" [style="dotted"];
		"encodings" -> "encodings.cp437" [style="dotted"];
		"encodings" -> "encodings.cp500" [style="dotted"];
		"encodings" -> "encodings.cp720" [style="dotted"];
		"encodings" -> "encodings.cp737" [style="dotted"];
		"encodings" -> "encodings.cp775" [style="dotted"];
		"encodings" -> "encodings.cp850" [style="dotted"];
		"encodings" -> "encodings.cp852" [style="dotted"];
		"encodings" -> "encodings.cp855" [style="dotted"];
		"encodings" -> "encodings.cp856" [style="dotted"];
		"encodings" -> "encodings.cp857" [style="dotted"];
		"encodings" -> "encodings.cp858" [style="dotted"];
		"encodings" -> "encodings.cp860" [style="dotted"];
		"encodings" -> "encodings.cp861" [style="dotted"];
		"encodings" -> "encodings.cp862" [style="dotted"];
		"encodings" -> "encodings.cp863" [style="dotted"];
		"encodings" -> "encodings.cp864" [style="dotted"];
		"encodings" -> "encodings.cp865" [style="dotted"];
		"encodings" -> "encodings.cp866" [style="dotted"];
		"encodings" -> "encodings.cp869" [style="dotted"];
		"encodings" -> "encodings.cp874" [style="dotted"];
		"encodings" -> "encodings.cp875" [style="dotted"];
		"encodings" -> "encodings.cp932" [style="dotted"];
		"encodings" -> "encodings.cp949" [style="dotted"];
		"encodings" -> "encodings.cp950" [style="dotted"];
		"encodings" -> "encodings.euc_jis_2004" [style="dotted"];
		"encodings" -> "encodings.euc_jisx0213" [style="dotted"];
		"encodings" -> "encodings.euc_jp" [style="dotted"];
		"encodings" -> "encodings.euc_kr" [style="dotted"];
		"encodings" -> "encodings.gb18030" [style="dotted"];
		"encodings" -> "encodings.gb2312" [style="dotted"];
		"encodings" -> "encodings.gbk" [style="dotted"];
		"encodings" -> "encodings.hex_codec" [style="dotted"];
		"encodings" -> "encodings.hp_roman8" [style="dotted"];
		"encodings" -> "encodings.hz" [style="dotted"];
		"encodings" -> "encodings.idna" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_1" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2004" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_3" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_ext" [style="dotted"];
		"encodings" -> "encodings.iso2022_kr" [style="dotted"];
		"encodings" -> "encodings.iso8859_1" [style="dotted"];
		"encodings" -> "encodings.iso8859_10" [style="dotted"];
		"encodings" -> "encodings.iso8859_11" [style="dotted"];
		"encodings" -> "encodings.iso8859_13" [style="dotted"];
		"encodings" -> "encodings.iso8859_14" [style="dotted"];
		"encodings" -> "encodings.iso8859_15" [style="dotted"];
		"encodings" -> "encodings.iso8859_16" [style="dotted"];
		"encodings" -> "encodings.iso8859_2" [style="dotted"];
		"encodings" -> "encodings.iso8859_3" [style="dotted"];
		"encodings" -> "encodings.iso8859_4" [style="dotted"];
		"encodings" -> "encodings.iso8859_5" [style="dotted"];
		"encodings" -> "encodings.iso8859_6" [style="dotted"];
		"encodings" -> "encodings.iso8859_7" [style="dotted"];
		"encodings" -> "encodings.iso8859_8" [style="dotted"];
		"encodings" -> "encodings.iso8859_9" [style="dotted"];
		"encodings" -> "encodings.johab" [style="dotted"];
		"encodings" -> "encodings.koi8_r" [style="dotted"];
		"encodings" -> "encodings.koi8_t" [style="dotted"];
		"encodings" -> "encodings.koi8_u" [style="dotted"];
		"encodings" -> "encodings.kz1048" [style="dotted"];
		"encodings" -> "encodings.latin_1" [style="dotted"];
		"encodings" -> "encodings.mac_arabic" [style="dotted"];
		"encodings" -> "encodings.mac_croatian" [style="dotted"];
		"encodings" -> "encodings.mac_cyrillic" [style="dotted"];
		"encodings" -> "encodings.mac_farsi" [style="dotted"];
		"encodings" -> "encodings.mac_greek" [style="dotted"];
		"encodings" -> "encodings.mac_iceland" [style="dotted"];
		"encodings" -> "encodings.mac_latin2" [style="dotted"];
		"encodings" -> "encodings.mac_roman" [style="dotted"];
		"encodings" -> "encodings.mac_romanian" [style="dotted"];
		"encodings" -> "encodings.mac_turkish" [style="dotted"];
		"encodings" -> "encodings.oem" [style="dotted"];
		"encodings" -> "encodings.palmos" [style="dotted"];
		"encodings" -> "encodings.ptcp154" [style="dotted"];
		"encodings" -> "encodings.punycode" [style="dotted"];
		"encodings" -> "encodings.quopri_codec" [style="dotted"];
		"encodings" -> "encodings.raw_unicode_escape" [style="dotted"];
		"encodings" -> "encodings.rot_13" [style="dotted"];
		"encodings" -> "encodings.shift_jis" [style="dotted"];
		"encodings" -> "encodings.shift_jis_2004" [style="dotted"];
		"encodings" -> "encodings.shift_jisx0213" [style="dotted"];
		"encodings" -> "encodings.tis_620" [style="dotted"];
		"encodings" -> "encodings.undefined" [style="dotted"];
		"encodings" -> "encodings.unicode_escape" [style="dotted"];
		"encodings" -> "encodings.utf_16" [style="dotted"];
		"encodings" -> "encodings.utf_16_be" [style="dotted"];
		"encodings" -> "encodings.utf_16_le" [style="dotted"];
		"encodings" -> "encodings.utf_32" [style="dotted"];
		"encodings" -> "encodings.utf_32_be" [style="dotted"];
		"encodings" -> "encodings.utf_32_le" [style="dotted"];
		"encodings" -> "encodings.utf_7" [style="dotted"];
		"encodings" -> "encodings.utf_8" [style="dotted"];
		"encodings" -> "encodings.utf_8_sig" [style="dotted"];
		"encodings" -> "encodings.uu_codec" [style="dotted"];
		"encodings" -> "encodings.zlib_codec" [style="dotted"];
	}
	subgraph "cluster_torch._custom_op" {
		label="torch._custom_op";
		"torch._custom_op" -> "torch._custom_op.impl" [style="dotted"];
		"torch._custom_op" -> "torch._custom_op.autograd" [style="dotted"];
		"torch._custom_op" -> "torch._custom_op.functional" [style="dotted"];
	}
	subgraph "cluster_http" {
		label="http";
		"http" -> "http.client" [style="dotted"];
		"http" -> "http.cookiejar" [style="dotted"];
		"http" -> "http.server" [style="dotted"];
		"http" -> "http.cookies" [style="dotted"];
		"http" -> "httpx" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal" {
		label="torch.testing._internal";
		"torch.testing._internal" -> "torch.testing._internal.common_utils" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_dtype" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_cuda" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_device_type" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.dynamo_test_failures" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.logging_tensor" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.distributed" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.jit_utils" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_jit" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.optests" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.autocast_test_lists" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.autograd_function_db" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.check_kernel_launches" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_dist_composable" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_distributed" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_fsdp" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_methods_invocations" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_mkldnn" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_modules" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_nn" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_optimizers" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_pruning" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_quantization" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_quantized" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.common_subclass" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.composite_compliance" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.custom_op_db" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.custom_tensor" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.dist_utils" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.hop_db" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.hypothesis_utils" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.inductor_utils" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.jit_metaprogramming_utils" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.logging_utils" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.quantization_torch_package_models" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.static_module" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.torchbind_impls" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.triton_utils" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.two_tensor" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.test_module" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.opinfo" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.generated" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.data" [style="dotted"];
		"torch.testing._internal" -> "torch.testing._internal.codegen" [style="dotted"];
	}
	subgraph "cluster_tkinter" {
		label="tkinter";
		"tkinter" -> "tkinter.constants" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn" {
		label="torch.ao.nn";
		"torch.ao.nn" -> "torch.ao.nn.intrinsic" [style="dotted"];
		"torch.ao.nn" -> "torch.ao.nn.sparse" [style="dotted"];
		"torch.ao.nn" -> "torch.ao.nn.quantizable" [style="dotted"];
		"torch.ao.nn" -> "torch.ao.nn.quantized" [style="dotted"];
		"torch.ao.nn" -> "torch.ao.nn.qat" [style="dotted"];
	}
	subgraph "cluster_sympy.printing.pretty" {
		label="sympy.printing.pretty";
		"sympy.printing.pretty" -> "sympy.printing.pretty.pretty" [style="dotted"];
		"sympy.printing.pretty" -> "sympy.printing.pretty.stringpict" [style="dotted"];
		"sympy.printing.pretty" -> "sympy.printing.pretty.pretty_symbology" [style="dotted"];
	}
	subgraph "cluster_transformers.models.auto" {
		label="transformers.models.auto";
		"transformers.models.auto" -> "transformers.models.auto.auto_factory" [style="dotted"];
		"transformers.models.auto" -> "transformers.models.auto.configuration_auto" [style="dotted"];
		"transformers.models.auto" -> "transformers.models.auto.feature_extraction_auto" [style="dotted"];
		"transformers.models.auto" -> "transformers.models.auto.image_processing_auto" [style="dotted"];
		"transformers.models.auto" -> "transformers.models.auto.processing_auto" [style="dotted"];
		"transformers.models.auto" -> "transformers.models.auto.tokenization_auto" [style="dotted"];
		"transformers.models.auto" -> "transformers.models.auto.modeling_auto" [style="dotted"];
		"transformers.models.auto" -> "transformers.models.auto.modeling_tf_auto" [style="dotted"];
		"transformers.models.auto" -> "transformers.models.auto.modeling_flax_auto" [style="dotted"];
	}
	subgraph "cluster_kivy.core" {
		label="kivy.core";
		"kivy.core" -> "kivy.core.window" [style="dotted"];
		"kivy.core" -> "kivy.core.gl" [style="dotted"];
		"kivy.core" -> "kivy.core.image" [style="dotted"];
		"kivy.core" -> "kivy.core.video" [style="dotted"];
		"kivy.core" -> "kivy.core.text" [style="dotted"];
		"kivy.core" -> "kivy.core.camera" [style="dotted"];
		"kivy.core" -> "kivy.core.audio" [style="dotted"];
		"kivy.core" -> "kivy.core.spelling" [style="dotted"];
		"kivy.core" -> "kivy.core.clipboard" [style="dotted"];
	}
	subgraph "cluster_torch.onnx._internal.diagnostics.infra.sarif" {
		label="torch.onnx._internal.diagnostics.infra.sarif";
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._address" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._region" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._replacement" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_change" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._rectangle" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._attachment" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._location_relationship" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._logical_location" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._physical_location" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._location" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._stack_frame" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._stack" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._web_request" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._web_response" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._thread_flow" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._code_flow" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._configuration_override" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._exception" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._notification" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._invocation" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._tool" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._conversion" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._edge" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._node" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._graph" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._fix" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._result_provenance" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._suppression" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._result" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._external_properties" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._special_locations" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._version_control_details" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._run" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._sarif_log" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif.version" [style="dotted"];
	}
	subgraph "cluster_torch._dynamo.variables" {
		label="torch._dynamo.variables";
		"torch._dynamo.variables" -> "torch._dynamo.variables.base" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.builtin" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.constant" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.ctx_manager" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.dicts" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.distributed" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.functions" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.higher_order_ops" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.iter" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.lazy" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.lists" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.misc" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.nn_module" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.optimizer" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.sdpa" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.tensor" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.torch" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.user_defined" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.builder" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.torch_function" [style="dotted"];
		"torch._dynamo.variables" -> "torch._dynamo.variables.script_object" [style="dotted"];
	}
	subgraph "cluster_transformers.models.longformer" {
		label="transformers.models.longformer";
		"transformers.models.longformer" -> "transformers.models.longformer.configuration_longformer" [style="dotted"];
		"transformers.models.longformer" -> "transformers.models.longformer.tokenization_longformer" [style="dotted"];
		"transformers.models.longformer" -> "transformers.models.longformer.tokenization_longformer_fast" [style="dotted"];
		"transformers.models.longformer" -> "transformers.models.longformer.modeling_longformer" [style="dotted"];
		"transformers.models.longformer" -> "transformers.models.longformer.modeling_tf_longformer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.tapas" {
		label="transformers.models.tapas";
		"transformers.models.tapas" -> "transformers.models.tapas.configuration_tapas" [style="dotted"];
		"transformers.models.tapas" -> "transformers.models.tapas.tokenization_tapas" [style="dotted"];
		"transformers.models.tapas" -> "transformers.models.tapas.modeling_tapas" [style="dotted"];
		"transformers.models.tapas" -> "transformers.models.tapas.modeling_tf_tapas" [style="dotted"];
	}
	subgraph "cluster_torch._prims_common" {
		label="torch._prims_common";
		"torch._prims_common" -> "torch._prims_common.wrappers" [style="dotted"];
	}
	subgraph "cluster_transformers.models.stablelm" {
		label="transformers.models.stablelm";
		"transformers.models.stablelm" -> "transformers.models.stablelm.configuration_stablelm" [style="dotted"];
		"transformers.models.stablelm" -> "transformers.models.stablelm.modeling_stablelm" [style="dotted"];
	}
	subgraph "cluster_docutils.parsers.rst" {
		label="docutils.parsers.rst";
		"docutils.parsers.rst" -> "docutils.parsers.rst.directives" [style="dotted"];
		"docutils.parsers.rst" -> "docutils.parsers.rst.roles" [style="dotted"];
		"docutils.parsers.rst" -> "docutils.parsers.rst.tableparser" [style="dotted"];
		"docutils.parsers.rst" -> "docutils.parsers.rst.states" [style="dotted"];
		"docutils.parsers.rst" -> "docutils.parsers.rst.languages" [style="dotted"];
	}
	subgraph "cluster_transformers.models.udop" {
		label="transformers.models.udop";
		"transformers.models.udop" -> "transformers.models.udop.configuration_udop" [style="dotted"];
		"transformers.models.udop" -> "transformers.models.udop.processing_udop" [style="dotted"];
		"transformers.models.udop" -> "transformers.models.udop.tokenization_udop" [style="dotted"];
		"transformers.models.udop" -> "transformers.models.udop.tokenization_udop_fast" [style="dotted"];
		"transformers.models.udop" -> "transformers.models.udop.modeling_udop" [style="dotted"];
	}
	subgraph "cluster_tokenizers.normalizers" {
		label="tokenizers.normalizers";
	}
	subgraph "cluster_transformers.models.cvt" {
		label="transformers.models.cvt";
		"transformers.models.cvt" -> "transformers.models.cvt.configuration_cvt" [style="dotted"];
		"transformers.models.cvt" -> "transformers.models.cvt.modeling_cvt" [style="dotted"];
		"transformers.models.cvt" -> "transformers.models.cvt.modeling_tf_cvt" [style="dotted"];
	}
	subgraph "cluster_torch.backends.xeon" {
		label="torch.backends.xeon";
		"torch.backends.xeon" -> "torch.backends.xeon.run_cpu" [style="dotted"];
	}
	subgraph "cluster_transformers.models.clip" {
		label="transformers.models.clip";
		"transformers.models.clip" -> "transformers.models.clip.configuration_clip" [style="dotted"];
		"transformers.models.clip" -> "transformers.models.clip.processing_clip" [style="dotted"];
		"transformers.models.clip" -> "transformers.models.clip.tokenization_clip" [style="dotted"];
		"transformers.models.clip" -> "transformers.models.clip.tokenization_clip_fast" [style="dotted"];
		"transformers.models.clip" -> "transformers.models.clip.feature_extraction_clip" [style="dotted"];
		"transformers.models.clip" -> "transformers.models.clip.image_processing_clip" [style="dotted"];
		"transformers.models.clip" -> "transformers.models.clip.modeling_clip" [style="dotted"];
		"transformers.models.clip" -> "transformers.models.clip.modeling_tf_clip" [style="dotted"];
		"transformers.models.clip" -> "transformers.models.clip.modeling_flax_clip" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.algorithms.model_averaging" {
		label="torch.distributed.algorithms.model_averaging";
		"torch.distributed.algorithms.model_averaging" -> "torch.distributed.algorithms.model_averaging.averagers" [style="dotted"];
		"torch.distributed.algorithms.model_averaging" -> "torch.distributed.algorithms.model_averaging.utils" [style="dotted"];
		"torch.distributed.algorithms.model_averaging" -> "torch.distributed.algorithms.model_averaging.hierarchical_model_averager" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.multiprocessing.subprocess_handler" {
		label="torch.distributed.elastic.multiprocessing.subprocess_handler";
		"torch.distributed.elastic.multiprocessing.subprocess_handler" -> "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers" [style="dotted"];
		"torch.distributed.elastic.multiprocessing.subprocess_handler" -> "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" [style="dotted"];
	}
	subgraph "cluster_torch.nn.utils._expanded_weights" {
		label="torch.nn.utils._expanded_weights";
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.conv_expanded_weights" [style="dotted"];
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.embedding_expanded_weights" [style="dotted"];
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [style="dotted"];
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.group_norm_expanded_weights" [style="dotted"];
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.instance_norm_expanded_weights" [style="dotted"];
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.layer_norm_expanded_weights" [style="dotted"];
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.linear_expanded_weights" [style="dotted"];
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.conv_utils" [style="dotted"];
		"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.conditional_detr" {
		label="transformers.models.conditional_detr";
		"transformers.models.conditional_detr" -> "transformers.models.conditional_detr.configuration_conditional_detr" [style="dotted"];
		"transformers.models.conditional_detr" -> "transformers.models.conditional_detr.feature_extraction_conditional_detr" [style="dotted"];
		"transformers.models.conditional_detr" -> "transformers.models.conditional_detr.image_processing_conditional_detr" [style="dotted"];
		"transformers.models.conditional_detr" -> "transformers.models.conditional_detr.modeling_conditional_detr" [style="dotted"];
	}
	subgraph "cluster_transformers.models.lxmert" {
		label="transformers.models.lxmert";
		"transformers.models.lxmert" -> "transformers.models.lxmert.configuration_lxmert" [style="dotted"];
		"transformers.models.lxmert" -> "transformers.models.lxmert.tokenization_lxmert" [style="dotted"];
		"transformers.models.lxmert" -> "transformers.models.lxmert.tokenization_lxmert_fast" [style="dotted"];
		"transformers.models.lxmert" -> "transformers.models.lxmert.modeling_lxmert" [style="dotted"];
		"transformers.models.lxmert" -> "transformers.models.lxmert.modeling_tf_lxmert" [style="dotted"];
	}
	subgraph "cluster_transformers.models.instructblip" {
		label="transformers.models.instructblip";
		"transformers.models.instructblip" -> "transformers.models.instructblip.configuration_instructblip" [style="dotted"];
		"transformers.models.instructblip" -> "transformers.models.instructblip.processing_instructblip" [style="dotted"];
		"transformers.models.instructblip" -> "transformers.models.instructblip.modeling_instructblip" [style="dotted"];
	}
	subgraph "cluster_ollama" {
		label="ollama";
		"ollama" -> "ollama._client" [style="dotted"];
		"ollama" -> "ollama._types" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.distributed._shard" {
		label="torch.testing._internal.distributed._shard";
		"torch.testing._internal.distributed._shard" -> "torch.testing._internal.distributed._shard.test_common" [style="dotted"];
	}
	subgraph "cluster_transformers.models.kosmos2" {
		label="transformers.models.kosmos2";
		"transformers.models.kosmos2" -> "transformers.models.kosmos2.configuration_kosmos2" [style="dotted"];
		"transformers.models.kosmos2" -> "transformers.models.kosmos2.processing_kosmos2" [style="dotted"];
		"transformers.models.kosmos2" -> "transformers.models.kosmos2.modeling_kosmos2" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._tensor" {
		label="torch.distributed._tensor";
		"torch.distributed._tensor" -> "torch.distributed._tensor.api" [style="dotted"];
		"torch.distributed._tensor" -> "torch.distributed._tensor.placement_types" [style="dotted"];
	}
	subgraph "cluster_torch.distributed" {
		label="torch.distributed";
		"torch.distributed" -> "torch.distributed.device_mesh" [style="dotted"];
		"torch.distributed" -> "torch.distributed.distributed_c10d" [style="dotted"];
		"torch.distributed" -> "torch.distributed.remote_device" [style="dotted"];
		"torch.distributed" -> "torch.distributed.rendezvous" [style="dotted"];
		"torch.distributed" -> "torch.distributed._functional_collectives_impl" [style="dotted"];
		"torch.distributed" -> "torch.distributed.constants" [style="dotted"];
		"torch.distributed" -> "torch.distributed.c10d_logger" [style="dotted"];
		"torch.distributed" -> "torch.distributed.logging_handlers" [style="dotted"];
		"torch.distributed" -> "torch.distributed.tensor" [style="dotted"];
		"torch.distributed" -> "torch.distributed._functional_collectives" [style="dotted"];
		"torch.distributed" -> "torch.distributed.rpc" [style="dotted"];
		"torch.distributed" -> "torch.distributed.autograd" [style="dotted"];
		"torch.distributed" -> "torch.distributed._symmetric_memory" [style="dotted"];
		"torch.distributed" -> "torch.distributed.checkpoint" [style="dotted"];
		"torch.distributed" -> "torch.distributed._state_dict_utils" [style="dotted"];
		"torch.distributed" -> "torch.distributed.fsdp" [style="dotted"];
		"torch.distributed" -> "torch.distributed.utils" [style="dotted"];
		"torch.distributed" -> "torch.distributed._composable_state" [style="dotted"];
		"torch.distributed" -> "torch.distributed.algorithms" [style="dotted"];
		"torch.distributed" -> "torch.distributed._composable" [style="dotted"];
		"torch.distributed" -> "torch.distributed._shard" [style="dotted"];
		"torch.distributed" -> "torch.distributed.nn" [style="dotted"];
		"torch.distributed" -> "torch.distributed.optim" [style="dotted"];
		"torch.distributed" -> "torch.distributed._checkpointable" [style="dotted"];
		"torch.distributed" -> "torch.distributed.argparse_util" [style="dotted"];
		"torch.distributed" -> "torch.distributed.collective_utils" [style="dotted"];
		"torch.distributed" -> "torch.distributed.launch" [style="dotted"];
		"torch.distributed" -> "torch.distributed.run" [style="dotted"];
		"torch.distributed" -> "torch.distributed.pipelining" [style="dotted"];
		"torch.distributed" -> "torch.distributed.launcher" [style="dotted"];
		"torch.distributed" -> "torch.distributed.elastic" [style="dotted"];
		"torch.distributed" -> "torch.distributed._tools" [style="dotted"];
		"torch.distributed" -> "torch.distributed._tensor" [style="dotted"];
		"torch.distributed" -> "torch.distributed._sharding_spec" [style="dotted"];
		"torch.distributed" -> "torch.distributed._sharded_tensor" [style="dotted"];
	}
	subgraph "cluster_future" {
		label="future";
		"future" -> "future.utils" [style="dotted"];
		"future" -> "future.standard_library" [style="dotted"];
		"future" -> "future.moves" [style="dotted"];
		"future" -> "future.backports" [style="dotted"];
		"future" -> "future.builtins" [style="dotted"];
		"future" -> "future.types" [style="dotted"];
	}
	subgraph "cluster_transformers.models.wavlm" {
		label="transformers.models.wavlm";
		"transformers.models.wavlm" -> "transformers.models.wavlm.configuration_wavlm" [style="dotted"];
		"transformers.models.wavlm" -> "transformers.models.wavlm.modeling_wavlm" [style="dotted"];
	}
	subgraph "cluster_torch.utils.benchmark.utils.valgrind_wrapper" {
		label="torch.utils.benchmark.utils.valgrind_wrapper";
		"torch.utils.benchmark.utils.valgrind_wrapper" -> "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" [style="dotted"];
	}
	subgraph "cluster_torch.export.experimental" {
		label="torch.export.experimental";
	}
	subgraph "cluster_transformers.models.phimoe" {
		label="transformers.models.phimoe";
		"transformers.models.phimoe" -> "transformers.models.phimoe.configuration_phimoe" [style="dotted"];
		"transformers.models.phimoe" -> "transformers.models.phimoe.modeling_phimoe" [style="dotted"];
	}
	subgraph "cluster_torch.utils.data.datapipes.dataframe" {
		label="torch.utils.data.datapipes.dataframe";
		"torch.utils.data.datapipes.dataframe" -> "torch.utils.data.datapipes.dataframe.dataframe_wrapper" [style="dotted"];
		"torch.utils.data.datapipes.dataframe" -> "torch.utils.data.datapipes.dataframe.dataframes" [style="dotted"];
		"torch.utils.data.datapipes.dataframe" -> "torch.utils.data.datapipes.dataframe.datapipes" [style="dotted"];
		"torch.utils.data.datapipes.dataframe" -> "torch.utils.data.datapipes.dataframe.structures" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.algorithms" {
		label="torch.distributed.algorithms";
		"torch.distributed.algorithms" -> "torch.distributed.algorithms.join" [style="dotted"];
		"torch.distributed.algorithms" -> "torch.distributed.algorithms._comm_hooks" [style="dotted"];
		"torch.distributed.algorithms" -> "torch.distributed.algorithms._checkpoint" [style="dotted"];
		"torch.distributed.algorithms" -> "torch.distributed.algorithms._optimizer_overlap" [style="dotted"];
		"torch.distributed.algorithms" -> "torch.distributed.algorithms.model_averaging" [style="dotted"];
		"torch.distributed.algorithms" -> "torch.distributed.algorithms.ddp_comm_hooks" [style="dotted"];
		"torch.distributed.algorithms" -> "torch.distributed.algorithms._quantization" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.sparse.quantized" {
		label="torch.ao.nn.sparse.quantized";
		"torch.ao.nn.sparse.quantized" -> "torch.ao.nn.sparse.quantized.linear" [style="dotted"];
		"torch.ao.nn.sparse.quantized" -> "torch.ao.nn.sparse.quantized.dynamic" [style="dotted"];
		"torch.ao.nn.sparse.quantized" -> "torch.ao.nn.sparse.quantized.utils" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.qat.modules" {
		label="torch.ao.nn.qat.modules";
		"torch.ao.nn.qat.modules" -> "torch.ao.nn.qat.modules.conv" [style="dotted"];
		"torch.ao.nn.qat.modules" -> "torch.ao.nn.qat.modules.embedding_ops" [style="dotted"];
		"torch.ao.nn.qat.modules" -> "torch.ao.nn.qat.modules.linear" [style="dotted"];
	}
	subgraph "cluster_torch.utils.benchmark.examples" {
		label="torch.utils.benchmark.examples";
		"torch.utils.benchmark.examples" -> "torch.utils.benchmark.examples.blas_compare_setup" [style="dotted"];
		"torch.utils.benchmark.examples" -> "torch.utils.benchmark.examples.compare" [style="dotted"];
		"torch.utils.benchmark.examples" -> "torch.utils.benchmark.examples.fuzzer" [style="dotted"];
		"torch.utils.benchmark.examples" -> "torch.utils.benchmark.examples.op_benchmark" [style="dotted"];
		"torch.utils.benchmark.examples" -> "torch.utils.benchmark.examples.simple_timeit" [style="dotted"];
		"torch.utils.benchmark.examples" -> "torch.utils.benchmark.examples.spectral_ops_fuzz_test" [style="dotted"];
	}
	subgraph "cluster_torch.sparse" {
		label="torch.sparse";
		"torch.sparse" -> "torch.sparse.semi_structured" [style="dotted"];
		"torch.sparse" -> "torch.sparse._triton_ops" [style="dotted"];
		"torch.sparse" -> "torch.sparse._triton_ops_meta" [style="dotted"];
		"torch.sparse" -> "torch.sparse._semi_structured_conversions" [style="dotted"];
		"torch.sparse" -> "torch.sparse._semi_structured_ops" [style="dotted"];
	}
	subgraph "cluster_transformers" {
		label="transformers";
		"transformers" -> "transformers.MaskFormerForInstanceSegmentationOutput" [style="dotted"];
		"transformers" -> "transformers.dependency_versions_check" [style="dotted"];
		"transformers" -> "transformers.utils" [style="dotted"];
		"transformers" -> "transformers.agents" [style="dotted"];
		"transformers" -> "transformers.configuration_utils" [style="dotted"];
		"transformers" -> "transformers.data" [style="dotted"];
		"transformers" -> "transformers.feature_extraction_sequence_utils" [style="dotted"];
		"transformers" -> "transformers.feature_extraction_utils" [style="dotted"];
		"transformers" -> "transformers.generation" [style="dotted"];
		"transformers" -> "transformers.hf_argparser" [style="dotted"];
		"transformers" -> "transformers.integrations" [style="dotted"];
		"transformers" -> "transformers.modelcard" [style="dotted"];
		"transformers" -> "transformers.modeling_tf_pytorch_utils" [style="dotted"];
		"transformers" -> "transformers.pipelines" [style="dotted"];
		"transformers" -> "transformers.processing_utils" [style="dotted"];
		"transformers" -> "transformers.tokenization_utils" [style="dotted"];
		"transformers" -> "transformers.tokenization_utils_base" [style="dotted"];
		"transformers" -> "transformers.trainer_callback" [style="dotted"];
		"transformers" -> "transformers.trainer_utils" [style="dotted"];
		"transformers" -> "transformers.training_args" [style="dotted"];
		"transformers" -> "transformers.training_args_seq2seq" [style="dotted"];
		"transformers" -> "transformers.training_args_tf" [style="dotted"];
		"transformers" -> "transformers.tokenization_utils_fast" [style="dotted"];
		"transformers" -> "transformers.convert_slow_tokenizer" [style="dotted"];
		"transformers" -> "transformers.image_processing_base" [style="dotted"];
		"transformers" -> "transformers.image_processing_utils" [style="dotted"];
		"transformers" -> "transformers.image_utils" [style="dotted"];
		"transformers" -> "transformers.image_processing_utils_fast" [style="dotted"];
		"transformers" -> "transformers.cache_utils" [style="dotted"];
		"transformers" -> "transformers.modeling_rope_utils" [style="dotted"];
		"transformers" -> "transformers.modeling_utils" [style="dotted"];
		"transformers" -> "transformers.optimization" [style="dotted"];
		"transformers" -> "transformers.pytorch_utils" [style="dotted"];
		"transformers" -> "transformers.trainer" [style="dotted"];
		"transformers" -> "transformers.trainer_pt_utils" [style="dotted"];
		"transformers" -> "transformers.trainer_seq2seq" [style="dotted"];
		"transformers" -> "transformers.keras_callbacks" [style="dotted"];
		"transformers" -> "transformers.modeling_tf_utils" [style="dotted"];
		"transformers" -> "transformers.optimization_tf" [style="dotted"];
		"transformers" -> "transformers.modeling_flax_utils" [style="dotted"];
		"transformers" -> "transformers.models" [style="dotted"];
		"transformers" -> "transformers.benchmark" [style="dotted"];
		"transformers" -> "transformers.dynamic_module_utils" [style="dotted"];
		"transformers" -> "transformers.modeling_flax_pytorch_utils" [style="dotted"];
		"transformers" -> "transformers.dependency_versions_table" [style="dotted"];
		"transformers" -> "transformers.modeling_outputs" [style="dotted"];
		"transformers" -> "transformers.activations_tf" [style="dotted"];
		"transformers" -> "transformers.tf_utils" [style="dotted"];
		"transformers" -> "transformers.debug_utils" [style="dotted"];
		"transformers" -> "transformers.hyperparameter_search" [style="dotted"];
		"transformers" -> "transformers.activations" [style="dotted"];
		"transformers" -> "transformers.quantizers" [style="dotted"];
		"transformers" -> "transformers.safetensors_conversion" [style="dotted"];
		"transformers" -> "transformers.modeling_gguf_pytorch_utils" [style="dotted"];
		"transformers" -> "transformers.loss" [style="dotted"];
		"transformers" -> "transformers.image_transforms" [style="dotted"];
		"transformers" -> "transformers.modeling_attn_mask_utils" [style="dotted"];
		"transformers" -> "transformers.file_utils" [style="dotted"];
		"transformers" -> "transformers.modeling_flash_attention_utils" [style="dotted"];
		"transformers" -> "transformers.onnx" [style="dotted"];
		"transformers" -> "transformers.modeling_flax_outputs" [style="dotted"];
		"transformers" -> "transformers.modeling_tf_outputs" [style="dotted"];
		"transformers" -> "transformers.audio_utils" [style="dotted"];
		"transformers" -> "transformers.time_series_utils" [style="dotted"];
		"transformers" -> "transformers.kernels" [style="dotted"];
	}
	subgraph "cluster_fsspec.implementations" {
		label="fsspec.implementations";
		"fsspec.implementations" -> "fsspec.implementations.local" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.dirfs" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.vit_hybrid" {
		label="transformers.models.deprecated.vit_hybrid";
		"transformers.models.deprecated.vit_hybrid" -> "transformers.models.deprecated.vit_hybrid.configuration_vit_hybrid" [style="dotted"];
		"transformers.models.deprecated.vit_hybrid" -> "transformers.models.deprecated.vit_hybrid.modeling_vit_hybrid" [style="dotted"];
		"transformers.models.deprecated.vit_hybrid" -> "transformers.models.deprecated.vit_hybrid.image_processing_vit_hybrid" [style="dotted"];
	}
	subgraph "cluster_transformers.models.oneformer" {
		label="transformers.models.oneformer";
		"transformers.models.oneformer" -> "transformers.models.oneformer.configuration_oneformer" [style="dotted"];
		"transformers.models.oneformer" -> "transformers.models.oneformer.processing_oneformer" [style="dotted"];
		"transformers.models.oneformer" -> "transformers.models.oneformer.image_processing_oneformer" [style="dotted"];
		"transformers.models.oneformer" -> "transformers.models.oneformer.modeling_oneformer" [style="dotted"];
	}
	subgraph "cluster_torch.nn.modules" {
		label="torch.nn.modules";
		"torch.nn.modules" -> "torch.nn.modules.module" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.linear" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.activation" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.adaptive" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.batchnorm" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.channelshuffle" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.container" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.conv" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.distance" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.dropout" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.flatten" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.fold" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.instancenorm" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.loss" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.normalization" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.padding" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.pixelshuffle" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.pooling" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.rnn" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.sparse" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.transformer" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.upsampling" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.utils" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules._functions" [style="dotted"];
		"torch.nn.modules" -> "torch.nn.modules.lazy" [style="dotted"];
	}
	subgraph "cluster_transformers.models.trocr" {
		label="transformers.models.trocr";
		"transformers.models.trocr" -> "transformers.models.trocr.configuration_trocr" [style="dotted"];
		"transformers.models.trocr" -> "transformers.models.trocr.processing_trocr" [style="dotted"];
		"transformers.models.trocr" -> "transformers.models.trocr.modeling_trocr" [style="dotted"];
	}
	subgraph "cluster_transformers.models.myt5" {
		label="transformers.models.myt5";
		"transformers.models.myt5" -> "transformers.models.myt5.tokenization_myt5" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.qat.dynamic.modules" {
		label="torch.ao.nn.qat.dynamic.modules";
		"torch.ao.nn.qat.dynamic.modules" -> "torch.ao.nn.qat.dynamic.modules.linear" [style="dotted"];
	}
	subgraph "cluster_urllib3.contrib" {
		label="urllib3.contrib";
		"urllib3.contrib" -> "urllib3.contrib.pyopenssl" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.socks" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.emscripten" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.fsdp" {
		label="torch.distributed.fsdp";
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._flat_param" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp.fully_sharded_data_parallel" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._shard_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._traversal_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._common_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._dynamo_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._init_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._runtime_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._wrap_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp.api" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._optim_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._state_dict_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._unshard_param_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp.wrap" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._debug_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._fsdp_extensions" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._exec_order_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._limiter_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp._trace_utils" [style="dotted"];
		"torch.distributed.fsdp" -> "torch.distributed.fsdp.sharded_grad_scaler" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.sparse" {
		label="torch.ao.nn.sparse";
		"torch.ao.nn.sparse" -> "torch.ao.nn.sparse.quantized" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mixtral" {
		label="transformers.models.mixtral";
		"transformers.models.mixtral" -> "transformers.models.mixtral.configuration_mixtral" [style="dotted"];
		"transformers.models.mixtral" -> "transformers.models.mixtral.modeling_mixtral" [style="dotted"];
	}
	subgraph "cluster_torch.multiprocessing" {
		label="torch.multiprocessing";
		"torch.multiprocessing" -> "torch.multiprocessing.reductions" [style="dotted"];
		"torch.multiprocessing" -> "torch.multiprocessing._prctl_pr_set_pdeathsig" [style="dotted"];
		"torch.multiprocessing" -> "torch.multiprocessing.spawn" [style="dotted"];
		"torch.multiprocessing" -> "torch.multiprocessing._atfork" [style="dotted"];
		"torch.multiprocessing" -> "torch.multiprocessing.pool" [style="dotted"];
		"torch.multiprocessing" -> "torch.multiprocessing.queue" [style="dotted"];
	}
	subgraph "cluster_torch._awaits" {
		label="torch._awaits";
	}
	subgraph "cluster_xml.dom" {
		label="xml.dom";
		"xml.dom" -> "xml.dom.domreg" [style="dotted"];
		"xml.dom" -> "xml.dom.xmlbuilder" [style="dotted"];
		"xml.dom" -> "xml.dom.minidom" [style="dotted"];
		"xml.dom" -> "xml.dom.pulldom" [style="dotted"];
		"xml.dom" -> "xml.dom.minicompat" [style="dotted"];
		"xml.dom" -> "xml.dom.expatbuilder" [style="dotted"];
		"xml.dom" -> "xml.dom.NodeFilter" [style="dotted"];
	}
	subgraph "cluster_sympy.solvers.diophantine" {
		label="sympy.solvers.diophantine";
		"sympy.solvers.diophantine" -> "sympy.solvers.diophantine.diophantine" [style="dotted"];
	}
	subgraph "cluster_pygments.formatters" {
		label="pygments.formatters";
		"pygments.formatters" -> "pygments.formatters._mapping" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.Terminal256Formatter" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.BBCodeFormatter" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.html" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.bbcode" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.groff" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.img" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.irc" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.latex" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.other" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.pangomarkup" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.rtf" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.svg" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.terminal" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.terminal256" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor" {
		label="setuptools._vendor";
		"setuptools._vendor" -> "setuptools._vendor.importlib_resources" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.packaging" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.wheel" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.tomli" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.importlib_metadata" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.zipp" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.jaraco" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.backports" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.more_itertools" [style="dotted"];
	}
	subgraph "cluster_sympy.assumptions.predicates" {
		label="sympy.assumptions.predicates";
		"sympy.assumptions.predicates" -> "sympy.assumptions.predicates.sets" [style="dotted"];
		"sympy.assumptions.predicates" -> "sympy.assumptions.predicates.matrices" [style="dotted"];
		"sympy.assumptions.predicates" -> "sympy.assumptions.predicates.common" [style="dotted"];
		"sympy.assumptions.predicates" -> "sympy.assumptions.predicates.ntheory" [style="dotted"];
		"sympy.assumptions.predicates" -> "sympy.assumptions.predicates.order" [style="dotted"];
		"sympy.assumptions.predicates" -> "sympy.assumptions.predicates.calculus" [style="dotted"];
	}
	subgraph "cluster_requests" {
		label="requests";
		"requests" -> "requests.exceptions" [style="dotted"];
		"requests" -> "requests.packages" [style="dotted"];
		"requests" -> "requests.certs" [style="dotted"];
		"requests" -> "requests.utils" [style="dotted"];
		"requests" -> "requests.__version__" [style="dotted"];
		"requests" -> "requests.sessions" [style="dotted"];
		"requests" -> "requests.api" [style="dotted"];
		"requests" -> "requests.models" [style="dotted"];
		"requests" -> "requests.status_codes" [style="dotted"];
		"requests" -> "requests.structures" [style="dotted"];
		"requests" -> "requests.compat" [style="dotted"];
		"requests" -> "requests._internal_utils" [style="dotted"];
		"requests" -> "requests.auth" [style="dotted"];
		"requests" -> "requests.cookies" [style="dotted"];
		"requests" -> "requests.hooks" [style="dotted"];
		"requests" -> "requests.adapters" [style="dotted"];
	}
	subgraph "cluster_pygments.styles" {
		label="pygments.styles";
		"pygments.styles" -> "pygments.styles._mapping" [style="dotted"];
		"pygments.styles" -> "pygments.styles.abap" [style="dotted"];
		"pygments.styles" -> "pygments.styles.algol" [style="dotted"];
		"pygments.styles" -> "pygments.styles.algol_nu" [style="dotted"];
		"pygments.styles" -> "pygments.styles.arduino" [style="dotted"];
		"pygments.styles" -> "pygments.styles.autumn" [style="dotted"];
		"pygments.styles" -> "pygments.styles.borland" [style="dotted"];
		"pygments.styles" -> "pygments.styles.bw" [style="dotted"];
		"pygments.styles" -> "pygments.styles.coffee" [style="dotted"];
		"pygments.styles" -> "pygments.styles.colorful" [style="dotted"];
		"pygments.styles" -> "pygments.styles.default" [style="dotted"];
		"pygments.styles" -> "pygments.styles.dracula" [style="dotted"];
		"pygments.styles" -> "pygments.styles.emacs" [style="dotted"];
		"pygments.styles" -> "pygments.styles.friendly" [style="dotted"];
		"pygments.styles" -> "pygments.styles.friendly_grayscale" [style="dotted"];
		"pygments.styles" -> "pygments.styles.fruity" [style="dotted"];
		"pygments.styles" -> "pygments.styles.gh_dark" [style="dotted"];
		"pygments.styles" -> "pygments.styles.gruvbox" [style="dotted"];
		"pygments.styles" -> "pygments.styles.igor" [style="dotted"];
		"pygments.styles" -> "pygments.styles.inkpot" [style="dotted"];
		"pygments.styles" -> "pygments.styles.lightbulb" [style="dotted"];
		"pygments.styles" -> "pygments.styles.lilypond" [style="dotted"];
		"pygments.styles" -> "pygments.styles.lovelace" [style="dotted"];
		"pygments.styles" -> "pygments.styles.manni" [style="dotted"];
		"pygments.styles" -> "pygments.styles.material" [style="dotted"];
		"pygments.styles" -> "pygments.styles.monokai" [style="dotted"];
		"pygments.styles" -> "pygments.styles.murphy" [style="dotted"];
		"pygments.styles" -> "pygments.styles.native" [style="dotted"];
		"pygments.styles" -> "pygments.styles.nord" [style="dotted"];
		"pygments.styles" -> "pygments.styles.onedark" [style="dotted"];
		"pygments.styles" -> "pygments.styles.paraiso_dark" [style="dotted"];
		"pygments.styles" -> "pygments.styles.paraiso_light" [style="dotted"];
		"pygments.styles" -> "pygments.styles.pastie" [style="dotted"];
		"pygments.styles" -> "pygments.styles.perldoc" [style="dotted"];
		"pygments.styles" -> "pygments.styles.rainbow_dash" [style="dotted"];
		"pygments.styles" -> "pygments.styles.rrt" [style="dotted"];
		"pygments.styles" -> "pygments.styles.sas" [style="dotted"];
		"pygments.styles" -> "pygments.styles.solarized" [style="dotted"];
		"pygments.styles" -> "pygments.styles.staroffice" [style="dotted"];
		"pygments.styles" -> "pygments.styles.stata_dark" [style="dotted"];
		"pygments.styles" -> "pygments.styles.stata_light" [style="dotted"];
		"pygments.styles" -> "pygments.styles.tango" [style="dotted"];
		"pygments.styles" -> "pygments.styles.trac" [style="dotted"];
		"pygments.styles" -> "pygments.styles.vim" [style="dotted"];
		"pygments.styles" -> "pygments.styles.vs" [style="dotted"];
		"pygments.styles" -> "pygments.styles.xcode" [style="dotted"];
		"pygments.styles" -> "pygments.styles.zenburn" [style="dotted"];
	}
	subgraph "cluster_transformers.models.efficientnet" {
		label="transformers.models.efficientnet";
		"transformers.models.efficientnet" -> "transformers.models.efficientnet.configuration_efficientnet" [style="dotted"];
		"transformers.models.efficientnet" -> "transformers.models.efficientnet.image_processing_efficientnet" [style="dotted"];
		"transformers.models.efficientnet" -> "transformers.models.efficientnet.modeling_efficientnet" [style="dotted"];
	}
	subgraph "cluster_docutils.languages" {
		label="docutils.languages";
		"docutils.languages" -> "docutils.languages.af" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ar" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ca" [style="dotted"];
		"docutils.languages" -> "docutils.languages.cs" [style="dotted"];
		"docutils.languages" -> "docutils.languages.da" [style="dotted"];
		"docutils.languages" -> "docutils.languages.de" [style="dotted"];
		"docutils.languages" -> "docutils.languages.en" [style="dotted"];
		"docutils.languages" -> "docutils.languages.eo" [style="dotted"];
		"docutils.languages" -> "docutils.languages.es" [style="dotted"];
		"docutils.languages" -> "docutils.languages.fa" [style="dotted"];
		"docutils.languages" -> "docutils.languages.fi" [style="dotted"];
		"docutils.languages" -> "docutils.languages.fr" [style="dotted"];
		"docutils.languages" -> "docutils.languages.gl" [style="dotted"];
		"docutils.languages" -> "docutils.languages.he" [style="dotted"];
		"docutils.languages" -> "docutils.languages.it" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ja" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ka" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ko" [style="dotted"];
		"docutils.languages" -> "docutils.languages.lt" [style="dotted"];
		"docutils.languages" -> "docutils.languages.lv" [style="dotted"];
		"docutils.languages" -> "docutils.languages.nl" [style="dotted"];
		"docutils.languages" -> "docutils.languages.pl" [style="dotted"];
		"docutils.languages" -> "docutils.languages.pt_br" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ru" [style="dotted"];
		"docutils.languages" -> "docutils.languages.sk" [style="dotted"];
		"docutils.languages" -> "docutils.languages.sv" [style="dotted"];
		"docutils.languages" -> "docutils.languages.uk" [style="dotted"];
		"docutils.languages" -> "docutils.languages.zh_cn" [style="dotted"];
		"docutils.languages" -> "docutils.languages.zh_tw" [style="dotted"];
	}
	subgraph "cluster_transformers.models.opt" {
		label="transformers.models.opt";
		"transformers.models.opt" -> "transformers.models.opt.configuration_opt" [style="dotted"];
		"transformers.models.opt" -> "transformers.models.opt.modeling_opt" [style="dotted"];
		"transformers.models.opt" -> "transformers.models.opt.modeling_tf_opt" [style="dotted"];
		"transformers.models.opt" -> "transformers.models.opt.modeling_flax_opt" [style="dotted"];
	}
	subgraph "cluster_transformers.models.zoedepth" {
		label="transformers.models.zoedepth";
		"transformers.models.zoedepth" -> "transformers.models.zoedepth.configuration_zoedepth" [style="dotted"];
		"transformers.models.zoedepth" -> "transformers.models.zoedepth.modeling_zoedepth" [style="dotted"];
		"transformers.models.zoedepth" -> "transformers.models.zoedepth.image_processing_zoedepth" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.ernie_m" {
		label="transformers.models.deprecated.ernie_m";
		"transformers.models.deprecated.ernie_m" -> "transformers.models.deprecated.ernie_m.configuration_ernie_m" [style="dotted"];
		"transformers.models.deprecated.ernie_m" -> "transformers.models.deprecated.ernie_m.tokenization_ernie_m" [style="dotted"];
		"transformers.models.deprecated.ernie_m" -> "transformers.models.deprecated.ernie_m.modeling_ernie_m" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bertweet" {
		label="transformers.models.bertweet";
		"transformers.models.bertweet" -> "transformers.models.bertweet.tokenization_bertweet" [style="dotted"];
	}
	subgraph "cluster_colorama" {
		label="colorama";
		"colorama" -> "colorama.win32" [style="dotted"];
		"colorama" -> "colorama.initialise" [style="dotted"];
		"colorama" -> "colorama.ansi" [style="dotted"];
		"colorama" -> "colorama.ansitowin32" [style="dotted"];
		"colorama" -> "colorama.winterm" [style="dotted"];
	}
	subgraph "cluster_numpy.testing._private" {
		label="numpy.testing._private";
		"numpy.testing._private" -> "numpy.testing._private.extbuild" [style="dotted"];
		"numpy.testing._private" -> "numpy.testing._private.utils" [style="dotted"];
	}
	subgraph "cluster_pydub" {
		label="pydub";
		"pydub" -> "pydub.effects" [style="dotted"];
		"pydub" -> "pydub.audio_segment" [style="dotted"];
		"pydub" -> "pydub.logging_utils" [style="dotted"];
		"pydub" -> "pydub.utils" [style="dotted"];
		"pydub" -> "pydub.exceptions" [style="dotted"];
		"pydub" -> "pydub.silence" [style="dotted"];
	}
	subgraph "cluster_transformers.models.swiftformer" {
		label="transformers.models.swiftformer";
		"transformers.models.swiftformer" -> "transformers.models.swiftformer.configuration_swiftformer" [style="dotted"];
		"transformers.models.swiftformer" -> "transformers.models.swiftformer.modeling_swiftformer" [style="dotted"];
		"transformers.models.swiftformer" -> "transformers.models.swiftformer.modeling_tf_swiftformer" [style="dotted"];
	}
	subgraph "cluster_transformers.data" {
		label="transformers.data";
		"transformers.data" -> "transformers.data.data_collator" [style="dotted"];
		"transformers.data" -> "transformers.data.metrics" [style="dotted"];
		"transformers.data" -> "transformers.data.processors" [style="dotted"];
		"transformers.data" -> "transformers.data.datasets" [style="dotted"];
	}
	subgraph "cluster_torch.nn.quantized._reference" {
		label="torch.nn.quantized._reference";
		"torch.nn.quantized._reference" -> "torch.nn.quantized._reference.modules" [style="dotted"];
	}
	subgraph "cluster_torch.masked" {
		label="torch.masked";
		"torch.masked" -> "torch.masked._docs" [style="dotted"];
		"torch.masked" -> "torch.masked._ops" [style="dotted"];
		"torch.masked" -> "torch.masked.maskedtensor" [style="dotted"];
	}
	subgraph "cluster_sympy" {
		label="sympy";
		"sympy" -> "sympy.release" [style="dotted"];
		"sympy" -> "sympy.core" [style="dotted"];
		"sympy" -> "sympy.logic" [style="dotted"];
		"sympy" -> "sympy.assumptions" [style="dotted"];
		"sympy" -> "sympy.polys" [style="dotted"];
		"sympy" -> "sympy.series" [style="dotted"];
		"sympy" -> "sympy.functions" [style="dotted"];
		"sympy" -> "sympy.ntheory" [style="dotted"];
		"sympy" -> "sympy.concrete" [style="dotted"];
		"sympy" -> "sympy.discrete" [style="dotted"];
		"sympy" -> "sympy.simplify" [style="dotted"];
		"sympy" -> "sympy.sets" [style="dotted"];
		"sympy" -> "sympy.solvers" [style="dotted"];
		"sympy" -> "sympy.matrices" [style="dotted"];
		"sympy" -> "sympy.geometry" [style="dotted"];
		"sympy" -> "sympy.utilities" [style="dotted"];
		"sympy" -> "sympy.integrals" [style="dotted"];
		"sympy" -> "sympy.tensor" [style="dotted"];
		"sympy" -> "sympy.parsing" [style="dotted"];
		"sympy" -> "sympy.calculus" [style="dotted"];
		"sympy" -> "sympy.algebras" [style="dotted"];
		"sympy" -> "sympy.printing" [style="dotted"];
		"sympy" -> "sympy.plotting" [style="dotted"];
		"sympy" -> "sympy.interactive" [style="dotted"];
		"sympy" -> "sympy.multipledispatch" [style="dotted"];
		"sympy" -> "sympy.external" [style="dotted"];
		"sympy" -> "sympy.categories" [style="dotted"];
		"sympy" -> "sympy.codegen" [style="dotted"];
		"sympy" -> "sympy.abc" [style="dotted"];
		"sympy" -> "sympy.strategies" [style="dotted"];
		"sympy" -> "sympy.physics" [style="dotted"];
		"sympy" -> "sympy.vector" [style="dotted"];
		"sympy" -> "sympy.combinatorics" [style="dotted"];
		"sympy" -> "sympy.testing" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.checkpoint" {
		label="torch.distributed.checkpoint";
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.api" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._version" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.default_planner" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.filesystem" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.metadata" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.optimizer" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.planner" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.state_dict_loader" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.state_dict_saver" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.storage" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.planner_helpers" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.resharding" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._storage_utils" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.logger" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.staging" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.stateful" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.utils" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.logging_handlers" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._fsspec_filesystem" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._nested_dict" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._traverse" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._dedup_save_plans" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._sharded_tensor_utils" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._checkpointer" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint._dedup_tensors" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.format_utils" [style="dotted"];
		"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.state_dict" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vitdet" {
		label="transformers.models.vitdet";
		"transformers.models.vitdet" -> "transformers.models.vitdet.configuration_vitdet" [style="dotted"];
		"transformers.models.vitdet" -> "transformers.models.vitdet.modeling_vitdet" [style="dotted"];
	}
	subgraph "cluster_torch.nn.qat.dynamic" {
		label="torch.nn.qat.dynamic";
		"torch.nn.qat.dynamic" -> "torch.nn.qat.dynamic.modules" [style="dotted"];
	}
	subgraph "cluster_kivy.core.audio" {
		label="kivy.core.audio";
		"kivy.core.audio" -> "kivy.core.audio.audio_gstplayer" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_sdl2" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_pygame" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_android" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_avplayer" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_ffpyplayer" [style="dotted"];
	}
	subgraph "cluster_backports" {
		label="backports";
		"backports" -> "backports.tarfile" [style="dotted"];
	}
	subgraph "cluster_torch.fx.experimental.unification.multipledispatch" {
		label="torch.fx.experimental.unification.multipledispatch";
		"torch.fx.experimental.unification.multipledispatch" -> "torch.fx.experimental.unification.multipledispatch.core" [style="dotted"];
		"torch.fx.experimental.unification.multipledispatch" -> "torch.fx.experimental.unification.multipledispatch.dispatcher" [style="dotted"];
		"torch.fx.experimental.unification.multipledispatch" -> "torch.fx.experimental.unification.multipledispatch.conflict" [style="dotted"];
		"torch.fx.experimental.unification.multipledispatch" -> "torch.fx.experimental.unification.multipledispatch.utils" [style="dotted"];
		"torch.fx.experimental.unification.multipledispatch" -> "torch.fx.experimental.unification.multipledispatch.variadic" [style="dotted"];
	}
	subgraph "cluster_sympy.matrices.expressions" {
		label="sympy.matrices.expressions";
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.slice" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.blockmatrix" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.companion" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.funcmatrix" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.inverse" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.matadd" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.matexpr" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.matmul" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.matpow" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.trace" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.determinant" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.transpose" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.adjoint" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.hadamard" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.diagonal" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.dotproduct" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.kronecker" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.permutation" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.sets" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.special" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.applyfunc" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.fourier" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions._shape" [style="dotted"];
		"sympy.matrices.expressions" -> "sympy.matrices.expressions.factorizations" [style="dotted"];
	}
	subgraph "cluster_fsspec" {
		label="fsspec";
		"fsspec" -> "fsspec.caching" [style="dotted"];
		"fsspec" -> "fsspec._version" [style="dotted"];
		"fsspec" -> "fsspec.callbacks" [style="dotted"];
		"fsspec" -> "fsspec.compression" [style="dotted"];
		"fsspec" -> "fsspec.core" [style="dotted"];
		"fsspec" -> "fsspec.exceptions" [style="dotted"];
		"fsspec" -> "fsspec.mapping" [style="dotted"];
		"fsspec" -> "fsspec.registry" [style="dotted"];
		"fsspec" -> "fsspec.spec" [style="dotted"];
		"fsspec" -> "fsspec.config" [style="dotted"];
		"fsspec" -> "fsspec.utils" [style="dotted"];
		"fsspec" -> "fsspec.dircache" [style="dotted"];
		"fsspec" -> "fsspec.transaction" [style="dotted"];
		"fsspec" -> "fsspec.asyn" [style="dotted"];
		"fsspec" -> "fsspec.json" [style="dotted"];
		"fsspec" -> "fsspec.implementations" [style="dotted"];
	}
	subgraph "cluster_transformers.integrations" {
		label="transformers.integrations";
		"transformers.integrations" -> "transformers.integrations.aqlm" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.awq" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.bitnet" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.bitsandbytes" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.deepspeed" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.eetq" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.fbgemm_fp8" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.fsdp" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.ggml" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.hqq" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.integration_utils" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.peft" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.quanto" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.executorch" [style="dotted"];
		"transformers.integrations" -> "transformers.integrations.tpu" [style="dotted"];
	}
	subgraph "cluster_jaraco.collections" {
		label="jaraco.collections";
	}
	subgraph "cluster_torch.distributed._sharded_tensor" {
		label="torch.distributed._sharded_tensor";
	}
	subgraph "cluster_sympy.solvers.ode" {
		label="sympy.solvers.ode";
		"sympy.solvers.ode" -> "sympy.solvers.ode.ode" [style="dotted"];
		"sympy.solvers.ode" -> "sympy.solvers.ode.lie_group" [style="dotted"];
		"sympy.solvers.ode" -> "sympy.solvers.ode.subscheck" [style="dotted"];
		"sympy.solvers.ode" -> "sympy.solvers.ode.systems" [style="dotted"];
		"sympy.solvers.ode" -> "sympy.solvers.ode.single" [style="dotted"];
		"sympy.solvers.ode" -> "sympy.solvers.ode.riccati" [style="dotted"];
		"sympy.solvers.ode" -> "sympy.solvers.ode.hypergeometric" [style="dotted"];
		"sympy.solvers.ode" -> "sympy.solvers.ode.nonhomogeneous" [style="dotted"];
	}
	subgraph "cluster_torch.signal" {
		label="torch.signal";
		"torch.signal" -> "torch.signal.windows" [style="dotted"];
	}
	subgraph "cluster_httpcore" {
		label="httpcore";
		"httpcore" -> "httpcore._api" [style="dotted"];
		"httpcore" -> "httpcore._async" [style="dotted"];
		"httpcore" -> "httpcore._exceptions" [style="dotted"];
		"httpcore" -> "httpcore._models" [style="dotted"];
		"httpcore" -> "httpcore._ssl" [style="dotted"];
		"httpcore" -> "httpcore._sync" [style="dotted"];
		"httpcore" -> "httpcore._backends" [style="dotted"];
		"httpcore" -> "httpcore._utils" [style="dotted"];
		"httpcore" -> "httpcore._synchronization" [style="dotted"];
		"httpcore" -> "httpcore._trace" [style="dotted"];
	}
	subgraph "cluster_transformers.models.beit" {
		label="transformers.models.beit";
		"transformers.models.beit" -> "transformers.models.beit.configuration_beit" [style="dotted"];
		"transformers.models.beit" -> "transformers.models.beit.feature_extraction_beit" [style="dotted"];
		"transformers.models.beit" -> "transformers.models.beit.image_processing_beit" [style="dotted"];
		"transformers.models.beit" -> "transformers.models.beit.modeling_beit" [style="dotted"];
		"transformers.models.beit" -> "transformers.models.beit.modeling_flax_beit" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mobilenet_v1" {
		label="transformers.models.mobilenet_v1";
		"transformers.models.mobilenet_v1" -> "transformers.models.mobilenet_v1.configuration_mobilenet_v1" [style="dotted"];
		"transformers.models.mobilenet_v1" -> "transformers.models.mobilenet_v1.feature_extraction_mobilenet_v1" [style="dotted"];
		"transformers.models.mobilenet_v1" -> "transformers.models.mobilenet_v1.image_processing_mobilenet_v1" [style="dotted"];
		"transformers.models.mobilenet_v1" -> "transformers.models.mobilenet_v1.modeling_mobilenet_v1" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.intrinsic" {
		label="torch.ao.nn.intrinsic";
		"torch.ao.nn.intrinsic" -> "torch.ao.nn.intrinsic.modules" [style="dotted"];
		"torch.ao.nn.intrinsic" -> "torch.ao.nn.intrinsic.quantized" [style="dotted"];
		"torch.ao.nn.intrinsic" -> "torch.ao.nn.intrinsic.qat" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.inference._generated" {
		label="huggingface_hub.inference._generated";
		"huggingface_hub.inference._generated" -> "huggingface_hub.inference._generated._async_client" [style="dotted"];
		"huggingface_hub.inference._generated" -> "huggingface_hub.inference._generated.types" [style="dotted"];
	}
	subgraph "cluster_transformers.models.table_transformer" {
		label="transformers.models.table_transformer";
		"transformers.models.table_transformer" -> "transformers.models.table_transformer.configuration_table_transformer" [style="dotted"];
		"transformers.models.table_transformer" -> "transformers.models.table_transformer.modeling_table_transformer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.van" {
		label="transformers.models.deprecated.van";
		"transformers.models.deprecated.van" -> "transformers.models.deprecated.van.configuration_van" [style="dotted"];
		"transformers.models.deprecated.van" -> "transformers.models.deprecated.van.modeling_van" [style="dotted"];
	}
	subgraph "cluster_kivy.core.gl" {
		label="kivy.core.gl";
	}
	subgraph "cluster_torch.onnx._internal.diagnostics" {
		label="torch.onnx._internal.diagnostics";
		"torch.onnx._internal.diagnostics" -> "torch.onnx._internal.diagnostics.infra" [style="dotted"];
		"torch.onnx._internal.diagnostics" -> "torch.onnx._internal.diagnostics._diagnostic" [style="dotted"];
		"torch.onnx._internal.diagnostics" -> "torch.onnx._internal.diagnostics._rules" [style="dotted"];
	}
	subgraph "cluster_multiprocessing.dummy" {
		label="multiprocessing.dummy";
		"multiprocessing.dummy" -> "multiprocessing.dummy.connection" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.tensor.parallel" {
		label="torch.distributed.tensor.parallel";
		"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.api" [style="dotted"];
		"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.loss" [style="dotted"];
		"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.style" [style="dotted"];
		"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.fsdp" [style="dotted"];
		"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel._data_parallel_utils" [style="dotted"];
		"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel._utils" [style="dotted"];
		"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.ddp" [style="dotted"];
		"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.input_reshard" [style="dotted"];
	}
	subgraph "cluster_numpy._typing" {
		label="numpy._typing";
		"numpy._typing" -> "numpy._typing._nested_sequence" [style="dotted"];
		"numpy._typing" -> "numpy._typing._nbit" [style="dotted"];
		"numpy._typing" -> "numpy._typing._char_codes" [style="dotted"];
		"numpy._typing" -> "numpy._typing._scalars" [style="dotted"];
		"numpy._typing" -> "numpy._typing._shape" [style="dotted"];
		"numpy._typing" -> "numpy._typing._dtype_like" [style="dotted"];
		"numpy._typing" -> "numpy._typing._array_like" [style="dotted"];
		"numpy._typing" -> "numpy._typing._ufunc" [style="dotted"];
		"numpy._typing" -> "numpy._typing._add_docstring" [style="dotted"];
	}
	subgraph "cluster_transformers.models.hubert" {
		label="transformers.models.hubert";
		"transformers.models.hubert" -> "transformers.models.hubert.configuration_hubert" [style="dotted"];
		"transformers.models.hubert" -> "transformers.models.hubert.modeling_hubert" [style="dotted"];
		"transformers.models.hubert" -> "transformers.models.hubert.modeling_tf_hubert" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.distributed._tensor" {
		label="torch.testing._internal.distributed._tensor";
		"torch.testing._internal.distributed._tensor" -> "torch.testing._internal.distributed._tensor.common_dtensor" [style="dotted"];
	}
	subgraph "cluster_future.backports.urllib" {
		label="future.backports.urllib";
		"future.backports.urllib" -> "future.backports.urllib.response" [style="dotted"];
		"future.backports.urllib" -> "future.backports.urllib.request" [style="dotted"];
		"future.backports.urllib" -> "future.backports.urllib.robotparser" [style="dotted"];
		"future.backports.urllib" -> "future.backports.urllib.parse" [style="dotted"];
		"future.backports.urllib" -> "future.backports.urllib.error" [style="dotted"];
	}
	subgraph "cluster_setuptools._distutils.compat" {
		label="setuptools._distutils.compat";
		"setuptools._distutils.compat" -> "setuptools._distutils.compat.py38" [style="dotted"];
		"setuptools._distutils.compat" -> "setuptools._distutils.compat.py39" [style="dotted"];
	}
	subgraph "cluster_transformers.models.clipseg" {
		label="transformers.models.clipseg";
		"transformers.models.clipseg" -> "transformers.models.clipseg.configuration_clipseg" [style="dotted"];
		"transformers.models.clipseg" -> "transformers.models.clipseg.processing_clipseg" [style="dotted"];
		"transformers.models.clipseg" -> "transformers.models.clipseg.modeling_clipseg" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.intrinsic.quantized" {
		label="torch.ao.nn.intrinsic.quantized";
		"torch.ao.nn.intrinsic.quantized" -> "torch.ao.nn.intrinsic.quantized.modules" [style="dotted"];
		"torch.ao.nn.intrinsic.quantized" -> "torch.ao.nn.intrinsic.quantized.dynamic" [style="dotted"];
	}
	subgraph "cluster_networkx.drawing" {
		label="networkx.drawing";
		"networkx.drawing" -> "networkx.drawing.layout" [style="dotted"];
		"networkx.drawing" -> "networkx.drawing.nx_latex" [style="dotted"];
		"networkx.drawing" -> "networkx.drawing.nx_pylab" [style="dotted"];
		"networkx.drawing" -> "networkx.drawing.nx_agraph" [style="dotted"];
		"networkx.drawing" -> "networkx.drawing.nx_pydot" [style="dotted"];
	}
	subgraph "cluster_transformers.models.xglm" {
		label="transformers.models.xglm";
		"transformers.models.xglm" -> "transformers.models.xglm.configuration_xglm" [style="dotted"];
		"transformers.models.xglm" -> "transformers.models.xglm.tokenization_xglm" [style="dotted"];
		"transformers.models.xglm" -> "transformers.models.xglm.tokenization_xglm_fast" [style="dotted"];
		"transformers.models.xglm" -> "transformers.models.xglm.modeling_xglm" [style="dotted"];
		"transformers.models.xglm" -> "transformers.models.xglm.modeling_flax_xglm" [style="dotted"];
		"transformers.models.xglm" -> "transformers.models.xglm.modeling_tf_xglm" [style="dotted"];
	}
	subgraph "cluster_transformers.models.electra" {
		label="transformers.models.electra";
		"transformers.models.electra" -> "transformers.models.electra.configuration_electra" [style="dotted"];
		"transformers.models.electra" -> "transformers.models.electra.tokenization_electra" [style="dotted"];
		"transformers.models.electra" -> "transformers.models.electra.tokenization_electra_fast" [style="dotted"];
		"transformers.models.electra" -> "transformers.models.electra.modeling_electra" [style="dotted"];
		"transformers.models.electra" -> "transformers.models.electra.modeling_tf_electra" [style="dotted"];
		"transformers.models.electra" -> "transformers.models.electra.modeling_flax_electra" [style="dotted"];
	}
	subgraph "cluster_yaml" {
		label="yaml";
		"yaml" -> "yaml.error" [style="dotted"];
		"yaml" -> "yaml.tokens" [style="dotted"];
		"yaml" -> "yaml.events" [style="dotted"];
		"yaml" -> "yaml.nodes" [style="dotted"];
		"yaml" -> "yaml.loader" [style="dotted"];
		"yaml" -> "yaml.dumper" [style="dotted"];
		"yaml" -> "yaml.cyaml" [style="dotted"];
		"yaml" -> "yaml._yaml" [style="dotted"];
		"yaml" -> "yaml.constructor" [style="dotted"];
		"yaml" -> "yaml.serializer" [style="dotted"];
		"yaml" -> "yaml.representer" [style="dotted"];
		"yaml" -> "yaml.resolver" [style="dotted"];
		"yaml" -> "yaml.emitter" [style="dotted"];
		"yaml" -> "yaml.reader" [style="dotted"];
		"yaml" -> "yaml.scanner" [style="dotted"];
		"yaml" -> "yaml.parser" [style="dotted"];
		"yaml" -> "yaml.composer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.donut" {
		label="transformers.models.donut";
		"transformers.models.donut" -> "transformers.models.donut.configuration_donut_swin" [style="dotted"];
		"transformers.models.donut" -> "transformers.models.donut.processing_donut" [style="dotted"];
		"transformers.models.donut" -> "transformers.models.donut.modeling_donut_swin" [style="dotted"];
		"transformers.models.donut" -> "transformers.models.donut.feature_extraction_donut" [style="dotted"];
		"transformers.models.donut" -> "transformers.models.donut.image_processing_donut" [style="dotted"];
	}
	subgraph "cluster_charset_normalizer" {
		label="charset_normalizer";
		"charset_normalizer" -> "charset_normalizer.api" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.legacy" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.models" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.utils" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.version" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.md__mypyc" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.constant" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.cd" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.md" [style="dotted"];
	}
	subgraph "cluster_kivy.core.window" {
		label="kivy.core.window";
		"kivy.core.window" -> "kivy.core.window.window_sdl2" [style="dotted"];
		"kivy.core.window" -> "kivy.core.window.window_pygame" [style="dotted"];
		"kivy.core.window" -> "kivy.core.window.window_egl_rpi" [style="dotted"];
		"kivy.core.window" -> "kivy.core.window._window_sdl2" [style="dotted"];
		"kivy.core.window" -> "kivy.core.window.window_info" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gpt_neox" {
		label="transformers.models.gpt_neox";
		"transformers.models.gpt_neox" -> "transformers.models.gpt_neox.configuration_gpt_neox" [style="dotted"];
		"transformers.models.gpt_neox" -> "transformers.models.gpt_neox.tokenization_gpt_neox_fast" [style="dotted"];
		"transformers.models.gpt_neox" -> "transformers.models.gpt_neox.modeling_gpt_neox" [style="dotted"];
	}
	subgraph "cluster_transformers.models.roberta" {
		label="transformers.models.roberta";
		"transformers.models.roberta" -> "transformers.models.roberta.configuration_roberta" [style="dotted"];
		"transformers.models.roberta" -> "transformers.models.roberta.tokenization_roberta" [style="dotted"];
		"transformers.models.roberta" -> "transformers.models.roberta.tokenization_roberta_fast" [style="dotted"];
		"transformers.models.roberta" -> "transformers.models.roberta.modeling_roberta" [style="dotted"];
		"transformers.models.roberta" -> "transformers.models.roberta.modeling_tf_roberta" [style="dotted"];
		"transformers.models.roberta" -> "transformers.models.roberta.modeling_flax_roberta" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.transfo_xl" {
		label="transformers.models.deprecated.transfo_xl";
		"transformers.models.deprecated.transfo_xl" -> "transformers.models.deprecated.transfo_xl.configuration_transfo_xl" [style="dotted"];
		"transformers.models.deprecated.transfo_xl" -> "transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" [style="dotted"];
		"transformers.models.deprecated.transfo_xl" -> "transformers.models.deprecated.transfo_xl.modeling_transfo_xl" [style="dotted"];
		"transformers.models.deprecated.transfo_xl" -> "transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl" [style="dotted"];
		"transformers.models.deprecated.transfo_xl" -> "transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl_utilities" [style="dotted"];
		"transformers.models.deprecated.transfo_xl" -> "transformers.models.deprecated.transfo_xl.modeling_transfo_xl_utilities" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.isomorphism" {
		label="networkx.algorithms.isomorphism";
		"networkx.algorithms.isomorphism" -> "networkx.algorithms.isomorphism.isomorph" [style="dotted"];
		"networkx.algorithms.isomorphism" -> "networkx.algorithms.isomorphism.isomorphvf2" [style="dotted"];
		"networkx.algorithms.isomorphism" -> "networkx.algorithms.isomorphism.vf2userfunc" [style="dotted"];
		"networkx.algorithms.isomorphism" -> "networkx.algorithms.isomorphism.matchhelpers" [style="dotted"];
		"networkx.algorithms.isomorphism" -> "networkx.algorithms.isomorphism.temporalisomorphvf2" [style="dotted"];
		"networkx.algorithms.isomorphism" -> "networkx.algorithms.isomorphism.ismags" [style="dotted"];
		"networkx.algorithms.isomorphism" -> "networkx.algorithms.isomorphism.tree_isomorphism" [style="dotted"];
		"networkx.algorithms.isomorphism" -> "networkx.algorithms.isomorphism.vf2pp" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gpt2" {
		label="transformers.models.gpt2";
		"transformers.models.gpt2" -> "transformers.models.gpt2.configuration_gpt2" [style="dotted"];
		"transformers.models.gpt2" -> "transformers.models.gpt2.tokenization_gpt2" [style="dotted"];
		"transformers.models.gpt2" -> "transformers.models.gpt2.tokenization_gpt2_fast" [style="dotted"];
		"transformers.models.gpt2" -> "transformers.models.gpt2.modeling_gpt2" [style="dotted"];
		"transformers.models.gpt2" -> "transformers.models.gpt2.modeling_tf_gpt2" [style="dotted"];
		"transformers.models.gpt2" -> "transformers.models.gpt2.tokenization_gpt2_tf" [style="dotted"];
		"transformers.models.gpt2" -> "transformers.models.gpt2.modeling_flax_gpt2" [style="dotted"];
	}
	subgraph "cluster_future.builtins" {
		label="future.builtins";
		"future.builtins" -> "future.builtins.iterators" [style="dotted"];
		"future.builtins" -> "future.builtins.misc" [style="dotted"];
		"future.builtins" -> "future.builtins.newnext" [style="dotted"];
		"future.builtins" -> "future.builtins.newround" [style="dotted"];
		"future.builtins" -> "future.builtins.newsuper" [style="dotted"];
		"future.builtins" -> "future.builtins.new_min_max" [style="dotted"];
	}
	subgraph "cluster_sympy.concrete" {
		label="sympy.concrete";
		"sympy.concrete" -> "sympy.concrete.products" [style="dotted"];
		"sympy.concrete" -> "sympy.concrete.summations" [style="dotted"];
		"sympy.concrete" -> "sympy.concrete.expr_with_limits" [style="dotted"];
		"sympy.concrete" -> "sympy.concrete.expr_with_intlimits" [style="dotted"];
		"sympy.concrete" -> "sympy.concrete.delta" [style="dotted"];
		"sympy.concrete" -> "sympy.concrete.gosper" [style="dotted"];
	}
	subgraph "cluster_kivy.lib" {
		label="kivy.lib";
		"kivy.lib" -> "kivy.lib.gstplayer" [style="dotted"];
		"kivy.lib" -> "kivy.lib.mtdev" [style="dotted"];
		"kivy.lib" -> "kivy.lib.vidcore_lite" [style="dotted"];
		"kivy.lib" -> "kivy.lib.ddsfile" [style="dotted"];
	}
	subgraph "cluster_httpcore._sync" {
		label="httpcore._sync";
		"httpcore._sync" -> "httpcore._sync.connection" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.connection_pool" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http11" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http_proxy" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.interfaces" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http2" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.socks_proxy" [style="dotted"];
	}
	subgraph "cluster_transformers.models.seamless_m4t_v2" {
		label="transformers.models.seamless_m4t_v2";
		"transformers.models.seamless_m4t_v2" -> "transformers.models.seamless_m4t_v2.configuration_seamless_m4t_v2" [style="dotted"];
		"transformers.models.seamless_m4t_v2" -> "transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2" [style="dotted"];
	}
	subgraph "cluster_torch.utils.bottleneck" {
		label="torch.utils.bottleneck";
		"torch.utils.bottleneck" -> "torch.utils.bottleneck.__main__" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deformable_detr" {
		label="transformers.models.deformable_detr";
		"transformers.models.deformable_detr" -> "transformers.models.deformable_detr.configuration_deformable_detr" [style="dotted"];
		"transformers.models.deformable_detr" -> "transformers.models.deformable_detr.feature_extraction_deformable_detr" [style="dotted"];
		"transformers.models.deformable_detr" -> "transformers.models.deformable_detr.image_processing_deformable_detr" [style="dotted"];
		"transformers.models.deformable_detr" -> "transformers.models.deformable_detr.modeling_deformable_detr" [style="dotted"];
	}
	subgraph "cluster_torch" {
		label="torch";
		"torch" -> "torch.device" [style="dotted"];
		"torch" -> "torch.DispatchKey" [style="dotted"];
		"torch" -> "torch.layout" [style="dotted"];
		"torch" -> "torch.qscheme" [style="dotted"];
		"torch" -> "torch.Size" [style="dotted"];
		"torch" -> "torch._VF" [style="dotted"];
		"torch" -> "torch._ops" [style="dotted"];
		"torch" -> "torch._weight_norm" [style="dotted"];
		"torch" -> "torch.norm_except_dim" [style="dotted"];
		"torch" -> "torch._prims" [style="dotted"];
		"torch" -> "torch.ScriptObject" [style="dotted"];
		"torch" -> "torch.broadcast_shapes" [style="dotted"];
		"torch" -> "torch.add" [style="dotted"];
		"torch" -> "torch.arctan2" [style="dotted"];
		"torch" -> "torch.bitwise_and" [style="dotted"];
		"torch" -> "torch.bitwise_left_shift" [style="dotted"];
		"torch" -> "torch.bitwise_or" [style="dotted"];
		"torch" -> "torch.bitwise_right_shift" [style="dotted"];
		"torch" -> "torch.bitwise_xor" [style="dotted"];
		"torch" -> "torch.copysign" [style="dotted"];
		"torch" -> "torch.divide" [style="dotted"];
		"torch" -> "torch.eq" [style="dotted"];
		"torch" -> "torch.float_power" [style="dotted"];
		"torch" -> "torch.floor_divide" [style="dotted"];
		"torch" -> "torch.fmax" [style="dotted"];
		"torch" -> "torch.fmin" [style="dotted"];
		"torch" -> "torch.fmod" [style="dotted"];
		"torch" -> "torch.gcd" [style="dotted"];
		"torch" -> "torch.greater" [style="dotted"];
		"torch" -> "torch.greater_equal" [style="dotted"];
		"torch" -> "torch.heaviside" [style="dotted"];
		"torch" -> "torch.hypot" [style="dotted"];
		"torch" -> "torch.lcm" [style="dotted"];
		"torch" -> "torch.ldexp" [style="dotted"];
		"torch" -> "torch.less" [style="dotted"];
		"torch" -> "torch.less_equal" [style="dotted"];
		"torch" -> "torch.logaddexp" [style="dotted"];
		"torch" -> "torch.logaddexp2" [style="dotted"];
		"torch" -> "torch.logical_and" [style="dotted"];
		"torch" -> "torch.logical_or" [style="dotted"];
		"torch" -> "torch.logical_xor" [style="dotted"];
		"torch" -> "torch.maximum" [style="dotted"];
		"torch" -> "torch.minimum" [style="dotted"];
		"torch" -> "torch.multiply" [style="dotted"];
		"torch" -> "torch.nextafter" [style="dotted"];
		"torch" -> "torch.not_equal" [style="dotted"];
		"torch" -> "torch.pow" [style="dotted"];
		"torch" -> "torch.remainder" [style="dotted"];
		"torch" -> "torch.subtract" [style="dotted"];
		"torch" -> "torch.true_divide" [style="dotted"];
		"torch" -> "torch.absolute" [style="dotted"];
		"torch" -> "torch.arccos" [style="dotted"];
		"torch" -> "torch.arccosh" [style="dotted"];
		"torch" -> "torch.arcsin" [style="dotted"];
		"torch" -> "torch.arcsinh" [style="dotted"];
		"torch" -> "torch.arctan" [style="dotted"];
		"torch" -> "torch.arctanh" [style="dotted"];
		"torch" -> "torch.bitwise_not" [style="dotted"];
		"torch" -> "torch.ceil" [style="dotted"];
		"torch" -> "torch.conj_physical" [style="dotted"];
		"torch" -> "torch.cos" [style="dotted"];
		"torch" -> "torch.cosh" [style="dotted"];
		"torch" -> "torch.deg2rad" [style="dotted"];
		"torch" -> "torch.exp" [style="dotted"];
		"torch" -> "torch.exp2" [style="dotted"];
		"torch" -> "torch.expm1" [style="dotted"];
		"torch" -> "torch.floor" [style="dotted"];
		"torch" -> "torch.isfinite" [style="dotted"];
		"torch" -> "torch.isinf" [style="dotted"];
		"torch" -> "torch.isnan" [style="dotted"];
		"torch" -> "torch.log" [style="dotted"];
		"torch" -> "torch.log10" [style="dotted"];
		"torch" -> "torch.log1p" [style="dotted"];
		"torch" -> "torch.log2" [style="dotted"];
		"torch" -> "torch.logical_not" [style="dotted"];
		"torch" -> "torch.negative" [style="dotted"];
		"torch" -> "torch.rad2deg" [style="dotted"];
		"torch" -> "torch.reciprocal" [style="dotted"];
		"torch" -> "torch.round" [style="dotted"];
		"torch" -> "torch.sign" [style="dotted"];
		"torch" -> "torch.signbit" [style="dotted"];
		"torch" -> "torch.sin" [style="dotted"];
		"torch" -> "torch.sinh" [style="dotted"];
		"torch" -> "torch.sqrt" [style="dotted"];
		"torch" -> "torch.square" [style="dotted"];
		"torch" -> "torch.tan" [style="dotted"];
		"torch" -> "torch.tanh" [style="dotted"];
		"torch" -> "torch.trunc" [style="dotted"];
		"torch" -> "torch._softmax_backward_data" [style="dotted"];
		"torch" -> "torch.default_generator" [style="dotted"];
		"torch" -> "torch.Generator" [style="dotted"];
		"torch" -> "torch.randperm" [style="dotted"];
		"torch" -> "torch.bfloat16" [style="dotted"];
		"torch" -> "torch.float16" [style="dotted"];
		"torch" -> "torch.tensor" [style="dotted"];
		"torch" -> "torch._vmap_internals" [style="dotted"];
		"torch" -> "torch.types" [style="dotted"];
		"torch" -> "torch._utils" [style="dotted"];
		"torch" -> "torch._utils_internal" [style="dotted"];
		"torch" -> "torch.torch_version" [style="dotted"];
		"torch" -> "torch.version" [style="dotted"];
		"torch" -> "torch._C" [style="dotted"];
		"torch" -> "torch._tensor" [style="dotted"];
		"torch" -> "torch.storage" [style="dotted"];
		"torch" -> "torch.amp" [style="dotted"];
		"torch" -> "torch.random" [style="dotted"];
		"torch" -> "torch.serialization" [style="dotted"];
		"torch" -> "torch._tensor_str" [style="dotted"];
		"torch" -> "torch._compile" [style="dotted"];
		"torch" -> "torch.functional" [style="dotted"];
		"torch" -> "torch.autograd" [style="dotted"];
		"torch" -> "torch.__config__" [style="dotted"];
		"torch" -> "torch.__future__" [style="dotted"];
		"torch" -> "torch._awaits" [style="dotted"];
		"torch" -> "torch.backends" [style="dotted"];
		"torch" -> "torch.cpu" [style="dotted"];
		"torch" -> "torch.cuda" [style="dotted"];
		"torch" -> "torch.distributed" [style="dotted"];
		"torch" -> "torch.distributions" [style="dotted"];
		"torch" -> "torch.fft" [style="dotted"];
		"torch" -> "torch.futures" [style="dotted"];
		"torch" -> "torch.hub" [style="dotted"];
		"torch" -> "torch.jit" [style="dotted"];
		"torch" -> "torch.linalg" [style="dotted"];
		"torch" -> "torch.mps" [style="dotted"];
		"torch" -> "torch.mtia" [style="dotted"];
		"torch" -> "torch.multiprocessing" [style="dotted"];
		"torch" -> "torch.nested" [style="dotted"];
		"torch" -> "torch.nn" [style="dotted"];
		"torch" -> "torch.optim" [style="dotted"];
		"torch" -> "torch.overrides" [style="dotted"];
		"torch" -> "torch.profiler" [style="dotted"];
		"torch" -> "torch.sparse" [style="dotted"];
		"torch" -> "torch.special" [style="dotted"];
		"torch" -> "torch.testing" [style="dotted"];
		"torch" -> "torch.utils" [style="dotted"];
		"torch" -> "torch.xpu" [style="dotted"];
		"torch" -> "torch.signal" [style="dotted"];
		"torch" -> "torch.ao" [style="dotted"];
		"torch" -> "torch._size_docs" [style="dotted"];
		"torch" -> "torch._storage_docs" [style="dotted"];
		"torch" -> "torch._tensor_docs" [style="dotted"];
		"torch" -> "torch._torch_docs" [style="dotted"];
		"torch" -> "torch._library" [style="dotted"];
		"torch" -> "torch._classes" [style="dotted"];
		"torch" -> "torch.quantization" [style="dotted"];
		"torch" -> "torch.quasirandom" [style="dotted"];
		"torch" -> "torch._lobpcg" [style="dotted"];
		"torch" -> "torch.masked" [style="dotted"];
		"torch" -> "torch._linalg_utils" [style="dotted"];
		"torch" -> "torch._inductor" [style="dotted"];
		"torch" -> "torch.export" [style="dotted"];
		"torch" -> "torch.func" [style="dotted"];
		"torch" -> "torch.library" [style="dotted"];
		"torch" -> "torch.return_types" [style="dotted"];
		"torch" -> "torch._higher_order_ops" [style="dotted"];
		"torch" -> "torch._meta_registrations" [style="dotted"];
		"torch" -> "torch.compiler" [style="dotted"];
		"torch" -> "torch._dynamo" [style="dotted"];
		"torch" -> "torch._subclasses" [style="dotted"];
		"torch" -> "torch.onnx" [style="dotted"];
		"torch" -> "torch._logging" [style="dotted"];
		"torch" -> "torch._appdirs" [style="dotted"];
		"torch" -> "torch._custom_op" [style="dotted"];
		"torch" -> "torch._custom_ops" [style="dotted"];
		"torch" -> "torch._decomp" [style="dotted"];
		"torch" -> "torch._deploy" [style="dotted"];
		"torch" -> "torch._dispatch" [style="dotted"];
		"torch" -> "torch._export" [style="dotted"];
		"torch" -> "torch._functorch" [style="dotted"];
		"torch" -> "torch._guards" [style="dotted"];
		"torch" -> "torch._jit_internal" [style="dotted"];
		"torch" -> "torch._lazy" [style="dotted"];
		"torch" -> "torch._lowrank" [style="dotted"];
		"torch" -> "torch._namedtensor_internals" [style="dotted"];
		"torch" -> "torch._numpy" [style="dotted"];
		"torch" -> "torch._prims_common" [style="dotted"];
		"torch" -> "torch._python_dispatcher" [style="dotted"];
		"torch" -> "torch._refs" [style="dotted"];
		"torch" -> "torch._sources" [style="dotted"];
		"torch" -> "torch._streambase" [style="dotted"];
		"torch" -> "torch._strobelight" [style="dotted"];
		"torch" -> "torch._vendor" [style="dotted"];
		"torch" -> "torch._weights_only_unpickler" [style="dotted"];
		"torch" -> "torch.contrib" [style="dotted"];
		"torch" -> "torch.fx" [style="dotted"];
		"torch" -> "torch.TensorType" [style="dotted"];
		"torch" -> "torch.monitor" [style="dotted"];
		"torch" -> "torch.package" [style="dotted"];
	}
	subgraph "cluster_sympy.plotting.backends.matplotlibbackend" {
		label="sympy.plotting.backends.matplotlibbackend";
		"sympy.plotting.backends.matplotlibbackend" -> "sympy.plotting.backends.matplotlibbackend.matplotlib" [style="dotted"];
	}
	subgraph "cluster_transformers.models.cpmant" {
		label="transformers.models.cpmant";
		"transformers.models.cpmant" -> "transformers.models.cpmant.configuration_cpmant" [style="dotted"];
		"transformers.models.cpmant" -> "transformers.models.cpmant.tokenization_cpmant" [style="dotted"];
		"transformers.models.cpmant" -> "transformers.models.cpmant.modeling_cpmant" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.launcher" {
		label="torch.distributed.launcher";
		"torch.distributed.launcher" -> "torch.distributed.launcher.api" [style="dotted"];
	}
	subgraph "cluster_torch.onnx._internal.exporter" {
		label="torch.onnx._internal.exporter";
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._schemas" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._registration" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._dispatching" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._analysis" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._errors" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._tensors" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._building" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._capture_strategies" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._decomp" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._fx_passes" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._ir_passes" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._onnx_program" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._verification" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._reporting" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._core" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._testing" [style="dotted"];
		"torch.onnx._internal.exporter" -> "torch.onnx._internal.exporter._compat" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning._experimental.data_sparsifier" {
		label="torch.ao.pruning._experimental.data_sparsifier";
		"torch.ao.pruning._experimental.data_sparsifier" -> "torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" [style="dotted"];
		"torch.ao.pruning._experimental.data_sparsifier" -> "torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" [style="dotted"];
		"torch.ao.pruning._experimental.data_sparsifier" -> "torch.ao.pruning._experimental.data_sparsifier.quantization_utils" [style="dotted"];
		"torch.ao.pruning._experimental.data_sparsifier" -> "torch.ao.pruning._experimental.data_sparsifier.lightning" [style="dotted"];
	}
	subgraph "cluster_sympy.interactive" {
		label="sympy.interactive";
		"sympy.interactive" -> "sympy.interactive.printing" [style="dotted"];
		"sympy.interactive" -> "sympy.interactive.session" [style="dotted"];
		"sympy.interactive" -> "sympy.interactive.traversal" [style="dotted"];
	}
	subgraph "cluster_unittest" {
		label="unittest";
		"unittest" -> "unittest.util" [style="dotted"];
		"unittest" -> "unittest.result" [style="dotted"];
		"unittest" -> "unittest.case" [style="dotted"];
		"unittest" -> "unittest.suite" [style="dotted"];
		"unittest" -> "unittest.loader" [style="dotted"];
		"unittest" -> "unittest.runner" [style="dotted"];
		"unittest" -> "unittest.main" [style="dotted"];
		"unittest" -> "unittest.signals" [style="dotted"];
		"unittest" -> "unittest.async_case" [style="dotted"];
		"unittest" -> "unittest.mock" [style="dotted"];
		"unittest" -> "unittest._log" [style="dotted"];
	}
	subgraph "cluster_urllib" {
		label="urllib";
		"urllib" -> "urllib.pathname2url" [style="dotted"];
		"urllib" -> "urllib.parse" [style="dotted"];
		"urllib" -> "urllib.request" [style="dotted"];
		"urllib" -> "urllib.error" [style="dotted"];
		"urllib" -> "urllib.response" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.jaraco" {
		label="setuptools._vendor.jaraco";
		"setuptools._vendor.jaraco" -> "setuptools._vendor.jaraco.context" [style="dotted"];
		"setuptools._vendor.jaraco" -> "setuptools._vendor.jaraco.text" [style="dotted"];
		"setuptools._vendor.jaraco" -> "setuptools._vendor.jaraco.functools" [style="dotted"];
	}
	subgraph "cluster_transformers.models.llava_onevision" {
		label="transformers.models.llava_onevision";
		"transformers.models.llava_onevision" -> "transformers.models.llava_onevision.configuration_llava_onevision" [style="dotted"];
		"transformers.models.llava_onevision" -> "transformers.models.llava_onevision.processing_llava_onevision" [style="dotted"];
		"transformers.models.llava_onevision" -> "transformers.models.llava_onevision.image_processing_llava_onevision" [style="dotted"];
		"transformers.models.llava_onevision" -> "transformers.models.llava_onevision.video_processing_llava_onevision" [style="dotted"];
		"transformers.models.llava_onevision" -> "transformers.models.llava_onevision.modeling_llava_onevision" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gemma2" {
		label="transformers.models.gemma2";
		"transformers.models.gemma2" -> "transformers.models.gemma2.configuration_gemma2" [style="dotted"];
		"transformers.models.gemma2" -> "transformers.models.gemma2.modeling_gemma2" [style="dotted"];
	}
	subgraph "cluster_transformers.models.video_llava" {
		label="transformers.models.video_llava";
		"transformers.models.video_llava" -> "transformers.models.video_llava.configuration_video_llava" [style="dotted"];
		"transformers.models.video_llava" -> "transformers.models.video_llava.image_processing_video_llava" [style="dotted"];
		"transformers.models.video_llava" -> "transformers.models.video_llava.modeling_video_llava" [style="dotted"];
	}
	subgraph "cluster_setuptools._distutils.command" {
		label="setuptools._distutils.command";
		"setuptools._distutils.command" -> "setuptools._distutils.command._framework_compat" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.bdist" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.bdist_dumb" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.bdist_rpm" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.build" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.build_clib" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.build_ext" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.build_py" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.build_scripts" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.check" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.clean" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.config" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.install" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.install_data" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.install_egg_info" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.install_headers" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.install_lib" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.install_scripts" [style="dotted"];
		"setuptools._distutils.command" -> "setuptools._distutils.command.sdist" [style="dotted"];
	}
	subgraph "cluster_numpy.core" {
		label="numpy.core";
		"numpy.core" -> "numpy.core._utils" [style="dotted"];
	}
	subgraph "cluster_torch.nn.intrinsic.quantized" {
		label="torch.nn.intrinsic.quantized";
		"torch.nn.intrinsic.quantized" -> "torch.nn.intrinsic.quantized.dynamic" [style="dotted"];
		"torch.nn.intrinsic.quantized" -> "torch.nn.intrinsic.quantized.modules" [style="dotted"];
	}
	subgraph "cluster_torch.backends._coreml" {
		label="torch.backends._coreml";
		"torch.backends._coreml" -> "torch.backends._coreml.preprocess" [style="dotted"];
	}
	subgraph "cluster_sympy.functions.elementary" {
		label="sympy.functions.elementary";
		"sympy.functions.elementary" -> "sympy.functions.elementary.piecewise" [style="dotted"];
		"sympy.functions.elementary" -> "sympy.functions.elementary.miscellaneous" [style="dotted"];
		"sympy.functions.elementary" -> "sympy.functions.elementary.complexes" [style="dotted"];
		"sympy.functions.elementary" -> "sympy.functions.elementary.exponential" [style="dotted"];
		"sympy.functions.elementary" -> "sympy.functions.elementary.trigonometric" [style="dotted"];
		"sympy.functions.elementary" -> "sympy.functions.elementary.integers" [style="dotted"];
		"sympy.functions.elementary" -> "sympy.functions.elementary.hyperbolic" [style="dotted"];
		"sympy.functions.elementary" -> "sympy.functions.elementary._trigonometric_special" [style="dotted"];
	}
	subgraph "cluster_transformers.models.idefics3" {
		label="transformers.models.idefics3";
		"transformers.models.idefics3" -> "transformers.models.idefics3.configuration_idefics3" [style="dotted"];
		"transformers.models.idefics3" -> "transformers.models.idefics3.image_processing_idefics3" [style="dotted"];
		"transformers.models.idefics3" -> "transformers.models.idefics3.modeling_idefics3" [style="dotted"];
		"transformers.models.idefics3" -> "transformers.models.idefics3.processing_idefics3" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.timer" {
		label="torch.distributed.elastic.timer";
		"torch.distributed.elastic.timer" -> "torch.distributed.elastic.timer.api" [style="dotted"];
		"torch.distributed.elastic.timer" -> "torch.distributed.elastic.timer.file_based_local_timer" [style="dotted"];
		"torch.distributed.elastic.timer" -> "torch.distributed.elastic.timer.local_timer" [style="dotted"];
		"torch.distributed.elastic.timer" -> "torch.distributed.elastic.timer.debug_info_logging" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated" {
		label="transformers.models.deprecated";
		"transformers.models.deprecated" -> "transformers.models.deprecated.xlm_prophetnet" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.vit_hybrid" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.van" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.tvlt" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.transfo_xl" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.trajectory_transformer" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.tapex" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.speech_to_text_2" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.retribert" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.realm" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.qdqbert" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.open_llama" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.nezha" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.nat" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.mmbt" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.mega" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.mctct" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.jukebox" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.graphormer" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.gptsan_japanese" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.ernie_m" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.efficientformer" [style="dotted"];
		"transformers.models.deprecated" -> "transformers.models.deprecated.deta" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops" {
		label="torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops";
		"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding" [style="dotted"];
		"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag" [style="dotted"];
		"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops._common" [style="dotted"];
	}
	subgraph "cluster_transformers.models.phobert" {
		label="transformers.models.phobert";
		"transformers.models.phobert" -> "transformers.models.phobert.tokenization_phobert" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.tensor.debug" {
		label="torch.distributed.tensor.debug";
		"torch.distributed.tensor.debug" -> "torch.distributed.tensor.debug._comm_mode" [style="dotted"];
		"torch.distributed.tensor.debug" -> "torch.distributed.tensor.debug._visualize_sharding" [style="dotted"];
		"torch.distributed.tensor.debug" -> "torch.distributed.tensor.debug._op_coverage" [style="dotted"];
	}
	subgraph "cluster_sympy.assumptions" {
		label="sympy.assumptions";
		"sympy.assumptions" -> "sympy.assumptions.assume" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.ask" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.refine" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.relation" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.cnf" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.satask" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.lra_satask" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.ask_generated" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.sathandlers" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.predicates" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.handlers" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.facts" [style="dotted"];
		"sympy.assumptions" -> "sympy.assumptions.wrapper" [style="dotted"];
	}
	subgraph "cluster_torch.utils.hipify" {
		label="torch.utils.hipify";
		"torch.utils.hipify" -> "torch.utils.hipify.version" [style="dotted"];
		"torch.utils.hipify" -> "torch.utils.hipify.constants" [style="dotted"];
		"torch.utils.hipify" -> "torch.utils.hipify.hipify_python" [style="dotted"];
		"torch.utils.hipify" -> "torch.utils.hipify.cuda_to_hip_mappings" [style="dotted"];
	}
	subgraph "cluster_win32com" {
		label="win32com";
		"win32com" -> "win32com.universal" [style="dotted"];
		"win32com" -> "win32com.shell" [style="dotted"];
		"win32com" -> "win32com.client" [style="dotted"];
		"win32com" -> "win32com.server" [style="dotted"];
		"win32com" -> "win32com.util" [style="dotted"];
	}
	subgraph "cluster_transformers.models.codegen" {
		label="transformers.models.codegen";
		"transformers.models.codegen" -> "transformers.models.codegen.configuration_codegen" [style="dotted"];
		"transformers.models.codegen" -> "transformers.models.codegen.tokenization_codegen" [style="dotted"];
		"transformers.models.codegen" -> "transformers.models.codegen.tokenization_codegen_fast" [style="dotted"];
		"transformers.models.codegen" -> "transformers.models.codegen.modeling_codegen" [style="dotted"];
	}
	subgraph "cluster_docutils.parsers" {
		label="docutils.parsers";
		"docutils.parsers" -> "docutils.parsers.rst" [style="dotted"];
	}
	subgraph "cluster_transformers.models.fastspeech2_conformer" {
		label="transformers.models.fastspeech2_conformer";
		"transformers.models.fastspeech2_conformer" -> "transformers.models.fastspeech2_conformer.configuration_fastspeech2_conformer" [style="dotted"];
		"transformers.models.fastspeech2_conformer" -> "transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer" [style="dotted"];
		"transformers.models.fastspeech2_conformer" -> "transformers.models.fastspeech2_conformer.modeling_fastspeech2_conformer" [style="dotted"];
	}
	subgraph "cluster_transformers.data.metrics" {
		label="transformers.data.metrics";
	}
	subgraph "cluster_simpleaudio" {
		label="simpleaudio";
		"simpleaudio" -> "simpleaudio.shiny" [style="dotted"];
		"simpleaudio" -> "simpleaudio._simpleaudio" [style="dotted"];
	}
	subgraph "cluster_torch.utils.data" {
		label="torch.utils.data";
		"torch.utils.data" -> "torch.utils.data.dataloader" [style="dotted"];
		"torch.utils.data" -> "torch.utils.data.dataset" [style="dotted"];
		"torch.utils.data" -> "torch.utils.data.distributed" [style="dotted"];
		"torch.utils.data" -> "torch.utils.data.sampler" [style="dotted"];
		"torch.utils.data" -> "torch.utils.data.datapipes" [style="dotted"];
		"torch.utils.data" -> "torch.utils.data._utils" [style="dotted"];
		"torch.utils.data" -> "torch.utils.data.graph_settings" [style="dotted"];
		"torch.utils.data" -> "torch.utils.data.graph" [style="dotted"];
		"torch.utils.data" -> "torch.utils.data.backward_compatibility" [style="dotted"];
	}
	subgraph "cluster_transformers.models.patchtsmixer" {
		label="transformers.models.patchtsmixer";
		"transformers.models.patchtsmixer" -> "transformers.models.patchtsmixer.configuration_patchtsmixer" [style="dotted"];
		"transformers.models.patchtsmixer" -> "transformers.models.patchtsmixer.modeling_patchtsmixer" [style="dotted"];
	}
	subgraph "cluster_torch._inductor" {
		label="torch._inductor";
		"torch._inductor" -> "torch._inductor.config" [style="dotted"];
		"torch._inductor" -> "torch._inductor.exc" [style="dotted"];
		"torch._inductor" -> "torch._inductor.metrics" [style="dotted"];
		"torch._inductor" -> "torch._inductor.dependencies" [style="dotted"];
		"torch._inductor" -> "torch._inductor.async_compile" [style="dotted"];
		"torch._inductor" -> "torch._inductor.cpp_builder" [style="dotted"];
		"torch._inductor" -> "torch._inductor.cudagraph_trees" [style="dotted"];
		"torch._inductor" -> "torch._inductor.comms" [style="dotted"];
		"torch._inductor" -> "torch._inductor.kernel" [style="dotted"];
		"torch._inductor" -> "torch._inductor.quantized_lowerings" [style="dotted"];
		"torch._inductor" -> "torch._inductor.mkldnn_ir" [style="dotted"];
		"torch._inductor" -> "torch._inductor.mkldnn_lowerings" [style="dotted"];
		"torch._inductor" -> "torch._inductor.jagged_lowerings" [style="dotted"];
		"torch._inductor" -> "torch._inductor.ir" [style="dotted"];
		"torch._inductor" -> "torch._inductor.compile_fx" [style="dotted"];
		"torch._inductor" -> "torch._inductor.codecache" [style="dotted"];
		"torch._inductor" -> "torch._inductor.utils" [style="dotted"];
		"torch._inductor" -> "torch._inductor.virtualized" [style="dotted"];
		"torch._inductor" -> "torch._inductor.graph" [style="dotted"];
		"torch._inductor" -> "torch._inductor.wrapper_benchmark" [style="dotted"];
		"torch._inductor" -> "torch._inductor.scheduler" [style="dotted"];
		"torch._inductor" -> "torch._inductor.comm_analysis" [style="dotted"];
		"torch._inductor" -> "torch._inductor.loop_body" [style="dotted"];
		"torch._inductor" -> "torch._inductor.sizevars" [style="dotted"];
		"torch._inductor" -> "torch._inductor.debug" [style="dotted"];
		"torch._inductor" -> "torch._inductor.cudagraph_utils" [style="dotted"];
		"torch._inductor" -> "torch._inductor.decomposition" [style="dotted"];
		"torch._inductor" -> "torch._inductor.inductor_prims" [style="dotted"];
		"torch._inductor" -> "torch._inductor.constant_folding" [style="dotted"];
		"torch._inductor" -> "torch._inductor.freezing" [style="dotted"];
		"torch._inductor" -> "torch._inductor.pattern_matcher" [style="dotted"];
		"torch._inductor" -> "torch._inductor.lowering" [style="dotted"];
		"torch._inductor" -> "torch._inductor.test_operators" [style="dotted"];
		"torch._inductor" -> "torch._inductor.subgraph_lowering" [style="dotted"];
		"torch._inductor" -> "torch._inductor.select_algorithm" [style="dotted"];
		"torch._inductor" -> "torch._inductor.autotune_process" [style="dotted"];
		"torch._inductor" -> "torch._inductor.cpu_vec_isa" [style="dotted"];
		"torch._inductor" -> "torch._inductor.autoheuristic" [style="dotted"];
		"torch._inductor" -> "torch._inductor.ops_handler" [style="dotted"];
		"torch._inductor" -> "torch._inductor.fx_passes" [style="dotted"];
		"torch._inductor" -> "torch._inductor.fx_utils" [style="dotted"];
		"torch._inductor" -> "torch._inductor.hooks" [style="dotted"];
		"torch._inductor" -> "torch._inductor.bounds" [style="dotted"];
		"torch._inductor" -> "torch._inductor.index_propagation" [style="dotted"];
		"torch._inductor" -> "torch._inductor.optimize_indexing" [style="dotted"];
		"torch._inductor" -> "torch._inductor.codegen" [style="dotted"];
		"torch._inductor" -> "torch._inductor.extern_node_serializer" [style="dotted"];
		"torch._inductor" -> "torch._inductor.remote_cache" [style="dotted"];
		"torch._inductor" -> "torch._inductor.runtime" [style="dotted"];
		"torch._inductor" -> "torch._inductor.package" [style="dotted"];
		"torch._inductor" -> "torch._inductor.compile_worker" [style="dotted"];
		"torch._inductor" -> "torch._inductor.aoti_eager" [style="dotted"];
		"torch._inductor" -> "torch._inductor.test_case" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.test_module" {
		label="torch.testing._internal.test_module";
		"torch.testing._internal.test_module" -> "torch.testing._internal.test_module.future_div" [style="dotted"];
		"torch.testing._internal.test_module" -> "torch.testing._internal.test_module.no_future_div" [style="dotted"];
	}
	subgraph "cluster_torch.ao.quantization.fx._model_report" {
		label="torch.ao.quantization.fx._model_report";
		"torch.ao.quantization.fx._model_report" -> "torch.ao.quantization.fx._model_report.detector" [style="dotted"];
		"torch.ao.quantization.fx._model_report" -> "torch.ao.quantization.fx._model_report.model_report" [style="dotted"];
		"torch.ao.quantization.fx._model_report" -> "torch.ao.quantization.fx._model_report.model_report_observer" [style="dotted"];
		"torch.ao.quantization.fx._model_report" -> "torch.ao.quantization.fx._model_report.model_report_visualizer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.nllb_moe" {
		label="transformers.models.nllb_moe";
		"transformers.models.nllb_moe" -> "transformers.models.nllb_moe.configuration_nllb_moe" [style="dotted"];
		"transformers.models.nllb_moe" -> "transformers.models.nllb_moe.modeling_nllb_moe" [style="dotted"];
	}
	subgraph "cluster_transformers.models.ernie" {
		label="transformers.models.ernie";
		"transformers.models.ernie" -> "transformers.models.ernie.configuration_ernie" [style="dotted"];
		"transformers.models.ernie" -> "transformers.models.ernie.modeling_ernie" [style="dotted"];
	}
	subgraph "cluster_transformers.models.dpr" {
		label="transformers.models.dpr";
		"transformers.models.dpr" -> "transformers.models.dpr.configuration_dpr" [style="dotted"];
		"transformers.models.dpr" -> "transformers.models.dpr.tokenization_dpr" [style="dotted"];
		"transformers.models.dpr" -> "transformers.models.dpr.tokenization_dpr_fast" [style="dotted"];
		"transformers.models.dpr" -> "transformers.models.dpr.modeling_dpr" [style="dotted"];
		"transformers.models.dpr" -> "transformers.models.dpr.modeling_tf_dpr" [style="dotted"];
	}
	subgraph "cluster_kivy.core.camera" {
		label="kivy.core.camera";
		"kivy.core.camera" -> "kivy.core.camera.camera_picamera" [style="dotted"];
		"kivy.core.camera" -> "kivy.core.camera.camera_android" [style="dotted"];
		"kivy.core.camera" -> "kivy.core.camera.camera_opencv" [style="dotted"];
		"kivy.core.camera" -> "kivy.core.camera.camera_gi" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bros" {
		label="transformers.models.bros";
		"transformers.models.bros" -> "transformers.models.bros.configuration_bros" [style="dotted"];
		"transformers.models.bros" -> "transformers.models.bros.processing_bros" [style="dotted"];
		"transformers.models.bros" -> "transformers.models.bros.modeling_bros" [style="dotted"];
	}
	subgraph "cluster_torch.export.passes" {
		label="torch.export.passes";
	}
	subgraph "cluster_jaraco" {
		label="jaraco";
		"jaraco" -> "jaraco.functools" [style="dotted"];
		"jaraco" -> "jaraco.text" [style="dotted"];
		"jaraco" -> "jaraco.collections" [style="dotted"];
		"jaraco" -> "jaraco.context" [style="dotted"];
	}
	subgraph "cluster_transformers.models.prophetnet" {
		label="transformers.models.prophetnet";
		"transformers.models.prophetnet" -> "transformers.models.prophetnet.configuration_prophetnet" [style="dotted"];
		"transformers.models.prophetnet" -> "transformers.models.prophetnet.tokenization_prophetnet" [style="dotted"];
		"transformers.models.prophetnet" -> "transformers.models.prophetnet.modeling_prophetnet" [style="dotted"];
	}
	subgraph "cluster_anyio" {
		label="anyio";
		"anyio" -> "anyio.to_thread" [style="dotted"];
		"anyio" -> "anyio._backends" [style="dotted"];
		"anyio" -> "anyio._core" [style="dotted"];
		"anyio" -> "anyio.lowlevel" [style="dotted"];
		"anyio" -> "anyio.streams" [style="dotted"];
		"anyio" -> "anyio.from_thread" [style="dotted"];
		"anyio" -> "anyio.abc" [style="dotted"];
	}
	subgraph "cluster_torch.cuda.amp" {
		label="torch.cuda.amp";
		"torch.cuda.amp" -> "torch.cuda.amp.autocast_mode" [style="dotted"];
		"torch.cuda.amp" -> "torch.cuda.amp.common" [style="dotted"];
		"torch.cuda.amp" -> "torch.cuda.amp.grad_scaler" [style="dotted"];
	}
	subgraph "cluster_pkg_resources" {
		label="pkg_resources";
	}
	subgraph "cluster_docutils.utils" {
		label="docutils.utils";
		"docutils.utils" -> "docutils.utils.punctuation_chars" [style="dotted"];
		"docutils.utils" -> "docutils.utils.roman" [style="dotted"];
		"docutils.utils" -> "docutils.utils.urischemes" [style="dotted"];
		"docutils.utils" -> "docutils.utils.smartquotes" [style="dotted"];
		"docutils.utils" -> "docutils.utils.code_analyzer" [style="dotted"];
		"docutils.utils" -> "docutils.utils.math" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.inference" {
		label="huggingface_hub.inference";
		"huggingface_hub.inference" -> "huggingface_hub.inference._client" [style="dotted"];
		"huggingface_hub.inference" -> "huggingface_hub.inference._generated" [style="dotted"];
		"huggingface_hub.inference" -> "huggingface_hub.inference._common" [style="dotted"];
	}
	subgraph "cluster_numpy.f2py" {
		label="numpy.f2py";
		"numpy.f2py" -> "numpy.f2py.__version__" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.cfuncs" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.capi_maps" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.cb_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.symbolic" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.crackfortran" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.func2subr" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.common_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.use_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.f90mod_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.f2py2e" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.diagnose" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.auxfuncs" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py._backends" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py._isocbind" [style="dotted"];
	}
	subgraph "cluster_torch.ao.quantization.pt2e" {
		label="torch.ao.quantization.pt2e";
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e._numeric_debugger" [style="dotted"];
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e.export_utils" [style="dotted"];
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e.utils" [style="dotted"];
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e.duplicate_dq_pass" [style="dotted"];
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e.graph_utils" [style="dotted"];
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e.port_metadata_pass" [style="dotted"];
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e.prepare" [style="dotted"];
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e.qat_utils" [style="dotted"];
		"torch.ao.quantization.pt2e" -> "torch.ao.quantization.pt2e.representation" [style="dotted"];
	}
	subgraph "cluster_docutils.writers" {
		label="docutils.writers";
		"docutils.writers" -> "docutils.writers._html_base" [style="dotted"];
		"docutils.writers" -> "docutils.writers.docutils_xml" [style="dotted"];
		"docutils.writers" -> "docutils.writers.manpage" [style="dotted"];
		"docutils.writers" -> "docutils.writers.null" [style="dotted"];
		"docutils.writers" -> "docutils.writers.pseudoxml" [style="dotted"];
		"docutils.writers" -> "docutils.writers.xetex" [style="dotted"];
		"docutils.writers" -> "docutils.writers.latex2e" [style="dotted"];
		"docutils.writers" -> "docutils.writers.s5_html" [style="dotted"];
		"docutils.writers" -> "docutils.writers.html4css1" [style="dotted"];
		"docutils.writers" -> "docutils.writers.pep_html" [style="dotted"];
		"docutils.writers" -> "docutils.writers.odf_odt" [style="dotted"];
		"docutils.writers" -> "docutils.writers.html5_polyglot" [style="dotted"];
	}
	subgraph "cluster_torch.cpu" {
		label="torch.cpu";
		"torch.cpu" -> "torch.cpu.amp" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vits" {
		label="transformers.models.vits";
		"transformers.models.vits" -> "transformers.models.vits.configuration_vits" [style="dotted"];
		"transformers.models.vits" -> "transformers.models.vits.tokenization_vits" [style="dotted"];
		"transformers.models.vits" -> "transformers.models.vits.modeling_vits" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.fx_passes.serialized_patterns" {
		label="torch._inductor.fx_passes.serialized_patterns";
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_1" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_10" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_11" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_12" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_13" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_14" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_15" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_16" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_17" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_18" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_19" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_2" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_3" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_4" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_5" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_6" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_7" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_8" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_9" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns.addmm_pattern" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns.bmm_pattern" [style="dotted"];
		"torch._inductor.fx_passes.serialized_patterns" -> "torch._inductor.fx_passes.serialized_patterns.mm_pattern" [style="dotted"];
	}
	subgraph "cluster_transformers.models.code_llama" {
		label="transformers.models.code_llama";
		"transformers.models.code_llama" -> "transformers.models.code_llama.tokenization_code_llama" [style="dotted"];
		"transformers.models.code_llama" -> "transformers.models.code_llama.tokenization_code_llama_fast" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms" {
		label="networkx.algorithms";
		"networkx.algorithms" -> "networkx.algorithms.assortativity" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.asteroidal" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.boundary" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.broadcasting" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.bridges" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.chains" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.centrality" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.chordal" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.cluster" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.clique" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.communicability_alg" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.components" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.coloring" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.core" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.covering" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.cycles" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.cuts" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.d_separation" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.dag" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.distance_measures" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.distance_regular" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.dominance" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.dominating" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.efficiency_measures" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.euler" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.graphical" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.hierarchy" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.hybrid" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.link_analysis" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.link_prediction" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.lowest_common_ancestors" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.isolate" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.matching" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.minors" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.mis" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.moral" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.non_randomness" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.operators" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.planarity" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.planar_drawing" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.polynomials" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.reciprocity" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.regular" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.richclub" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.shortest_paths" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.similarity" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.graph_hashing" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.simple_paths" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.smallworld" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.smetric" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.structuralholes" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.sparsifiers" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.summarization" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.swap" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.time_dependent" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.traversal" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.triads" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.vitality" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.voronoi" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.walks" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.wiener" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.approximation" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.bipartite" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.node_classification" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.connectivity" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.community" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.flow" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.isomorphism" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.tournament" [style="dotted"];
		"networkx.algorithms" -> "networkx.algorithms.tree" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning._experimental.activation_sparsifier" {
		label="torch.ao.pruning._experimental.activation_sparsifier";
		"torch.ao.pruning._experimental.activation_sparsifier" -> "torch.ao.pruning._experimental.activation_sparsifier.activation_sparsifier" [style="dotted"];
	}
	subgraph "cluster_numpy.matrixlib" {
		label="numpy.matrixlib";
		"numpy.matrixlib" -> "numpy.matrixlib.defmatrix" [style="dotted"];
	}
	subgraph "cluster_numpy.rec" {
		label="numpy.rec";
	}
	subgraph "cluster_torch._refs" {
		label="torch._refs";
		"torch._refs" -> "torch._refs._conversions" [style="dotted"];
		"torch._refs" -> "torch._refs.fft" [style="dotted"];
		"torch._refs" -> "torch._refs.linalg" [style="dotted"];
		"torch._refs" -> "torch._refs.special" [style="dotted"];
		"torch._refs" -> "torch._refs.nn" [style="dotted"];
	}
	subgraph "cluster_torch.package" {
		label="torch.package";
		"torch.package" -> "torch.package.file_structure_representation" [style="dotted"];
		"torch.package" -> "torch.package.glob_group" [style="dotted"];
		"torch.package" -> "torch.package.importer" [style="dotted"];
		"torch.package" -> "torch.package.package_exporter" [style="dotted"];
		"torch.package" -> "torch.package.package_importer" [style="dotted"];
		"torch.package" -> "torch.package._mangling" [style="dotted"];
		"torch.package" -> "torch.package.analyze" [style="dotted"];
		"torch.package" -> "torch.package._directory_reader" [style="dotted"];
		"torch.package" -> "torch.package._importlib" [style="dotted"];
		"torch.package" -> "torch.package._package_unpickler" [style="dotted"];
		"torch.package" -> "torch.package._digraph" [style="dotted"];
		"torch.package" -> "torch.package._package_pickler" [style="dotted"];
		"torch.package" -> "torch.package._stdlib" [style="dotted"];
		"torch.package" -> "torch.package.find_file_dependencies" [style="dotted"];
		"torch.package" -> "torch.package._mock" [style="dotted"];
	}
	subgraph "cluster_transformers.models.rembert" {
		label="transformers.models.rembert";
		"transformers.models.rembert" -> "transformers.models.rembert.configuration_rembert" [style="dotted"];
		"transformers.models.rembert" -> "transformers.models.rembert.tokenization_rembert" [style="dotted"];
		"transformers.models.rembert" -> "transformers.models.rembert.tokenization_rembert_fast" [style="dotted"];
		"transformers.models.rembert" -> "transformers.models.rembert.modeling_rembert" [style="dotted"];
		"transformers.models.rembert" -> "transformers.models.rembert.modeling_tf_rembert" [style="dotted"];
	}
	subgraph "cluster_transformers.models.llava_next_video" {
		label="transformers.models.llava_next_video";
		"transformers.models.llava_next_video" -> "transformers.models.llava_next_video.configuration_llava_next_video" [style="dotted"];
		"transformers.models.llava_next_video" -> "transformers.models.llava_next_video.processing_llava_next_video" [style="dotted"];
		"transformers.models.llava_next_video" -> "transformers.models.llava_next_video.image_processing_llava_next_video" [style="dotted"];
		"transformers.models.llava_next_video" -> "transformers.models.llava_next_video.modeling_llava_next_video" [style="dotted"];
	}
	subgraph "cluster_transformers.models.clvp" {
		label="transformers.models.clvp";
		"transformers.models.clvp" -> "transformers.models.clvp.configuration_clvp" [style="dotted"];
		"transformers.models.clvp" -> "transformers.models.clvp.feature_extraction_clvp" [style="dotted"];
		"transformers.models.clvp" -> "transformers.models.clvp.processing_clvp" [style="dotted"];
		"transformers.models.clvp" -> "transformers.models.clvp.tokenization_clvp" [style="dotted"];
		"transformers.models.clvp" -> "transformers.models.clvp.modeling_clvp" [style="dotted"];
		"transformers.models.clvp" -> "transformers.models.clvp.number_normalizer" [style="dotted"];
	}
	subgraph "cluster_kivy.graphics" {
		label="kivy.graphics";
		"kivy.graphics" -> "kivy.graphics.instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.context_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.vertex_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.stencil_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.gl_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.fbo" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.boxshadow" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.scissor_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.transformation" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.cgl" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.context" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.opengl" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.texture" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.svg" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.tesselator" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.vbo" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.buffer" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.vertex" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.opengl_utils" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.shader" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.compiler" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.cgl_backend" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.utils" {
		label="huggingface_hub.utils";
		"huggingface_hub.utils" -> "huggingface_hub.utils.tqdm" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._auth" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._cache_assets" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils.logging" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._cache_manager" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._chunk_utils" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._datetime" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._experimental" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._fixes" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._git_credential" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._headers" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._hf_folder" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._http" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._pagination" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._paths" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._runtime" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._safetensors" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._subprocess" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._telemetry" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._typing" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._validators" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._deprecation" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._lfs" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils.sha" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils.insecure_hashlib" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils.endpoint_helpers" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.multiprocessing" {
		label="torch.distributed.elastic.multiprocessing";
		"torch.distributed.elastic.multiprocessing" -> "torch.distributed.elastic.multiprocessing.api" [style="dotted"];
		"torch.distributed.elastic.multiprocessing" -> "torch.distributed.elastic.multiprocessing.redirects" [style="dotted"];
		"torch.distributed.elastic.multiprocessing" -> "torch.distributed.elastic.multiprocessing.tail_log" [style="dotted"];
		"torch.distributed.elastic.multiprocessing" -> "torch.distributed.elastic.multiprocessing.subprocess_handler" [style="dotted"];
		"torch.distributed.elastic.multiprocessing" -> "torch.distributed.elastic.multiprocessing.errors" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.importlib_metadata.compat" {
		label="setuptools._vendor.importlib_metadata.compat";
		"setuptools._vendor.importlib_metadata.compat" -> "setuptools._vendor.importlib_metadata.compat.py39" [style="dotted"];
		"setuptools._vendor.importlib_metadata.compat" -> "setuptools._vendor.importlib_metadata.compat.py311" [style="dotted"];
	}
	subgraph "cluster_sympy.strategies" {
		label="sympy.strategies";
		"sympy.strategies" -> "sympy.strategies.rl" [style="dotted"];
		"sympy.strategies" -> "sympy.strategies.traverse" [style="dotted"];
		"sympy.strategies" -> "sympy.strategies.util" [style="dotted"];
		"sympy.strategies" -> "sympy.strategies.core" [style="dotted"];
		"sympy.strategies" -> "sympy.strategies.tools" [style="dotted"];
		"sympy.strategies" -> "sympy.strategies.branch" [style="dotted"];
		"sympy.strategies" -> "sympy.strategies.tree" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.traversal" {
		label="networkx.algorithms.traversal";
		"networkx.algorithms.traversal" -> "networkx.algorithms.traversal.beamsearch" [style="dotted"];
		"networkx.algorithms.traversal" -> "networkx.algorithms.traversal.breadth_first_search" [style="dotted"];
		"networkx.algorithms.traversal" -> "networkx.algorithms.traversal.depth_first_search" [style="dotted"];
		"networkx.algorithms.traversal" -> "networkx.algorithms.traversal.edgedfs" [style="dotted"];
		"networkx.algorithms.traversal" -> "networkx.algorithms.traversal.edgebfs" [style="dotted"];
	}
	subgraph "cluster_jinja2" {
		label="jinja2";
		"jinja2" -> "jinja2.nodes" [style="dotted"];
		"jinja2" -> "jinja2.bccache" [style="dotted"];
		"jinja2" -> "jinja2.environment" [style="dotted"];
		"jinja2" -> "jinja2.exceptions" [style="dotted"];
		"jinja2" -> "jinja2.loaders" [style="dotted"];
		"jinja2" -> "jinja2.runtime" [style="dotted"];
		"jinja2" -> "jinja2.utils" [style="dotted"];
		"jinja2" -> "jinja2.ext" [style="dotted"];
		"jinja2" -> "jinja2.defaults" [style="dotted"];
		"jinja2" -> "jinja2.lexer" [style="dotted"];
		"jinja2" -> "jinja2.parser" [style="dotted"];
		"jinja2" -> "jinja2._identifier" [style="dotted"];
		"jinja2" -> "jinja2.filters" [style="dotted"];
		"jinja2" -> "jinja2.tests" [style="dotted"];
		"jinja2" -> "jinja2.async_utils" [style="dotted"];
		"jinja2" -> "jinja2.sandbox" [style="dotted"];
		"jinja2" -> "jinja2.constants" [style="dotted"];
		"jinja2" -> "jinja2.compiler" [style="dotted"];
		"jinja2" -> "jinja2.debug" [style="dotted"];
		"jinja2" -> "jinja2.idtracking" [style="dotted"];
		"jinja2" -> "jinja2.optimizer" [style="dotted"];
		"jinja2" -> "jinja2.visitor" [style="dotted"];
	}
	subgraph "cluster_torch.backends.mps" {
		label="torch.backends.mps";
	}
	subgraph "cluster_torch.monitor" {
		label="torch.monitor";
	}
	subgraph "cluster_xml.sax" {
		label="xml.sax";
		"xml.sax" -> "xml.sax.handler" [style="dotted"];
		"xml.sax" -> "xml.sax.xmlreader" [style="dotted"];
		"xml.sax" -> "xml.sax.saxutils" [style="dotted"];
		"xml.sax" -> "xml.sax._exceptions" [style="dotted"];
		"xml.sax" -> "xml.sax.expatreader" [style="dotted"];
	}
	subgraph "cluster_past.utils" {
		label="past.utils";
	}
	subgraph "cluster_torch.utils.data.datapipes.map" {
		label="torch.utils.data.datapipes.map";
		"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.callable" [style="dotted"];
		"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.combinatorics" [style="dotted"];
		"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.combining" [style="dotted"];
		"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.grouping" [style="dotted"];
		"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.utils" [style="dotted"];
	}
	subgraph "cluster_sympy.algebras" {
		label="sympy.algebras";
		"sympy.algebras" -> "sympy.algebras.quaternion" [style="dotted"];
	}
	subgraph "cluster_transformers.models.videomae" {
		label="transformers.models.videomae";
		"transformers.models.videomae" -> "transformers.models.videomae.configuration_videomae" [style="dotted"];
		"transformers.models.videomae" -> "transformers.models.videomae.modeling_videomae" [style="dotted"];
		"transformers.models.videomae" -> "transformers.models.videomae.feature_extraction_videomae" [style="dotted"];
		"transformers.models.videomae" -> "transformers.models.videomae.image_processing_videomae" [style="dotted"];
	}
	subgraph "cluster_transformers.models.chinese_clip" {
		label="transformers.models.chinese_clip";
		"transformers.models.chinese_clip" -> "transformers.models.chinese_clip.configuration_chinese_clip" [style="dotted"];
		"transformers.models.chinese_clip" -> "transformers.models.chinese_clip.processing_chinese_clip" [style="dotted"];
		"transformers.models.chinese_clip" -> "transformers.models.chinese_clip.feature_extraction_chinese_clip" [style="dotted"];
		"transformers.models.chinese_clip" -> "transformers.models.chinese_clip.modeling_chinese_clip" [style="dotted"];
		"transformers.models.chinese_clip" -> "transformers.models.chinese_clip.image_processing_chinese_clip" [style="dotted"];
	}
	subgraph "cluster_docutils.parsers.rst.directives" {
		label="docutils.parsers.rst.directives";
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.admonitions" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.body" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.html" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.images" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.misc" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.parts" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.references" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.tables" [style="dotted"];
	}
	subgraph "cluster_transformers.models.perceiver" {
		label="transformers.models.perceiver";
		"transformers.models.perceiver" -> "transformers.models.perceiver.configuration_perceiver" [style="dotted"];
		"transformers.models.perceiver" -> "transformers.models.perceiver.tokenization_perceiver" [style="dotted"];
		"transformers.models.perceiver" -> "transformers.models.perceiver.feature_extraction_perceiver" [style="dotted"];
		"transformers.models.perceiver" -> "transformers.models.perceiver.image_processing_perceiver" [style="dotted"];
		"transformers.models.perceiver" -> "transformers.models.perceiver.modeling_perceiver" [style="dotted"];
	}
	subgraph "cluster_transformers.kernels.falcon_mamba" {
		label="transformers.kernels.falcon_mamba";
		"transformers.kernels.falcon_mamba" -> "transformers.kernels.falcon_mamba.selective_scan_with_ln_interface" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.tensor" {
		label="torch.distributed.tensor";
		"torch.distributed.tensor" -> "torch.distributed.tensor._ops" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._api" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor.placement_types" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._collective_utils" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._dtensor_spec" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._dispatch" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._random" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._redistribute" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._utils" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor.parallel" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._op_schema" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor.device_mesh" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._sharding_prop" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._tp_conv" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor._shards_wrapper" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor.experimental" [style="dotted"];
		"torch.distributed.tensor" -> "torch.distributed.tensor.debug" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vision_text_dual_encoder" {
		label="transformers.models.vision_text_dual_encoder";
		"transformers.models.vision_text_dual_encoder" -> "transformers.models.vision_text_dual_encoder.configuration_vision_text_dual_encoder" [style="dotted"];
		"transformers.models.vision_text_dual_encoder" -> "transformers.models.vision_text_dual_encoder.processing_vision_text_dual_encoder" [style="dotted"];
		"transformers.models.vision_text_dual_encoder" -> "transformers.models.vision_text_dual_encoder.modeling_vision_text_dual_encoder" [style="dotted"];
		"transformers.models.vision_text_dual_encoder" -> "transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" [style="dotted"];
		"transformers.models.vision_text_dual_encoder" -> "transformers.models.vision_text_dual_encoder.modeling_tf_vision_text_dual_encoder" [style="dotted"];
	}
	subgraph "cluster_torch.autograd" {
		label="torch.autograd";
		"torch.autograd" -> "torch.autograd.function" [style="dotted"];
		"torch.autograd" -> "torch.autograd.forward_ad" [style="dotted"];
		"torch.autograd" -> "torch.autograd.functional" [style="dotted"];
		"torch.autograd" -> "torch.autograd.graph" [style="dotted"];
		"torch.autograd" -> "torch.autograd.anomaly_mode" [style="dotted"];
		"torch.autograd" -> "torch.autograd.grad_mode" [style="dotted"];
		"torch.autograd" -> "torch.autograd.gradcheck" [style="dotted"];
		"torch.autograd" -> "torch.autograd.variable" [style="dotted"];
		"torch.autograd" -> "torch.autograd.profiler" [style="dotted"];
		"torch.autograd" -> "torch.autograd.profiler_legacy" [style="dotted"];
		"torch.autograd" -> "torch.autograd.profiler_util" [style="dotted"];
		"torch.autograd" -> "torch.autograd._functions" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.graphormer" {
		label="transformers.models.deprecated.graphormer";
		"transformers.models.deprecated.graphormer" -> "transformers.models.deprecated.graphormer.configuration_graphormer" [style="dotted"];
		"transformers.models.deprecated.graphormer" -> "transformers.models.deprecated.graphormer.modeling_graphormer" [style="dotted"];
	}
	subgraph "cluster_kivy.uix.recycleview" {
		label="kivy.uix.recycleview";
		"kivy.uix.recycleview" -> "kivy.uix.recycleview.layout" [style="dotted"];
		"kivy.uix.recycleview" -> "kivy.uix.recycleview.views" [style="dotted"];
		"kivy.uix.recycleview" -> "kivy.uix.recycleview.datamodel" [style="dotted"];
		"kivy.uix.recycleview" -> "kivy.uix.recycleview.__init__" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.zipp" {
		label="setuptools._vendor.zipp";
		"setuptools._vendor.zipp" -> "setuptools._vendor.zipp.glob" [style="dotted"];
		"setuptools._vendor.zipp" -> "setuptools._vendor.zipp.compat" [style="dotted"];
	}
	subgraph "cluster_transformers.models.levit" {
		label="transformers.models.levit";
		"transformers.models.levit" -> "transformers.models.levit.configuration_levit" [style="dotted"];
		"transformers.models.levit" -> "transformers.models.levit.feature_extraction_levit" [style="dotted"];
		"transformers.models.levit" -> "transformers.models.levit.image_processing_levit" [style="dotted"];
		"transformers.models.levit" -> "transformers.models.levit.modeling_levit" [style="dotted"];
	}
	subgraph "cluster_torch.nn.intrinsic.quantized.dynamic" {
		label="torch.nn.intrinsic.quantized.dynamic";
		"torch.nn.intrinsic.quantized.dynamic" -> "torch.nn.intrinsic.quantized.dynamic.modules" [style="dotted"];
	}
	subgraph "cluster_kivy.lib.vidcore_lite" {
		label="kivy.lib.vidcore_lite";
		"kivy.lib.vidcore_lite" -> "kivy.lib.vidcore_lite.bcm" [style="dotted"];
		"kivy.lib.vidcore_lite" -> "kivy.lib.vidcore_lite.egl" [style="dotted"];
	}
	subgraph "cluster_transformers.models.wav2vec2_conformer" {
		label="transformers.models.wav2vec2_conformer";
		"transformers.models.wav2vec2_conformer" -> "transformers.models.wav2vec2_conformer.configuration_wav2vec2_conformer" [style="dotted"];
		"transformers.models.wav2vec2_conformer" -> "transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" [style="dotted"];
	}
	subgraph "cluster_torch.xpu" {
		label="torch.xpu";
		"torch.xpu" -> "torch.xpu._utils" [style="dotted"];
		"torch.xpu" -> "torch.xpu.streams" [style="dotted"];
		"torch.xpu" -> "torch.xpu.memory" [style="dotted"];
		"torch.xpu" -> "torch.xpu.random" [style="dotted"];
		"torch.xpu" -> "torch.xpu._gpu_trace" [style="dotted"];
	}
	subgraph "cluster_torch.nn.backends" {
		label="torch.nn.backends";
		"torch.nn.backends" -> "torch.nn.backends.thnn" [style="dotted"];
	}
	subgraph "cluster_sympy.polys.numberfields" {
		label="sympy.polys.numberfields";
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.minpoly" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.subfield" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.utilities" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.basis" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.primes" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.galoisgroups" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.galois_resolvents" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.resolvent_lookup" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.exceptions" [style="dotted"];
		"sympy.polys.numberfields" -> "sympy.polys.numberfields.modules" [style="dotted"];
	}
	subgraph "cluster_torch.utils.data._utils" {
		label="torch.utils.data._utils";
		"torch.utils.data._utils" -> "torch.utils.data._utils.collate" [style="dotted"];
		"torch.utils.data._utils" -> "torch.utils.data._utils.fetch" [style="dotted"];
		"torch.utils.data._utils" -> "torch.utils.data._utils.pin_memory" [style="dotted"];
		"torch.utils.data._utils" -> "torch.utils.data._utils.signal_handling" [style="dotted"];
		"torch.utils.data._utils" -> "torch.utils.data._utils.worker" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._symmetric_memory" {
		label="torch.distributed._symmetric_memory";
	}
	subgraph "cluster_regex" {
		label="regex";
		"regex" -> "regex.DEFAULT_VERSION" [style="dotted"];
		"regex" -> "regex.regex" [style="dotted"];
		"regex" -> "regex._regex_core" [style="dotted"];
		"regex" -> "regex._regex" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._tools" {
		label="torch.distributed._tools";
		"torch.distributed._tools" -> "torch.distributed._tools.fsdp2_mem_tracker" [style="dotted"];
		"torch.distributed._tools" -> "torch.distributed._tools.mem_tracker" [style="dotted"];
		"torch.distributed._tools" -> "torch.distributed._tools.memory_tracker" [style="dotted"];
		"torch.distributed._tools" -> "torch.distributed._tools.mod_tracker" [style="dotted"];
		"torch.distributed._tools" -> "torch.distributed._tools.runtime_estimator" [style="dotted"];
	}
	subgraph "cluster_xml" {
		label="xml";
		"xml" -> "xml.etree" [style="dotted"];
		"xml" -> "xml.sax" [style="dotted"];
		"xml" -> "xml.parsers" [style="dotted"];
		"xml" -> "xml.dom" [style="dotted"];
	}
	subgraph "cluster_torch.nn.quantized.dynamic" {
		label="torch.nn.quantized.dynamic";
		"torch.nn.quantized.dynamic" -> "torch.nn.quantized.dynamic.modules" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._shard.checkpoint" {
		label="torch.distributed._shard.checkpoint";
	}
	subgraph "cluster_transformers.models.blenderbot_small" {
		label="transformers.models.blenderbot_small";
		"transformers.models.blenderbot_small" -> "transformers.models.blenderbot_small.configuration_blenderbot_small" [style="dotted"];
		"transformers.models.blenderbot_small" -> "transformers.models.blenderbot_small.tokenization_blenderbot_small" [style="dotted"];
		"transformers.models.blenderbot_small" -> "transformers.models.blenderbot_small.tokenization_blenderbot_small_fast" [style="dotted"];
		"transformers.models.blenderbot_small" -> "transformers.models.blenderbot_small.modeling_blenderbot_small" [style="dotted"];
		"transformers.models.blenderbot_small" -> "transformers.models.blenderbot_small.modeling_tf_blenderbot_small" [style="dotted"];
		"transformers.models.blenderbot_small" -> "transformers.models.blenderbot_small.modeling_flax_blenderbot_small" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.wheel.cli" {
		label="setuptools._vendor.wheel.cli";
		"setuptools._vendor.wheel.cli" -> "setuptools._vendor.wheel.cli.unpack" [style="dotted"];
		"setuptools._vendor.wheel.cli" -> "setuptools._vendor.wheel.cli.pack" [style="dotted"];
		"setuptools._vendor.wheel.cli" -> "setuptools._vendor.wheel.cli.convert" [style="dotted"];
		"setuptools._vendor.wheel.cli" -> "setuptools._vendor.wheel.cli.tags" [style="dotted"];
	}
	subgraph "cluster_numpy.f2py._backends" {
		label="numpy.f2py._backends";
		"numpy.f2py._backends" -> "numpy.f2py._backends._meson" [style="dotted"];
		"numpy.f2py._backends" -> "numpy.f2py._backends._distutils" [style="dotted"];
		"numpy.f2py._backends" -> "numpy.f2py._backends._backend" [style="dotted"];
	}
	subgraph "cluster_transformers.models.omdet_turbo" {
		label="transformers.models.omdet_turbo";
		"transformers.models.omdet_turbo" -> "transformers.models.omdet_turbo.configuration_omdet_turbo" [style="dotted"];
		"transformers.models.omdet_turbo" -> "transformers.models.omdet_turbo.processing_omdet_turbo" [style="dotted"];
		"transformers.models.omdet_turbo" -> "transformers.models.omdet_turbo.modeling_omdet_turbo" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.distributed.rpc.examples" {
		label="torch.testing._internal.distributed.rpc.examples";
		"torch.testing._internal.distributed.rpc.examples" -> "torch.testing._internal.distributed.rpc.examples.parameter_server_test" [style="dotted"];
		"torch.testing._internal.distributed.rpc.examples" -> "torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test" [style="dotted"];
	}
	subgraph "cluster_urllib3.http2" {
		label="urllib3.http2";
		"urllib3.http2" -> "urllib3.http2.connection" [style="dotted"];
		"urllib3.http2" -> "urllib3.http2.probe" [style="dotted"];
	}
	subgraph "cluster_sympy.physics.units.systems" {
		label="sympy.physics.units.systems";
		"sympy.physics.units.systems" -> "sympy.physics.units.systems.mks" [style="dotted"];
		"sympy.physics.units.systems" -> "sympy.physics.units.systems.mksa" [style="dotted"];
		"sympy.physics.units.systems" -> "sympy.physics.units.systems.natural" [style="dotted"];
		"sympy.physics.units.systems" -> "sympy.physics.units.systems.si" [style="dotted"];
		"sympy.physics.units.systems" -> "sympy.physics.units.systems.length_weight_time" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.codegen" {
		label="torch._inductor.codegen";
		"torch._inductor.codegen" -> "torch._inductor.codegen.wrapper" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.debug_utils" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.multi_kernel" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.aoti_hipify_utils" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.common" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.triton_utils" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cpp" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.memory_planning" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.triton" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.simd" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cuda_combined_scheduling" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.rocm" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cuda" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cpp_gemm_template" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cpp_utils" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cpp_micro_gemm" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cpp_template" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cpp_template_kernel" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cpp_wrapper_cpu" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.triton_split_scan" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.triton_combo_kernel" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.cpp_wrapper_cuda" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.halide" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.xpu" [style="dotted"];
		"torch._inductor.codegen" -> "torch._inductor.codegen.codegen_device_driver" [style="dotted"];
	}
	subgraph "cluster_torch._higher_order_ops" {
		label="torch._higher_order_ops";
		"torch._higher_order_ops" -> "torch._higher_order_ops.cond" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.flex_attention" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.hints_wrap" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.while_loop" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.effects" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.torchbind" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.utils" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.triton_kernel_wrap" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.out_dtype" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.strict_mode" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.map" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.wrap" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.associative_scan" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.auto_functionalize" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.executorch_call_delegate" [style="dotted"];
		"torch._higher_order_ops" -> "torch._higher_order_ops.run_const_graph" [style="dotted"];
	}
	subgraph "cluster_transformers.utils" {
		label="transformers.utils";
		"transformers.utils" -> "transformers.utils.logging" [style="dotted"];
		"transformers.utils" -> "transformers.utils.sentencepiece_model_pb2" [style="dotted"];
		"transformers.utils" -> "transformers.utils.sentencepiece_model_pb2_new" [style="dotted"];
		"transformers.utils" -> "transformers.utils.backbone_utils" [style="dotted"];
		"transformers.utils" -> "transformers.utils.chat_template_utils" [style="dotted"];
		"transformers.utils" -> "transformers.utils.constants" [style="dotted"];
		"transformers.utils" -> "transformers.utils.doc" [style="dotted"];
		"transformers.utils" -> "transformers.utils.generic" [style="dotted"];
		"transformers.utils" -> "transformers.utils.hub" [style="dotted"];
		"transformers.utils" -> "transformers.utils.import_utils" [style="dotted"];
		"transformers.utils" -> "transformers.utils.peft_utils" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_sentencepiece_and_tokenizers_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_tensorflow_text_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_keras_nlp_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_vision_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_torchvision_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_pt_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_tf_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_essentia_and_librosa_and_pretty_midi_and_scipy_and_torch_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_torchaudio_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_flax_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_sentencepiece_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.dummy_tokenizers_objects" [style="dotted"];
		"transformers.utils" -> "transformers.utils.quantization_config" [style="dotted"];
		"transformers.utils" -> "transformers.utils.deprecation" [style="dotted"];
		"transformers.utils" -> "transformers.utils.notebook" [style="dotted"];
		"transformers.utils" -> "transformers.utils.versions" [style="dotted"];
		"transformers.utils" -> "transformers.utils.model_parallel_utils" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning.scheduler" {
		label="torch.ao.pruning.scheduler";
		"torch.ao.pruning.scheduler" -> "torch.ao.pruning.scheduler.base_scheduler" [style="dotted"];
		"torch.ao.pruning.scheduler" -> "torch.ao.pruning.scheduler.cubic_scheduler" [style="dotted"];
		"torch.ao.pruning.scheduler" -> "torch.ao.pruning.scheduler.lambda_scheduler" [style="dotted"];
	}
	subgraph "cluster_html" {
		label="html";
		"html" -> "html.entities" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.wheel.vendored" {
		label="setuptools._vendor.wheel.vendored";
		"setuptools._vendor.wheel.vendored" -> "setuptools._vendor.wheel.vendored.packaging" [style="dotted"];
	}
	subgraph "cluster_sympy.vector" {
		label="sympy.vector";
		"sympy.vector" -> "sympy.vector.coordsysrect" [style="dotted"];
		"sympy.vector" -> "sympy.vector.vector" [style="dotted"];
		"sympy.vector" -> "sympy.vector.dyadic" [style="dotted"];
		"sympy.vector" -> "sympy.vector.scalar" [style="dotted"];
		"sympy.vector" -> "sympy.vector.deloperator" [style="dotted"];
		"sympy.vector" -> "sympy.vector.functions" [style="dotted"];
		"sympy.vector" -> "sympy.vector.point" [style="dotted"];
		"sympy.vector" -> "sympy.vector.orienters" [style="dotted"];
		"sympy.vector" -> "sympy.vector.operators" [style="dotted"];
		"sympy.vector" -> "sympy.vector.implicitregion" [style="dotted"];
		"sympy.vector" -> "sympy.vector.parametricregion" [style="dotted"];
		"sympy.vector" -> "sympy.vector.integrals" [style="dotted"];
		"sympy.vector" -> "sympy.vector.basisdependent" [style="dotted"];
	}
	subgraph "cluster_win32com.client" {
		label="win32com.client";
		"win32com.client" -> "win32com.client.build" [style="dotted"];
		"win32com.client" -> "win32com.client.util" [style="dotted"];
		"win32com.client" -> "win32com.client.dynamic" [style="dotted"];
		"win32com.client" -> "win32com.client.CLSIDToClass" [style="dotted"];
		"win32com.client" -> "win32com.client.gencache" [style="dotted"];
		"win32com.client" -> "win32com.client.genpy" [style="dotted"];
		"win32com.client" -> "win32com.client.selecttlb" [style="dotted"];
		"win32com.client" -> "win32com.client.makepy" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.coloring" {
		label="networkx.algorithms.coloring";
		"networkx.algorithms.coloring" -> "networkx.algorithms.coloring.greedy_coloring" [style="dotted"];
		"networkx.algorithms.coloring" -> "networkx.algorithms.coloring.equitable_coloring" [style="dotted"];
	}
	subgraph "cluster_sympy.polys.agca" {
		label="sympy.polys.agca";
		"sympy.polys.agca" -> "sympy.polys.agca.homomorphisms" [style="dotted"];
		"sympy.polys.agca" -> "sympy.polys.agca.ideals" [style="dotted"];
		"sympy.polys.agca" -> "sympy.polys.agca.modules" [style="dotted"];
		"sympy.polys.agca" -> "sympy.polys.agca.extensions" [style="dotted"];
	}
	subgraph "cluster_sympy.assumptions.relation" {
		label="sympy.assumptions.relation";
		"sympy.assumptions.relation" -> "sympy.assumptions.relation.binrel" [style="dotted"];
		"sympy.assumptions.relation" -> "sympy.assumptions.relation.equality" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.rpc" {
		label="torch.distributed.rpc";
		"torch.distributed.rpc" -> "torch.distributed.rpc.api" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc.backend_registry" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc.functions" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc.options" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc.server_process_global_profiler" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc.constants" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc._utils" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc.internal" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc.rref_proxy" [style="dotted"];
		"torch.distributed.rpc" -> "torch.distributed.rpc._testing" [style="dotted"];
	}
	subgraph "cluster_transformers.models.roformer" {
		label="transformers.models.roformer";
		"transformers.models.roformer" -> "transformers.models.roformer.configuration_roformer" [style="dotted"];
		"transformers.models.roformer" -> "transformers.models.roformer.tokenization_roformer" [style="dotted"];
		"transformers.models.roformer" -> "transformers.models.roformer.tokenization_roformer_fast" [style="dotted"];
		"transformers.models.roformer" -> "transformers.models.roformer.modeling_roformer" [style="dotted"];
		"transformers.models.roformer" -> "transformers.models.roformer.modeling_tf_roformer" [style="dotted"];
		"transformers.models.roformer" -> "transformers.models.roformer.modeling_flax_roformer" [style="dotted"];
		"transformers.models.roformer" -> "transformers.models.roformer.tokenization_utils" [style="dotted"];
	}
	subgraph "cluster_torch._export.db" {
		label="torch._export.db";
		"torch._export.db" -> "torch._export.db.logging" [style="dotted"];
		"torch._export.db" -> "torch._export.db.examples" [style="dotted"];
		"torch._export.db" -> "torch._export.db.case" [style="dotted"];
		"torch._export.db" -> "torch._export.db.gen_example" [style="dotted"];
	}
	subgraph "cluster_test" {
		label="test";
		"test" -> "test.test_support" [style="dotted"];
		"test" -> "test.support" [style="dotted"];
	}
	subgraph "cluster_torch.fx" {
		label="torch.fx";
		"torch.fx" -> "torch.fx.subgraph_rewriter" [style="dotted"];
		"torch.fx" -> "torch.fx.graph_module" [style="dotted"];
		"torch.fx" -> "torch.fx._symbolic_trace" [style="dotted"];
		"torch.fx" -> "torch.fx.graph" [style="dotted"];
		"torch.fx" -> "torch.fx.node" [style="dotted"];
		"torch.fx" -> "torch.fx.proxy" [style="dotted"];
		"torch.fx" -> "torch.fx.config" [style="dotted"];
		"torch.fx" -> "torch.fx.interpreter" [style="dotted"];
		"torch.fx" -> "torch.fx._lazy_graph_module" [style="dotted"];
		"torch.fx" -> "torch.fx._compatibility" [style="dotted"];
		"torch.fx" -> "torch.fx.traceback" [style="dotted"];
		"torch.fx" -> "torch.fx.operator_schemas" [style="dotted"];
		"torch.fx" -> "torch.fx.experimental" [style="dotted"];
		"torch.fx" -> "torch.fx.passes" [style="dotted"];
		"torch.fx" -> "torch.fx._utils" [style="dotted"];
		"torch.fx" -> "torch.fx._pytree" [style="dotted"];
		"torch.fx" -> "torch.fx.immutable_collections" [style="dotted"];
		"torch.fx" -> "torch.fx.annotate" [style="dotted"];
		"torch.fx" -> "torch.fx.tensor_type" [style="dotted"];
	}
	subgraph "cluster_torch.onnx._internal.fx.analysis" {
		label="torch.onnx._internal.fx.analysis";
		"torch.onnx._internal.fx.analysis" -> "torch.onnx._internal.fx.analysis.unsupported_nodes" [style="dotted"];
	}
	subgraph "cluster_transformers.models.patchtst" {
		label="transformers.models.patchtst";
		"transformers.models.patchtst" -> "transformers.models.patchtst.configuration_patchtst" [style="dotted"];
		"transformers.models.patchtst" -> "transformers.models.patchtst.modeling_patchtst" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mvp" {
		label="transformers.models.mvp";
		"transformers.models.mvp" -> "transformers.models.mvp.configuration_mvp" [style="dotted"];
		"transformers.models.mvp" -> "transformers.models.mvp.tokenization_mvp" [style="dotted"];
		"transformers.models.mvp" -> "transformers.models.mvp.tokenization_mvp_fast" [style="dotted"];
		"transformers.models.mvp" -> "transformers.models.mvp.modeling_mvp" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mobilebert" {
		label="transformers.models.mobilebert";
		"transformers.models.mobilebert" -> "transformers.models.mobilebert.configuration_mobilebert" [style="dotted"];
		"transformers.models.mobilebert" -> "transformers.models.mobilebert.tokenization_mobilebert" [style="dotted"];
		"transformers.models.mobilebert" -> "transformers.models.mobilebert.tokenization_mobilebert_fast" [style="dotted"];
		"transformers.models.mobilebert" -> "transformers.models.mobilebert.modeling_mobilebert" [style="dotted"];
		"transformers.models.mobilebert" -> "transformers.models.mobilebert.modeling_tf_mobilebert" [style="dotted"];
	}
	subgraph "cluster_transformers.models.pop2piano" {
		label="transformers.models.pop2piano";
		"transformers.models.pop2piano" -> "transformers.models.pop2piano.configuration_pop2piano" [style="dotted"];
		"transformers.models.pop2piano" -> "transformers.models.pop2piano.modeling_pop2piano" [style="dotted"];
		"transformers.models.pop2piano" -> "transformers.models.pop2piano.feature_extraction_pop2piano" [style="dotted"];
		"transformers.models.pop2piano" -> "transformers.models.pop2piano.tokenization_pop2piano" [style="dotted"];
		"transformers.models.pop2piano" -> "transformers.models.pop2piano.processing_pop2piano" [style="dotted"];
	}
	subgraph "cluster_transformers.models.esm.openfold_utils" {
		label="transformers.models.esm.openfold_utils";
		"transformers.models.esm.openfold_utils" -> "transformers.models.esm.openfold_utils.chunk_utils" [style="dotted"];
		"transformers.models.esm.openfold_utils" -> "transformers.models.esm.openfold_utils.residue_constants" [style="dotted"];
		"transformers.models.esm.openfold_utils" -> "transformers.models.esm.openfold_utils.data_transforms" [style="dotted"];
		"transformers.models.esm.openfold_utils" -> "transformers.models.esm.openfold_utils.feats" [style="dotted"];
		"transformers.models.esm.openfold_utils" -> "transformers.models.esm.openfold_utils.loss" [style="dotted"];
		"transformers.models.esm.openfold_utils" -> "transformers.models.esm.openfold_utils.protein" [style="dotted"];
		"transformers.models.esm.openfold_utils" -> "transformers.models.esm.openfold_utils.rigid_utils" [style="dotted"];
		"transformers.models.esm.openfold_utils" -> "transformers.models.esm.openfold_utils.tensor_utils" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning._experimental.data_sparsifier.lightning" {
		label="torch.ao.pruning._experimental.data_sparsifier.lightning";
		"torch.ao.pruning._experimental.data_sparsifier.lightning" -> "torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks" [style="dotted"];
	}
	subgraph "cluster_httpcore._backends" {
		label="httpcore._backends";
		"httpcore._backends" -> "httpcore._backends.base" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.mock" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.sync" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.anyio" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.trio" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.auto" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.codegen.cuda.cutlass_lib_extensions" {
		label="torch._inductor.codegen.cuda.cutlass_lib_extensions";
		"torch._inductor.codegen.cuda.cutlass_lib_extensions" -> "torch._inductor.codegen.cuda.cutlass_lib_extensions.gemm_operation_extensions" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.agent.server" {
		label="torch.distributed.elastic.agent.server";
		"torch.distributed.elastic.agent.server" -> "torch.distributed.elastic.agent.server.api" [style="dotted"];
		"torch.distributed.elastic.agent.server" -> "torch.distributed.elastic.agent.server.local_elastic_agent" [style="dotted"];
		"torch.distributed.elastic.agent.server" -> "torch.distributed.elastic.agent.server.health_check_server" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.mctct" {
		label="transformers.models.deprecated.mctct";
		"transformers.models.deprecated.mctct" -> "transformers.models.deprecated.mctct.configuration_mctct" [style="dotted"];
		"transformers.models.deprecated.mctct" -> "transformers.models.deprecated.mctct.feature_extraction_mctct" [style="dotted"];
		"transformers.models.deprecated.mctct" -> "transformers.models.deprecated.mctct.processing_mctct" [style="dotted"];
		"transformers.models.deprecated.mctct" -> "transformers.models.deprecated.mctct.modeling_mctct" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.quantized.dynamic.modules" {
		label="torch.ao.nn.quantized.dynamic.modules";
		"torch.ao.nn.quantized.dynamic.modules" -> "torch.ao.nn.quantized.dynamic.modules.conv" [style="dotted"];
		"torch.ao.nn.quantized.dynamic.modules" -> "torch.ao.nn.quantized.dynamic.modules.linear" [style="dotted"];
		"torch.ao.nn.quantized.dynamic.modules" -> "torch.ao.nn.quantized.dynamic.modules.rnn" [style="dotted"];
	}
	subgraph "cluster_torch.fx.experimental.unification" {
		label="torch.fx.experimental.unification";
		"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.core" [style="dotted"];
		"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.more" [style="dotted"];
		"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.variable" [style="dotted"];
		"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.dispatch" [style="dotted"];
		"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.match" [style="dotted"];
		"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.unification_tools" [style="dotted"];
		"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.utils" [style="dotted"];
		"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.multipledispatch" [style="dotted"];
	}
	subgraph "cluster_sympy.matrices" {
		label="sympy.matrices";
		"sympy.matrices" -> "sympy.matrices.exceptions" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.kind" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.dense" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.matrixbase" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.sparse" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.sparsetools" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.immutable" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.expressions" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.utilities" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.decompositions" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.repmatrix" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.solvers" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.normalforms" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.eigen" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.determinant" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.reductions" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.inverse" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.subspaces" [style="dotted"];
		"sympy.matrices" -> "sympy.matrices.graph" [style="dotted"];
	}
	subgraph "cluster_functorch" {
		label="functorch";
		"functorch" -> "functorch.experimental" [style="dotted"];
		"functorch" -> "functorch.compile" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.intrinsic.qat.modules" {
		label="torch.ao.nn.intrinsic.qat.modules";
		"torch.ao.nn.intrinsic.qat.modules" -> "torch.ao.nn.intrinsic.qat.modules.conv_fused" [style="dotted"];
		"torch.ao.nn.intrinsic.qat.modules" -> "torch.ao.nn.intrinsic.qat.modules.linear_fused" [style="dotted"];
		"torch.ao.nn.intrinsic.qat.modules" -> "torch.ao.nn.intrinsic.qat.modules.linear_relu" [style="dotted"];
	}
	subgraph "cluster_sympy.plotting.backends" {
		label="sympy.plotting.backends";
		"sympy.plotting.backends" -> "sympy.plotting.backends.base_backend" [style="dotted"];
		"sympy.plotting.backends" -> "sympy.plotting.backends.textbackend" [style="dotted"];
		"sympy.plotting.backends" -> "sympy.plotting.backends.matplotlibbackend" [style="dotted"];
	}
	subgraph "cluster_pywin.mfc" {
		label="pywin.mfc";
		"pywin.mfc" -> "pywin.mfc.object" [style="dotted"];
		"pywin.mfc" -> "pywin.mfc.window" [style="dotted"];
		"pywin.mfc" -> "pywin.mfc.dialog" [style="dotted"];
		"pywin.mfc" -> "pywin.mfc.thread" [style="dotted"];
	}
	subgraph "cluster_torch.nn.quantized.dynamic.modules" {
		label="torch.nn.quantized.dynamic.modules";
		"torch.nn.quantized.dynamic.modules" -> "torch.nn.quantized.dynamic.modules.conv" [style="dotted"];
		"torch.nn.quantized.dynamic.modules" -> "torch.nn.quantized.dynamic.modules.linear" [style="dotted"];
		"torch.nn.quantized.dynamic.modules" -> "torch.nn.quantized.dynamic.modules.rnn" [style="dotted"];
	}
	subgraph "cluster_torch.jit.mobile" {
		label="torch.jit.mobile";
	}
	subgraph "cluster_transformers.models.cpm" {
		label="transformers.models.cpm";
		"transformers.models.cpm" -> "transformers.models.cpm.tokenization_cpm" [style="dotted"];
		"transformers.models.cpm" -> "transformers.models.cpm.tokenization_cpm_fast" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._composable.fsdp" {
		label="torch.distributed._composable.fsdp";
		"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp._fsdp_api" [style="dotted"];
		"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp.fully_shard" [style="dotted"];
		"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp._fsdp_param_group" [style="dotted"];
		"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp._fsdp_collectives" [style="dotted"];
		"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp._fsdp_common" [style="dotted"];
		"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp._fsdp_param" [style="dotted"];
		"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp._fsdp_init" [style="dotted"];
		"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp._fsdp_state" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.wheel" {
		label="setuptools._vendor.wheel";
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel._setuptools_logging" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.metadata" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.wheelfile" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.macosx_libfile" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.cli" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.util" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.bdist_wheel" [style="dotted"];
		"setuptools._vendor.wheel" -> "setuptools._vendor.wheel.vendored" [style="dotted"];
	}
	subgraph "cluster_transformers.models.nllb" {
		label="transformers.models.nllb";
		"transformers.models.nllb" -> "transformers.models.nllb.tokenization_nllb" [style="dotted"];
		"transformers.models.nllb" -> "transformers.models.nllb.tokenization_nllb_fast" [style="dotted"];
	}
	subgraph "cluster_pydoc_data" {
		label="pydoc_data";
		"pydoc_data" -> "pydoc_data.topics" [style="dotted"];
	}
	subgraph "cluster_sympy.printing" {
		label="sympy.printing";
		"sympy.printing" -> "sympy.printing.preview" [style="dotted"];
		"sympy.printing" -> "sympy.printing.pretty" [style="dotted"];
		"sympy.printing" -> "sympy.printing.latex" [style="dotted"];
		"sympy.printing" -> "sympy.printing.mathml" [style="dotted"];
		"sympy.printing" -> "sympy.printing.python" [style="dotted"];
		"sympy.printing" -> "sympy.printing.pycode" [style="dotted"];
		"sympy.printing" -> "sympy.printing.codeprinter" [style="dotted"];
		"sympy.printing" -> "sympy.printing.smtlib" [style="dotted"];
		"sympy.printing" -> "sympy.printing.glsl" [style="dotted"];
		"sympy.printing" -> "sympy.printing.rcode" [style="dotted"];
		"sympy.printing" -> "sympy.printing.jscode" [style="dotted"];
		"sympy.printing" -> "sympy.printing.julia" [style="dotted"];
		"sympy.printing" -> "sympy.printing.mathematica" [style="dotted"];
		"sympy.printing" -> "sympy.printing.octave" [style="dotted"];
		"sympy.printing" -> "sympy.printing.rust" [style="dotted"];
		"sympy.printing" -> "sympy.printing.gtk" [style="dotted"];
		"sympy.printing" -> "sympy.printing.repr" [style="dotted"];
		"sympy.printing" -> "sympy.printing.tree" [style="dotted"];
		"sympy.printing" -> "sympy.printing.str" [style="dotted"];
		"sympy.printing" -> "sympy.printing.tableform" [style="dotted"];
		"sympy.printing" -> "sympy.printing.dot" [style="dotted"];
		"sympy.printing" -> "sympy.printing.maple" [style="dotted"];
		"sympy.printing" -> "sympy.printing.defaults" [style="dotted"];
		"sympy.printing" -> "sympy.printing.precedence" [style="dotted"];
		"sympy.printing" -> "sympy.printing.printer" [style="dotted"];
		"sympy.printing" -> "sympy.printing.conventions" [style="dotted"];
		"sympy.printing" -> "sympy.printing.lambdarepr" [style="dotted"];
		"sympy.printing" -> "sympy.printing.numpy" [style="dotted"];
		"sympy.printing" -> "sympy.printing.c" [style="dotted"];
		"sympy.printing" -> "sympy.printing.fortran" [style="dotted"];
		"sympy.printing" -> "sympy.printing.cxx" [style="dotted"];
		"sympy.printing" -> "sympy.printing.tensorflow" [style="dotted"];
	}
	subgraph "cluster_torch.testing" {
		label="torch.testing";
		"torch.testing" -> "torch.testing._utils" [style="dotted"];
		"torch.testing" -> "torch.testing._comparison" [style="dotted"];
		"torch.testing" -> "torch.testing._creation" [style="dotted"];
		"torch.testing" -> "torch.testing._internal" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mllama" {
		label="transformers.models.mllama";
		"transformers.models.mllama" -> "transformers.models.mllama.configuration_mllama" [style="dotted"];
		"transformers.models.mllama" -> "transformers.models.mllama.processing_mllama" [style="dotted"];
		"transformers.models.mllama" -> "transformers.models.mllama.modeling_mllama" [style="dotted"];
		"transformers.models.mllama" -> "transformers.models.mllama.image_processing_mllama" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.nezha" {
		label="transformers.models.deprecated.nezha";
		"transformers.models.deprecated.nezha" -> "transformers.models.deprecated.nezha.configuration_nezha" [style="dotted"];
		"transformers.models.deprecated.nezha" -> "transformers.models.deprecated.nezha.modeling_nezha" [style="dotted"];
	}
	subgraph "cluster_transformers.models.dbrx" {
		label="transformers.models.dbrx";
		"transformers.models.dbrx" -> "transformers.models.dbrx.configuration_dbrx" [style="dotted"];
		"transformers.models.dbrx" -> "transformers.models.dbrx.modeling_dbrx" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.minors" {
		label="networkx.algorithms.minors";
		"networkx.algorithms.minors" -> "networkx.algorithms.minors.contraction" [style="dotted"];
	}
	subgraph "cluster_networkx.utils" {
		label="networkx.utils";
		"networkx.utils" -> "networkx.utils.misc" [style="dotted"];
		"networkx.utils" -> "networkx.utils.decorators" [style="dotted"];
		"networkx.utils" -> "networkx.utils.random_sequence" [style="dotted"];
		"networkx.utils" -> "networkx.utils.union_find" [style="dotted"];
		"networkx.utils" -> "networkx.utils.rcm" [style="dotted"];
		"networkx.utils" -> "networkx.utils.heaps" [style="dotted"];
		"networkx.utils" -> "networkx.utils.configs" [style="dotted"];
		"networkx.utils" -> "networkx.utils.backends" [style="dotted"];
		"networkx.utils" -> "networkx.utils.mapped_queue" [style="dotted"];
	}
	subgraph "cluster_torch.ao.quantization" {
		label="torch.ao.quantization";
		"torch.ao.quantization" -> "torch.ao.quantization.fake_quantize" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.fuse_modules" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.fuser_method_mappings" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.observer" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.float_qparams_weight_only_qconfig" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.QConfigAny" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.QuantType" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.QConfigMapping" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.QConfig" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.qconfig" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.qconfig_mapping" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.quant_type" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.quantization_mappings" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.quantize" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.quantize_jit" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.stubs" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.utils" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.fx" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.quantize_fx" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.backend_config" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.quantizer" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.pt2e" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization._correct_bias" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization._equalize" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization._learnable_fake_quantize" [style="dotted"];
		"torch.ao.quantization" -> "torch.ao.quantization.quantize_pt2e" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.sparse.quantized.dynamic" {
		label="torch.ao.nn.sparse.quantized.dynamic";
		"torch.ao.nn.sparse.quantized.dynamic" -> "torch.ao.nn.sparse.quantized.dynamic.linear" [style="dotted"];
	}
	subgraph "cluster_email" {
		label="email";
		"email" -> "email.errors" [style="dotted"];
		"email" -> "email.charset" [style="dotted"];
		"email" -> "email.header" [style="dotted"];
		"email" -> "email._header_value_parser" [style="dotted"];
		"email" -> "email.parser" [style="dotted"];
		"email" -> "email.utils" [style="dotted"];
		"email" -> "email._parseaddr" [style="dotted"];
		"email" -> "email.base64mime" [style="dotted"];
		"email" -> "email.quoprimime" [style="dotted"];
		"email" -> "email.encoders" [style="dotted"];
		"email" -> "email.message" [style="dotted"];
		"email" -> "email._policybase" [style="dotted"];
		"email" -> "email._encoded_words" [style="dotted"];
		"email" -> "email.generator" [style="dotted"];
		"email" -> "email.iterators" [style="dotted"];
		"email" -> "email.policy" [style="dotted"];
		"email" -> "email.headerregistry" [style="dotted"];
		"email" -> "email.contentmanager" [style="dotted"];
		"email" -> "email.feedparser" [style="dotted"];
	}
	subgraph "cluster_docutils.utils.math" {
		label="docutils.utils.math";
		"docutils.utils.math" -> "docutils.utils.math.mathalphabet2unichar" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.tex2unichar" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.latex2mathml" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.math2html" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.tex2mathml_extern" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.unichar2tex" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.mathml_elements" [style="dotted"];
	}
	subgraph "cluster_numpy.ma" {
		label="numpy.ma";
		"numpy.ma" -> "numpy.ma.core" [style="dotted"];
		"numpy.ma" -> "numpy.ma.extras" [style="dotted"];
		"numpy.ma" -> "numpy.ma.mrecords" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.nn.jit" {
		label="torch.distributed.nn.jit";
		"torch.distributed.nn.jit" -> "torch.distributed.nn.jit.instantiator" [style="dotted"];
		"torch.distributed.nn.jit" -> "torch.distributed.nn.jit.templates" [style="dotted"];
	}
	subgraph "cluster_sympy.solvers" {
		label="sympy.solvers";
		"sympy.solvers" -> "sympy.solvers.solvers" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.diophantine" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.recurr" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.ode" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.polysys" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.pde" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.deutils" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.inequalities" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.decompogen" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.solveset" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.simplex" [style="dotted"];
		"sympy.solvers" -> "sympy.solvers.bivariate" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._shard.sharded_tensor._ops" {
		label="torch.distributed._shard.sharded_tensor._ops";
		"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops.misc_ops" [style="dotted"];
		"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops.tensor_ops" [style="dotted"];
		"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops.binary_cmp" [style="dotted"];
		"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops.init" [style="dotted"];
		"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops._common" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vipllava" {
		label="transformers.models.vipllava";
		"transformers.models.vipllava" -> "transformers.models.vipllava.configuration_vipllava" [style="dotted"];
		"transformers.models.vipllava" -> "transformers.models.vipllava.modeling_vipllava" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.trajectory_transformer" {
		label="transformers.models.deprecated.trajectory_transformer";
		"transformers.models.deprecated.trajectory_transformer" -> "transformers.models.deprecated.trajectory_transformer.configuration_trajectory_transformer" [style="dotted"];
		"transformers.models.deprecated.trajectory_transformer" -> "transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.deta" {
		label="transformers.models.deprecated.deta";
		"transformers.models.deprecated.deta" -> "transformers.models.deprecated.deta.configuration_deta" [style="dotted"];
		"transformers.models.deprecated.deta" -> "transformers.models.deprecated.deta.image_processing_deta" [style="dotted"];
		"transformers.models.deprecated.deta" -> "transformers.models.deprecated.deta.modeling_deta" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.quantizable.modules" {
		label="torch.ao.nn.quantizable.modules";
		"torch.ao.nn.quantizable.modules" -> "torch.ao.nn.quantizable.modules.activation" [style="dotted"];
		"torch.ao.nn.quantizable.modules" -> "torch.ao.nn.quantizable.modules.rnn" [style="dotted"];
	}
	subgraph "cluster_transformers.models.nemotron" {
		label="transformers.models.nemotron";
		"transformers.models.nemotron" -> "transformers.models.nemotron.configuration_nemotron" [style="dotted"];
		"transformers.models.nemotron" -> "transformers.models.nemotron.modeling_nemotron" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.intrinsic.qat" {
		label="torch.ao.nn.intrinsic.qat";
		"torch.ao.nn.intrinsic.qat" -> "torch.ao.nn.intrinsic.qat.modules" [style="dotted"];
	}
	subgraph "cluster_kivy.core.spelling" {
		label="kivy.core.spelling";
		"kivy.core.spelling" -> "kivy.core.spelling.spelling_osxappkit" [style="dotted"];
		"kivy.core.spelling" -> "kivy.core.spelling.spelling_enchant" [style="dotted"];
	}
	subgraph "cluster_transformers.models.granite" {
		label="transformers.models.granite";
		"transformers.models.granite" -> "transformers.models.granite.configuration_granite" [style="dotted"];
		"transformers.models.granite" -> "transformers.models.granite.modeling_granite" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.generated" {
		label="torch.testing._internal.generated";
		"torch.testing._internal.generated" -> "torch.testing._internal.generated.annotated_fn_args" [style="dotted"];
	}
	subgraph "cluster_transformers.data.processors" {
		label="transformers.data.processors";
		"transformers.data.processors" -> "transformers.data.processors.glue" [style="dotted"];
		"transformers.data.processors" -> "transformers.data.processors.squad" [style="dotted"];
		"transformers.data.processors" -> "transformers.data.processors.utils" [style="dotted"];
		"transformers.data.processors" -> "transformers.data.processors.xnli" [style="dotted"];
	}
	subgraph "cluster_torch.nn.quantized.modules" {
		label="torch.nn.quantized.modules";
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.activation" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.batchnorm" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.conv" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.dropout" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.embedding_ops" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.functional_modules" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.linear" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.normalization" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.rnn" [style="dotted"];
		"torch.nn.quantized.modules" -> "torch.nn.quantized.modules.utils" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.codegen.cuda" {
		label="torch._inductor.codegen.cuda";
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.cutlass_utils" [style="dotted"];
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.device_op_overrides" [style="dotted"];
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.cuda_cpp_scheduling" [style="dotted"];
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.cuda_env" [style="dotted"];
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.cuda_kernel" [style="dotted"];
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.cuda_template" [style="dotted"];
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.gemm_template" [style="dotted"];
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.cutlass_epilogue_gen" [style="dotted"];
		"torch._inductor.codegen.cuda" -> "torch._inductor.codegen.cuda.cutlass_lib_extensions" [style="dotted"];
	}
	subgraph "cluster_torch._prims" {
		label="torch._prims";
		"torch._prims" -> "torch._prims.debug_prims" [style="dotted"];
		"torch._prims" -> "torch._prims.rng_prims" [style="dotted"];
		"torch._prims" -> "torch._prims.executor" [style="dotted"];
		"torch._prims" -> "torch._prims.context" [style="dotted"];
	}
	subgraph "cluster_transformers.models.pixtral" {
		label="transformers.models.pixtral";
		"transformers.models.pixtral" -> "transformers.models.pixtral.configuration_pixtral" [style="dotted"];
		"transformers.models.pixtral" -> "transformers.models.pixtral.processing_pixtral" [style="dotted"];
		"transformers.models.pixtral" -> "transformers.models.pixtral.modeling_pixtral" [style="dotted"];
		"transformers.models.pixtral" -> "transformers.models.pixtral.image_processing_pixtral" [style="dotted"];
	}
	subgraph "cluster_transformers.models.align" {
		label="transformers.models.align";
		"transformers.models.align" -> "transformers.models.align.configuration_align" [style="dotted"];
		"transformers.models.align" -> "transformers.models.align.modeling_align" [style="dotted"];
		"transformers.models.align" -> "transformers.models.align.processing_align" [style="dotted"];
	}
	subgraph "cluster_functorch.compile" {
		label="functorch.compile";
	}
	subgraph "cluster_numpy" {
		label="numpy";
		"numpy" -> "numpy._globals" [style="dotted"];
		"numpy" -> "numpy._expired_attrs_2_0" [style="dotted"];
		"numpy" -> "numpy.version" [style="dotted"];
		"numpy" -> "numpy._distributor_init_local" [style="dotted"];
		"numpy" -> "numpy._distributor_init" [style="dotted"];
		"numpy" -> "numpy.__config__" [style="dotted"];
		"numpy" -> "numpy._core" [style="dotted"];
		"numpy" -> "numpy.lib" [style="dotted"];
		"numpy" -> "numpy.matrixlib" [style="dotted"];
		"numpy" -> "numpy._array_api_info" [style="dotted"];
		"numpy" -> "numpy.linalg" [style="dotted"];
		"numpy" -> "numpy.fft" [style="dotted"];
		"numpy" -> "numpy.dtypes" [style="dotted"];
		"numpy" -> "numpy.random" [style="dotted"];
		"numpy" -> "numpy.polynomial" [style="dotted"];
		"numpy" -> "numpy.ma" [style="dotted"];
		"numpy" -> "numpy.ctypeslib" [style="dotted"];
		"numpy" -> "numpy.exceptions" [style="dotted"];
		"numpy" -> "numpy.testing" [style="dotted"];
		"numpy" -> "numpy.matlib" [style="dotted"];
		"numpy" -> "numpy.f2py" [style="dotted"];
		"numpy" -> "numpy.typing" [style="dotted"];
		"numpy" -> "numpy.rec" [style="dotted"];
		"numpy" -> "numpy.char" [style="dotted"];
		"numpy" -> "numpy.core" [style="dotted"];
		"numpy" -> "numpy.strings" [style="dotted"];
		"numpy" -> "numpy._pytesttester" [style="dotted"];
		"numpy" -> "numpy._utils" [style="dotted"];
		"numpy" -> "numpy._typing" [style="dotted"];
	}
	subgraph "cluster_torch._refs.nn.functional" {
		label="torch._refs.nn.functional";
	}
	subgraph "cluster_future.moves.dbm" {
		label="future.moves.dbm";
		"future.moves.dbm" -> "future.moves.dbm.ndbm" [style="dotted"];
		"future.moves.dbm" -> "future.moves.dbm.dumb" [style="dotted"];
		"future.moves.dbm" -> "future.moves.dbm.gnu" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.distributed" {
		label="torch.testing._internal.distributed";
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.fake_pg" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.checkpoint_utils" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.common_state_dict" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.ddp_under_dist_autograd_test" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.distributed_test" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.distributed_utils" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.multi_threaded_pg" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.rpc_utils" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.rpc" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed.nn" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed._tensor" [style="dotted"];
		"torch.testing._internal.distributed" -> "torch.testing._internal.distributed._shard" [style="dotted"];
	}
	subgraph "cluster_torch._functorch" {
		label="torch._functorch";
		"torch._functorch" -> "torch._functorch.config" [style="dotted"];
		"torch._functorch" -> "torch._functorch.pyfunctorch" [style="dotted"];
		"torch._functorch" -> "torch._functorch.compilers" [style="dotted"];
		"torch._functorch" -> "torch._functorch.aot_autograd" [style="dotted"];
		"torch._functorch" -> "torch._functorch.partitioners" [style="dotted"];
		"torch._functorch" -> "torch._functorch.utils" [style="dotted"];
		"torch._functorch" -> "torch._functorch.apis" [style="dotted"];
		"torch._functorch" -> "torch._functorch.batch_norm_replacement" [style="dotted"];
		"torch._functorch" -> "torch._functorch.eager_transforms" [style="dotted"];
		"torch._functorch" -> "torch._functorch.vmap" [style="dotted"];
		"torch._functorch" -> "torch._functorch.deprecated" [style="dotted"];
		"torch._functorch" -> "torch._functorch.make_functional" [style="dotted"];
		"torch._functorch" -> "torch._functorch.python_key" [style="dotted"];
		"torch._functorch" -> "torch._functorch.functional_call" [style="dotted"];
		"torch._functorch" -> "torch._functorch.autograd_function" [style="dotted"];
		"torch._functorch" -> "torch._functorch.compile_utils" [style="dotted"];
		"torch._functorch" -> "torch._functorch._aot_autograd" [style="dotted"];
		"torch._functorch" -> "torch._functorch.fx_minifier" [style="dotted"];
		"torch._functorch" -> "torch._functorch.benchmark_utils" [style="dotted"];
		"torch._functorch" -> "torch._functorch.pytree_hacks" [style="dotted"];
		"torch._functorch" -> "torch._functorch.top_operators_github_usage" [style="dotted"];
	}
	subgraph "cluster_transformers.models.pvt_v2" {
		label="transformers.models.pvt_v2";
		"transformers.models.pvt_v2" -> "transformers.models.pvt_v2.configuration_pvt_v2" [style="dotted"];
		"transformers.models.pvt_v2" -> "transformers.models.pvt_v2.modeling_pvt_v2" [style="dotted"];
	}
	subgraph "cluster_transformers.models.encodec" {
		label="transformers.models.encodec";
		"transformers.models.encodec" -> "transformers.models.encodec.configuration_encodec" [style="dotted"];
		"transformers.models.encodec" -> "transformers.models.encodec.feature_extraction_encodec" [style="dotted"];
		"transformers.models.encodec" -> "transformers.models.encodec.modeling_encodec" [style="dotted"];
	}
	subgraph "cluster_torch._dynamo.polyfills" {
		label="torch._dynamo.polyfills";
		"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.builtins" [style="dotted"];
		"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.functools" [style="dotted"];
		"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.itertools" [style="dotted"];
		"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.os" [style="dotted"];
		"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.sys" [style="dotted"];
		"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.loader" [style="dotted"];
	}
	subgraph "cluster_sympy.sets.handlers" {
		label="sympy.sets.handlers";
		"sympy.sets.handlers" -> "sympy.sets.handlers.comparison" [style="dotted"];
		"sympy.sets.handlers" -> "sympy.sets.handlers.intersection" [style="dotted"];
		"sympy.sets.handlers" -> "sympy.sets.handlers.union" [style="dotted"];
		"sympy.sets.handlers" -> "sympy.sets.handlers.issubset" [style="dotted"];
		"sympy.sets.handlers" -> "sympy.sets.handlers.add" [style="dotted"];
		"sympy.sets.handlers" -> "sympy.sets.handlers.mul" [style="dotted"];
		"sympy.sets.handlers" -> "sympy.sets.handlers.power" [style="dotted"];
		"sympy.sets.handlers" -> "sympy.sets.handlers.functions" [style="dotted"];
	}
	subgraph "cluster_torch._numpy" {
		label="torch._numpy";
		"torch._numpy" -> "torch._numpy._casting_dicts" [style="dotted"];
		"torch._numpy" -> "torch._numpy._dtypes_impl" [style="dotted"];
		"torch._numpy" -> "torch._numpy._dtypes" [style="dotted"];
		"torch._numpy" -> "torch._numpy._util" [style="dotted"];
		"torch._numpy" -> "torch._numpy._funcs_impl" [style="dotted"];
		"torch._numpy" -> "torch._numpy._reductions_impl" [style="dotted"];
		"torch._numpy" -> "torch._numpy._funcs" [style="dotted"];
		"torch._numpy" -> "torch._numpy._binary_ufuncs_impl" [style="dotted"];
		"torch._numpy" -> "torch._numpy._unary_ufuncs_impl" [style="dotted"];
		"torch._numpy" -> "torch._numpy._ufuncs" [style="dotted"];
		"torch._numpy" -> "torch._numpy.fft" [style="dotted"];
		"torch._numpy" -> "torch._numpy.linalg" [style="dotted"];
		"torch._numpy" -> "torch._numpy.random" [style="dotted"];
		"torch._numpy" -> "torch._numpy._getlimits" [style="dotted"];
		"torch._numpy" -> "torch._numpy._ndarray" [style="dotted"];
		"torch._numpy" -> "torch._numpy.arange" [style="dotted"];
		"torch._numpy" -> "torch._numpy.empty" [style="dotted"];
		"torch._numpy" -> "torch._numpy.intp" [style="dotted"];
		"torch._numpy" -> "torch._numpy.imag" [style="dotted"];
		"torch._numpy" -> "torch._numpy.iscomplexobj" [style="dotted"];
		"torch._numpy" -> "torch._numpy.isscalar" [style="dotted"];
		"torch._numpy" -> "torch._numpy.real" [style="dotted"];
		"torch._numpy" -> "torch._numpy.signbit" [style="dotted"];
		"torch._numpy" -> "torch._numpy.isnan" [style="dotted"];
		"torch._numpy" -> "torch._numpy.max" [style="dotted"];
		"torch._numpy" -> "torch._numpy.float_" [style="dotted"];
		"torch._numpy" -> "torch._numpy._normalizations" [style="dotted"];
		"torch._numpy" -> "torch._numpy.testing" [style="dotted"];
	}
	subgraph "cluster_networkx.generators" {
		label="networkx.generators";
		"networkx.generators" -> "networkx.generators.atlas" [style="dotted"];
		"networkx.generators" -> "networkx.generators.classic" [style="dotted"];
		"networkx.generators" -> "networkx.generators.cographs" [style="dotted"];
		"networkx.generators" -> "networkx.generators.community" [style="dotted"];
		"networkx.generators" -> "networkx.generators.degree_seq" [style="dotted"];
		"networkx.generators" -> "networkx.generators.directed" [style="dotted"];
		"networkx.generators" -> "networkx.generators.duplication" [style="dotted"];
		"networkx.generators" -> "networkx.generators.ego" [style="dotted"];
		"networkx.generators" -> "networkx.generators.expanders" [style="dotted"];
		"networkx.generators" -> "networkx.generators.geometric" [style="dotted"];
		"networkx.generators" -> "networkx.generators.harary_graph" [style="dotted"];
		"networkx.generators" -> "networkx.generators.internet_as_graphs" [style="dotted"];
		"networkx.generators" -> "networkx.generators.intersection" [style="dotted"];
		"networkx.generators" -> "networkx.generators.interval_graph" [style="dotted"];
		"networkx.generators" -> "networkx.generators.joint_degree_seq" [style="dotted"];
		"networkx.generators" -> "networkx.generators.lattice" [style="dotted"];
		"networkx.generators" -> "networkx.generators.line" [style="dotted"];
		"networkx.generators" -> "networkx.generators.mycielski" [style="dotted"];
		"networkx.generators" -> "networkx.generators.nonisomorphic_trees" [style="dotted"];
		"networkx.generators" -> "networkx.generators.random_clustered" [style="dotted"];
		"networkx.generators" -> "networkx.generators.random_graphs" [style="dotted"];
		"networkx.generators" -> "networkx.generators.small" [style="dotted"];
		"networkx.generators" -> "networkx.generators.social" [style="dotted"];
		"networkx.generators" -> "networkx.generators.spectral_graph_forge" [style="dotted"];
		"networkx.generators" -> "networkx.generators.stochastic" [style="dotted"];
		"networkx.generators" -> "networkx.generators.sudoku" [style="dotted"];
		"networkx.generators" -> "networkx.generators.time_series" [style="dotted"];
		"networkx.generators" -> "networkx.generators.trees" [style="dotted"];
		"networkx.generators" -> "networkx.generators.triads" [style="dotted"];
	}
	subgraph "cluster_transformers.loss" {
		label="transformers.loss";
		"transformers.loss" -> "transformers.loss.loss_utils" [style="dotted"];
		"transformers.loss" -> "transformers.loss.loss_deformable_detr" [style="dotted"];
		"transformers.loss" -> "transformers.loss.loss_for_object_detection" [style="dotted"];
		"transformers.loss" -> "transformers.loss.loss_rt_detr" [style="dotted"];
	}
	subgraph "cluster_re" {
		label="re";
		"re" -> "re._parser" [style="dotted"];
		"re" -> "re._compiler" [style="dotted"];
		"re" -> "re._constants" [style="dotted"];
		"re" -> "re._casefix" [style="dotted"];
	}
	subgraph "cluster_transformers.models.flaubert" {
		label="transformers.models.flaubert";
		"transformers.models.flaubert" -> "transformers.models.flaubert.configuration_flaubert" [style="dotted"];
		"transformers.models.flaubert" -> "transformers.models.flaubert.tokenization_flaubert" [style="dotted"];
		"transformers.models.flaubert" -> "transformers.models.flaubert.modeling_flaubert" [style="dotted"];
		"transformers.models.flaubert" -> "transformers.models.flaubert.modeling_tf_flaubert" [style="dotted"];
	}
	subgraph "cluster_transformers.models.marian" {
		label="transformers.models.marian";
		"transformers.models.marian" -> "transformers.models.marian.configuration_marian" [style="dotted"];
		"transformers.models.marian" -> "transformers.models.marian.tokenization_marian" [style="dotted"];
		"transformers.models.marian" -> "transformers.models.marian.modeling_marian" [style="dotted"];
		"transformers.models.marian" -> "transformers.models.marian.modeling_tf_marian" [style="dotted"];
		"transformers.models.marian" -> "transformers.models.marian.modeling_flax_marian" [style="dotted"];
	}
	subgraph "cluster_pywin32_system32" {
		label="pywin32_system32";
	}
	subgraph "cluster_transformers.models.seggpt" {
		label="transformers.models.seggpt";
		"transformers.models.seggpt" -> "transformers.models.seggpt.configuration_seggpt" [style="dotted"];
		"transformers.models.seggpt" -> "transformers.models.seggpt.modeling_seggpt" [style="dotted"];
		"transformers.models.seggpt" -> "transformers.models.seggpt.image_processing_seggpt" [style="dotted"];
	}
	subgraph "cluster_transformers.models.xlnet" {
		label="transformers.models.xlnet";
		"transformers.models.xlnet" -> "transformers.models.xlnet.configuration_xlnet" [style="dotted"];
		"transformers.models.xlnet" -> "transformers.models.xlnet.tokenization_xlnet" [style="dotted"];
		"transformers.models.xlnet" -> "transformers.models.xlnet.tokenization_xlnet_fast" [style="dotted"];
		"transformers.models.xlnet" -> "transformers.models.xlnet.modeling_xlnet" [style="dotted"];
		"transformers.models.xlnet" -> "transformers.models.xlnet.modeling_tf_xlnet" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.operators" {
		label="networkx.algorithms.operators";
		"networkx.algorithms.operators" -> "networkx.algorithms.operators.all" [style="dotted"];
		"networkx.algorithms.operators" -> "networkx.algorithms.operators.binary" [style="dotted"];
		"networkx.algorithms.operators" -> "networkx.algorithms.operators.product" [style="dotted"];
		"networkx.algorithms.operators" -> "networkx.algorithms.operators.unary" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.assortativity" {
		label="networkx.algorithms.assortativity";
		"networkx.algorithms.assortativity" -> "networkx.algorithms.assortativity.connectivity" [style="dotted"];
		"networkx.algorithms.assortativity" -> "networkx.algorithms.assortativity.correlation" [style="dotted"];
		"networkx.algorithms.assortativity" -> "networkx.algorithms.assortativity.mixing" [style="dotted"];
		"networkx.algorithms.assortativity" -> "networkx.algorithms.assortativity.neighbor_degree" [style="dotted"];
		"networkx.algorithms.assortativity" -> "networkx.algorithms.assortativity.pairs" [style="dotted"];
	}
	subgraph "cluster_transformers.models.x_clip" {
		label="transformers.models.x_clip";
		"transformers.models.x_clip" -> "transformers.models.x_clip.configuration_x_clip" [style="dotted"];
		"transformers.models.x_clip" -> "transformers.models.x_clip.processing_x_clip" [style="dotted"];
		"transformers.models.x_clip" -> "transformers.models.x_clip.modeling_x_clip" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.xlm_prophetnet" {
		label="transformers.models.deprecated.xlm_prophetnet";
		"transformers.models.deprecated.xlm_prophetnet" -> "transformers.models.deprecated.xlm_prophetnet.configuration_xlm_prophetnet" [style="dotted"];
		"transformers.models.deprecated.xlm_prophetnet" -> "transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet" [style="dotted"];
		"transformers.models.deprecated.xlm_prophetnet" -> "transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" [style="dotted"];
	}
	subgraph "cluster_torch.backends.opt_einsum" {
		label="torch.backends.opt_einsum";
	}
	subgraph "cluster_pywin.dialogs" {
		label="pywin.dialogs";
		"pywin.dialogs" -> "pywin.dialogs.status" [style="dotted"];
		"pywin.dialogs" -> "pywin.dialogs.list" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.codegen.rocm" {
		label="torch._inductor.codegen.rocm";
		"torch._inductor.codegen.rocm" -> "torch._inductor.codegen.rocm.rocm_cpp_scheduling" [style="dotted"];
		"torch._inductor.codegen.rocm" -> "torch._inductor.codegen.rocm.rocm_template_buffer" [style="dotted"];
		"torch._inductor.codegen.rocm" -> "torch._inductor.codegen.rocm.ck_universal_gemm_template" [style="dotted"];
		"torch._inductor.codegen.rocm" -> "torch._inductor.codegen.rocm.ck_template" [style="dotted"];
		"torch._inductor.codegen.rocm" -> "torch._inductor.codegen.rocm.rocm_kernel" [style="dotted"];
		"torch._inductor.codegen.rocm" -> "torch._inductor.codegen.rocm.rocm_benchmark_request" [style="dotted"];
		"torch._inductor.codegen.rocm" -> "torch._inductor.codegen.rocm.rocm_template" [style="dotted"];
		"torch._inductor.codegen.rocm" -> "torch._inductor.codegen.rocm.compile_command" [style="dotted"];
	}
	subgraph "cluster_transformers.models.upernet" {
		label="transformers.models.upernet";
		"transformers.models.upernet" -> "transformers.models.upernet.configuration_upernet" [style="dotted"];
		"transformers.models.upernet" -> "transformers.models.upernet.modeling_upernet" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gpt_neo" {
		label="transformers.models.gpt_neo";
		"transformers.models.gpt_neo" -> "transformers.models.gpt_neo.configuration_gpt_neo" [style="dotted"];
		"transformers.models.gpt_neo" -> "transformers.models.gpt_neo.modeling_gpt_neo" [style="dotted"];
		"transformers.models.gpt_neo" -> "transformers.models.gpt_neo.modeling_flax_gpt_neo" [style="dotted"];
	}
	subgraph "cluster_logging" {
		label="logging";
	}
	subgraph "cluster_transformers.models.deprecated.tvlt" {
		label="transformers.models.deprecated.tvlt";
		"transformers.models.deprecated.tvlt" -> "transformers.models.deprecated.tvlt.configuration_tvlt" [style="dotted"];
		"transformers.models.deprecated.tvlt" -> "transformers.models.deprecated.tvlt.processing_tvlt" [style="dotted"];
		"transformers.models.deprecated.tvlt" -> "transformers.models.deprecated.tvlt.feature_extraction_tvlt" [style="dotted"];
		"transformers.models.deprecated.tvlt" -> "transformers.models.deprecated.tvlt.modeling_tvlt" [style="dotted"];
		"transformers.models.deprecated.tvlt" -> "transformers.models.deprecated.tvlt.image_processing_tvlt" [style="dotted"];
	}
	subgraph "cluster_transformers.models.ctrl" {
		label="transformers.models.ctrl";
		"transformers.models.ctrl" -> "transformers.models.ctrl.configuration_ctrl" [style="dotted"];
		"transformers.models.ctrl" -> "transformers.models.ctrl.tokenization_ctrl" [style="dotted"];
		"transformers.models.ctrl" -> "transformers.models.ctrl.modeling_ctrl" [style="dotted"];
		"transformers.models.ctrl" -> "transformers.models.ctrl.modeling_tf_ctrl" [style="dotted"];
	}
	subgraph "cluster_torch.nn.qat" {
		label="torch.nn.qat";
		"torch.nn.qat" -> "torch.nn.qat.dynamic" [style="dotted"];
		"torch.nn.qat" -> "torch.nn.qat.modules" [style="dotted"];
	}
	subgraph "cluster_transformers.models.olmoe" {
		label="transformers.models.olmoe";
		"transformers.models.olmoe" -> "transformers.models.olmoe.configuration_olmoe" [style="dotted"];
		"transformers.models.olmoe" -> "transformers.models.olmoe.modeling_olmoe" [style="dotted"];
	}
	subgraph "cluster_transformers.models.wav2vec2_bert" {
		label="transformers.models.wav2vec2_bert";
		"transformers.models.wav2vec2_bert" -> "transformers.models.wav2vec2_bert.configuration_wav2vec2_bert" [style="dotted"];
		"transformers.models.wav2vec2_bert" -> "transformers.models.wav2vec2_bert.processing_wav2vec2_bert" [style="dotted"];
		"transformers.models.wav2vec2_bert" -> "transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" [style="dotted"];
	}
	subgraph "cluster_sympy.functions.combinatorial" {
		label="sympy.functions.combinatorial";
		"sympy.functions.combinatorial" -> "sympy.functions.combinatorial.factorials" [style="dotted"];
		"sympy.functions.combinatorial" -> "sympy.functions.combinatorial.numbers" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mpnet" {
		label="transformers.models.mpnet";
		"transformers.models.mpnet" -> "transformers.models.mpnet.configuration_mpnet" [style="dotted"];
		"transformers.models.mpnet" -> "transformers.models.mpnet.tokenization_mpnet" [style="dotted"];
		"transformers.models.mpnet" -> "transformers.models.mpnet.tokenization_mpnet_fast" [style="dotted"];
		"transformers.models.mpnet" -> "transformers.models.mpnet.modeling_mpnet" [style="dotted"];
		"transformers.models.mpnet" -> "transformers.models.mpnet.modeling_tf_mpnet" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.importlib_resources" {
		label="setuptools._vendor.importlib_resources";
		"setuptools._vendor.importlib_resources" -> "setuptools._vendor.importlib_resources.readers" [style="dotted"];
		"setuptools._vendor.importlib_resources" -> "setuptools._vendor.importlib_resources._adapters" [style="dotted"];
		"setuptools._vendor.importlib_resources" -> "setuptools._vendor.importlib_resources._common" [style="dotted"];
		"setuptools._vendor.importlib_resources" -> "setuptools._vendor.importlib_resources.functional" [style="dotted"];
		"setuptools._vendor.importlib_resources" -> "setuptools._vendor.importlib_resources.abc" [style="dotted"];
		"setuptools._vendor.importlib_resources" -> "setuptools._vendor.importlib_resources.compat" [style="dotted"];
		"setuptools._vendor.importlib_resources" -> "setuptools._vendor.importlib_resources.future" [style="dotted"];
		"setuptools._vendor.importlib_resources" -> "setuptools._vendor.importlib_resources._itertools" [style="dotted"];
	}
	subgraph "cluster_transformers.models.distilbert" {
		label="transformers.models.distilbert";
		"transformers.models.distilbert" -> "transformers.models.distilbert.configuration_distilbert" [style="dotted"];
		"transformers.models.distilbert" -> "transformers.models.distilbert.tokenization_distilbert" [style="dotted"];
		"transformers.models.distilbert" -> "transformers.models.distilbert.tokenization_distilbert_fast" [style="dotted"];
		"transformers.models.distilbert" -> "transformers.models.distilbert.modeling_distilbert" [style="dotted"];
		"transformers.models.distilbert" -> "transformers.models.distilbert.modeling_tf_distilbert" [style="dotted"];
		"transformers.models.distilbert" -> "transformers.models.distilbert.modeling_flax_distilbert" [style="dotted"];
	}
	subgraph "cluster_torch._numpy.testing" {
		label="torch._numpy.testing";
		"torch._numpy.testing" -> "torch._numpy.testing.utils" [style="dotted"];
	}
	subgraph "cluster_gtts.tokenizer" {
		label="gtts.tokenizer";
		"gtts.tokenizer" -> "gtts.tokenizer.core" [style="dotted"];
		"gtts.tokenizer" -> "gtts.tokenizer.symbols" [style="dotted"];
		"gtts.tokenizer" -> "gtts.tokenizer.pre_processors" [style="dotted"];
		"gtts.tokenizer" -> "gtts.tokenizer.tokenizer_cases" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.nat" {
		label="transformers.models.deprecated.nat";
		"transformers.models.deprecated.nat" -> "transformers.models.deprecated.nat.configuration_nat" [style="dotted"];
		"transformers.models.deprecated.nat" -> "transformers.models.deprecated.nat.modeling_nat" [style="dotted"];
	}
	subgraph "cluster_torch.nn.parallel" {
		label="torch.nn.parallel";
		"torch.nn.parallel" -> "torch.nn.parallel.comm" [style="dotted"];
		"torch.nn.parallel" -> "torch.nn.parallel.data_parallel" [style="dotted"];
		"torch.nn.parallel" -> "torch.nn.parallel.distributed" [style="dotted"];
		"torch.nn.parallel" -> "torch.nn.parallel.parallel_apply" [style="dotted"];
		"torch.nn.parallel" -> "torch.nn.parallel.replicate" [style="dotted"];
		"torch.nn.parallel" -> "torch.nn.parallel.scatter_gather" [style="dotted"];
		"torch.nn.parallel" -> "torch.nn.parallel._functions" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._shard.sharding_spec" {
		label="torch.distributed._shard.sharding_spec";
		"torch.distributed._shard.sharding_spec" -> "torch.distributed._shard.sharding_spec.api" [style="dotted"];
		"torch.distributed._shard.sharding_spec" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec" [style="dotted"];
		"torch.distributed._shard.sharding_spec" -> "torch.distributed._shard.sharding_spec._internals" [style="dotted"];
		"torch.distributed._shard.sharding_spec" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops" [style="dotted"];
	}
	subgraph "cluster_transformers.models.jamba" {
		label="transformers.models.jamba";
		"transformers.models.jamba" -> "transformers.models.jamba.configuration_jamba" [style="dotted"];
		"transformers.models.jamba" -> "transformers.models.jamba.modeling_jamba" [style="dotted"];
	}
	subgraph "cluster_transformers.models.blip" {
		label="transformers.models.blip";
		"transformers.models.blip" -> "transformers.models.blip.configuration_blip" [style="dotted"];
		"transformers.models.blip" -> "transformers.models.blip.processing_blip" [style="dotted"];
		"transformers.models.blip" -> "transformers.models.blip.image_processing_blip" [style="dotted"];
		"transformers.models.blip" -> "transformers.models.blip.modeling_blip" [style="dotted"];
		"transformers.models.blip" -> "transformers.models.blip.modeling_tf_blip" [style="dotted"];
		"transformers.models.blip" -> "transformers.models.blip.modeling_tf_blip_text" [style="dotted"];
		"transformers.models.blip" -> "transformers.models.blip.modeling_blip_text" [style="dotted"];
	}
	subgraph "cluster_kivy_deps" {
		label="kivy_deps";
	}
	subgraph "cluster_torch.autograd._functions" {
		label="torch.autograd._functions";
		"torch.autograd._functions" -> "torch.autograd._functions.tensor" [style="dotted"];
		"torch.autograd._functions" -> "torch.autograd._functions.utils" [style="dotted"];
	}
	subgraph "cluster_setuptools" {
		label="setuptools";
		"setuptools" -> "setuptools._normalization" [style="dotted"];
		"setuptools" -> "setuptools._reqs" [style="dotted"];
		"setuptools" -> "setuptools._core_metadata" [style="dotted"];
		"setuptools" -> "setuptools.monkey" [style="dotted"];
		"setuptools" -> "setuptools.logging" [style="dotted"];
		"setuptools" -> "setuptools._imp" [style="dotted"];
		"setuptools" -> "setuptools.depends" [style="dotted"];
		"setuptools" -> "setuptools.discovery" [style="dotted"];
		"setuptools" -> "setuptools._entry_points" [style="dotted"];
		"setuptools" -> "setuptools.command" [style="dotted"];
		"setuptools" -> "setuptools.windows_support" [style="dotted"];
		"setuptools" -> "setuptools.dist" [style="dotted"];
		"setuptools" -> "setuptools.extension" [style="dotted"];
		"setuptools" -> "setuptools.version" [style="dotted"];
		"setuptools" -> "setuptools.warnings" [style="dotted"];
		"setuptools" -> "setuptools.msvc" [style="dotted"];
		"setuptools" -> "setuptools._distutils" [style="dotted"];
		"setuptools" -> "setuptools._vendor" [style="dotted"];
		"setuptools" -> "setuptools._importlib" [style="dotted"];
		"setuptools" -> "setuptools._path" [style="dotted"];
		"setuptools" -> "setuptools.config" [style="dotted"];
		"setuptools" -> "setuptools.installer" [style="dotted"];
		"setuptools" -> "setuptools.unicode_utils" [style="dotted"];
		"setuptools" -> "setuptools.glob" [style="dotted"];
		"setuptools" -> "setuptools.compat" [style="dotted"];
		"setuptools" -> "setuptools.wheel" [style="dotted"];
		"setuptools" -> "setuptools.archive_util" [style="dotted"];
		"setuptools" -> "setuptools.errors" [style="dotted"];
		"setuptools" -> "setuptools._itertools" [style="dotted"];
	}
	subgraph "cluster_future.backports.http" {
		label="future.backports.http";
		"future.backports.http" -> "future.backports.http.client" [style="dotted"];
		"future.backports.http" -> "future.backports.http.cookiejar" [style="dotted"];
	}
	subgraph "cluster_torchgen.api.types" {
		label="torchgen.api.types";
		"torchgen.api.types" -> "torchgen.api.types.types" [style="dotted"];
		"torchgen.api.types" -> "torchgen.api.types.types_base" [style="dotted"];
		"torchgen.api.types" -> "torchgen.api.types.signatures" [style="dotted"];
	}
	subgraph "cluster_sympy.plotting.backends.textbackend" {
		label="sympy.plotting.backends.textbackend";
		"sympy.plotting.backends.textbackend" -> "sympy.plotting.backends.textbackend.text" [style="dotted"];
	}
	subgraph "cluster_setuptools.config._validate_pyproject" {
		label="setuptools.config._validate_pyproject";
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.formats" [style="dotted"];
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.error_reporting" [style="dotted"];
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.extra_validations" [style="dotted"];
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.fastjsonschema_exceptions" [style="dotted"];
		"setuptools.config._validate_pyproject" -> "setuptools.config._validate_pyproject.fastjsonschema_validations" [style="dotted"];
	}
	subgraph "cluster_sympy.tensor.array" {
		label="sympy.tensor.array";
		"sympy.tensor.array" -> "sympy.tensor.array.dense_ndim_array" [style="dotted"];
		"sympy.tensor.array" -> "sympy.tensor.array.sparse_ndim_array" [style="dotted"];
		"sympy.tensor.array" -> "sympy.tensor.array.ndim_array" [style="dotted"];
		"sympy.tensor.array" -> "sympy.tensor.array.arrayop" [style="dotted"];
		"sympy.tensor.array" -> "sympy.tensor.array.array_comprehension" [style="dotted"];
		"sympy.tensor.array" -> "sympy.tensor.array.expressions" [style="dotted"];
		"sympy.tensor.array" -> "sympy.tensor.array.array_derivatives" [style="dotted"];
		"sympy.tensor.array" -> "sympy.tensor.array.mutable_ndim_array" [style="dotted"];
	}
	subgraph "cluster_torch._refs.linalg" {
		label="torch._refs.linalg";
	}
	subgraph "cluster_numpy._core" {
		label="numpy._core";
		"numpy._core" -> "numpy._core.overrides" [style="dotted"];
		"numpy._core" -> "numpy._core.multiarray" [style="dotted"];
		"numpy._core" -> "numpy._core.umath" [style="dotted"];
		"numpy._core" -> "numpy._core.numerictypes" [style="dotted"];
		"numpy._core" -> "numpy._core.numeric" [style="dotted"];
		"numpy._core" -> "numpy._core._exceptions" [style="dotted"];
		"numpy._core" -> "numpy._core.asarray" [style="dotted"];
		"numpy._core" -> "numpy._core.ndarray" [style="dotted"];
		"numpy._core" -> "numpy._core.transpose" [style="dotted"];
		"numpy._core" -> "numpy._core.iinfo" [style="dotted"];
		"numpy._core" -> "numpy._core.array" [style="dotted"];
		"numpy._core" -> "numpy._core.zeros" [style="dotted"];
		"numpy._core" -> "numpy._core.empty" [style="dotted"];
		"numpy._core" -> "numpy._core.empty_like" [style="dotted"];
		"numpy._core" -> "numpy._core.intc" [style="dotted"];
		"numpy._core" -> "numpy._core.single" [style="dotted"];
		"numpy._core" -> "numpy._core.double" [style="dotted"];
		"numpy._core" -> "numpy._core.csingle" [style="dotted"];
		"numpy._core" -> "numpy._core.cdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.inexact" [style="dotted"];
		"numpy._core" -> "numpy._core.complexfloating" [style="dotted"];
		"numpy._core" -> "numpy._core.newaxis" [style="dotted"];
		"numpy._core" -> "numpy._core.all" [style="dotted"];
		"numpy._core" -> "numpy._core.inf" [style="dotted"];
		"numpy._core" -> "numpy._core.dot" [style="dotted"];
		"numpy._core" -> "numpy._core.add" [style="dotted"];
		"numpy._core" -> "numpy._core.multiply" [style="dotted"];
		"numpy._core" -> "numpy._core.sqrt" [style="dotted"];
		"numpy._core" -> "numpy._core.sum" [style="dotted"];
		"numpy._core" -> "numpy._core.isfinite" [style="dotted"];
		"numpy._core" -> "numpy._core.finfo" [style="dotted"];
		"numpy._core" -> "numpy._core.errstate" [style="dotted"];
		"numpy._core" -> "numpy._core.moveaxis" [style="dotted"];
		"numpy._core" -> "numpy._core.amin" [style="dotted"];
		"numpy._core" -> "numpy._core.amax" [style="dotted"];
		"numpy._core" -> "numpy._core.prod" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_2d" [style="dotted"];
		"numpy._core" -> "numpy._core.intp" [style="dotted"];
		"numpy._core" -> "numpy._core.asanyarray" [style="dotted"];
		"numpy._core" -> "numpy._core.object_" [style="dotted"];
		"numpy._core" -> "numpy._core.matmul" [style="dotted"];
		"numpy._core" -> "numpy._core.swapaxes" [style="dotted"];
		"numpy._core" -> "numpy._core.divide" [style="dotted"];
		"numpy._core" -> "numpy._core.count_nonzero" [style="dotted"];
		"numpy._core" -> "numpy._core.isnan" [style="dotted"];
		"numpy._core" -> "numpy._core.sign" [style="dotted"];
		"numpy._core" -> "numpy._core.argsort" [style="dotted"];
		"numpy._core" -> "numpy._core.sort" [style="dotted"];
		"numpy._core" -> "numpy._core.reciprocal" [style="dotted"];
		"numpy._core" -> "numpy._core.diagonal" [style="dotted"];
		"numpy._core" -> "numpy._core.trace" [style="dotted"];
		"numpy._core" -> "numpy._core.cross" [style="dotted"];
		"numpy._core" -> "numpy._core.outer" [style="dotted"];
		"numpy._core" -> "numpy._core.tensordot" [style="dotted"];
		"numpy._core" -> "numpy._core.matrix_transpose" [style="dotted"];
		"numpy._core" -> "numpy._core.vecdot" [style="dotted"];
		"numpy._core" -> "numpy._core.float32" [style="dotted"];
		"numpy._core" -> "numpy._core.arange" [style="dotted"];
		"numpy._core" -> "numpy._core.array_repr" [style="dotted"];
		"numpy._core" -> "numpy._core.isnat" [style="dotted"];
		"numpy._core" -> "numpy._core.isscalar" [style="dotted"];
		"numpy._core" -> "numpy._core.signbit" [style="dotted"];
		"numpy._core" -> "numpy._core.array2string" [style="dotted"];
		"numpy._core" -> "numpy._core.max" [style="dotted"];
		"numpy._core" -> "numpy._core.number" [style="dotted"];
		"numpy._core" -> "numpy._core.result_type" [style="dotted"];
		"numpy._core" -> "numpy._core.linspace" [style="dotted"];
		"numpy._core" -> "numpy._core.getlimits" [style="dotted"];
		"numpy._core" -> "numpy._core.vstack" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_3d" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_1d" [style="dotted"];
		"numpy._core" -> "numpy._core.hstack" [style="dotted"];
		"numpy._core" -> "numpy._core.ones" [style="dotted"];
		"numpy._core" -> "numpy._core._methods" [style="dotted"];
		"numpy._core" -> "numpy._core.fromnumeric" [style="dotted"];
		"numpy._core" -> "numpy._core.shape_base" [style="dotted"];
		"numpy._core" -> "numpy._core._asarray" [style="dotted"];
		"numpy._core" -> "numpy._core.records" [style="dotted"];
		"numpy._core" -> "numpy._core.memmap" [style="dotted"];
		"numpy._core" -> "numpy._core.function_base" [style="dotted"];
		"numpy._core" -> "numpy._core._machar" [style="dotted"];
		"numpy._core" -> "numpy._core.einsumfunc" [style="dotted"];
		"numpy._core" -> "numpy._core._add_newdocs" [style="dotted"];
		"numpy._core" -> "numpy._core._add_newdocs_scalars" [style="dotted"];
		"numpy._core" -> "numpy._core._dtype_ctypes" [style="dotted"];
		"numpy._core" -> "numpy._core._internal" [style="dotted"];
		"numpy._core" -> "numpy._core._dtype" [style="dotted"];
		"numpy._core" -> "numpy._core.arccos" [style="dotted"];
		"numpy._core" -> "numpy._core.arccosh" [style="dotted"];
		"numpy._core" -> "numpy._core.arcsin" [style="dotted"];
		"numpy._core" -> "numpy._core.arcsinh" [style="dotted"];
		"numpy._core" -> "numpy._core.arctan" [style="dotted"];
		"numpy._core" -> "numpy._core.arctan2" [style="dotted"];
		"numpy._core" -> "numpy._core.arctanh" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_and" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_count" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_or" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_xor" [style="dotted"];
		"numpy._core" -> "numpy._core.bool_" [style="dotted"];
		"numpy._core" -> "numpy._core.byte" [style="dotted"];
		"numpy._core" -> "numpy._core.bytes_" [style="dotted"];
		"numpy._core" -> "numpy._core.cbrt" [style="dotted"];
		"numpy._core" -> "numpy._core.ceil" [style="dotted"];
		"numpy._core" -> "numpy._core.character" [style="dotted"];
		"numpy._core" -> "numpy._core.clongdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.complex64" [style="dotted"];
		"numpy._core" -> "numpy._core.conj" [style="dotted"];
		"numpy._core" -> "numpy._core.conjugate" [style="dotted"];
		"numpy._core" -> "numpy._core.copysign" [style="dotted"];
		"numpy._core" -> "numpy._core.cos" [style="dotted"];
		"numpy._core" -> "numpy._core.cosh" [style="dotted"];
		"numpy._core" -> "numpy._core.datetime64" [style="dotted"];
		"numpy._core" -> "numpy._core.deg2rad" [style="dotted"];
		"numpy._core" -> "numpy._core.degrees" [style="dotted"];
		"numpy._core" -> "numpy._core.divmod" [style="dotted"];
		"numpy._core" -> "numpy._core.e" [style="dotted"];
		"numpy._core" -> "numpy._core.equal" [style="dotted"];
		"numpy._core" -> "numpy._core.euler_gamma" [style="dotted"];
		"numpy._core" -> "numpy._core.exp" [style="dotted"];
		"numpy._core" -> "numpy._core.expm1" [style="dotted"];
		"numpy._core" -> "numpy._core.fabs" [style="dotted"];
		"numpy._core" -> "numpy._core.float16" [style="dotted"];
		"numpy._core" -> "numpy._core.float_power" [style="dotted"];
		"numpy._core" -> "numpy._core.floating" [style="dotted"];
		"numpy._core" -> "numpy._core.floor" [style="dotted"];
		"numpy._core" -> "numpy._core.floor_divide" [style="dotted"];
		"numpy._core" -> "numpy._core.fmax" [style="dotted"];
		"numpy._core" -> "numpy._core.fmin" [style="dotted"];
		"numpy._core" -> "numpy._core.fmod" [style="dotted"];
		"numpy._core" -> "numpy._core.frexp" [style="dotted"];
		"numpy._core" -> "numpy._core.frompyfunc" [style="dotted"];
		"numpy._core" -> "numpy._core.gcd" [style="dotted"];
		"numpy._core" -> "numpy._core.greater" [style="dotted"];
		"numpy._core" -> "numpy._core.greater_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.half" [style="dotted"];
		"numpy._core" -> "numpy._core.heaviside" [style="dotted"];
		"numpy._core" -> "numpy._core.hypot" [style="dotted"];
		"numpy._core" -> "numpy._core.int16" [style="dotted"];
		"numpy._core" -> "numpy._core.int32" [style="dotted"];
		"numpy._core" -> "numpy._core.int64" [style="dotted"];
		"numpy._core" -> "numpy._core.int8" [style="dotted"];
		"numpy._core" -> "numpy._core.integer" [style="dotted"];
		"numpy._core" -> "numpy._core.lcm" [style="dotted"];
		"numpy._core" -> "numpy._core.ldexp" [style="dotted"];
		"numpy._core" -> "numpy._core.left_shift" [style="dotted"];
		"numpy._core" -> "numpy._core.less" [style="dotted"];
		"numpy._core" -> "numpy._core.less_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.log" [style="dotted"];
		"numpy._core" -> "numpy._core.log1p" [style="dotted"];
		"numpy._core" -> "numpy._core.log2" [style="dotted"];
		"numpy._core" -> "numpy._core.logaddexp" [style="dotted"];
		"numpy._core" -> "numpy._core.logaddexp2" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_and" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_not" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_or" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_xor" [style="dotted"];
		"numpy._core" -> "numpy._core.long" [style="dotted"];
		"numpy._core" -> "numpy._core.longdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.maximum" [style="dotted"];
		"numpy._core" -> "numpy._core.minimum" [style="dotted"];
		"numpy._core" -> "numpy._core.mod" [style="dotted"];
		"numpy._core" -> "numpy._core.modf" [style="dotted"];
		"numpy._core" -> "numpy._core.negative" [style="dotted"];
		"numpy._core" -> "numpy._core.not_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.pi" [style="dotted"];
		"numpy._core" -> "numpy._core.positive" [style="dotted"];
		"numpy._core" -> "numpy._core.power" [style="dotted"];
		"numpy._core" -> "numpy._core.rad2deg" [style="dotted"];
		"numpy._core" -> "numpy._core.radians" [style="dotted"];
		"numpy._core" -> "numpy._core.remainder" [style="dotted"];
		"numpy._core" -> "numpy._core.right_shift" [style="dotted"];
		"numpy._core" -> "numpy._core.rint" [style="dotted"];
		"numpy._core" -> "numpy._core.short" [style="dotted"];
		"numpy._core" -> "numpy._core.signedinteger" [style="dotted"];
		"numpy._core" -> "numpy._core.sinh" [style="dotted"];
		"numpy._core" -> "numpy._core.spacing" [style="dotted"];
		"numpy._core" -> "numpy._core.square" [style="dotted"];
		"numpy._core" -> "numpy._core.str_" [style="dotted"];
		"numpy._core" -> "numpy._core.subtract" [style="dotted"];
		"numpy._core" -> "numpy._core.tan" [style="dotted"];
		"numpy._core" -> "numpy._core.tanh" [style="dotted"];
		"numpy._core" -> "numpy._core.timedelta64" [style="dotted"];
		"numpy._core" -> "numpy._core.true_divide" [style="dotted"];
		"numpy._core" -> "numpy._core.trunc" [style="dotted"];
		"numpy._core" -> "numpy._core.ubyte" [style="dotted"];
		"numpy._core" -> "numpy._core.uint" [style="dotted"];
		"numpy._core" -> "numpy._core.uint16" [style="dotted"];
		"numpy._core" -> "numpy._core.uint32" [style="dotted"];
		"numpy._core" -> "numpy._core.uint64" [style="dotted"];
		"numpy._core" -> "numpy._core.uintc" [style="dotted"];
		"numpy._core" -> "numpy._core.uintp" [style="dotted"];
		"numpy._core" -> "numpy._core.ulong" [style="dotted"];
		"numpy._core" -> "numpy._core.ulonglong" [style="dotted"];
		"numpy._core" -> "numpy._core.unsignedinteger" [style="dotted"];
		"numpy._core" -> "numpy._core.ushort" [style="dotted"];
		"numpy._core" -> "numpy._core.void" [style="dotted"];
		"numpy._core" -> "numpy._core.printoptions" [style="dotted"];
		"numpy._core" -> "numpy._core._multiarray_tests" [style="dotted"];
		"numpy._core" -> "numpy._core.strings" [style="dotted"];
		"numpy._core" -> "numpy._core._multiarray_umath" [style="dotted"];
		"numpy._core" -> "numpy._core.defchararray" [style="dotted"];
		"numpy._core" -> "numpy._core._ufunc_config" [style="dotted"];
		"numpy._core" -> "numpy._core.arrayprint" [style="dotted"];
		"numpy._core" -> "numpy._core._string_helpers" [style="dotted"];
		"numpy._core" -> "numpy._core._type_aliases" [style="dotted"];
	}
	subgraph "cluster_transformers.models.albert" {
		label="transformers.models.albert";
		"transformers.models.albert" -> "transformers.models.albert.configuration_albert" [style="dotted"];
		"transformers.models.albert" -> "transformers.models.albert.modeling_albert" [style="dotted"];
		"transformers.models.albert" -> "transformers.models.albert.modeling_flax_albert" [style="dotted"];
		"transformers.models.albert" -> "transformers.models.albert.modeling_tf_albert" [style="dotted"];
		"transformers.models.albert" -> "transformers.models.albert.tokenization_albert" [style="dotted"];
		"transformers.models.albert" -> "transformers.models.albert.tokenization_albert_fast" [style="dotted"];
	}
	subgraph "cluster_transformers.models.qwen2_vl" {
		label="transformers.models.qwen2_vl";
		"transformers.models.qwen2_vl" -> "transformers.models.qwen2_vl.configuration_qwen2_vl" [style="dotted"];
		"transformers.models.qwen2_vl" -> "transformers.models.qwen2_vl.processing_qwen2_vl" [style="dotted"];
		"transformers.models.qwen2_vl" -> "transformers.models.qwen2_vl.modeling_qwen2_vl" [style="dotted"];
		"transformers.models.qwen2_vl" -> "transformers.models.qwen2_vl.image_processing_qwen2_vl" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vit" {
		label="transformers.models.vit";
		"transformers.models.vit" -> "transformers.models.vit.configuration_vit" [style="dotted"];
		"transformers.models.vit" -> "transformers.models.vit.feature_extraction_vit" [style="dotted"];
		"transformers.models.vit" -> "transformers.models.vit.image_processing_vit" [style="dotted"];
		"transformers.models.vit" -> "transformers.models.vit.image_processing_vit_fast" [style="dotted"];
		"transformers.models.vit" -> "transformers.models.vit.modeling_vit" [style="dotted"];
		"transformers.models.vit" -> "transformers.models.vit.modeling_tf_vit" [style="dotted"];
		"transformers.models.vit" -> "transformers.models.vit.modeling_flax_vit" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bert_japanese" {
		label="transformers.models.bert_japanese";
		"transformers.models.bert_japanese" -> "transformers.models.bert_japanese.tokenization_bert_japanese" [style="dotted"];
	}
	subgraph "cluster_torch.nn.intrinsic.quantized.modules" {
		label="torch.nn.intrinsic.quantized.modules";
		"torch.nn.intrinsic.quantized.modules" -> "torch.nn.intrinsic.quantized.modules.bn_relu" [style="dotted"];
		"torch.nn.intrinsic.quantized.modules" -> "torch.nn.intrinsic.quantized.modules.conv_relu" [style="dotted"];
		"torch.nn.intrinsic.quantized.modules" -> "torch.nn.intrinsic.quantized.modules.linear_relu" [style="dotted"];
	}
	subgraph "cluster_transformers.models.longt5" {
		label="transformers.models.longt5";
		"transformers.models.longt5" -> "transformers.models.longt5.configuration_longt5" [style="dotted"];
		"transformers.models.longt5" -> "transformers.models.longt5.modeling_longt5" [style="dotted"];
		"transformers.models.longt5" -> "transformers.models.longt5.modeling_flax_longt5" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bit" {
		label="transformers.models.bit";
		"transformers.models.bit" -> "transformers.models.bit.configuration_bit" [style="dotted"];
		"transformers.models.bit" -> "transformers.models.bit.modeling_bit" [style="dotted"];
		"transformers.models.bit" -> "transformers.models.bit.image_processing_bit" [style="dotted"];
	}
	subgraph "cluster_transformers.models.layoutlm" {
		label="transformers.models.layoutlm";
		"transformers.models.layoutlm" -> "transformers.models.layoutlm.configuration_layoutlm" [style="dotted"];
		"transformers.models.layoutlm" -> "transformers.models.layoutlm.tokenization_layoutlm" [style="dotted"];
		"transformers.models.layoutlm" -> "transformers.models.layoutlm.tokenization_layoutlm_fast" [style="dotted"];
		"transformers.models.layoutlm" -> "transformers.models.layoutlm.modeling_layoutlm" [style="dotted"];
		"transformers.models.layoutlm" -> "transformers.models.layoutlm.modeling_tf_layoutlm" [style="dotted"];
	}
	subgraph "cluster_transformers.models.wav2vec2_phoneme" {
		label="transformers.models.wav2vec2_phoneme";
		"transformers.models.wav2vec2_phoneme" -> "transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" [style="dotted"];
	}
	subgraph "cluster_transformers.models.wav2vec2" {
		label="transformers.models.wav2vec2";
		"transformers.models.wav2vec2" -> "transformers.models.wav2vec2.configuration_wav2vec2" [style="dotted"];
		"transformers.models.wav2vec2" -> "transformers.models.wav2vec2.feature_extraction_wav2vec2" [style="dotted"];
		"transformers.models.wav2vec2" -> "transformers.models.wav2vec2.processing_wav2vec2" [style="dotted"];
		"transformers.models.wav2vec2" -> "transformers.models.wav2vec2.tokenization_wav2vec2" [style="dotted"];
		"transformers.models.wav2vec2" -> "transformers.models.wav2vec2.modeling_wav2vec2" [style="dotted"];
		"transformers.models.wav2vec2" -> "transformers.models.wav2vec2.modeling_tf_wav2vec2" [style="dotted"];
	}
	subgraph "cluster_torch._vendor" {
		label="torch._vendor";
		"torch._vendor" -> "torch._vendor.packaging" [style="dotted"];
	}
	subgraph "cluster_transformers.models.encoder_decoder" {
		label="transformers.models.encoder_decoder";
		"transformers.models.encoder_decoder" -> "transformers.models.encoder_decoder.configuration_encoder_decoder" [style="dotted"];
		"transformers.models.encoder_decoder" -> "transformers.models.encoder_decoder.modeling_encoder_decoder" [style="dotted"];
		"transformers.models.encoder_decoder" -> "transformers.models.encoder_decoder.modeling_tf_encoder_decoder" [style="dotted"];
		"transformers.models.encoder_decoder" -> "transformers.models.encoder_decoder.modeling_flax_encoder_decoder" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bert_generation" {
		label="transformers.models.bert_generation";
		"transformers.models.bert_generation" -> "transformers.models.bert_generation.configuration_bert_generation" [style="dotted"];
		"transformers.models.bert_generation" -> "transformers.models.bert_generation.tokenization_bert_generation" [style="dotted"];
		"transformers.models.bert_generation" -> "transformers.models.bert_generation.modeling_bert_generation" [style="dotted"];
	}
	subgraph "cluster_setuptools._distutils" {
		label="setuptools._distutils";
		"setuptools._distutils" -> "setuptools._distutils.file_util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils._log" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils._macos_compat" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils._modified" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils._msvccompiler" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.archive_util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.ccompiler" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.cmd" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.core" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.cygwinccompiler" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.debug" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.dep_util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.dir_util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.dist" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.errors" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.extension" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.fancy_getopt" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.filelist" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.log" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.spawn" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.sysconfig" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.text_file" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.unixccompiler" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.util" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.version" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.versionpredicate" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.zosccompiler" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.compat" [style="dotted"];
		"setuptools._distutils" -> "setuptools._distutils.command" [style="dotted"];
	}
	subgraph "cluster_transformers.models.layoutlmv2" {
		label="transformers.models.layoutlmv2";
		"transformers.models.layoutlmv2" -> "transformers.models.layoutlmv2.configuration_layoutlmv2" [style="dotted"];
		"transformers.models.layoutlmv2" -> "transformers.models.layoutlmv2.processing_layoutlmv2" [style="dotted"];
		"transformers.models.layoutlmv2" -> "transformers.models.layoutlmv2.tokenization_layoutlmv2" [style="dotted"];
		"transformers.models.layoutlmv2" -> "transformers.models.layoutlmv2.tokenization_layoutlmv2_fast" [style="dotted"];
		"transformers.models.layoutlmv2" -> "transformers.models.layoutlmv2.feature_extraction_layoutlmv2" [style="dotted"];
		"transformers.models.layoutlmv2" -> "transformers.models.layoutlmv2.modeling_layoutlmv2" [style="dotted"];
		"transformers.models.layoutlmv2" -> "transformers.models.layoutlmv2.image_processing_layoutlmv2" [style="dotted"];
	}
	subgraph "cluster_torch.jit" {
		label="torch.jit";
		"torch.jit" -> "torch.jit._async" [style="dotted"];
		"torch.jit" -> "torch.jit._await" [style="dotted"];
		"torch.jit" -> "torch.jit._decomposition_utils" [style="dotted"];
		"torch.jit" -> "torch.jit._freeze" [style="dotted"];
		"torch.jit" -> "torch.jit._fuser" [style="dotted"];
		"torch.jit" -> "torch.jit._ir_utils" [style="dotted"];
		"torch.jit" -> "torch.jit._script" [style="dotted"];
		"torch.jit" -> "torch.jit._serialization" [style="dotted"];
		"torch.jit" -> "torch.jit._trace" [style="dotted"];
		"torch.jit" -> "torch.jit._state" [style="dotted"];
		"torch.jit" -> "torch.jit._recursive" [style="dotted"];
		"torch.jit" -> "torch.jit._builtins" [style="dotted"];
		"torch.jit" -> "torch.jit._check" [style="dotted"];
		"torch.jit" -> "torch.jit.frontend" [style="dotted"];
		"torch.jit" -> "torch.jit.annotations" [style="dotted"];
		"torch.jit" -> "torch.jit._dataclass_impls" [style="dotted"];
		"torch.jit" -> "torch.jit._monkeytype_config" [style="dotted"];
		"torch.jit" -> "torch.jit._logging" [style="dotted"];
		"torch.jit" -> "torch.jit.quantized" [style="dotted"];
		"torch.jit" -> "torch.jit._decompositions" [style="dotted"];
		"torch.jit" -> "torch.jit._pickle" [style="dotted"];
		"torch.jit" -> "torch.jit._shape_functions" [style="dotted"];
		"torch.jit" -> "torch.jit.generate_bytecode" [style="dotted"];
		"torch.jit" -> "torch.jit.supported_ops" [style="dotted"];
		"torch.jit" -> "torch.jit.unsupported_tensor_ops" [style="dotted"];
		"torch.jit" -> "torch.jit.mobile" [style="dotted"];
		"torch.jit" -> "torch.jit._passes" [style="dotted"];
	}
	subgraph "cluster_kivy.deps" {
		label="kivy.deps";
	}
	subgraph "cluster_networkx.readwrite" {
		label="networkx.readwrite";
		"networkx.readwrite" -> "networkx.readwrite.adjlist" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.multiline_adjlist" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.edgelist" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.pajek" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.leda" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.sparse6" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.graph6" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.gml" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.graphml" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.gexf" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.json_graph" [style="dotted"];
		"networkx.readwrite" -> "networkx.readwrite.text" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.link_analysis" {
		label="networkx.algorithms.link_analysis";
		"networkx.algorithms.link_analysis" -> "networkx.algorithms.link_analysis.hits_alg" [style="dotted"];
		"networkx.algorithms.link_analysis" -> "networkx.algorithms.link_analysis.pagerank_alg" [style="dotted"];
	}
	subgraph "cluster_transformers.models.whisper" {
		label="transformers.models.whisper";
		"transformers.models.whisper" -> "transformers.models.whisper.configuration_whisper" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.feature_extraction_whisper" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.processing_whisper" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.tokenization_whisper" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.tokenization_whisper_fast" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.modeling_whisper" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.modeling_tf_whisper" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.modeling_flax_whisper" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.generation_whisper" [style="dotted"];
		"transformers.models.whisper" -> "transformers.models.whisper.english_normalizer" [style="dotted"];
	}
	subgraph "cluster_sympy.polys.domains" {
		label="sympy.polys.domains";
		"sympy.polys.domains" -> "sympy.polys.domains.domain" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.finitefield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.integerring" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.rationalfield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.algebraicfield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.gaussiandomains" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.realfield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.complexfield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.polynomialring" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.fractionfield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.expressiondomain" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.expressionrawdomain" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.pythonrational" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.pythonfinitefield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.gmpyfinitefield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.pythonintegerring" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.gmpyintegerring" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.pythonrationalfield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.gmpyrationalfield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.modularinteger" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.domainelement" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.groundtypes" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.characteristiczero" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.field" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.simpledomain" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.ring" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.quotientring" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.old_polynomialring" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.compositedomain" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.old_fractionfield" [style="dotted"];
		"sympy.polys.domains" -> "sympy.polys.domains.mpelements" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.s5_html" {
		label="docutils.writers.s5_html";
	}
	subgraph "cluster_setuptools._vendor.importlib_resources.compat" {
		label="setuptools._vendor.importlib_resources.compat";
		"setuptools._vendor.importlib_resources.compat" -> "setuptools._vendor.importlib_resources.compat.py38" [style="dotted"];
		"setuptools._vendor.importlib_resources.compat" -> "setuptools._vendor.importlib_resources.compat.py39" [style="dotted"];
	}
	subgraph "cluster_torch.profiler" {
		label="torch.profiler";
		"torch.profiler" -> "torch.profiler._utils" [style="dotted"];
		"torch.profiler" -> "torch.profiler.profiler" [style="dotted"];
		"torch.profiler" -> "torch.profiler.itt" [style="dotted"];
		"torch.profiler" -> "torch.profiler._memory_profiler" [style="dotted"];
		"torch.profiler" -> "torch.profiler._pattern_matcher" [style="dotted"];
		"torch.profiler" -> "torch.profiler.python_tracer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gpt_bigcode" {
		label="transformers.models.gpt_bigcode";
		"transformers.models.gpt_bigcode" -> "transformers.models.gpt_bigcode.configuration_gpt_bigcode" [style="dotted"];
		"transformers.models.gpt_bigcode" -> "transformers.models.gpt_bigcode.modeling_gpt_bigcode" [style="dotted"];
	}
	subgraph "cluster_torch.nested" {
		label="torch.nested";
		"torch.nested" -> "torch.nested._internal" [style="dotted"];
	}
	subgraph "cluster_torch.quantization" {
		label="torch.quantization";
		"torch.quantization" -> "torch.quantization.fake_quantize" [style="dotted"];
		"torch.quantization" -> "torch.quantization.fuse_modules" [style="dotted"];
		"torch.quantization" -> "torch.quantization.fuser_method_mappings" [style="dotted"];
		"torch.quantization" -> "torch.quantization.observer" [style="dotted"];
		"torch.quantization" -> "torch.quantization.qconfig" [style="dotted"];
		"torch.quantization" -> "torch.quantization.quant_type" [style="dotted"];
		"torch.quantization" -> "torch.quantization.quantization_mappings" [style="dotted"];
		"torch.quantization" -> "torch.quantization.quantize" [style="dotted"];
		"torch.quantization" -> "torch.quantization.quantize_jit" [style="dotted"];
		"torch.quantization" -> "torch.quantization.stubs" [style="dotted"];
		"torch.quantization" -> "torch.quantization._numeric_suite" [style="dotted"];
		"torch.quantization" -> "torch.quantization._numeric_suite_fx" [style="dotted"];
		"torch.quantization" -> "torch.quantization._quantized_conversions" [style="dotted"];
		"torch.quantization" -> "torch.quantization.quantize_fx" [style="dotted"];
		"torch.quantization" -> "torch.quantization.utils" [style="dotted"];
		"torch.quantization" -> "torch.quantization.fx" [style="dotted"];
	}
	subgraph "cluster_tokenizers.pre_tokenizers" {
		label="tokenizers.pre_tokenizers";
	}
	subgraph "cluster_sympy.physics.units" {
		label="sympy.physics.units";
		"sympy.physics.units" -> "sympy.physics.units.dimensions" [style="dotted"];
		"sympy.physics.units" -> "sympy.physics.units.unitsystem" [style="dotted"];
		"sympy.physics.units" -> "sympy.physics.units.util" [style="dotted"];
		"sympy.physics.units" -> "sympy.physics.units.quantities" [style="dotted"];
		"sympy.physics.units" -> "sympy.physics.units.prefixes" [style="dotted"];
		"sympy.physics.units" -> "sympy.physics.units.definitions" [style="dotted"];
		"sympy.physics.units" -> "sympy.physics.units.systems" [style="dotted"];
	}
	subgraph "cluster_sympy.geometry" {
		label="sympy.geometry";
		"sympy.geometry" -> "sympy.geometry.point" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.line" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.plane" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.ellipse" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.polygon" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.util" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.exceptions" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.curve" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.parabola" [style="dotted"];
		"sympy.geometry" -> "sympy.geometry.entity" [style="dotted"];
	}
	subgraph "cluster_torch.fft" {
		label="torch.fft";
	}
	subgraph "cluster_docutils" {
		label="docutils";
		"docutils" -> "docutils.io" [style="dotted"];
		"docutils" -> "docutils.languages" [style="dotted"];
		"docutils" -> "docutils.nodes" [style="dotted"];
		"docutils" -> "docutils.frontend" [style="dotted"];
		"docutils" -> "docutils.utils" [style="dotted"];
		"docutils" -> "docutils.writers" [style="dotted"];
		"docutils" -> "docutils.transforms" [style="dotted"];
		"docutils" -> "docutils.statemachine" [style="dotted"];
		"docutils" -> "docutils.readers" [style="dotted"];
		"docutils" -> "docutils.parsers" [style="dotted"];
	}
	subgraph "cluster_future.moves" {
		label="future.moves";
		"future.moves" -> "future.moves.dbm" [style="dotted"];
		"future.moves" -> "future.moves.test" [style="dotted"];
	}
	subgraph "cluster_sympy.core" {
		label="sympy.core";
		"sympy.core" -> "sympy.core.sympify" [style="dotted"];
		"sympy.core" -> "sympy.core.cache" [style="dotted"];
		"sympy.core" -> "sympy.core.assumptions" [style="dotted"];
		"sympy.core" -> "sympy.core.basic" [style="dotted"];
		"sympy.core" -> "sympy.core.singleton" [style="dotted"];
		"sympy.core" -> "sympy.core.expr" [style="dotted"];
		"sympy.core" -> "sympy.core.symbol" [style="dotted"];
		"sympy.core" -> "sympy.core.numbers" [style="dotted"];
		"sympy.core" -> "sympy.core.power" [style="dotted"];
		"sympy.core" -> "sympy.core.intfunc" [style="dotted"];
		"sympy.core" -> "sympy.core.mul" [style="dotted"];
		"sympy.core" -> "sympy.core.add" [style="dotted"];
		"sympy.core" -> "sympy.core.mod" [style="dotted"];
		"sympy.core" -> "sympy.core.relational" [style="dotted"];
		"sympy.core" -> "sympy.core.multidimensional" [style="dotted"];
		"sympy.core" -> "sympy.core.function" [style="dotted"];
		"sympy.core" -> "sympy.core.evalf" [style="dotted"];
		"sympy.core" -> "sympy.core.containers" [style="dotted"];
		"sympy.core" -> "sympy.core.exprtools" [style="dotted"];
		"sympy.core" -> "sympy.core.parameters" [style="dotted"];
		"sympy.core" -> "sympy.core.kind" [style="dotted"];
		"sympy.core" -> "sympy.core.traversal" [style="dotted"];
		"sympy.core" -> "sympy.core.sorting" [style="dotted"];
		"sympy.core" -> "sympy.core.decorators" [style="dotted"];
		"sympy.core" -> "sympy.core.operations" [style="dotted"];
		"sympy.core" -> "sympy.core.logic" [style="dotted"];
		"sympy.core" -> "sympy.core.facts" [style="dotted"];
		"sympy.core" -> "sympy.core.random" [style="dotted"];
		"sympy.core" -> "sympy.core.assumptions_generated" [style="dotted"];
		"sympy.core" -> "sympy.core._print_helpers" [style="dotted"];
		"sympy.core" -> "sympy.core.alphabets" [style="dotted"];
		"sympy.core" -> "sympy.core.rules" [style="dotted"];
		"sympy.core" -> "sympy.core.coreerrors" [style="dotted"];
		"sympy.core" -> "sympy.core.core" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.codegen" {
		label="torch.testing._internal.codegen";
	}
	subgraph "cluster_transformers.models.plbart" {
		label="transformers.models.plbart";
		"transformers.models.plbart" -> "transformers.models.plbart.configuration_plbart" [style="dotted"];
		"transformers.models.plbart" -> "transformers.models.plbart.tokenization_plbart" [style="dotted"];
		"transformers.models.plbart" -> "transformers.models.plbart.modeling_plbart" [style="dotted"];
	}
	subgraph "cluster_past" {
		label="past";
		"past" -> "past.utils" [style="dotted"];
		"past" -> "past.builtins" [style="dotted"];
		"past" -> "past.types" [style="dotted"];
	}
	subgraph "cluster_transformers.models.cohere" {
		label="transformers.models.cohere";
		"transformers.models.cohere" -> "transformers.models.cohere.configuration_cohere" [style="dotted"];
		"transformers.models.cohere" -> "transformers.models.cohere.tokenization_cohere_fast" [style="dotted"];
		"transformers.models.cohere" -> "transformers.models.cohere.modeling_cohere" [style="dotted"];
	}
	subgraph "cluster_transformers.models.led" {
		label="transformers.models.led";
		"transformers.models.led" -> "transformers.models.led.configuration_led" [style="dotted"];
		"transformers.models.led" -> "transformers.models.led.tokenization_led" [style="dotted"];
		"transformers.models.led" -> "transformers.models.led.tokenization_led_fast" [style="dotted"];
		"transformers.models.led" -> "transformers.models.led.modeling_led" [style="dotted"];
		"transformers.models.led" -> "transformers.models.led.modeling_tf_led" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.utils" {
		label="torch.distributed.elastic.utils";
		"torch.distributed.elastic.utils" -> "torch.distributed.elastic.utils.api" [style="dotted"];
		"torch.distributed.elastic.utils" -> "torch.distributed.elastic.utils.distributed" [style="dotted"];
		"torch.distributed.elastic.utils" -> "torch.distributed.elastic.utils.log_level" [style="dotted"];
		"torch.distributed.elastic.utils" -> "torch.distributed.elastic.utils.logging" [style="dotted"];
		"torch.distributed.elastic.utils" -> "torch.distributed.elastic.utils.store" [style="dotted"];
		"torch.distributed.elastic.utils" -> "torch.distributed.elastic.utils.data" [style="dotted"];
	}
	subgraph "cluster_kivy.lib.gstplayer" {
		label="kivy.lib.gstplayer";
		"kivy.lib.gstplayer" -> "kivy.lib.gstplayer._gstplayer" [style="dotted"];
	}
	subgraph "cluster_torch.cpu.amp" {
		label="torch.cpu.amp";
		"torch.cpu.amp" -> "torch.cpu.amp.autocast_mode" [style="dotted"];
		"torch.cpu.amp" -> "torch.cpu.amp.grad_scaler" [style="dotted"];
	}
	subgraph "cluster_transformers.models.fnet" {
		label="transformers.models.fnet";
		"transformers.models.fnet" -> "transformers.models.fnet.configuration_fnet" [style="dotted"];
		"transformers.models.fnet" -> "transformers.models.fnet.tokenization_fnet" [style="dotted"];
		"transformers.models.fnet" -> "transformers.models.fnet.tokenization_fnet_fast" [style="dotted"];
		"transformers.models.fnet" -> "transformers.models.fnet.modeling_fnet" [style="dotted"];
	}
	subgraph "cluster_future.standard_library" {
		label="future.standard_library";
	}
	subgraph "cluster_transformers.models.nougat" {
		label="transformers.models.nougat";
		"transformers.models.nougat" -> "transformers.models.nougat.processing_nougat" [style="dotted"];
		"transformers.models.nougat" -> "transformers.models.nougat.tokenization_nougat_fast" [style="dotted"];
		"transformers.models.nougat" -> "transformers.models.nougat.image_processing_nougat" [style="dotted"];
	}
	subgraph "cluster_torch.utils.data.datapipes" {
		label="torch.utils.data.datapipes";
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.dataframe" [style="dotted"];
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.iter" [style="dotted"];
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.map" [style="dotted"];
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes._decorator" [style="dotted"];
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.datapipe" [style="dotted"];
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes._hook_iterator" [style="dotted"];
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes._typing" [style="dotted"];
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.utils" [style="dotted"];
		"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.gen_pyi" [style="dotted"];
	}
	subgraph "cluster_sympy.logic.algorithms" {
		label="sympy.logic.algorithms";
		"sympy.logic.algorithms" -> "sympy.logic.algorithms.lra_theory" [style="dotted"];
		"sympy.logic.algorithms" -> "sympy.logic.algorithms.dpll" [style="dotted"];
		"sympy.logic.algorithms" -> "sympy.logic.algorithms.dpll2" [style="dotted"];
		"sympy.logic.algorithms" -> "sympy.logic.algorithms.pycosat_wrapper" [style="dotted"];
		"sympy.logic.algorithms" -> "sympy.logic.algorithms.minisat22_wrapper" [style="dotted"];
		"sympy.logic.algorithms" -> "sympy.logic.algorithms.z3_wrapper" [style="dotted"];
	}
	subgraph "cluster_transformers.quantizers" {
		label="transformers.quantizers";
		"transformers.quantizers" -> "transformers.quantizers.auto" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.base" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizers_utils" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_aqlm" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_awq" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_bitnet" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_bnb_4bit" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_bnb_8bit" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_compressed_tensors" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_eetq" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_fbgemm_fp8" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_gptq" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_hqq" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_quanto" [style="dotted"];
		"transformers.quantizers" -> "transformers.quantizers.quantizer_torchao" [style="dotted"];
	}
	subgraph "cluster_certifi" {
		label="certifi";
		"certifi" -> "certifi.core" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.nn.api" {
		label="torch.distributed.nn.api";
		"torch.distributed.nn.api" -> "torch.distributed.nn.api.remote_module" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deit" {
		label="transformers.models.deit";
		"transformers.models.deit" -> "transformers.models.deit.configuration_deit" [style="dotted"];
		"transformers.models.deit" -> "transformers.models.deit.feature_extraction_deit" [style="dotted"];
		"transformers.models.deit" -> "transformers.models.deit.image_processing_deit" [style="dotted"];
		"transformers.models.deit" -> "transformers.models.deit.modeling_deit" [style="dotted"];
		"transformers.models.deit" -> "transformers.models.deit.modeling_tf_deit" [style="dotted"];
	}
	subgraph "cluster_torch.fx.experimental" {
		label="torch.fx.experimental";
		"torch.fx.experimental" -> "torch.fx.experimental._config" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.const_fold" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.symbolic_shapes" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.proxy_tensor" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.validator" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.sym_node" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.optimization" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental._backward_state" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.recording" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.accelerator_partitioner" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.debug" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.graph_gradual_typechecker" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.merge_matmul" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.meta_tracer" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.normalize" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.partitioner_utils" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.refinement_types" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.rewriter" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.schema_type_annotation" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.unify_refinements" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.unification" [style="dotted"];
		"torch.fx.experimental" -> "torch.fx.experimental.migrate_gradual_types" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mbart" {
		label="transformers.models.mbart";
		"transformers.models.mbart" -> "transformers.models.mbart.configuration_mbart" [style="dotted"];
		"transformers.models.mbart" -> "transformers.models.mbart.tokenization_mbart" [style="dotted"];
		"transformers.models.mbart" -> "transformers.models.mbart.tokenization_mbart_fast" [style="dotted"];
		"transformers.models.mbart" -> "transformers.models.mbart.modeling_mbart" [style="dotted"];
		"transformers.models.mbart" -> "transformers.models.mbart.modeling_tf_mbart" [style="dotted"];
		"transformers.models.mbart" -> "transformers.models.mbart.modeling_flax_mbart" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.html5_polyglot" {
		label="docutils.writers.html5_polyglot";
	}
	subgraph "cluster_torch.distributed.rpc._testing" {
		label="torch.distributed.rpc._testing";
		"torch.distributed.rpc._testing" -> "torch.distributed.rpc._testing.faulty_agent_backend_registry" [style="dotted"];
	}
	subgraph "cluster_kivy.extras" {
		label="kivy.extras";
		"kivy.extras" -> "kivy.extras.highlight" [style="dotted"];
	}
	subgraph "cluster_tokenizers.processors" {
		label="tokenizers.processors";
	}
	subgraph "cluster_transformers.pipelines" {
		label="transformers.pipelines";
		"transformers.pipelines" -> "transformers.pipelines.audio_classification" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.automatic_speech_recognition" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.base" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.depth_estimation" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.document_question_answering" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.feature_extraction" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.fill_mask" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.image_classification" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.image_feature_extraction" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.image_segmentation" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.image_to_image" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.image_to_text" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.mask_generation" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.object_detection" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.question_answering" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.table_question_answering" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.text2text_generation" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.text_classification" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.text_generation" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.text_to_audio" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.token_classification" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.video_classification" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.visual_question_answering" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.zero_shot_audio_classification" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.zero_shot_classification" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.zero_shot_image_classification" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.zero_shot_object_detection" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.pt_utils" [style="dotted"];
		"transformers.pipelines" -> "transformers.pipelines.audio_utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.umt5" {
		label="transformers.models.umt5";
		"transformers.models.umt5" -> "transformers.models.umt5.configuration_umt5" [style="dotted"];
		"transformers.models.umt5" -> "transformers.models.umt5.modeling_umt5" [style="dotted"];
	}
	subgraph "cluster_transformers.models.persimmon" {
		label="transformers.models.persimmon";
		"transformers.models.persimmon" -> "transformers.models.persimmon.configuration_persimmon" [style="dotted"];
		"transformers.models.persimmon" -> "transformers.models.persimmon.modeling_persimmon" [style="dotted"];
	}
	subgraph "cluster_transformers.models.esm" {
		label="transformers.models.esm";
		"transformers.models.esm" -> "transformers.models.esm.configuration_esm" [style="dotted"];
		"transformers.models.esm" -> "transformers.models.esm.tokenization_esm" [style="dotted"];
		"transformers.models.esm" -> "transformers.models.esm.modeling_esm" [style="dotted"];
		"transformers.models.esm" -> "transformers.models.esm.modeling_esmfold" [style="dotted"];
		"transformers.models.esm" -> "transformers.models.esm.modeling_tf_esm" [style="dotted"];
		"transformers.models.esm" -> "transformers.models.esm.openfold_utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.mega" {
		label="transformers.models.deprecated.mega";
		"transformers.models.deprecated.mega" -> "transformers.models.deprecated.mega.configuration_mega" [style="dotted"];
		"transformers.models.deprecated.mega" -> "transformers.models.deprecated.mega.modeling_mega" [style="dotted"];
	}
	subgraph "cluster_torch.ao.quantization.pt2e.representation" {
		label="torch.ao.quantization.pt2e.representation";
		"torch.ao.quantization.pt2e.representation" -> "torch.ao.quantization.pt2e.representation.rewrite" [style="dotted"];
	}
	subgraph "cluster_distutils.command" {
		label="distutils.command";
		"distutils.command" -> "distutils.command.build_ext" [style="dotted"];
		"distutils.command" -> "distutils.command.sdist" [style="dotted"];
		"distutils.command" -> "distutils.command.build" [style="dotted"];
		"distutils.command" -> "distutils.command.bdist" [style="dotted"];
	}
	subgraph "cluster_torch.backends.cuda" {
		label="torch.backends.cuda";
	}
	subgraph "cluster_torch.utils.data.datapipes.utils" {
		label="torch.utils.data.datapipes.utils";
		"torch.utils.data.datapipes.utils" -> "torch.utils.data.datapipes.utils.common" [style="dotted"];
		"torch.utils.data.datapipes.utils" -> "torch.utils.data.datapipes.utils.decoder" [style="dotted"];
		"torch.utils.data.datapipes.utils" -> "torch.utils.data.datapipes.utils.snapshot" [style="dotted"];
	}
	subgraph "cluster_transformers.models.squeezebert" {
		label="transformers.models.squeezebert";
		"transformers.models.squeezebert" -> "transformers.models.squeezebert.configuration_squeezebert" [style="dotted"];
		"transformers.models.squeezebert" -> "transformers.models.squeezebert.tokenization_squeezebert" [style="dotted"];
		"transformers.models.squeezebert" -> "transformers.models.squeezebert.tokenization_squeezebert_fast" [style="dotted"];
		"transformers.models.squeezebert" -> "transformers.models.squeezebert.modeling_squeezebert" [style="dotted"];
	}
	subgraph "cluster_transformers.models.timesformer" {
		label="transformers.models.timesformer";
		"transformers.models.timesformer" -> "transformers.models.timesformer.configuration_timesformer" [style="dotted"];
		"transformers.models.timesformer" -> "transformers.models.timesformer.modeling_timesformer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bart" {
		label="transformers.models.bart";
		"transformers.models.bart" -> "transformers.models.bart.configuration_bart" [style="dotted"];
		"transformers.models.bart" -> "transformers.models.bart.tokenization_bart" [style="dotted"];
		"transformers.models.bart" -> "transformers.models.bart.tokenization_bart_fast" [style="dotted"];
		"transformers.models.bart" -> "transformers.models.bart.modeling_bart" [style="dotted"];
		"transformers.models.bart" -> "transformers.models.bart.modeling_tf_bart" [style="dotted"];
		"transformers.models.bart" -> "transformers.models.bart.modeling_flax_bart" [style="dotted"];
	}
	subgraph "cluster_test.support" {
		label="test.support";
		"test.support" -> "test.support.testresult" [style="dotted"];
		"test.support" -> "test.support.os_helper" [style="dotted"];
		"test.support" -> "test.support.import_helper" [style="dotted"];
		"test.support" -> "test.support.script_helper" [style="dotted"];
		"test.support" -> "test.support.socket_helper" [style="dotted"];
		"test.support" -> "test.support.warnings_helper" [style="dotted"];
	}
	subgraph "cluster_transformers.models.megatron_bert" {
		label="transformers.models.megatron_bert";
		"transformers.models.megatron_bert" -> "transformers.models.megatron_bert.configuration_megatron_bert" [style="dotted"];
		"transformers.models.megatron_bert" -> "transformers.models.megatron_bert.modeling_megatron_bert" [style="dotted"];
	}
	subgraph "cluster_kivy.lang" {
		label="kivy.lang";
		"kivy.lang" -> "kivy.lang.builder" [style="dotted"];
		"kivy.lang" -> "kivy.lang.parser" [style="dotted"];
	}
	subgraph "cluster_docutils.parsers.rst.languages" {
		label="docutils.parsers.rst.languages";
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.en" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.af" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ar" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ca" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.cs" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.da" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.de" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.eo" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.es" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.fa" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.fi" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.fr" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.gl" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.he" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.it" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ja" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ka" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ko" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.lt" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.lv" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.nl" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.pl" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.pt_br" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ru" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.sk" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.sv" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.uk" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.zh_cn" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.zh_tw" [style="dotted"];
	}
	subgraph "cluster_future.types" {
		label="future.types";
		"future.types" -> "future.types.newbytes" [style="dotted"];
		"future.types" -> "future.types.newint" [style="dotted"];
		"future.types" -> "future.types.newstr" [style="dotted"];
		"future.types" -> "future.types.newdict" [style="dotted"];
		"future.types" -> "future.types.newlist" [style="dotted"];
		"future.types" -> "future.types.newrange" [style="dotted"];
		"future.types" -> "future.types.newobject" [style="dotted"];
	}
	subgraph "cluster_setuptools.compat" {
		label="setuptools.compat";
		"setuptools.compat" -> "setuptools.compat.py39" [style="dotted"];
		"setuptools.compat" -> "setuptools.compat.py310" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub" {
		label="huggingface_hub";
		"huggingface_hub" -> "huggingface_hub.constants" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._commit_scheduler" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._inference_endpoints" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._login" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._multi_commits" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._snapshot_download" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._space_api" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._tensorboard_logger" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._webhooks_payload" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._webhooks_server" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.community" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.fastai_utils" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.file_download" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.hf_api" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.hf_file_system" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.hub_mixin" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.inference_api" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.keras_mixin" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.repocard" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.repocard_data" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.repository" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.serialization" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.utils" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.errors" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.commands" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._local_folder" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.inference" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.lfs" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._commit_api" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._upload_large_folder" [style="dotted"];
	}
	subgraph "cluster_transformers.models.clap" {
		label="transformers.models.clap";
		"transformers.models.clap" -> "transformers.models.clap.configuration_clap" [style="dotted"];
		"transformers.models.clap" -> "transformers.models.clap.processing_clap" [style="dotted"];
		"transformers.models.clap" -> "transformers.models.clap.feature_extraction_clap" [style="dotted"];
		"transformers.models.clap" -> "transformers.models.clap.modeling_clap" [style="dotted"];
	}
	subgraph "cluster_concurrent.futures" {
		label="concurrent.futures";
		"concurrent.futures" -> "concurrent.futures._base" [style="dotted"];
		"concurrent.futures" -> "concurrent.futures.process" [style="dotted"];
		"concurrent.futures" -> "concurrent.futures.thread" [style="dotted"];
	}
	subgraph "cluster_sympy.ntheory" {
		label="sympy.ntheory";
		"sympy.ntheory" -> "sympy.ntheory.generate" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.primetest" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.factor_" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.partitions_" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.residue_ntheory" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.multinomial" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.continued_fraction" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.digits" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.egyptian_fraction" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.ecm" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.qs" [style="dotted"];
		"sympy.ntheory" -> "sympy.ntheory.modular" [style="dotted"];
	}
	subgraph "cluster_transformers.models.altclip" {
		label="transformers.models.altclip";
		"transformers.models.altclip" -> "transformers.models.altclip.configuration_altclip" [style="dotted"];
		"transformers.models.altclip" -> "transformers.models.altclip.modeling_altclip" [style="dotted"];
		"transformers.models.altclip" -> "transformers.models.altclip.processing_altclip" [style="dotted"];
	}
	subgraph "cluster_h11" {
		label="h11";
		"h11" -> "h11._connection" [style="dotted"];
		"h11" -> "h11._events" [style="dotted"];
		"h11" -> "h11._state" [style="dotted"];
		"h11" -> "h11._util" [style="dotted"];
		"h11" -> "h11._version" [style="dotted"];
		"h11" -> "h11._abnf" [style="dotted"];
		"h11" -> "h11._headers" [style="dotted"];
		"h11" -> "h11._readers" [style="dotted"];
		"h11" -> "h11._receivebuffer" [style="dotted"];
		"h11" -> "h11._writers" [style="dotted"];
	}
	subgraph "cluster_transformers.models.phi" {
		label="transformers.models.phi";
		"transformers.models.phi" -> "transformers.models.phi.configuration_phi" [style="dotted"];
		"transformers.models.phi" -> "transformers.models.phi.modeling_phi" [style="dotted"];
	}
	subgraph "cluster_transformers.models.openai" {
		label="transformers.models.openai";
		"transformers.models.openai" -> "transformers.models.openai.configuration_openai" [style="dotted"];
		"transformers.models.openai" -> "transformers.models.openai.tokenization_openai" [style="dotted"];
		"transformers.models.openai" -> "transformers.models.openai.tokenization_openai_fast" [style="dotted"];
		"transformers.models.openai" -> "transformers.models.openai.modeling_openai" [style="dotted"];
		"transformers.models.openai" -> "transformers.models.openai.modeling_tf_openai" [style="dotted"];
	}
	subgraph "cluster_transformers.models.maskformer" {
		label="transformers.models.maskformer";
		"transformers.models.maskformer" -> "transformers.models.maskformer.configuration_maskformer" [style="dotted"];
		"transformers.models.maskformer" -> "transformers.models.maskformer.configuration_maskformer_swin" [style="dotted"];
		"transformers.models.maskformer" -> "transformers.models.maskformer.feature_extraction_maskformer" [style="dotted"];
		"transformers.models.maskformer" -> "transformers.models.maskformer.image_processing_maskformer" [style="dotted"];
		"transformers.models.maskformer" -> "transformers.models.maskformer.modeling_maskformer" [style="dotted"];
		"transformers.models.maskformer" -> "transformers.models.maskformer.modeling_maskformer_swin" [style="dotted"];
	}
	subgraph "cluster_torch.backends._nnapi" {
		label="torch.backends._nnapi";
		"torch.backends._nnapi" -> "torch.backends._nnapi.prepare" [style="dotted"];
		"torch.backends._nnapi" -> "torch.backends._nnapi.serializer" [style="dotted"];
	}
	subgraph "cluster_sympy.plotting.pygletplot" {
		label="sympy.plotting.pygletplot";
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_modes" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_axes" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_mode" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_object" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_window" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.util" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.managed_window" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_camera" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_controller" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_rotation" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_interval" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_curve" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_surface" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.plot_mode_base" [style="dotted"];
		"sympy.plotting.pygletplot" -> "sympy.plotting.pygletplot.color_scheme" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vitmatte" {
		label="transformers.models.vitmatte";
		"transformers.models.vitmatte" -> "transformers.models.vitmatte.configuration_vitmatte" [style="dotted"];
		"transformers.models.vitmatte" -> "transformers.models.vitmatte.image_processing_vitmatte" [style="dotted"];
		"transformers.models.vitmatte" -> "transformers.models.vitmatte.modeling_vitmatte" [style="dotted"];
	}
	subgraph "cluster_transformers.models.rwkv" {
		label="transformers.models.rwkv";
		"transformers.models.rwkv" -> "transformers.models.rwkv.configuration_rwkv" [style="dotted"];
		"transformers.models.rwkv" -> "transformers.models.rwkv.modeling_rwkv" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning.sparsifier" {
		label="torch.ao.pruning.sparsifier";
		"torch.ao.pruning.sparsifier" -> "torch.ao.pruning.sparsifier.base_sparsifier" [style="dotted"];
		"torch.ao.pruning.sparsifier" -> "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier" [style="dotted"];
		"torch.ao.pruning.sparsifier" -> "torch.ao.pruning.sparsifier.utils" [style="dotted"];
		"torch.ao.pruning.sparsifier" -> "torch.ao.pruning.sparsifier.weight_norm_sparsifier" [style="dotted"];
	}
	subgraph "cluster_torch.backends.cusparselt" {
		label="torch.backends.cusparselt";
	}
	subgraph "cluster_torch.distributed.tensor.experimental" {
		label="torch.distributed.tensor.experimental";
		"torch.distributed.tensor.experimental" -> "torch.distributed.tensor.experimental._func_map" [style="dotted"];
		"torch.distributed.tensor.experimental" -> "torch.distributed.tensor.experimental._register_sharding" [style="dotted"];
		"torch.distributed.tensor.experimental" -> "torch.distributed.tensor.experimental._attention" [style="dotted"];
		"torch.distributed.tensor.experimental" -> "torch.distributed.tensor.experimental._tp_transform" [style="dotted"];
	}
	subgraph "cluster_kivy" {
		label="kivy";
		"kivy" -> "kivy.logger" [style="dotted"];
		"kivy" -> "kivy.utils" [style="dotted"];
		"kivy" -> "kivy._version" [style="dotted"];
		"kivy" -> "kivy.deps" [style="dotted"];
		"kivy" -> "kivy.config" [style="dotted"];
		"kivy" -> "kivy.modules" [style="dotted"];
		"kivy" -> "kivy.multistroke" [style="dotted"];
		"kivy" -> "kivy.cache" [style="dotted"];
		"kivy" -> "kivy.core" [style="dotted"];
		"kivy" -> "kivy.gesture" [style="dotted"];
		"kivy" -> "kivy.clock" [style="dotted"];
		"kivy" -> "kivy.loader" [style="dotted"];
		"kivy" -> "kivy.animation" [style="dotted"];
		"kivy" -> "kivy.factory" [style="dotted"];
		"kivy" -> "kivy.vector" [style="dotted"];
		"kivy" -> "kivy.graphics" [style="dotted"];
		"kivy" -> "kivy.weakmethod" [style="dotted"];
		"kivy" -> "kivy.properties" [style="dotted"];
		"kivy" -> "kivy.event" [style="dotted"];
		"kivy" -> "kivy.base" [style="dotted"];
		"kivy" -> "kivy.app" [style="dotted"];
		"kivy" -> "kivy.context" [style="dotted"];
		"kivy" -> "kivy.setupconfig" [style="dotted"];
		"kivy" -> "kivy.metrics" [style="dotted"];
		"kivy" -> "kivy.resources" [style="dotted"];
		"kivy" -> "kivy.uix" [style="dotted"];
		"kivy" -> "kivy.atlas" [style="dotted"];
		"kivy" -> "kivy.compat" [style="dotted"];
		"kivy" -> "kivy.effects" [style="dotted"];
		"kivy" -> "kivy.lang" [style="dotted"];
		"kivy" -> "kivy.input" [style="dotted"];
		"kivy" -> "kivy.lib" [style="dotted"];
		"kivy" -> "kivy._event" [style="dotted"];
		"kivy" -> "kivy.eventmanager" [style="dotted"];
		"kivy" -> "kivy.support" [style="dotted"];
		"kivy" -> "kivy.factory_registers" [style="dotted"];
		"kivy" -> "kivy.extras" [style="dotted"];
		"kivy" -> "kivy.parser" [style="dotted"];
		"kivy" -> "kivy.weakproxy" [style="dotted"];
		"kivy" -> "kivy._metrics" [style="dotted"];
		"kivy" -> "kivy._clock" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.jaraco.functools" {
		label="setuptools._vendor.jaraco.functools";
	}
	subgraph "cluster_numpy.testing" {
		label="numpy.testing";
		"numpy.testing" -> "numpy.testing._private" [style="dotted"];
		"numpy.testing" -> "numpy.testing.overrides" [style="dotted"];
	}
	subgraph "cluster_networkx.classes" {
		label="networkx.classes";
		"networkx.classes" -> "networkx.classes.graph" [style="dotted"];
		"networkx.classes" -> "networkx.classes.digraph" [style="dotted"];
		"networkx.classes" -> "networkx.classes.multigraph" [style="dotted"];
		"networkx.classes" -> "networkx.classes.multidigraph" [style="dotted"];
		"networkx.classes" -> "networkx.classes.function" [style="dotted"];
		"networkx.classes" -> "networkx.classes.graphviews" [style="dotted"];
		"networkx.classes" -> "networkx.classes.filters" [style="dotted"];
		"networkx.classes" -> "networkx.classes.coreviews" [style="dotted"];
		"networkx.classes" -> "networkx.classes.reportviews" [style="dotted"];
	}
	subgraph "cluster_transformers.models.swin" {
		label="transformers.models.swin";
		"transformers.models.swin" -> "transformers.models.swin.configuration_swin" [style="dotted"];
		"transformers.models.swin" -> "transformers.models.swin.modeling_swin" [style="dotted"];
		"transformers.models.swin" -> "transformers.models.swin.modeling_tf_swin" [style="dotted"];
	}
	subgraph "cluster_transformers.generation" {
		label="transformers.generation";
		"transformers.generation" -> "transformers.generation.configuration_utils" [style="dotted"];
		"transformers.generation" -> "transformers.generation.streamers" [style="dotted"];
		"transformers.generation" -> "transformers.generation.beam_constraints" [style="dotted"];
		"transformers.generation" -> "transformers.generation.beam_search" [style="dotted"];
		"transformers.generation" -> "transformers.generation.candidate_generator" [style="dotted"];
		"transformers.generation" -> "transformers.generation.logits_process" [style="dotted"];
		"transformers.generation" -> "transformers.generation.stopping_criteria" [style="dotted"];
		"transformers.generation" -> "transformers.generation.utils" [style="dotted"];
		"transformers.generation" -> "transformers.generation.watermarking" [style="dotted"];
		"transformers.generation" -> "transformers.generation.tf_logits_process" [style="dotted"];
		"transformers.generation" -> "transformers.generation.tf_utils" [style="dotted"];
		"transformers.generation" -> "transformers.generation.flax_logits_process" [style="dotted"];
		"transformers.generation" -> "transformers.generation.flax_utils" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.distributed.nn" {
		label="torch.testing._internal.distributed.nn";
		"torch.testing._internal.distributed.nn" -> "torch.testing._internal.distributed.nn.api" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.intrinsic.quantized.modules" {
		label="torch.ao.nn.intrinsic.quantized.modules";
		"torch.ao.nn.intrinsic.quantized.modules" -> "torch.ao.nn.intrinsic.quantized.modules.bn_relu" [style="dotted"];
		"torch.ao.nn.intrinsic.quantized.modules" -> "torch.ao.nn.intrinsic.quantized.modules.conv_add" [style="dotted"];
		"torch.ao.nn.intrinsic.quantized.modules" -> "torch.ao.nn.intrinsic.quantized.modules.conv_relu" [style="dotted"];
		"torch.ao.nn.intrinsic.quantized.modules" -> "torch.ao.nn.intrinsic.quantized.modules.linear_relu" [style="dotted"];
	}
	subgraph "cluster_torch.backends.quantized" {
		label="torch.backends.quantized";
	}
	subgraph "cluster_transformers.models.autoformer" {
		label="transformers.models.autoformer";
		"transformers.models.autoformer" -> "transformers.models.autoformer.configuration_autoformer" [style="dotted"];
		"transformers.models.autoformer" -> "transformers.models.autoformer.modeling_autoformer" [style="dotted"];
	}
	subgraph "cluster_torch.nn.intrinsic.modules" {
		label="torch.nn.intrinsic.modules";
		"torch.nn.intrinsic.modules" -> "torch.nn.intrinsic.modules.fused" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.quantizable" {
		label="torch.ao.nn.quantizable";
		"torch.ao.nn.quantizable" -> "torch.ao.nn.quantizable.modules" [style="dotted"];
	}
	subgraph "cluster_pygments" {
		label="pygments";
		"pygments" -> "pygments.lexer" [style="dotted"];
		"pygments" -> "pygments.formatter" [style="dotted"];
		"pygments" -> "pygments.unistring" [style="dotted"];
		"pygments" -> "pygments.formatters" [style="dotted"];
		"pygments" -> "pygments.lexers" [style="dotted"];
		"pygments" -> "pygments.styles" [style="dotted"];
		"pygments" -> "pygments.token" [style="dotted"];
		"pygments" -> "pygments.util" [style="dotted"];
		"pygments" -> "pygments.plugin" [style="dotted"];
		"pygments" -> "pygments.modeline" [style="dotted"];
		"pygments" -> "pygments.style" [style="dotted"];
		"pygments" -> "pygments.scanner" [style="dotted"];
		"pygments" -> "pygments.console" [style="dotted"];
		"pygments" -> "pygments.filter" [style="dotted"];
		"pygments" -> "pygments.filters" [style="dotted"];
		"pygments" -> "pygments.regexopt" [style="dotted"];
	}
	subgraph "cluster_tqdm" {
		label="tqdm";
		"tqdm" -> "tqdm._monitor" [style="dotted"];
		"tqdm" -> "tqdm._tqdm_pandas" [style="dotted"];
		"tqdm" -> "tqdm.cli" [style="dotted"];
		"tqdm" -> "tqdm.gui" [style="dotted"];
		"tqdm" -> "tqdm.std" [style="dotted"];
		"tqdm" -> "tqdm.version" [style="dotted"];
		"tqdm" -> "tqdm.notebook" [style="dotted"];
		"tqdm" -> "tqdm._dist_ver" [style="dotted"];
		"tqdm" -> "tqdm.utils" [style="dotted"];
		"tqdm" -> "tqdm.auto" [style="dotted"];
		"tqdm" -> "tqdm.autonotebook" [style="dotted"];
		"tqdm" -> "tqdm.asyncio" [style="dotted"];
		"tqdm" -> "tqdm.contrib" [style="dotted"];
	}
	subgraph "cluster_transformers.models.unispeech" {
		label="transformers.models.unispeech";
		"transformers.models.unispeech" -> "transformers.models.unispeech.configuration_unispeech" [style="dotted"];
		"transformers.models.unispeech" -> "transformers.models.unispeech.modeling_unispeech" [style="dotted"];
	}
	subgraph "cluster_torch._refs.nn" {
		label="torch._refs.nn";
		"torch._refs.nn" -> "torch._refs.nn.functional" [style="dotted"];
	}
	subgraph "cluster_transformers.models.splinter" {
		label="transformers.models.splinter";
		"transformers.models.splinter" -> "transformers.models.splinter.configuration_splinter" [style="dotted"];
		"transformers.models.splinter" -> "transformers.models.splinter.tokenization_splinter" [style="dotted"];
		"transformers.models.splinter" -> "transformers.models.splinter.tokenization_splinter_fast" [style="dotted"];
		"transformers.models.splinter" -> "transformers.models.splinter.modeling_splinter" [style="dotted"];
	}
	subgraph "cluster_numpy.strings" {
		label="numpy.strings";
	}
	subgraph "cluster_transformers.models.musicgen_melody" {
		label="transformers.models.musicgen_melody";
		"transformers.models.musicgen_melody" -> "transformers.models.musicgen_melody.configuration_musicgen_melody" [style="dotted"];
		"transformers.models.musicgen_melody" -> "transformers.models.musicgen_melody.modeling_musicgen_melody" [style="dotted"];
		"transformers.models.musicgen_melody" -> "transformers.models.musicgen_melody.feature_extraction_musicgen_melody" [style="dotted"];
		"transformers.models.musicgen_melody" -> "transformers.models.musicgen_melody.processing_musicgen_melody" [style="dotted"];
	}
	subgraph "cluster_torchgen.api" {
		label="torchgen.api";
		"torchgen.api" -> "torchgen.api.cpp" [style="dotted"];
		"torchgen.api" -> "torchgen.api.dispatcher" [style="dotted"];
		"torchgen.api" -> "torchgen.api.functionalization" [style="dotted"];
		"torchgen.api" -> "torchgen.api.native" [style="dotted"];
		"torchgen.api" -> "torchgen.api.structured" [style="dotted"];
		"torchgen.api" -> "torchgen.api.translate" [style="dotted"];
		"torchgen.api" -> "torchgen.api.ufunc" [style="dotted"];
		"torchgen.api" -> "torchgen.api.types" [style="dotted"];
	}
	subgraph "cluster_torch._logging" {
		label="torch._logging";
		"torch._logging" -> "torch._logging._registrations" [style="dotted"];
		"torch._logging" -> "torch._logging._internal" [style="dotted"];
		"torch._logging" -> "torch._logging.structured" [style="dotted"];
		"torch._logging" -> "torch._logging.scribe" [style="dotted"];
	}
	subgraph "cluster_markupsafe" {
		label="markupsafe";
		"markupsafe" -> "markupsafe._speedups" [style="dotted"];
		"markupsafe" -> "markupsafe._native" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.nn.jit.templates" {
		label="torch.distributed.nn.jit.templates";
		"torch.distributed.nn.jit.templates" -> "torch.distributed.nn.jit.templates.remote_module_template" [style="dotted"];
	}
	subgraph "cluster_packaging" {
		label="packaging";
		"packaging" -> "packaging._manylinux" [style="dotted"];
		"packaging" -> "packaging._musllinux" [style="dotted"];
		"packaging" -> "packaging.utils" [style="dotted"];
		"packaging" -> "packaging.tags" [style="dotted"];
		"packaging" -> "packaging.version" [style="dotted"];
		"packaging" -> "packaging.markers" [style="dotted"];
		"packaging" -> "packaging.requirements" [style="dotted"];
		"packaging" -> "packaging.specifiers" [style="dotted"];
		"packaging" -> "packaging._elffile" [style="dotted"];
		"packaging" -> "packaging._parser" [style="dotted"];
		"packaging" -> "packaging._structures" [style="dotted"];
		"packaging" -> "packaging._tokenizer" [style="dotted"];
		"packaging" -> "packaging.metadata" [style="dotted"];
	}
	subgraph "cluster_numpy.lib" {
		label="numpy.lib";
		"numpy.lib" -> "numpy.lib.array_utils" [style="dotted"];
		"numpy.lib" -> "numpy.lib.introspect" [style="dotted"];
		"numpy.lib" -> "numpy.lib.mixins" [style="dotted"];
		"numpy.lib" -> "numpy.lib.format" [style="dotted"];
		"numpy.lib" -> "numpy.lib.recfunctions" [style="dotted"];
		"numpy.lib" -> "numpy.lib.npyio" [style="dotted"];
		"numpy.lib" -> "numpy.lib.scimath" [style="dotted"];
		"numpy.lib" -> "numpy.lib.stride_tricks" [style="dotted"];
		"numpy.lib" -> "numpy.lib._type_check_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._index_tricks_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._nanfunctions_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._function_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._stride_tricks_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._shape_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._twodim_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._ufunclike_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._histograms_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._utils_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arraysetops_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._polynomial_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._npyio_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arrayterator_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arraypad_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._version" [style="dotted"];
		"numpy.lib" -> "numpy.lib._iotools" [style="dotted"];
		"numpy.lib" -> "numpy.lib._array_utils_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._datasource" [style="dotted"];
		"numpy.lib" -> "numpy.lib._scimath_impl" [style="dotted"];
	}
	subgraph "cluster_transformers.models.yolos" {
		label="transformers.models.yolos";
		"transformers.models.yolos" -> "transformers.models.yolos.configuration_yolos" [style="dotted"];
		"transformers.models.yolos" -> "transformers.models.yolos.feature_extraction_yolos" [style="dotted"];
		"transformers.models.yolos" -> "transformers.models.yolos.image_processing_yolos" [style="dotted"];
		"transformers.models.yolos" -> "transformers.models.yolos.modeling_yolos" [style="dotted"];
	}
	subgraph "cluster_transformers.models.chameleon" {
		label="transformers.models.chameleon";
		"transformers.models.chameleon" -> "transformers.models.chameleon.configuration_chameleon" [style="dotted"];
		"transformers.models.chameleon" -> "transformers.models.chameleon.processing_chameleon" [style="dotted"];
		"transformers.models.chameleon" -> "transformers.models.chameleon.modeling_chameleon" [style="dotted"];
		"transformers.models.chameleon" -> "transformers.models.chameleon.image_processing_chameleon" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._shard.sharding_plan" {
		label="torch.distributed._shard.sharding_plan";
		"torch.distributed._shard.sharding_plan" -> "torch.distributed._shard.sharding_plan.api" [style="dotted"];
	}
	subgraph "cluster_torch.cuda" {
		label="torch.cuda";
		"torch.cuda" -> "torch.cuda.gds" [style="dotted"];
		"torch.cuda" -> "torch.cuda._utils" [style="dotted"];
		"torch.cuda" -> "torch.cuda.graphs" [style="dotted"];
		"torch.cuda" -> "torch.cuda.streams" [style="dotted"];
		"torch.cuda" -> "torch.cuda.memory" [style="dotted"];
		"torch.cuda" -> "torch.cuda.random" [style="dotted"];
		"torch.cuda" -> "torch.cuda.nccl" [style="dotted"];
		"torch.cuda" -> "torch.cuda.amp" [style="dotted"];
		"torch.cuda" -> "torch.cuda.jiterator" [style="dotted"];
		"torch.cuda" -> "torch.cuda.nvtx" [style="dotted"];
		"torch.cuda" -> "torch.cuda.profiler" [style="dotted"];
		"torch.cuda" -> "torch.cuda.sparse" [style="dotted"];
		"torch.cuda" -> "torch.cuda.tunable" [style="dotted"];
		"torch.cuda" -> "torch.cuda._memory_viz" [style="dotted"];
		"torch.cuda" -> "torch.cuda._sanitizer" [style="dotted"];
		"torch.cuda" -> "torch.cuda._gpu_trace" [style="dotted"];
		"torch.cuda" -> "torch.cuda.comm" [style="dotted"];
		"torch.cuda" -> "torch.cuda.error" [style="dotted"];
	}
	subgraph "cluster_transformers.models.falcon" {
		label="transformers.models.falcon";
		"transformers.models.falcon" -> "transformers.models.falcon.configuration_falcon" [style="dotted"];
		"transformers.models.falcon" -> "transformers.models.falcon.modeling_falcon" [style="dotted"];
	}
	subgraph "cluster_transformers.models.sam" {
		label="transformers.models.sam";
		"transformers.models.sam" -> "transformers.models.sam.configuration_sam" [style="dotted"];
		"transformers.models.sam" -> "transformers.models.sam.processing_sam" [style="dotted"];
		"transformers.models.sam" -> "transformers.models.sam.modeling_sam" [style="dotted"];
		"transformers.models.sam" -> "transformers.models.sam.modeling_tf_sam" [style="dotted"];
		"transformers.models.sam" -> "transformers.models.sam.image_processing_sam" [style="dotted"];
	}
	subgraph "cluster_networkx.linalg" {
		label="networkx.linalg";
		"networkx.linalg" -> "networkx.linalg.attrmatrix" [style="dotted"];
		"networkx.linalg" -> "networkx.linalg.spectrum" [style="dotted"];
		"networkx.linalg" -> "networkx.linalg.graphmatrix" [style="dotted"];
		"networkx.linalg" -> "networkx.linalg.laplacianmatrix" [style="dotted"];
		"networkx.linalg" -> "networkx.linalg.algebraicconnectivity" [style="dotted"];
		"networkx.linalg" -> "networkx.linalg.modularitymatrix" [style="dotted"];
		"networkx.linalg" -> "networkx.linalg.bethehessianmatrix" [style="dotted"];
	}
	subgraph "cluster_gtts" {
		label="gtts";
		"gtts" -> "gtts.version" [style="dotted"];
		"gtts" -> "gtts.tts" [style="dotted"];
		"gtts" -> "gtts.lang" [style="dotted"];
		"gtts" -> "gtts.tokenizer" [style="dotted"];
		"gtts" -> "gtts.utils" [style="dotted"];
		"gtts" -> "gtts.langs" [style="dotted"];
	}
	subgraph "cluster_sympy.functions.special" {
		label="sympy.functions.special";
		"sympy.functions.special" -> "sympy.functions.special.delta_functions" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.singularity_functions" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.bessel" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.elliptic_integrals" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.error_functions" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.gamma_functions" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.hyper" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.tensor_functions" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.beta_functions" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.zeta_functions" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.polynomials" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.bsplines" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.spherical_harmonics" [style="dotted"];
		"sympy.functions.special" -> "sympy.functions.special.mathieu_functions" [style="dotted"];
	}
	subgraph "cluster_torch.fx.passes.infra" {
		label="torch.fx.passes.infra";
		"torch.fx.passes.infra" -> "torch.fx.passes.infra.pass_manager" [style="dotted"];
		"torch.fx.passes.infra" -> "torch.fx.passes.infra.pass_base" [style="dotted"];
		"torch.fx.passes.infra" -> "torch.fx.passes.infra.partitioner" [style="dotted"];
	}
	subgraph "cluster_transformers.models.pvt" {
		label="transformers.models.pvt";
		"transformers.models.pvt" -> "transformers.models.pvt.configuration_pvt" [style="dotted"];
		"transformers.models.pvt" -> "transformers.models.pvt.image_processing_pvt" [style="dotted"];
		"transformers.models.pvt" -> "transformers.models.pvt.modeling_pvt" [style="dotted"];
	}
	subgraph "cluster_transformers.models.fuyu" {
		label="transformers.models.fuyu";
		"transformers.models.fuyu" -> "transformers.models.fuyu.configuration_fuyu" [style="dotted"];
		"transformers.models.fuyu" -> "transformers.models.fuyu.image_processing_fuyu" [style="dotted"];
		"transformers.models.fuyu" -> "transformers.models.fuyu.processing_fuyu" [style="dotted"];
		"transformers.models.fuyu" -> "transformers.models.fuyu.modeling_fuyu" [style="dotted"];
	}
	subgraph "cluster_torch.fx.passes.tests" {
		label="torch.fx.passes.tests";
		"torch.fx.passes.tests" -> "torch.fx.passes.tests.test_pass_manager" [style="dotted"];
	}
	subgraph "cluster_transformers.models.blenderbot" {
		label="transformers.models.blenderbot";
		"transformers.models.blenderbot" -> "transformers.models.blenderbot.configuration_blenderbot" [style="dotted"];
		"transformers.models.blenderbot" -> "transformers.models.blenderbot.tokenization_blenderbot" [style="dotted"];
		"transformers.models.blenderbot" -> "transformers.models.blenderbot.tokenization_blenderbot_fast" [style="dotted"];
		"transformers.models.blenderbot" -> "transformers.models.blenderbot.modeling_blenderbot" [style="dotted"];
		"transformers.models.blenderbot" -> "transformers.models.blenderbot.modeling_tf_blenderbot" [style="dotted"];
		"transformers.models.blenderbot" -> "transformers.models.blenderbot.modeling_flax_blenderbot" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.metrics" {
		label="torch.distributed.elastic.metrics";
		"torch.distributed.elastic.metrics" -> "torch.distributed.elastic.metrics.api" [style="dotted"];
	}
	subgraph "cluster_transformers.models.barthez" {
		label="transformers.models.barthez";
		"transformers.models.barthez" -> "transformers.models.barthez.tokenization_barthez" [style="dotted"];
		"transformers.models.barthez" -> "transformers.models.barthez.tokenization_barthez_fast" [style="dotted"];
	}
	subgraph "cluster_transformers.models.flava" {
		label="transformers.models.flava";
		"transformers.models.flava" -> "transformers.models.flava.configuration_flava" [style="dotted"];
		"transformers.models.flava" -> "transformers.models.flava.feature_extraction_flava" [style="dotted"];
		"transformers.models.flava" -> "transformers.models.flava.image_processing_flava" [style="dotted"];
		"transformers.models.flava" -> "transformers.models.flava.processing_flava" [style="dotted"];
		"transformers.models.flava" -> "transformers.models.flava.modeling_flava" [style="dotted"];
	}
	subgraph "cluster_torch._export.serde" {
		label="torch._export.serde";
		"torch._export.serde" -> "torch._export.serde.schema" [style="dotted"];
		"torch._export.serde" -> "torch._export.serde.serialize" [style="dotted"];
		"torch._export.serde" -> "torch._export.serde.union" [style="dotted"];
		"torch._export.serde" -> "torch._export.serde.aoti_schema" [style="dotted"];
		"torch._export.serde" -> "torch._export.serde.dynamic_shapes" [style="dotted"];
		"torch._export.serde" -> "torch._export.serde.schema_check" [style="dotted"];
	}
	subgraph "cluster_torch.onnx._internal.diagnostics.infra" {
		label="torch.onnx._internal.diagnostics.infra";
		"torch.onnx._internal.diagnostics.infra" -> "torch.onnx._internal.diagnostics.infra.sarif" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra" -> "torch.onnx._internal.diagnostics.infra.formatter" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra" -> "torch.onnx._internal.diagnostics.infra._infra" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra" -> "torch.onnx._internal.diagnostics.infra.utils" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra" -> "torch.onnx._internal.diagnostics.infra.context" [style="dotted"];
		"torch.onnx._internal.diagnostics.infra" -> "torch.onnx._internal.diagnostics.infra.decorator" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.nn" {
		label="torch.distributed.nn";
		"torch.distributed.nn" -> "torch.distributed.nn.functional" [style="dotted"];
		"torch.distributed.nn" -> "torch.distributed.nn.api" [style="dotted"];
		"torch.distributed.nn" -> "torch.distributed.nn.jit" [style="dotted"];
	}
	subgraph "cluster_win32com.server" {
		label="win32com.server";
		"win32com.server" -> "win32com.server.policy" [style="dotted"];
		"win32com.server" -> "win32com.server.util" [style="dotted"];
		"win32com.server" -> "win32com.server.exception" [style="dotted"];
		"win32com.server" -> "win32com.server.dispatcher" [style="dotted"];
	}
	subgraph "cluster_numpy.polynomial" {
		label="numpy.polynomial";
		"numpy.polynomial" -> "numpy.polynomial.polyutils" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.polynomial" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.chebyshev" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.legendre" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.hermite" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.hermite_e" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.laguerre" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial._polybase" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.retribert" {
		label="transformers.models.deprecated.retribert";
		"transformers.models.deprecated.retribert" -> "transformers.models.deprecated.retribert.configuration_retribert" [style="dotted"];
		"transformers.models.deprecated.retribert" -> "transformers.models.deprecated.retribert.tokenization_retribert" [style="dotted"];
		"transformers.models.deprecated.retribert" -> "transformers.models.deprecated.retribert.tokenization_retribert_fast" [style="dotted"];
		"transformers.models.deprecated.retribert" -> "transformers.models.deprecated.retribert.modeling_retribert" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.qdqbert" {
		label="transformers.models.deprecated.qdqbert";
		"transformers.models.deprecated.qdqbert" -> "transformers.models.deprecated.qdqbert.configuration_qdqbert" [style="dotted"];
		"transformers.models.deprecated.qdqbert" -> "transformers.models.deprecated.qdqbert.modeling_qdqbert" [style="dotted"];
	}
	subgraph "cluster_torch.masked.maskedtensor" {
		label="torch.masked.maskedtensor";
		"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.binary" [style="dotted"];
		"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.core" [style="dotted"];
		"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.passthrough" [style="dotted"];
		"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.reductions" [style="dotted"];
		"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.unary" [style="dotted"];
		"torch.masked.maskedtensor" -> "torch.masked.maskedtensor._ops_refs" [style="dotted"];
		"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.creation" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.utils.data" {
		label="torch.distributed.elastic.utils.data";
		"torch.distributed.elastic.utils.data" -> "torch.distributed.elastic.utils.data.cycling_iterator" [style="dotted"];
		"torch.distributed.elastic.utils.data" -> "torch.distributed.elastic.utils.data.elastic_distributed_sampler" [style="dotted"];
	}
	subgraph "cluster_torch.optim._multi_tensor" {
		label="torch.optim._multi_tensor";
	}
	subgraph "cluster_transformers.models.dit" {
		label="transformers.models.dit";
	}
	subgraph "cluster_sqlite3" {
		label="sqlite3";
		"sqlite3" -> "sqlite3.dbapi2" [style="dotted"];
		"sqlite3" -> "sqlite3.dump" [style="dotted"];
	}
	subgraph "cluster_kivy.eventmanager" {
		label="kivy.eventmanager";
	}
	subgraph "cluster_urllib3.util" {
		label="urllib3.util";
		"urllib3.util" -> "urllib3.util.connection" [style="dotted"];
		"urllib3.util" -> "urllib3.util.request" [style="dotted"];
		"urllib3.util" -> "urllib3.util.response" [style="dotted"];
		"urllib3.util" -> "urllib3.util.retry" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssl_" [style="dotted"];
		"urllib3.util" -> "urllib3.util.timeout" [style="dotted"];
		"urllib3.util" -> "urllib3.util.url" [style="dotted"];
		"urllib3.util" -> "urllib3.util.wait" [style="dotted"];
		"urllib3.util" -> "urllib3.util.util" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssltransport" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssl_match_hostname" [style="dotted"];
		"urllib3.util" -> "urllib3.util.proxy" [style="dotted"];
	}
	subgraph "cluster_transformers.models.swin2sr" {
		label="transformers.models.swin2sr";
		"transformers.models.swin2sr" -> "transformers.models.swin2sr.configuration_swin2sr" [style="dotted"];
		"transformers.models.swin2sr" -> "transformers.models.swin2sr.modeling_swin2sr" [style="dotted"];
		"transformers.models.swin2sr" -> "transformers.models.swin2sr.image_processing_swin2sr" [style="dotted"];
	}
	subgraph "cluster_transformers.models.regnet" {
		label="transformers.models.regnet";
		"transformers.models.regnet" -> "transformers.models.regnet.configuration_regnet" [style="dotted"];
		"transformers.models.regnet" -> "transformers.models.regnet.modeling_regnet" [style="dotted"];
		"transformers.models.regnet" -> "transformers.models.regnet.modeling_tf_regnet" [style="dotted"];
		"transformers.models.regnet" -> "transformers.models.regnet.modeling_flax_regnet" [style="dotted"];
	}
	subgraph "cluster_torch.nn.quantizable.modules" {
		label="torch.nn.quantizable.modules";
		"torch.nn.quantizable.modules" -> "torch.nn.quantizable.modules.activation" [style="dotted"];
		"torch.nn.quantizable.modules" -> "torch.nn.quantizable.modules.rnn" [style="dotted"];
	}
	subgraph "cluster_torch.func" {
		label="torch.func";
	}
	subgraph "cluster_torch.ao.quantization.quantizer" {
		label="torch.ao.quantization.quantizer";
		"torch.ao.quantization.quantizer" -> "torch.ao.quantization.quantizer.quantizer" [style="dotted"];
		"torch.ao.quantization.quantizer" -> "torch.ao.quantization.quantizer.composable_quantizer" [style="dotted"];
		"torch.ao.quantization.quantizer" -> "torch.ao.quantization.quantizer.embedding_quantizer" [style="dotted"];
		"torch.ao.quantization.quantizer" -> "torch.ao.quantization.quantizer.utils" [style="dotted"];
		"torch.ao.quantization.quantizer" -> "torch.ao.quantization.quantizer.x86_inductor_quantizer" [style="dotted"];
		"torch.ao.quantization.quantizer" -> "torch.ao.quantization.quantizer.xnnpack_quantizer" [style="dotted"];
		"torch.ao.quantization.quantizer" -> "torch.ao.quantization.quantizer.xnnpack_quantizer_utils" [style="dotted"];
	}
	subgraph "cluster_torch.nn.quantized._reference.modules" {
		label="torch.nn.quantized._reference.modules";
		"torch.nn.quantized._reference.modules" -> "torch.nn.quantized._reference.modules.conv" [style="dotted"];
		"torch.nn.quantized._reference.modules" -> "torch.nn.quantized._reference.modules.linear" [style="dotted"];
		"torch.nn.quantized._reference.modules" -> "torch.nn.quantized._reference.modules.rnn" [style="dotted"];
		"torch.nn.quantized._reference.modules" -> "torch.nn.quantized._reference.modules.sparse" [style="dotted"];
		"torch.nn.quantized._reference.modules" -> "torch.nn.quantized._reference.modules.utils" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.tomli" {
		label="setuptools._vendor.tomli";
		"setuptools._vendor.tomli" -> "setuptools._vendor.tomli._parser" [style="dotted"];
		"setuptools._vendor.tomli" -> "setuptools._vendor.tomli._re" [style="dotted"];
		"setuptools._vendor.tomli" -> "setuptools._vendor.tomli._types" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.qat" {
		label="torch.ao.nn.qat";
		"torch.ao.nn.qat" -> "torch.ao.nn.qat.modules" [style="dotted"];
		"torch.ao.nn.qat" -> "torch.ao.nn.qat.dynamic" [style="dotted"];
	}
	subgraph "cluster_torch.nn.intrinsic" {
		label="torch.nn.intrinsic";
		"torch.nn.intrinsic" -> "torch.nn.intrinsic.modules" [style="dotted"];
		"torch.nn.intrinsic" -> "torch.nn.intrinsic.qat" [style="dotted"];
		"torch.nn.intrinsic" -> "torch.nn.intrinsic.quantized" [style="dotted"];
	}
	subgraph "cluster_numpy.typing" {
		label="numpy.typing";
	}
	subgraph "cluster_torch.ao.nn.intrinsic.modules" {
		label="torch.ao.nn.intrinsic.modules";
		"torch.ao.nn.intrinsic.modules" -> "torch.ao.nn.intrinsic.modules.fused" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.data" {
		label="torch.testing._internal.data";
		"torch.testing._internal.data" -> "torch.testing._internal.data.network1" [style="dotted"];
		"torch.testing._internal.data" -> "torch.testing._internal.data.network2" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.mmbt" {
		label="transformers.models.deprecated.mmbt";
		"transformers.models.deprecated.mmbt" -> "transformers.models.deprecated.mmbt.configuration_mmbt" [style="dotted"];
		"transformers.models.deprecated.mmbt" -> "transformers.models.deprecated.mmbt.modeling_mmbt" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.packaging" {
		label="setuptools._vendor.packaging";
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._manylinux" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._musllinux" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.requirements" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._parser" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._tokenizer" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.markers" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.specifiers" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.utils" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.tags" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.version" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._structures" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._elffile" [style="dotted"];
	}
	subgraph "cluster_idna" {
		label="idna";
		"idna" -> "idna.idnadata" [style="dotted"];
		"idna" -> "idna.core" [style="dotted"];
		"idna" -> "idna.intranges" [style="dotted"];
		"idna" -> "idna.package_data" [style="dotted"];
		"idna" -> "idna.uts46data" [style="dotted"];
	}
	subgraph "cluster_torch.nn.quantized" {
		label="torch.nn.quantized";
		"torch.nn.quantized" -> "torch.nn.quantized.dynamic" [style="dotted"];
		"torch.nn.quantized" -> "torch.nn.quantized.functional" [style="dotted"];
		"torch.nn.quantized" -> "torch.nn.quantized.modules" [style="dotted"];
		"torch.nn.quantized" -> "torch.nn.quantized._reference" [style="dotted"];
	}
	subgraph "cluster_torch.utils.tensorboard" {
		label="torch.utils.tensorboard";
		"torch.utils.tensorboard" -> "torch.utils.tensorboard.writer" [style="dotted"];
		"torch.utils.tensorboard" -> "torch.utils.tensorboard._convert_np" [style="dotted"];
		"torch.utils.tensorboard" -> "torch.utils.tensorboard._embedding" [style="dotted"];
		"torch.utils.tensorboard" -> "torch.utils.tensorboard._onnx_graph" [style="dotted"];
		"torch.utils.tensorboard" -> "torch.utils.tensorboard._pytorch_graph" [style="dotted"];
		"torch.utils.tensorboard" -> "torch.utils.tensorboard._utils" [style="dotted"];
		"torch.utils.tensorboard" -> "torch.utils.tensorboard.summary" [style="dotted"];
		"torch.utils.tensorboard" -> "torch.utils.tensorboard._proto_graph" [style="dotted"];
	}
	subgraph "cluster_mpmath.calculus" {
		label="mpmath.calculus";
		"mpmath.calculus" -> "mpmath.calculus.calculus" [style="dotted"];
		"mpmath.calculus" -> "mpmath.calculus.approximation" [style="dotted"];
		"mpmath.calculus" -> "mpmath.calculus.differentiation" [style="dotted"];
		"mpmath.calculus" -> "mpmath.calculus.extrapolation" [style="dotted"];
		"mpmath.calculus" -> "mpmath.calculus.polynomials" [style="dotted"];
		"mpmath.calculus" -> "mpmath.calculus.quadrature" [style="dotted"];
		"mpmath.calculus" -> "mpmath.calculus.inverselaplace" [style="dotted"];
		"mpmath.calculus" -> "mpmath.calculus.optimization" [style="dotted"];
		"mpmath.calculus" -> "mpmath.calculus.odes" [style="dotted"];
	}
	subgraph "cluster_transformers.models.reformer" {
		label="transformers.models.reformer";
		"transformers.models.reformer" -> "transformers.models.reformer.configuration_reformer" [style="dotted"];
		"transformers.models.reformer" -> "transformers.models.reformer.tokenization_reformer" [style="dotted"];
		"transformers.models.reformer" -> "transformers.models.reformer.tokenization_reformer_fast" [style="dotted"];
		"transformers.models.reformer" -> "transformers.models.reformer.modeling_reformer" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.algorithms.ddp_comm_hooks" {
		label="torch.distributed.algorithms.ddp_comm_hooks";
		"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks" [style="dotted"];
		"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.default_hooks" [style="dotted"];
		"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks" [style="dotted"];
		"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" [style="dotted"];
		"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks" [style="dotted"];
		"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks" [style="dotted"];
		"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook" [style="dotted"];
		"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.jukebox" {
		label="transformers.models.deprecated.jukebox";
		"transformers.models.deprecated.jukebox" -> "transformers.models.deprecated.jukebox.configuration_jukebox" [style="dotted"];
		"transformers.models.deprecated.jukebox" -> "transformers.models.deprecated.jukebox.tokenization_jukebox" [style="dotted"];
		"transformers.models.deprecated.jukebox" -> "transformers.models.deprecated.jukebox.modeling_jukebox" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning._experimental.data_scheduler" {
		label="torch.ao.pruning._experimental.data_scheduler";
		"torch.ao.pruning._experimental.data_scheduler" -> "torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.events" {
		label="torch.distributed.elastic.events";
		"torch.distributed.elastic.events" -> "torch.distributed.elastic.events.handlers" [style="dotted"];
		"torch.distributed.elastic.events" -> "torch.distributed.elastic.events.api" [style="dotted"];
	}
	subgraph "cluster_transformers.models.falcon_mamba" {
		label="transformers.models.falcon_mamba";
		"transformers.models.falcon_mamba" -> "transformers.models.falcon_mamba.configuration_falcon_mamba" [style="dotted"];
		"transformers.models.falcon_mamba" -> "transformers.models.falcon_mamba.modeling_falcon_mamba" [style="dotted"];
	}
	subgraph "cluster_transformers.models.decision_transformer" {
		label="transformers.models.decision_transformer";
		"transformers.models.decision_transformer" -> "transformers.models.decision_transformer.configuration_decision_transformer" [style="dotted"];
		"transformers.models.decision_transformer" -> "transformers.models.decision_transformer.modeling_decision_transformer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deberta_v2" {
		label="transformers.models.deberta_v2";
		"transformers.models.deberta_v2" -> "transformers.models.deberta_v2.configuration_deberta_v2" [style="dotted"];
		"transformers.models.deberta_v2" -> "transformers.models.deberta_v2.tokenization_deberta_v2" [style="dotted"];
		"transformers.models.deberta_v2" -> "transformers.models.deberta_v2.tokenization_deberta_v2_fast" [style="dotted"];
		"transformers.models.deberta_v2" -> "transformers.models.deberta_v2.modeling_tf_deberta_v2" [style="dotted"];
		"transformers.models.deberta_v2" -> "transformers.models.deberta_v2.modeling_deberta_v2" [style="dotted"];
	}
	subgraph "cluster_transformers.models.ibert" {
		label="transformers.models.ibert";
		"transformers.models.ibert" -> "transformers.models.ibert.configuration_ibert" [style="dotted"];
		"transformers.models.ibert" -> "transformers.models.ibert.modeling_ibert" [style="dotted"];
		"transformers.models.ibert" -> "transformers.models.ibert.quant_modules" [style="dotted"];
	}
	subgraph "cluster_urllib3.contrib.emscripten" {
		label="urllib3.contrib.emscripten";
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.connection" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.fetch" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.request" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.response" [style="dotted"];
	}
	subgraph "cluster_transformers.models.llava_next" {
		label="transformers.models.llava_next";
		"transformers.models.llava_next" -> "transformers.models.llava_next.configuration_llava_next" [style="dotted"];
		"transformers.models.llava_next" -> "transformers.models.llava_next.processing_llava_next" [style="dotted"];
		"transformers.models.llava_next" -> "transformers.models.llava_next.modeling_llava_next" [style="dotted"];
		"transformers.models.llava_next" -> "transformers.models.llava_next.image_processing_llava_next" [style="dotted"];
	}
	subgraph "cluster_transformers.models.olmo" {
		label="transformers.models.olmo";
		"transformers.models.olmo" -> "transformers.models.olmo.configuration_olmo" [style="dotted"];
		"transformers.models.olmo" -> "transformers.models.olmo.modeling_olmo" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic" {
		label="torch.distributed.elastic";
		"torch.distributed.elastic" -> "torch.distributed.elastic.control_plane" [style="dotted"];
		"torch.distributed.elastic" -> "torch.distributed.elastic.utils" [style="dotted"];
		"torch.distributed.elastic" -> "torch.distributed.elastic.timer" [style="dotted"];
		"torch.distributed.elastic" -> "torch.distributed.elastic.rendezvous" [style="dotted"];
		"torch.distributed.elastic" -> "torch.distributed.elastic.multiprocessing" [style="dotted"];
		"torch.distributed.elastic" -> "torch.distributed.elastic.metrics" [style="dotted"];
		"torch.distributed.elastic" -> "torch.distributed.elastic.events" [style="dotted"];
		"torch.distributed.elastic" -> "torch.distributed.elastic.agent" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.pipelining" {
		label="torch.distributed.pipelining";
		"torch.distributed.pipelining" -> "torch.distributed.pipelining._IR" [style="dotted"];
		"torch.distributed.pipelining" -> "torch.distributed.pipelining.schedules" [style="dotted"];
		"torch.distributed.pipelining" -> "torch.distributed.pipelining.stage" [style="dotted"];
		"torch.distributed.pipelining" -> "torch.distributed.pipelining._backward" [style="dotted"];
		"torch.distributed.pipelining" -> "torch.distributed.pipelining._debug" [style="dotted"];
		"torch.distributed.pipelining" -> "torch.distributed.pipelining._unflatten" [style="dotted"];
		"torch.distributed.pipelining" -> "torch.distributed.pipelining._utils" [style="dotted"];
		"torch.distributed.pipelining" -> "torch.distributed.pipelining.microbatch" [style="dotted"];
	}
	subgraph "cluster_transformers.models.starcoder2" {
		label="transformers.models.starcoder2";
		"transformers.models.starcoder2" -> "transformers.models.starcoder2.configuration_starcoder2" [style="dotted"];
		"transformers.models.starcoder2" -> "transformers.models.starcoder2.modeling_starcoder2" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.optests" {
		label="torch.testing._internal.optests";
		"torch.testing._internal.optests" -> "torch.testing._internal.optests.make_fx" [style="dotted"];
		"torch.testing._internal.optests" -> "torch.testing._internal.optests.aot_autograd" [style="dotted"];
		"torch.testing._internal.optests" -> "torch.testing._internal.optests.fake_tensor" [style="dotted"];
		"torch.testing._internal.optests" -> "torch.testing._internal.optests.autograd_registration" [style="dotted"];
		"torch.testing._internal.optests" -> "torch.testing._internal.optests.generate_tests" [style="dotted"];
	}
	subgraph "cluster_kivy.graphics.cgl_backend" {
		label="kivy.graphics.cgl_backend";
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_gl" [style="dotted"];
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_debug" [style="dotted"];
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_sdl2" [style="dotted"];
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_glew" [style="dotted"];
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_mock" [style="dotted"];
	}
	subgraph "cluster_keyboard" {
		label="keyboard";
		"keyboard" -> "keyboard._winkeyboard" [style="dotted"];
		"keyboard" -> "keyboard._nixkeyboard" [style="dotted"];
		"keyboard" -> "keyboard._darwinkeyboard" [style="dotted"];
		"keyboard" -> "keyboard._keyboard_event" [style="dotted"];
		"keyboard" -> "keyboard._generic" [style="dotted"];
		"keyboard" -> "keyboard._canonical_names" [style="dotted"];
		"keyboard" -> "keyboard._nixcommon" [style="dotted"];
	}
	subgraph "cluster_torch.ao.quantization.fx" {
		label="torch.ao.quantization.fx";
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.convert" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.fuse" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.prepare" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx._decomposed" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx._equalize" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.custom_config" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.match_utils" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.pattern_utils" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.qconfig_mapping_utils" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.quantize_handler" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.utils" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.graph_module" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx._lower_to_native_backend" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.tracer" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.fuse_handler" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.lower_to_fbgemm" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.lower_to_qnnpack" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.lstm_utils" [style="dotted"];
		"torch.ao.quantization.fx" -> "torch.ao.quantization.fx._model_report" [style="dotted"];
	}
	subgraph "cluster_transformers.models.dinat" {
		label="transformers.models.dinat";
		"transformers.models.dinat" -> "transformers.models.dinat.configuration_dinat" [style="dotted"];
		"transformers.models.dinat" -> "transformers.models.dinat.modeling_dinat" [style="dotted"];
	}
	subgraph "cluster_torch.fx.passes.dialect" {
		label="torch.fx.passes.dialect";
		"torch.fx.passes.dialect" -> "torch.fx.passes.dialect.common" [style="dotted"];
	}
	subgraph "cluster_tokenizers.implementations" {
		label="tokenizers.implementations";
		"tokenizers.implementations" -> "tokenizers.implementations.base_tokenizer" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.bert_wordpiece" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.byte_level_bpe" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.char_level_bpe" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.sentencepiece_bpe" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.sentencepiece_unigram" [style="dotted"];
	}
	subgraph "cluster_torch.backends.cudnn" {
		label="torch.backends.cudnn";
		"torch.backends.cudnn" -> "torch.backends.cudnn.rnn" [style="dotted"];
	}
	subgraph "cluster_transformers.models.swinv2" {
		label="transformers.models.swinv2";
		"transformers.models.swinv2" -> "transformers.models.swinv2.configuration_swinv2" [style="dotted"];
		"transformers.models.swinv2" -> "transformers.models.swinv2.modeling_swinv2" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mimi" {
		label="transformers.models.mimi";
		"transformers.models.mimi" -> "transformers.models.mimi.configuration_mimi" [style="dotted"];
		"transformers.models.mimi" -> "transformers.models.mimi.modeling_mimi" [style="dotted"];
	}
	subgraph "cluster_torch._lazy" {
		label="torch._lazy";
		"torch._lazy" -> "torch._lazy.closure" [style="dotted"];
		"torch._lazy" -> "torch._lazy.metrics" [style="dotted"];
		"torch._lazy" -> "torch._lazy.ts_backend" [style="dotted"];
		"torch._lazy" -> "torch._lazy.device_context" [style="dotted"];
		"torch._lazy" -> "torch._lazy.computation" [style="dotted"];
		"torch._lazy" -> "torch._lazy.config" [style="dotted"];
		"torch._lazy" -> "torch._lazy.debug" [style="dotted"];
		"torch._lazy" -> "torch._lazy.extract_compiled_graph" [style="dotted"];
		"torch._lazy" -> "torch._lazy.ir_cache" [style="dotted"];
		"torch._lazy" -> "torch._lazy.tensor_factory_functions" [style="dotted"];
	}
	subgraph "cluster_torch._dispatch" {
		label="torch._dispatch";
		"torch._dispatch" -> "torch._dispatch.python" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.autoheuristic.artifacts" {
		label="torch._inductor.autoheuristic.artifacts";
		"torch._inductor.autoheuristic.artifacts" -> "torch._inductor.autoheuristic.artifacts._MMRankingA100" [style="dotted"];
		"torch._inductor.autoheuristic.artifacts" -> "torch._inductor.autoheuristic.artifacts._MMRankingH100" [style="dotted"];
		"torch._inductor.autoheuristic.artifacts" -> "torch._inductor.autoheuristic.artifacts._MixedMMA100" [style="dotted"];
		"torch._inductor.autoheuristic.artifacts" -> "torch._inductor.autoheuristic.artifacts._MixedMMH100" [style="dotted"];
		"torch._inductor.autoheuristic.artifacts" -> "torch._inductor.autoheuristic.artifacts._PadMMA100" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.opinfo" {
		label="torch.testing._internal.opinfo";
		"torch.testing._internal.opinfo" -> "torch.testing._internal.opinfo.utils" [style="dotted"];
		"torch.testing._internal.opinfo" -> "torch.testing._internal.opinfo.core" [style="dotted"];
		"torch.testing._internal.opinfo" -> "torch.testing._internal.opinfo.definitions" [style="dotted"];
		"torch.testing._internal.opinfo" -> "torch.testing._internal.opinfo.refs" [style="dotted"];
	}
	subgraph "cluster_transformers.models.dialogpt" {
		label="transformers.models.dialogpt";
	}
	subgraph "cluster_sympy.categories" {
		label="sympy.categories";
		"sympy.categories" -> "sympy.categories.baseclasses" [style="dotted"];
		"sympy.categories" -> "sympy.categories.diagram_drawing" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mra" {
		label="transformers.models.mra";
		"transformers.models.mra" -> "transformers.models.mra.configuration_mra" [style="dotted"];
		"transformers.models.mra" -> "transformers.models.mra.modeling_mra" [style="dotted"];
	}
	subgraph "cluster_kivy.input.postproc" {
		label="kivy.input.postproc";
		"kivy.input.postproc" -> "kivy.input.postproc.doubletap" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.tripletap" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.ignorelist" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.retaintouch" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.dejitter" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.calibration" [style="dotted"];
	}
	subgraph "cluster_torch.ao" {
		label="torch.ao";
		"torch.ao" -> "torch.ao.nn" [style="dotted"];
		"torch.ao" -> "torch.ao.ns" [style="dotted"];
		"torch.ao" -> "torch.ao.quantization" [style="dotted"];
		"torch.ao" -> "torch.ao.pruning" [style="dotted"];
	}
	subgraph "cluster_transformers.models.megatron_gpt2" {
		label="transformers.models.megatron_gpt2";
	}
	subgraph "cluster_xml.parsers" {
		label="xml.parsers";
		"xml.parsers" -> "xml.parsers.expat" [style="dotted"];
	}
	subgraph "cluster_transformers.kernels" {
		label="transformers.kernels";
		"transformers.kernels" -> "transformers.kernels.falcon_mamba" [style="dotted"];
	}
	subgraph "cluster_transformers.models.detr" {
		label="transformers.models.detr";
		"transformers.models.detr" -> "transformers.models.detr.configuration_detr" [style="dotted"];
		"transformers.models.detr" -> "transformers.models.detr.feature_extraction_detr" [style="dotted"];
		"transformers.models.detr" -> "transformers.models.detr.image_processing_detr" [style="dotted"];
		"transformers.models.detr" -> "transformers.models.detr.image_processing_detr_fast" [style="dotted"];
		"transformers.models.detr" -> "transformers.models.detr.modeling_detr" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.speech_to_text_2" {
		label="transformers.models.deprecated.speech_to_text_2";
		"transformers.models.deprecated.speech_to_text_2" -> "transformers.models.deprecated.speech_to_text_2.configuration_speech_to_text_2" [style="dotted"];
		"transformers.models.deprecated.speech_to_text_2" -> "transformers.models.deprecated.speech_to_text_2.processing_speech_to_text_2" [style="dotted"];
		"transformers.models.deprecated.speech_to_text_2" -> "transformers.models.deprecated.speech_to_text_2.tokenization_speech_to_text_2" [style="dotted"];
		"transformers.models.deprecated.speech_to_text_2" -> "transformers.models.deprecated.speech_to_text_2.modeling_speech_to_text_2" [style="dotted"];
	}
	subgraph "cluster_mpmath" {
		label="mpmath";
		"mpmath" -> "mpmath.usertools" [style="dotted"];
		"mpmath" -> "mpmath.math2" [style="dotted"];
		"mpmath" -> "mpmath.function_docs" [style="dotted"];
		"mpmath" -> "mpmath.ctx_fp" [style="dotted"];
		"mpmath" -> "mpmath.rational" [style="dotted"];
		"mpmath" -> "mpmath.ctx_mp" [style="dotted"];
		"mpmath" -> "mpmath.ctx_iv" [style="dotted"];
		"mpmath" -> "mpmath.tests" [style="dotted"];
		"mpmath" -> "mpmath.libmp" [style="dotted"];
		"mpmath" -> "mpmath.ctx_base" [style="dotted"];
		"mpmath" -> "mpmath.identification" [style="dotted"];
		"mpmath" -> "mpmath.visualization" [style="dotted"];
		"mpmath" -> "mpmath.matrices" [style="dotted"];
		"mpmath" -> "mpmath.calculus" [style="dotted"];
		"mpmath" -> "mpmath.functions" [style="dotted"];
		"mpmath" -> "mpmath.ctx_mp_python" [style="dotted"];
	}
	subgraph "cluster_sympy.discrete" {
		label="sympy.discrete";
		"sympy.discrete" -> "sympy.discrete.transforms" [style="dotted"];
		"sympy.discrete" -> "sympy.discrete.convolutions" [style="dotted"];
		"sympy.discrete" -> "sympy.discrete.recurrences" [style="dotted"];
	}
	subgraph "cluster_httpcore._async" {
		label="httpcore._async";
		"httpcore._async" -> "httpcore._async.connection" [style="dotted"];
		"httpcore._async" -> "httpcore._async.connection_pool" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http11" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http_proxy" [style="dotted"];
		"httpcore._async" -> "httpcore._async.interfaces" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http2" [style="dotted"];
		"httpcore._async" -> "httpcore._async.socks_proxy" [style="dotted"];
	}
	subgraph "cluster_torch.onnx._internal" {
		label="torch.onnx._internal";
		"torch.onnx._internal" -> "torch.onnx._internal.diagnostics" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal.io_adapter" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal._exporter_legacy" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal.registration" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal.jit_utils" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal.onnx_proto_utils" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal.exporter" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal.onnxruntime" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal._lazy_import" [style="dotted"];
		"torch.onnx._internal" -> "torch.onnx._internal.fx" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.backports.tarfile.compat" {
		label="setuptools._vendor.backports.tarfile.compat";
		"setuptools._vendor.backports.tarfile.compat" -> "setuptools._vendor.backports.tarfile.compat.py38" [style="dotted"];
	}
	subgraph "cluster_transformers.models.owlv2" {
		label="transformers.models.owlv2";
		"transformers.models.owlv2" -> "transformers.models.owlv2.configuration_owlv2" [style="dotted"];
		"transformers.models.owlv2" -> "transformers.models.owlv2.processing_owlv2" [style="dotted"];
		"transformers.models.owlv2" -> "transformers.models.owlv2.image_processing_owlv2" [style="dotted"];
		"transformers.models.owlv2" -> "transformers.models.owlv2.modeling_owlv2" [style="dotted"];
	}
	subgraph "cluster_torch._export.pass_infra" {
		label="torch._export.pass_infra";
		"torch._export.pass_infra" -> "torch._export.pass_infra.node_metadata" [style="dotted"];
		"torch._export.pass_infra" -> "torch._export.pass_infra.proxy_value" [style="dotted"];
	}
	subgraph "cluster_torch.mps" {
		label="torch.mps";
		"torch.mps" -> "torch.mps.profiler" [style="dotted"];
		"torch.mps" -> "torch.mps.event" [style="dotted"];
	}
	subgraph "cluster_transformers.models.m2m_100" {
		label="transformers.models.m2m_100";
		"transformers.models.m2m_100" -> "transformers.models.m2m_100.configuration_m2m_100" [style="dotted"];
		"transformers.models.m2m_100" -> "transformers.models.m2m_100.tokenization_m2m_100" [style="dotted"];
		"transformers.models.m2m_100" -> "transformers.models.m2m_100.modeling_m2m_100" [style="dotted"];
	}
	subgraph "cluster_torch._strobelight" {
		label="torch._strobelight";
		"torch._strobelight" -> "torch._strobelight.compile_time_profiler" [style="dotted"];
		"torch._strobelight" -> "torch._strobelight.cli_function_profiler" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.tree" {
		label="networkx.algorithms.tree";
		"networkx.algorithms.tree" -> "networkx.algorithms.tree.branchings" [style="dotted"];
		"networkx.algorithms.tree" -> "networkx.algorithms.tree.coding" [style="dotted"];
		"networkx.algorithms.tree" -> "networkx.algorithms.tree.mst" [style="dotted"];
		"networkx.algorithms.tree" -> "networkx.algorithms.tree.recognition" [style="dotted"];
		"networkx.algorithms.tree" -> "networkx.algorithms.tree.operations" [style="dotted"];
		"networkx.algorithms.tree" -> "networkx.algorithms.tree.decomposition" [style="dotted"];
	}
	subgraph "cluster_transformers.models" {
		label="transformers.models";
		"transformers.models" -> "transformers.models.albert" [style="dotted"];
		"transformers.models" -> "transformers.models.align" [style="dotted"];
		"transformers.models" -> "transformers.models.altclip" [style="dotted"];
		"transformers.models" -> "transformers.models.audio_spectrogram_transformer" [style="dotted"];
		"transformers.models" -> "transformers.models.auto" [style="dotted"];
		"transformers.models" -> "transformers.models.autoformer" [style="dotted"];
		"transformers.models" -> "transformers.models.bark" [style="dotted"];
		"transformers.models" -> "transformers.models.bart" [style="dotted"];
		"transformers.models" -> "transformers.models.barthez" [style="dotted"];
		"transformers.models" -> "transformers.models.bartpho" [style="dotted"];
		"transformers.models" -> "transformers.models.beit" [style="dotted"];
		"transformers.models" -> "transformers.models.bert" [style="dotted"];
		"transformers.models" -> "transformers.models.bert_generation" [style="dotted"];
		"transformers.models" -> "transformers.models.bert_japanese" [style="dotted"];
		"transformers.models" -> "transformers.models.bertweet" [style="dotted"];
		"transformers.models" -> "transformers.models.big_bird" [style="dotted"];
		"transformers.models" -> "transformers.models.bigbird_pegasus" [style="dotted"];
		"transformers.models" -> "transformers.models.biogpt" [style="dotted"];
		"transformers.models" -> "transformers.models.bit" [style="dotted"];
		"transformers.models" -> "transformers.models.blenderbot" [style="dotted"];
		"transformers.models" -> "transformers.models.blenderbot_small" [style="dotted"];
		"transformers.models" -> "transformers.models.blip" [style="dotted"];
		"transformers.models" -> "transformers.models.blip_2" [style="dotted"];
		"transformers.models" -> "transformers.models.bloom" [style="dotted"];
		"transformers.models" -> "transformers.models.bridgetower" [style="dotted"];
		"transformers.models" -> "transformers.models.bros" [style="dotted"];
		"transformers.models" -> "transformers.models.byt5" [style="dotted"];
		"transformers.models" -> "transformers.models.camembert" [style="dotted"];
		"transformers.models" -> "transformers.models.canine" [style="dotted"];
		"transformers.models" -> "transformers.models.chameleon" [style="dotted"];
		"transformers.models" -> "transformers.models.chinese_clip" [style="dotted"];
		"transformers.models" -> "transformers.models.clap" [style="dotted"];
		"transformers.models" -> "transformers.models.clip" [style="dotted"];
		"transformers.models" -> "transformers.models.clipseg" [style="dotted"];
		"transformers.models" -> "transformers.models.clvp" [style="dotted"];
		"transformers.models" -> "transformers.models.code_llama" [style="dotted"];
		"transformers.models" -> "transformers.models.codegen" [style="dotted"];
		"transformers.models" -> "transformers.models.cohere" [style="dotted"];
		"transformers.models" -> "transformers.models.conditional_detr" [style="dotted"];
		"transformers.models" -> "transformers.models.convbert" [style="dotted"];
		"transformers.models" -> "transformers.models.convnext" [style="dotted"];
		"transformers.models" -> "transformers.models.convnextv2" [style="dotted"];
		"transformers.models" -> "transformers.models.cpm" [style="dotted"];
		"transformers.models" -> "transformers.models.cpmant" [style="dotted"];
		"transformers.models" -> "transformers.models.ctrl" [style="dotted"];
		"transformers.models" -> "transformers.models.cvt" [style="dotted"];
		"transformers.models" -> "transformers.models.dac" [style="dotted"];
		"transformers.models" -> "transformers.models.data2vec" [style="dotted"];
		"transformers.models" -> "transformers.models.dbrx" [style="dotted"];
		"transformers.models" -> "transformers.models.deberta" [style="dotted"];
		"transformers.models" -> "transformers.models.deberta_v2" [style="dotted"];
		"transformers.models" -> "transformers.models.decision_transformer" [style="dotted"];
		"transformers.models" -> "transformers.models.deformable_detr" [style="dotted"];
		"transformers.models" -> "transformers.models.deit" [style="dotted"];
		"transformers.models" -> "transformers.models.deprecated" [style="dotted"];
		"transformers.models" -> "transformers.models.depth_anything" [style="dotted"];
		"transformers.models" -> "transformers.models.detr" [style="dotted"];
		"transformers.models" -> "transformers.models.dialogpt" [style="dotted"];
		"transformers.models" -> "transformers.models.dinat" [style="dotted"];
		"transformers.models" -> "transformers.models.dinov2" [style="dotted"];
		"transformers.models" -> "transformers.models.distilbert" [style="dotted"];
		"transformers.models" -> "transformers.models.dit" [style="dotted"];
		"transformers.models" -> "transformers.models.donut" [style="dotted"];
		"transformers.models" -> "transformers.models.dpr" [style="dotted"];
		"transformers.models" -> "transformers.models.dpt" [style="dotted"];
		"transformers.models" -> "transformers.models.efficientnet" [style="dotted"];
		"transformers.models" -> "transformers.models.electra" [style="dotted"];
		"transformers.models" -> "transformers.models.encodec" [style="dotted"];
		"transformers.models" -> "transformers.models.encoder_decoder" [style="dotted"];
		"transformers.models" -> "transformers.models.ernie" [style="dotted"];
		"transformers.models" -> "transformers.models.esm" [style="dotted"];
		"transformers.models" -> "transformers.models.falcon" [style="dotted"];
		"transformers.models" -> "transformers.models.falcon_mamba" [style="dotted"];
		"transformers.models" -> "transformers.models.fastspeech2_conformer" [style="dotted"];
		"transformers.models" -> "transformers.models.flaubert" [style="dotted"];
		"transformers.models" -> "transformers.models.flava" [style="dotted"];
		"transformers.models" -> "transformers.models.fnet" [style="dotted"];
		"transformers.models" -> "transformers.models.focalnet" [style="dotted"];
		"transformers.models" -> "transformers.models.fsmt" [style="dotted"];
		"transformers.models" -> "transformers.models.funnel" [style="dotted"];
		"transformers.models" -> "transformers.models.fuyu" [style="dotted"];
		"transformers.models" -> "transformers.models.gemma" [style="dotted"];
		"transformers.models" -> "transformers.models.gemma2" [style="dotted"];
		"transformers.models" -> "transformers.models.git" [style="dotted"];
		"transformers.models" -> "transformers.models.glm" [style="dotted"];
		"transformers.models" -> "transformers.models.glpn" [style="dotted"];
		"transformers.models" -> "transformers.models.gpt2" [style="dotted"];
		"transformers.models" -> "transformers.models.gpt_bigcode" [style="dotted"];
		"transformers.models" -> "transformers.models.gpt_neo" [style="dotted"];
		"transformers.models" -> "transformers.models.gpt_neox" [style="dotted"];
		"transformers.models" -> "transformers.models.gpt_neox_japanese" [style="dotted"];
		"transformers.models" -> "transformers.models.gpt_sw3" [style="dotted"];
		"transformers.models" -> "transformers.models.gptj" [style="dotted"];
		"transformers.models" -> "transformers.models.granite" [style="dotted"];
		"transformers.models" -> "transformers.models.granitemoe" [style="dotted"];
		"transformers.models" -> "transformers.models.grounding_dino" [style="dotted"];
		"transformers.models" -> "transformers.models.groupvit" [style="dotted"];
		"transformers.models" -> "transformers.models.herbert" [style="dotted"];
		"transformers.models" -> "transformers.models.hiera" [style="dotted"];
		"transformers.models" -> "transformers.models.hubert" [style="dotted"];
		"transformers.models" -> "transformers.models.ibert" [style="dotted"];
		"transformers.models" -> "transformers.models.idefics" [style="dotted"];
		"transformers.models" -> "transformers.models.idefics2" [style="dotted"];
		"transformers.models" -> "transformers.models.idefics3" [style="dotted"];
		"transformers.models" -> "transformers.models.imagegpt" [style="dotted"];
		"transformers.models" -> "transformers.models.informer" [style="dotted"];
		"transformers.models" -> "transformers.models.instructblip" [style="dotted"];
		"transformers.models" -> "transformers.models.instructblipvideo" [style="dotted"];
		"transformers.models" -> "transformers.models.jamba" [style="dotted"];
		"transformers.models" -> "transformers.models.jetmoe" [style="dotted"];
		"transformers.models" -> "transformers.models.kosmos2" [style="dotted"];
		"transformers.models" -> "transformers.models.layoutlm" [style="dotted"];
		"transformers.models" -> "transformers.models.layoutlmv2" [style="dotted"];
		"transformers.models" -> "transformers.models.layoutlmv3" [style="dotted"];
		"transformers.models" -> "transformers.models.layoutxlm" [style="dotted"];
		"transformers.models" -> "transformers.models.led" [style="dotted"];
		"transformers.models" -> "transformers.models.levit" [style="dotted"];
		"transformers.models" -> "transformers.models.lilt" [style="dotted"];
		"transformers.models" -> "transformers.models.llama" [style="dotted"];
		"transformers.models" -> "transformers.models.llava" [style="dotted"];
		"transformers.models" -> "transformers.models.llava_next" [style="dotted"];
		"transformers.models" -> "transformers.models.llava_next_video" [style="dotted"];
		"transformers.models" -> "transformers.models.llava_onevision" [style="dotted"];
		"transformers.models" -> "transformers.models.longformer" [style="dotted"];
		"transformers.models" -> "transformers.models.longt5" [style="dotted"];
		"transformers.models" -> "transformers.models.luke" [style="dotted"];
		"transformers.models" -> "transformers.models.lxmert" [style="dotted"];
		"transformers.models" -> "transformers.models.m2m_100" [style="dotted"];
		"transformers.models" -> "transformers.models.mamba" [style="dotted"];
		"transformers.models" -> "transformers.models.mamba2" [style="dotted"];
		"transformers.models" -> "transformers.models.marian" [style="dotted"];
		"transformers.models" -> "transformers.models.markuplm" [style="dotted"];
		"transformers.models" -> "transformers.models.mask2former" [style="dotted"];
		"transformers.models" -> "transformers.models.maskformer" [style="dotted"];
		"transformers.models" -> "transformers.models.mbart" [style="dotted"];
		"transformers.models" -> "transformers.models.mbart50" [style="dotted"];
		"transformers.models" -> "transformers.models.megatron_bert" [style="dotted"];
		"transformers.models" -> "transformers.models.megatron_gpt2" [style="dotted"];
		"transformers.models" -> "transformers.models.mgp_str" [style="dotted"];
		"transformers.models" -> "transformers.models.mimi" [style="dotted"];
		"transformers.models" -> "transformers.models.mistral" [style="dotted"];
		"transformers.models" -> "transformers.models.mixtral" [style="dotted"];
		"transformers.models" -> "transformers.models.mllama" [style="dotted"];
		"transformers.models" -> "transformers.models.mluke" [style="dotted"];
		"transformers.models" -> "transformers.models.mobilebert" [style="dotted"];
		"transformers.models" -> "transformers.models.mobilenet_v1" [style="dotted"];
		"transformers.models" -> "transformers.models.mobilenet_v2" [style="dotted"];
		"transformers.models" -> "transformers.models.mobilevit" [style="dotted"];
		"transformers.models" -> "transformers.models.mobilevitv2" [style="dotted"];
		"transformers.models" -> "transformers.models.moshi" [style="dotted"];
		"transformers.models" -> "transformers.models.mpnet" [style="dotted"];
		"transformers.models" -> "transformers.models.mpt" [style="dotted"];
		"transformers.models" -> "transformers.models.mra" [style="dotted"];
		"transformers.models" -> "transformers.models.mt5" [style="dotted"];
		"transformers.models" -> "transformers.models.musicgen" [style="dotted"];
		"transformers.models" -> "transformers.models.musicgen_melody" [style="dotted"];
		"transformers.models" -> "transformers.models.mvp" [style="dotted"];
		"transformers.models" -> "transformers.models.myt5" [style="dotted"];
		"transformers.models" -> "transformers.models.nemotron" [style="dotted"];
		"transformers.models" -> "transformers.models.nllb" [style="dotted"];
		"transformers.models" -> "transformers.models.nllb_moe" [style="dotted"];
		"transformers.models" -> "transformers.models.nougat" [style="dotted"];
		"transformers.models" -> "transformers.models.nystromformer" [style="dotted"];
		"transformers.models" -> "transformers.models.olmo" [style="dotted"];
		"transformers.models" -> "transformers.models.olmoe" [style="dotted"];
		"transformers.models" -> "transformers.models.omdet_turbo" [style="dotted"];
		"transformers.models" -> "transformers.models.oneformer" [style="dotted"];
		"transformers.models" -> "transformers.models.openai" [style="dotted"];
		"transformers.models" -> "transformers.models.opt" [style="dotted"];
		"transformers.models" -> "transformers.models.owlv2" [style="dotted"];
		"transformers.models" -> "transformers.models.owlvit" [style="dotted"];
		"transformers.models" -> "transformers.models.paligemma" [style="dotted"];
		"transformers.models" -> "transformers.models.patchtsmixer" [style="dotted"];
		"transformers.models" -> "transformers.models.patchtst" [style="dotted"];
		"transformers.models" -> "transformers.models.pegasus" [style="dotted"];
		"transformers.models" -> "transformers.models.pegasus_x" [style="dotted"];
		"transformers.models" -> "transformers.models.perceiver" [style="dotted"];
		"transformers.models" -> "transformers.models.persimmon" [style="dotted"];
		"transformers.models" -> "transformers.models.phi" [style="dotted"];
		"transformers.models" -> "transformers.models.phi3" [style="dotted"];
		"transformers.models" -> "transformers.models.phimoe" [style="dotted"];
		"transformers.models" -> "transformers.models.phobert" [style="dotted"];
		"transformers.models" -> "transformers.models.pix2struct" [style="dotted"];
		"transformers.models" -> "transformers.models.pixtral" [style="dotted"];
		"transformers.models" -> "transformers.models.plbart" [style="dotted"];
		"transformers.models" -> "transformers.models.poolformer" [style="dotted"];
		"transformers.models" -> "transformers.models.pop2piano" [style="dotted"];
		"transformers.models" -> "transformers.models.prophetnet" [style="dotted"];
		"transformers.models" -> "transformers.models.pvt" [style="dotted"];
		"transformers.models" -> "transformers.models.pvt_v2" [style="dotted"];
		"transformers.models" -> "transformers.models.qwen2" [style="dotted"];
		"transformers.models" -> "transformers.models.qwen2_audio" [style="dotted"];
		"transformers.models" -> "transformers.models.qwen2_moe" [style="dotted"];
		"transformers.models" -> "transformers.models.qwen2_vl" [style="dotted"];
		"transformers.models" -> "transformers.models.rag" [style="dotted"];
		"transformers.models" -> "transformers.models.recurrent_gemma" [style="dotted"];
		"transformers.models" -> "transformers.models.reformer" [style="dotted"];
		"transformers.models" -> "transformers.models.regnet" [style="dotted"];
		"transformers.models" -> "transformers.models.rembert" [style="dotted"];
		"transformers.models" -> "transformers.models.resnet" [style="dotted"];
		"transformers.models" -> "transformers.models.roberta" [style="dotted"];
		"transformers.models" -> "transformers.models.roberta_prelayernorm" [style="dotted"];
		"transformers.models" -> "transformers.models.roc_bert" [style="dotted"];
		"transformers.models" -> "transformers.models.roformer" [style="dotted"];
		"transformers.models" -> "transformers.models.rt_detr" [style="dotted"];
		"transformers.models" -> "transformers.models.rwkv" [style="dotted"];
		"transformers.models" -> "transformers.models.sam" [style="dotted"];
		"transformers.models" -> "transformers.models.seamless_m4t" [style="dotted"];
		"transformers.models" -> "transformers.models.seamless_m4t_v2" [style="dotted"];
		"transformers.models" -> "transformers.models.segformer" [style="dotted"];
		"transformers.models" -> "transformers.models.seggpt" [style="dotted"];
		"transformers.models" -> "transformers.models.sew" [style="dotted"];
		"transformers.models" -> "transformers.models.sew_d" [style="dotted"];
		"transformers.models" -> "transformers.models.siglip" [style="dotted"];
		"transformers.models" -> "transformers.models.speech_encoder_decoder" [style="dotted"];
		"transformers.models" -> "transformers.models.speech_to_text" [style="dotted"];
		"transformers.models" -> "transformers.models.speecht5" [style="dotted"];
		"transformers.models" -> "transformers.models.splinter" [style="dotted"];
		"transformers.models" -> "transformers.models.squeezebert" [style="dotted"];
		"transformers.models" -> "transformers.models.stablelm" [style="dotted"];
		"transformers.models" -> "transformers.models.starcoder2" [style="dotted"];
		"transformers.models" -> "transformers.models.superpoint" [style="dotted"];
		"transformers.models" -> "transformers.models.swiftformer" [style="dotted"];
		"transformers.models" -> "transformers.models.swin" [style="dotted"];
		"transformers.models" -> "transformers.models.swin2sr" [style="dotted"];
		"transformers.models" -> "transformers.models.swinv2" [style="dotted"];
		"transformers.models" -> "transformers.models.switch_transformers" [style="dotted"];
		"transformers.models" -> "transformers.models.t5" [style="dotted"];
		"transformers.models" -> "transformers.models.table_transformer" [style="dotted"];
		"transformers.models" -> "transformers.models.tapas" [style="dotted"];
		"transformers.models" -> "transformers.models.time_series_transformer" [style="dotted"];
		"transformers.models" -> "transformers.models.timesformer" [style="dotted"];
		"transformers.models" -> "transformers.models.timm_backbone" [style="dotted"];
		"transformers.models" -> "transformers.models.trocr" [style="dotted"];
		"transformers.models" -> "transformers.models.tvp" [style="dotted"];
		"transformers.models" -> "transformers.models.udop" [style="dotted"];
		"transformers.models" -> "transformers.models.umt5" [style="dotted"];
		"transformers.models" -> "transformers.models.unispeech" [style="dotted"];
		"transformers.models" -> "transformers.models.unispeech_sat" [style="dotted"];
		"transformers.models" -> "transformers.models.univnet" [style="dotted"];
		"transformers.models" -> "transformers.models.upernet" [style="dotted"];
		"transformers.models" -> "transformers.models.video_llava" [style="dotted"];
		"transformers.models" -> "transformers.models.videomae" [style="dotted"];
		"transformers.models" -> "transformers.models.vilt" [style="dotted"];
		"transformers.models" -> "transformers.models.vipllava" [style="dotted"];
		"transformers.models" -> "transformers.models.vision_encoder_decoder" [style="dotted"];
		"transformers.models" -> "transformers.models.vision_text_dual_encoder" [style="dotted"];
		"transformers.models" -> "transformers.models.visual_bert" [style="dotted"];
		"transformers.models" -> "transformers.models.vit" [style="dotted"];
		"transformers.models" -> "transformers.models.vit_mae" [style="dotted"];
		"transformers.models" -> "transformers.models.vit_msn" [style="dotted"];
		"transformers.models" -> "transformers.models.vitdet" [style="dotted"];
		"transformers.models" -> "transformers.models.vitmatte" [style="dotted"];
		"transformers.models" -> "transformers.models.vits" [style="dotted"];
		"transformers.models" -> "transformers.models.vivit" [style="dotted"];
		"transformers.models" -> "transformers.models.wav2vec2" [style="dotted"];
		"transformers.models" -> "transformers.models.wav2vec2_bert" [style="dotted"];
		"transformers.models" -> "transformers.models.wav2vec2_conformer" [style="dotted"];
		"transformers.models" -> "transformers.models.wav2vec2_phoneme" [style="dotted"];
		"transformers.models" -> "transformers.models.wav2vec2_with_lm" [style="dotted"];
		"transformers.models" -> "transformers.models.wavlm" [style="dotted"];
		"transformers.models" -> "transformers.models.whisper" [style="dotted"];
		"transformers.models" -> "transformers.models.x_clip" [style="dotted"];
		"transformers.models" -> "transformers.models.xglm" [style="dotted"];
		"transformers.models" -> "transformers.models.xlm" [style="dotted"];
		"transformers.models" -> "transformers.models.xlm_roberta" [style="dotted"];
		"transformers.models" -> "transformers.models.xlm_roberta_xl" [style="dotted"];
		"transformers.models" -> "transformers.models.xlnet" [style="dotted"];
		"transformers.models" -> "transformers.models.xmod" [style="dotted"];
		"transformers.models" -> "transformers.models.yolos" [style="dotted"];
		"transformers.models" -> "transformers.models.yoso" [style="dotted"];
		"transformers.models" -> "transformers.models.zamba" [style="dotted"];
		"transformers.models" -> "transformers.models.zoedepth" [style="dotted"];
	}
	subgraph "cluster_torch.contrib" {
		label="torch.contrib";
		"torch.contrib" -> "torch.contrib._tensorboard_vis" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks" {
		label="torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks";
		"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks" -> "torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks._data_sparstity_utils" [style="dotted"];
		"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks" -> "torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.zipp.compat" {
		label="setuptools._vendor.zipp.compat";
		"setuptools._vendor.zipp.compat" -> "setuptools._vendor.zipp.compat.py310" [style="dotted"];
	}
	subgraph "cluster_torch._decomp" {
		label="torch._decomp";
		"torch._decomp" -> "torch._decomp.decompositions" [style="dotted"];
		"torch._decomp" -> "torch._decomp.decompositions_for_jvp" [style="dotted"];
		"torch._decomp" -> "torch._decomp.decompositions_for_rng" [style="dotted"];
	}
	subgraph "cluster_transformers.models.audio_spectrogram_transformer" {
		label="transformers.models.audio_spectrogram_transformer";
		"transformers.models.audio_spectrogram_transformer" -> "transformers.models.audio_spectrogram_transformer.configuration_audio_spectrogram_transformer" [style="dotted"];
		"transformers.models.audio_spectrogram_transformer" -> "transformers.models.audio_spectrogram_transformer.feature_extraction_audio_spectrogram_transformer" [style="dotted"];
		"transformers.models.audio_spectrogram_transformer" -> "transformers.models.audio_spectrogram_transformer.modeling_audio_spectrogram_transformer" [style="dotted"];
	}
	subgraph "cluster_torch.ao.quantization.backend_config" {
		label="torch.ao.quantization.backend_config";
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.backend_config" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.executorch" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.fbgemm" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.native" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.onednn" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.qnnpack" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.tensorrt" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.utils" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config._common_operator_config_utils" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config._qnnpack_pt2e" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.observation_type" [style="dotted"];
		"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.x86" [style="dotted"];
	}
	subgraph "cluster_distutils" {
		label="distutils";
		"distutils" -> "distutils.log" [style="dotted"];
		"distutils" -> "distutils.sysconfig" [style="dotted"];
		"distutils" -> "distutils.archive_util" [style="dotted"];
		"distutils" -> "distutils.core" [style="dotted"];
		"distutils" -> "distutils.errors" [style="dotted"];
		"distutils" -> "distutils.text_file" [style="dotted"];
		"distutils" -> "distutils.spawn" [style="dotted"];
		"distutils" -> "distutils.dir_util" [style="dotted"];
		"distutils" -> "distutils.file_util" [style="dotted"];
		"distutils" -> "distutils.dep_util" [style="dotted"];
		"distutils" -> "distutils.debug" [style="dotted"];
		"distutils" -> "distutils.util" [style="dotted"];
		"distutils" -> "distutils.filelist" [style="dotted"];
		"distutils" -> "distutils.cmd" [style="dotted"];
		"distutils" -> "distutils.versionpredicate" [style="dotted"];
		"distutils" -> "distutils.version" [style="dotted"];
		"distutils" -> "distutils.command" [style="dotted"];
		"distutils" -> "distutils.dist" [style="dotted"];
		"distutils" -> "distutils.fancy_getopt" [style="dotted"];
		"distutils" -> "distutils.extension" [style="dotted"];
		"distutils" -> "distutils.ccompiler" [style="dotted"];
		"distutils" -> "distutils._msvccompiler" [style="dotted"];
		"distutils" -> "distutils.config" [style="dotted"];
	}
	subgraph "cluster_sympy.calculus" {
		label="sympy.calculus";
		"sympy.calculus" -> "sympy.calculus.euler" [style="dotted"];
		"sympy.calculus" -> "sympy.calculus.singularities" [style="dotted"];
		"sympy.calculus" -> "sympy.calculus.finite_diff" [style="dotted"];
		"sympy.calculus" -> "sympy.calculus.util" [style="dotted"];
		"sympy.calculus" -> "sympy.calculus.accumulationbounds" [style="dotted"];
	}
	subgraph "cluster_tokenizers.decoders" {
		label="tokenizers.decoders";
	}
	subgraph "cluster_torch.backends.mha" {
		label="torch.backends.mha";
	}
	subgraph "cluster_transformers.models.hiera" {
		label="transformers.models.hiera";
		"transformers.models.hiera" -> "transformers.models.hiera.configuration_hiera" [style="dotted"];
		"transformers.models.hiera" -> "transformers.models.hiera.modeling_hiera" [style="dotted"];
	}
	subgraph "cluster_functorch.experimental" {
		label="functorch.experimental";
		"functorch.experimental" -> "functorch.experimental.control_flow" [style="dotted"];
	}
	subgraph "cluster_networkx.readwrite.json_graph" {
		label="networkx.readwrite.json_graph";
		"networkx.readwrite.json_graph" -> "networkx.readwrite.json_graph.node_link" [style="dotted"];
		"networkx.readwrite.json_graph" -> "networkx.readwrite.json_graph.adjacency" [style="dotted"];
		"networkx.readwrite.json_graph" -> "networkx.readwrite.json_graph.tree" [style="dotted"];
		"networkx.readwrite.json_graph" -> "networkx.readwrite.json_graph.cytoscape" [style="dotted"];
	}
	subgraph "cluster_transformers.models.glm" {
		label="transformers.models.glm";
		"transformers.models.glm" -> "transformers.models.glm.configuration_glm" [style="dotted"];
		"transformers.models.glm" -> "transformers.models.glm.modeling_glm" [style="dotted"];
	}
	subgraph "cluster_sympy.tensor.array.expressions" {
		label="sympy.tensor.array.expressions";
		"sympy.tensor.array.expressions" -> "sympy.tensor.array.expressions.array_expressions" [style="dotted"];
		"sympy.tensor.array.expressions" -> "sympy.tensor.array.expressions.arrayexpr_derivatives" [style="dotted"];
		"sympy.tensor.array.expressions" -> "sympy.tensor.array.expressions.from_array_to_indexed" [style="dotted"];
		"sympy.tensor.array.expressions" -> "sympy.tensor.array.expressions.from_array_to_matrix" [style="dotted"];
		"sympy.tensor.array.expressions" -> "sympy.tensor.array.expressions.from_indexed_to_array" [style="dotted"];
		"sympy.tensor.array.expressions" -> "sympy.tensor.array.expressions.from_matrix_to_array" [style="dotted"];
		"sympy.tensor.array.expressions" -> "sympy.tensor.array.expressions.utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.layoutxlm" {
		label="transformers.models.layoutxlm";
		"transformers.models.layoutxlm" -> "transformers.models.layoutxlm.processing_layoutxlm" [style="dotted"];
		"transformers.models.layoutxlm" -> "transformers.models.layoutxlm.tokenization_layoutxlm" [style="dotted"];
		"transformers.models.layoutxlm" -> "transformers.models.layoutxlm.tokenization_layoutxlm_fast" [style="dotted"];
	}
	subgraph "cluster_tomllib" {
		label="tomllib";
		"tomllib" -> "tomllib._parser" [style="dotted"];
		"tomllib" -> "tomllib._re" [style="dotted"];
		"tomllib" -> "tomllib._types" [style="dotted"];
	}
	subgraph "cluster_transformers.models.jetmoe" {
		label="transformers.models.jetmoe";
		"transformers.models.jetmoe" -> "transformers.models.jetmoe.configuration_jetmoe" [style="dotted"];
		"transformers.models.jetmoe" -> "transformers.models.jetmoe.modeling_jetmoe" [style="dotted"];
	}
	subgraph "cluster_torch.linalg" {
		label="torch.linalg";
	}
	subgraph "cluster_transformers.models.funnel" {
		label="transformers.models.funnel";
		"transformers.models.funnel" -> "transformers.models.funnel.configuration_funnel" [style="dotted"];
		"transformers.models.funnel" -> "transformers.models.funnel.tokenization_funnel" [style="dotted"];
		"transformers.models.funnel" -> "transformers.models.funnel.tokenization_funnel_fast" [style="dotted"];
		"transformers.models.funnel" -> "transformers.models.funnel.modeling_funnel" [style="dotted"];
		"transformers.models.funnel" -> "transformers.models.funnel.modeling_tf_funnel" [style="dotted"];
	}
	subgraph "cluster_torch.nn.attention" {
		label="torch.nn.attention";
		"torch.nn.attention" -> "torch.nn.attention.flex_attention" [style="dotted"];
		"torch.nn.attention" -> "torch.nn.attention._utils" [style="dotted"];
		"torch.nn.attention" -> "torch.nn.attention.bias" [style="dotted"];
	}
	subgraph "cluster_transformers.models.unispeech_sat" {
		label="transformers.models.unispeech_sat";
		"transformers.models.unispeech_sat" -> "transformers.models.unispeech_sat.configuration_unispeech_sat" [style="dotted"];
		"transformers.models.unispeech_sat" -> "transformers.models.unispeech_sat.modeling_unispeech_sat" [style="dotted"];
	}
	subgraph "cluster_torch.distributions" {
		label="torch.distributions";
		"torch.distributions" -> "torch.distributions.constraints" [style="dotted"];
		"torch.distributions" -> "torch.distributions.transforms" [style="dotted"];
		"torch.distributions" -> "torch.distributions.bernoulli" [style="dotted"];
		"torch.distributions" -> "torch.distributions.beta" [style="dotted"];
		"torch.distributions" -> "torch.distributions.binomial" [style="dotted"];
		"torch.distributions" -> "torch.distributions.categorical" [style="dotted"];
		"torch.distributions" -> "torch.distributions.cauchy" [style="dotted"];
		"torch.distributions" -> "torch.distributions.chi2" [style="dotted"];
		"torch.distributions" -> "torch.distributions.constraint_registry" [style="dotted"];
		"torch.distributions" -> "torch.distributions.continuous_bernoulli" [style="dotted"];
		"torch.distributions" -> "torch.distributions.dirichlet" [style="dotted"];
		"torch.distributions" -> "torch.distributions.distribution" [style="dotted"];
		"torch.distributions" -> "torch.distributions.exp_family" [style="dotted"];
		"torch.distributions" -> "torch.distributions.exponential" [style="dotted"];
		"torch.distributions" -> "torch.distributions.fishersnedecor" [style="dotted"];
		"torch.distributions" -> "torch.distributions.gamma" [style="dotted"];
		"torch.distributions" -> "torch.distributions.geometric" [style="dotted"];
		"torch.distributions" -> "torch.distributions.gumbel" [style="dotted"];
		"torch.distributions" -> "torch.distributions.half_cauchy" [style="dotted"];
		"torch.distributions" -> "torch.distributions.half_normal" [style="dotted"];
		"torch.distributions" -> "torch.distributions.independent" [style="dotted"];
		"torch.distributions" -> "torch.distributions.inverse_gamma" [style="dotted"];
		"torch.distributions" -> "torch.distributions.kl" [style="dotted"];
		"torch.distributions" -> "torch.distributions.kumaraswamy" [style="dotted"];
		"torch.distributions" -> "torch.distributions.laplace" [style="dotted"];
		"torch.distributions" -> "torch.distributions.lkj_cholesky" [style="dotted"];
		"torch.distributions" -> "torch.distributions.log_normal" [style="dotted"];
		"torch.distributions" -> "torch.distributions.logistic_normal" [style="dotted"];
		"torch.distributions" -> "torch.distributions.lowrank_multivariate_normal" [style="dotted"];
		"torch.distributions" -> "torch.distributions.mixture_same_family" [style="dotted"];
		"torch.distributions" -> "torch.distributions.multinomial" [style="dotted"];
		"torch.distributions" -> "torch.distributions.multivariate_normal" [style="dotted"];
		"torch.distributions" -> "torch.distributions.negative_binomial" [style="dotted"];
		"torch.distributions" -> "torch.distributions.normal" [style="dotted"];
		"torch.distributions" -> "torch.distributions.one_hot_categorical" [style="dotted"];
		"torch.distributions" -> "torch.distributions.pareto" [style="dotted"];
		"torch.distributions" -> "torch.distributions.poisson" [style="dotted"];
		"torch.distributions" -> "torch.distributions.relaxed_bernoulli" [style="dotted"];
		"torch.distributions" -> "torch.distributions.relaxed_categorical" [style="dotted"];
		"torch.distributions" -> "torch.distributions.studentT" [style="dotted"];
		"torch.distributions" -> "torch.distributions.transformed_distribution" [style="dotted"];
		"torch.distributions" -> "torch.distributions.uniform" [style="dotted"];
		"torch.distributions" -> "torch.distributions.von_mises" [style="dotted"];
		"torch.distributions" -> "torch.distributions.weibull" [style="dotted"];
		"torch.distributions" -> "torch.distributions.wishart" [style="dotted"];
		"torch.distributions" -> "torch.distributions.utils" [style="dotted"];
	}
	subgraph "cluster_tokenizers" {
		label="tokenizers";
		"tokenizers" -> "tokenizers.tokenizers" [style="dotted"];
		"tokenizers" -> "tokenizers.decoders" [style="dotted"];
		"tokenizers" -> "tokenizers.models" [style="dotted"];
		"tokenizers" -> "tokenizers.normalizers" [style="dotted"];
		"tokenizers" -> "tokenizers.pre_tokenizers" [style="dotted"];
		"tokenizers" -> "tokenizers.processors" [style="dotted"];
		"tokenizers" -> "tokenizers.trainers" [style="dotted"];
		"tokenizers" -> "tokenizers.implementations" [style="dotted"];
	}
	subgraph "cluster_torch.jit._passes" {
		label="torch.jit._passes";
		"torch.jit._passes" -> "torch.jit._passes._property_propagation" [style="dotted"];
	}
	subgraph "cluster_kivy.effects" {
		label="kivy.effects";
		"kivy.effects" -> "kivy.effects.scroll" [style="dotted"];
		"kivy.effects" -> "kivy.effects.opacityscroll" [style="dotted"];
		"kivy.effects" -> "kivy.effects.dampedscroll" [style="dotted"];
		"kivy.effects" -> "kivy.effects.kinetic" [style="dotted"];
	}
	subgraph "cluster_past.builtins" {
		label="past.builtins";
		"past.builtins" -> "past.builtins.noniterators" [style="dotted"];
		"past.builtins" -> "past.builtins.misc" [style="dotted"];
	}
	subgraph "cluster_transformers.models.paligemma" {
		label="transformers.models.paligemma";
		"transformers.models.paligemma" -> "transformers.models.paligemma.configuration_paligemma" [style="dotted"];
		"transformers.models.paligemma" -> "transformers.models.paligemma.modeling_paligemma" [style="dotted"];
		"transformers.models.paligemma" -> "transformers.models.paligemma.processing_paligemma" [style="dotted"];
	}
	subgraph "cluster_transformers.models.instructblipvideo" {
		label="transformers.models.instructblipvideo";
		"transformers.models.instructblipvideo" -> "transformers.models.instructblipvideo.configuration_instructblipvideo" [style="dotted"];
		"transformers.models.instructblipvideo" -> "transformers.models.instructblipvideo.processing_instructblipvideo" [style="dotted"];
		"transformers.models.instructblipvideo" -> "transformers.models.instructblipvideo.image_processing_instructblipvideo" [style="dotted"];
		"transformers.models.instructblipvideo" -> "transformers.models.instructblipvideo.modeling_instructblipvideo" [style="dotted"];
	}
	subgraph "cluster_httpx._transports" {
		label="httpx._transports";
		"httpx._transports" -> "httpx._transports.asgi" [style="dotted"];
		"httpx._transports" -> "httpx._transports.base" [style="dotted"];
		"httpx._transports" -> "httpx._transports.default" [style="dotted"];
		"httpx._transports" -> "httpx._transports.mock" [style="dotted"];
		"httpx._transports" -> "httpx._transports.wsgi" [style="dotted"];
	}
	subgraph "cluster_torch.special" {
		label="torch.special";
	}
	subgraph "cluster_torch.nn.utils" {
		label="torch.nn.utils";
		"torch.nn.utils" -> "torch.nn.utils.parametrize" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.parametrizations" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.rnn" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.stateless" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.clip_grad" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.convert_parameters" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.fusion" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.init" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.memory_format" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.spectral_norm" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.weight_norm" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils._named_member_accessor" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils._deprecation_utils" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils._per_sample_grad" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils.prune" [style="dotted"];
		"torch.nn.utils" -> "torch.nn.utils._expanded_weights" [style="dotted"];
	}
	subgraph "cluster_transformers.models.camembert" {
		label="transformers.models.camembert";
		"transformers.models.camembert" -> "transformers.models.camembert.configuration_camembert" [style="dotted"];
		"transformers.models.camembert" -> "transformers.models.camembert.tokenization_camembert" [style="dotted"];
		"transformers.models.camembert" -> "transformers.models.camembert.tokenization_camembert_fast" [style="dotted"];
		"transformers.models.camembert" -> "transformers.models.camembert.modeling_camembert" [style="dotted"];
		"transformers.models.camembert" -> "transformers.models.camembert.modeling_tf_camembert" [style="dotted"];
	}
	subgraph "cluster_torch.mtia" {
		label="torch.mtia";
		"torch.mtia" -> "torch.mtia._utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bartpho" {
		label="transformers.models.bartpho";
		"transformers.models.bartpho" -> "transformers.models.bartpho.tokenization_bartpho" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.distributed.nn.api" {
		label="torch.testing._internal.distributed.nn.api";
		"torch.testing._internal.distributed.nn.api" -> "torch.testing._internal.distributed.nn.api.remote_module_test" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.algorithms._quantization" {
		label="torch.distributed.algorithms._quantization";
		"torch.distributed.algorithms._quantization" -> "torch.distributed.algorithms._quantization.quantization" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.agent" {
		label="torch.distributed.elastic.agent";
		"torch.distributed.elastic.agent" -> "torch.distributed.elastic.agent.server" [style="dotted"];
	}
	subgraph "cluster_torch.package.analyze" {
		label="torch.package.analyze";
		"torch.package.analyze" -> "torch.package.analyze.find_first_use_of_broken_modules" [style="dotted"];
		"torch.package.analyze" -> "torch.package.analyze.trace_dependencies" [style="dotted"];
		"torch.package.analyze" -> "torch.package.analyze.is_from_package" [style="dotted"];
	}
	subgraph "cluster_transformers.models.t5" {
		label="transformers.models.t5";
		"transformers.models.t5" -> "transformers.models.t5.configuration_t5" [style="dotted"];
		"transformers.models.t5" -> "transformers.models.t5.tokenization_t5" [style="dotted"];
		"transformers.models.t5" -> "transformers.models.t5.tokenization_t5_fast" [style="dotted"];
		"transformers.models.t5" -> "transformers.models.t5.modeling_t5" [style="dotted"];
		"transformers.models.t5" -> "transformers.models.t5.modeling_tf_t5" [style="dotted"];
		"transformers.models.t5" -> "transformers.models.t5.modeling_flax_t5" [style="dotted"];
	}
	subgraph "cluster_transformers.models.time_series_transformer" {
		label="transformers.models.time_series_transformer";
		"transformers.models.time_series_transformer" -> "transformers.models.time_series_transformer.configuration_time_series_transformer" [style="dotted"];
		"transformers.models.time_series_transformer" -> "transformers.models.time_series_transformer.modeling_time_series_transformer" [style="dotted"];
	}
	subgraph "cluster_sympy.sets" {
		label="sympy.sets";
		"sympy.sets" -> "sympy.sets.sets" [style="dotted"];
		"sympy.sets" -> "sympy.sets.fancysets" [style="dotted"];
		"sympy.sets" -> "sympy.sets.contains" [style="dotted"];
		"sympy.sets" -> "sympy.sets.conditionset" [style="dotted"];
		"sympy.sets" -> "sympy.sets.ordinals" [style="dotted"];
		"sympy.sets" -> "sympy.sets.powerset" [style="dotted"];
		"sympy.sets" -> "sympy.sets.handlers" [style="dotted"];
		"sympy.sets" -> "sympy.sets.setexpr" [style="dotted"];
	}
	subgraph "cluster_transformers.models.poolformer" {
		label="transformers.models.poolformer";
		"transformers.models.poolformer" -> "transformers.models.poolformer.configuration_poolformer" [style="dotted"];
		"transformers.models.poolformer" -> "transformers.models.poolformer.feature_extraction_poolformer" [style="dotted"];
		"transformers.models.poolformer" -> "transformers.models.poolformer.image_processing_poolformer" [style="dotted"];
		"transformers.models.poolformer" -> "transformers.models.poolformer.modeling_poolformer" [style="dotted"];
	}
	subgraph "cluster_torch.utils.backcompat" {
		label="torch.utils.backcompat";
	}
	subgraph "cluster_torch.nn.intrinsic.qat" {
		label="torch.nn.intrinsic.qat";
		"torch.nn.intrinsic.qat" -> "torch.nn.intrinsic.qat.modules" [style="dotted"];
	}
	subgraph "cluster_torch.nn.intrinsic.quantized.dynamic.modules" {
		label="torch.nn.intrinsic.quantized.dynamic.modules";
		"torch.nn.intrinsic.quantized.dynamic.modules" -> "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu" [style="dotted"];
	}
	subgraph "cluster_future.backports.email" {
		label="future.backports.email";
		"future.backports.email" -> "future.backports.email.errors" [style="dotted"];
		"future.backports.email" -> "future.backports.email.utils" [style="dotted"];
		"future.backports.email" -> "future.backports.email.base64mime" [style="dotted"];
		"future.backports.email" -> "future.backports.email.header" [style="dotted"];
		"future.backports.email" -> "future.backports.email.message" [style="dotted"];
		"future.backports.email" -> "future.backports.email.parser" [style="dotted"];
		"future.backports.email" -> "future.backports.email.feedparser" [style="dotted"];
		"future.backports.email" -> "future.backports.email._policybase" [style="dotted"];
		"future.backports.email" -> "future.backports.email.charset" [style="dotted"];
		"future.backports.email" -> "future.backports.email.encoders" [style="dotted"];
		"future.backports.email" -> "future.backports.email._encoded_words" [style="dotted"];
		"future.backports.email" -> "future.backports.email.generator" [style="dotted"];
		"future.backports.email" -> "future.backports.email.iterators" [style="dotted"];
		"future.backports.email" -> "future.backports.email.quoprimime" [style="dotted"];
		"future.backports.email" -> "future.backports.email._parseaddr" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.optim" {
		label="torch.distributed.optim";
		"torch.distributed.optim" -> "torch.distributed.optim.apply_optimizer_in_backward" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.functional_adadelta" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.functional_adagrad" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.functional_adam" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.functional_adamax" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.functional_adamw" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.functional_rmsprop" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.functional_rprop" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.functional_sgd" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.named_optimizer" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.utils" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.optimizer" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.post_localSGD_optimizer" [style="dotted"];
		"torch.distributed.optim" -> "torch.distributed.optim.zero_redundancy_optimizer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vilt" {
		label="transformers.models.vilt";
		"transformers.models.vilt" -> "transformers.models.vilt.configuration_vilt" [style="dotted"];
		"transformers.models.vilt" -> "transformers.models.vilt.feature_extraction_vilt" [style="dotted"];
		"transformers.models.vilt" -> "transformers.models.vilt.image_processing_vilt" [style="dotted"];
		"transformers.models.vilt" -> "transformers.models.vilt.processing_vilt" [style="dotted"];
		"transformers.models.vilt" -> "transformers.models.vilt.modeling_vilt" [style="dotted"];
	}
	subgraph "cluster_kivy.modules" {
		label="kivy.modules";
	}
	subgraph "cluster_transformers.models.llama" {
		label="transformers.models.llama";
		"transformers.models.llama" -> "transformers.models.llama.configuration_llama" [style="dotted"];
		"transformers.models.llama" -> "transformers.models.llama.tokenization_llama" [style="dotted"];
		"transformers.models.llama" -> "transformers.models.llama.tokenization_llama_fast" [style="dotted"];
		"transformers.models.llama" -> "transformers.models.llama.modeling_llama" [style="dotted"];
		"transformers.models.llama" -> "transformers.models.llama.modeling_flax_llama" [style="dotted"];
	}
	subgraph "cluster_transformers.models.xlm" {
		label="transformers.models.xlm";
		"transformers.models.xlm" -> "transformers.models.xlm.configuration_xlm" [style="dotted"];
		"transformers.models.xlm" -> "transformers.models.xlm.tokenization_xlm" [style="dotted"];
		"transformers.models.xlm" -> "transformers.models.xlm.modeling_xlm" [style="dotted"];
		"transformers.models.xlm" -> "transformers.models.xlm.modeling_tf_xlm" [style="dotted"];
	}
	subgraph "cluster_torch.backends.nnpack" {
		label="torch.backends.nnpack";
	}
	subgraph "cluster_torch.quantization.fx" {
		label="torch.quantization.fx";
		"torch.quantization.fx" -> "torch.quantization.fx._equalize" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.convert" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.fuse" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.fusion_patterns" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.graph_module" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.match_utils" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.pattern_utils" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.prepare" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.quantization_patterns" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.quantization_types" [style="dotted"];
		"torch.quantization.fx" -> "torch.quantization.fx.utils" [style="dotted"];
	}
	subgraph "cluster_torch.ao.ns" {
		label="torch.ao.ns";
		"torch.ao.ns" -> "torch.ao.ns._numeric_suite_fx" [style="dotted"];
		"torch.ao.ns" -> "torch.ao.ns.fx" [style="dotted"];
		"torch.ao.ns" -> "torch.ao.ns._numeric_suite" [style="dotted"];
	}
	subgraph "cluster_transformers.models.yoso" {
		label="transformers.models.yoso";
		"transformers.models.yoso" -> "transformers.models.yoso.configuration_yoso" [style="dotted"];
		"transformers.models.yoso" -> "transformers.models.yoso.modeling_yoso" [style="dotted"];
	}
	subgraph "cluster_transformers.models.visual_bert" {
		label="transformers.models.visual_bert";
		"transformers.models.visual_bert" -> "transformers.models.visual_bert.configuration_visual_bert" [style="dotted"];
		"transformers.models.visual_bert" -> "transformers.models.visual_bert.modeling_visual_bert" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.codegen.xpu" {
		label="torch._inductor.codegen.xpu";
		"torch._inductor.codegen.xpu" -> "torch._inductor.codegen.xpu.device_op_overrides" [style="dotted"];
	}
	subgraph "cluster_transformers.models.depth_anything" {
		label="transformers.models.depth_anything";
		"transformers.models.depth_anything" -> "transformers.models.depth_anything.configuration_depth_anything" [style="dotted"];
		"transformers.models.depth_anything" -> "transformers.models.depth_anything.modeling_depth_anything" [style="dotted"];
	}
	subgraph "cluster_transformers.models.convbert" {
		label="transformers.models.convbert";
		"transformers.models.convbert" -> "transformers.models.convbert.configuration_convbert" [style="dotted"];
		"transformers.models.convbert" -> "transformers.models.convbert.tokenization_convbert" [style="dotted"];
		"transformers.models.convbert" -> "transformers.models.convbert.tokenization_convbert_fast" [style="dotted"];
		"transformers.models.convbert" -> "transformers.models.convbert.modeling_convbert" [style="dotted"];
		"transformers.models.convbert" -> "transformers.models.convbert.modeling_tf_convbert" [style="dotted"];
	}
	subgraph "cluster_transformers.models.herbert" {
		label="transformers.models.herbert";
		"transformers.models.herbert" -> "transformers.models.herbert.tokenization_herbert" [style="dotted"];
		"transformers.models.herbert" -> "transformers.models.herbert.tokenization_herbert_fast" [style="dotted"];
	}
	subgraph "cluster_transformers.models.recurrent_gemma" {
		label="transformers.models.recurrent_gemma";
		"transformers.models.recurrent_gemma" -> "transformers.models.recurrent_gemma.configuration_recurrent_gemma" [style="dotted"];
		"transformers.models.recurrent_gemma" -> "transformers.models.recurrent_gemma.modeling_recurrent_gemma" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.commands" {
		label="huggingface_hub.commands";
		"huggingface_hub.commands" -> "huggingface_hub.commands._cli_utils" [style="dotted"];
		"huggingface_hub.commands" -> "huggingface_hub.commands.delete_cache" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.importlib_metadata" {
		label="setuptools._vendor.importlib_metadata";
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._meta" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata.compat" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._collections" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._compat" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._functools" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._itertools" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._adapters" [style="dotted"];
		"setuptools._vendor.importlib_metadata" -> "setuptools._vendor.importlib_metadata._text" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bark" {
		label="transformers.models.bark";
		"transformers.models.bark" -> "transformers.models.bark.configuration_bark" [style="dotted"];
		"transformers.models.bark" -> "transformers.models.bark.processing_bark" [style="dotted"];
		"transformers.models.bark" -> "transformers.models.bark.modeling_bark" [style="dotted"];
		"transformers.models.bark" -> "transformers.models.bark.generation_configuration_bark" [style="dotted"];
	}
	subgraph "cluster_torch._export" {
		label="torch._export";
		"torch._export" -> "torch._export.converter" [style="dotted"];
		"torch._export" -> "torch._export.wrappers" [style="dotted"];
		"torch._export" -> "torch._export.non_strict_utils" [style="dotted"];
		"torch._export" -> "torch._export.utils" [style="dotted"];
		"torch._export" -> "torch._export.passes" [style="dotted"];
		"torch._export" -> "torch._export.error" [style="dotted"];
		"torch._export" -> "torch._export.pass_base" [style="dotted"];
		"torch._export" -> "torch._export.pass_infra" [style="dotted"];
		"torch._export" -> "torch._export.verifier" [style="dotted"];
		"torch._export" -> "torch._export.serde" [style="dotted"];
		"torch._export" -> "torch._export.db" [style="dotted"];
		"torch._export" -> "torch._export.tools" [style="dotted"];
	}
	subgraph "cluster_torch.fx.passes.utils" {
		label="torch.fx.passes.utils";
		"torch.fx.passes.utils" -> "torch.fx.passes.utils.common" [style="dotted"];
		"torch.fx.passes.utils" -> "torch.fx.passes.utils.matcher_utils" [style="dotted"];
		"torch.fx.passes.utils" -> "torch.fx.passes.utils.fuser_utils" [style="dotted"];
		"torch.fx.passes.utils" -> "torch.fx.passes.utils.matcher_with_name_node_map_utils" [style="dotted"];
		"torch.fx.passes.utils" -> "torch.fx.passes.utils.source_matcher_utils" [style="dotted"];
	}
	subgraph "cluster_kivy.core.text" {
		label="kivy.core.text";
		"kivy.core.text" -> "kivy.core.text.text_layout" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.text_pango" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.text_sdl2" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.text_pil" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.markup" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text._text_sdl2" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.text_pygame" [style="dotted"];
	}
	subgraph "cluster_transformers.models.idefics" {
		label="transformers.models.idefics";
		"transformers.models.idefics" -> "transformers.models.idefics.configuration_idefics" [style="dotted"];
		"transformers.models.idefics" -> "transformers.models.idefics.image_processing_idefics" [style="dotted"];
		"transformers.models.idefics" -> "transformers.models.idefics.modeling_idefics" [style="dotted"];
		"transformers.models.idefics" -> "transformers.models.idefics.processing_idefics" [style="dotted"];
		"transformers.models.idefics" -> "transformers.models.idefics.modeling_tf_idefics" [style="dotted"];
		"transformers.models.idefics" -> "transformers.models.idefics.perceiver_tf" [style="dotted"];
		"transformers.models.idefics" -> "transformers.models.idefics.vision_tf" [style="dotted"];
		"transformers.models.idefics" -> "transformers.models.idefics.perceiver" [style="dotted"];
		"transformers.models.idefics" -> "transformers.models.idefics.vision" [style="dotted"];
	}
	subgraph "cluster_torch._dynamo.backends" {
		label="torch._dynamo.backends";
		"torch._dynamo.backends" -> "torch._dynamo.backends.registry" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.debugging" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.distributed" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.common" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.cudagraphs" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.inductor" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.onnxrt" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.tensorrt" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.torchxla" [style="dotted"];
		"torch._dynamo.backends" -> "torch._dynamo.backends.tvm" [style="dotted"];
	}
	subgraph "cluster_torch.backends.cpu" {
		label="torch.backends.cpu";
	}
	subgraph "cluster_torch.fx.passes.dialect.common" {
		label="torch.fx.passes.dialect.common";
		"torch.fx.passes.dialect.common" -> "torch.fx.passes.dialect.common.cse_pass" [style="dotted"];
	}
	subgraph "cluster_sympy.utilities" {
		label="sympy.utilities";
		"sympy.utilities" -> "sympy.utilities.lambdify" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.iterables" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.misc" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.decorator" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.timeutils" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.exceptions" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.magic" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.enumerative" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.memoization" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.mathml" [style="dotted"];
		"sympy.utilities" -> "sympy.utilities.source" [style="dotted"];
	}
	subgraph "cluster_sympy.external" {
		label="sympy.external";
		"sympy.external" -> "sympy.external.importtools" [style="dotted"];
		"sympy.external" -> "sympy.external.gmpy" [style="dotted"];
		"sympy.external" -> "sympy.external.pythonmpq" [style="dotted"];
		"sympy.external" -> "sympy.external.ntheory" [style="dotted"];
	}
	subgraph "cluster_mpmath.libmp" {
		label="mpmath.libmp";
		"mpmath.libmp" -> "mpmath.libmp.libmpf" [style="dotted"];
		"mpmath.libmp" -> "mpmath.libmp.libmpc" [style="dotted"];
		"mpmath.libmp" -> "mpmath.libmp.libelefun" [style="dotted"];
		"mpmath.libmp" -> "mpmath.libmp.libhyper" [style="dotted"];
		"mpmath.libmp" -> "mpmath.libmp.gammazeta" [style="dotted"];
		"mpmath.libmp" -> "mpmath.libmp.libmpi" [style="dotted"];
		"mpmath.libmp" -> "mpmath.libmp.libintmath" [style="dotted"];
		"mpmath.libmp" -> "mpmath.libmp.backend" [style="dotted"];
	}
	subgraph "cluster_sympy.tensor" {
		label="sympy.tensor";
		"sympy.tensor" -> "sympy.tensor.indexed" [style="dotted"];
		"sympy.tensor" -> "sympy.tensor.index_methods" [style="dotted"];
		"sympy.tensor" -> "sympy.tensor.functions" [style="dotted"];
		"sympy.tensor" -> "sympy.tensor.array" [style="dotted"];
		"sympy.tensor" -> "sympy.tensor.tensor" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.algorithms._optimizer_overlap" {
		label="torch.distributed.algorithms._optimizer_overlap";
		"torch.distributed.algorithms._optimizer_overlap" -> "torch.distributed.algorithms._optimizer_overlap.optimizer_overlap" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vivit" {
		label="transformers.models.vivit";
		"transformers.models.vivit" -> "transformers.models.vivit.configuration_vivit" [style="dotted"];
		"transformers.models.vivit" -> "transformers.models.vivit.image_processing_vivit" [style="dotted"];
		"transformers.models.vivit" -> "transformers.models.vivit.modeling_vivit" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.tapex" {
		label="transformers.models.deprecated.tapex";
		"transformers.models.deprecated.tapex" -> "transformers.models.deprecated.tapex.tokenization_tapex" [style="dotted"];
	}
	subgraph "cluster_torch.nn.qat.dynamic.modules" {
		label="torch.nn.qat.dynamic.modules";
		"torch.nn.qat.dynamic.modules" -> "torch.nn.qat.dynamic.modules.linear" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mistral" {
		label="transformers.models.mistral";
		"transformers.models.mistral" -> "transformers.models.mistral.configuration_mistral" [style="dotted"];
		"transformers.models.mistral" -> "transformers.models.mistral.modeling_mistral" [style="dotted"];
		"transformers.models.mistral" -> "transformers.models.mistral.modeling_flax_mistral" [style="dotted"];
		"transformers.models.mistral" -> "transformers.models.mistral.modeling_tf_mistral" [style="dotted"];
	}
	subgraph "cluster_transformers.models.tvp" {
		label="transformers.models.tvp";
		"transformers.models.tvp" -> "transformers.models.tvp.configuration_tvp" [style="dotted"];
		"transformers.models.tvp" -> "transformers.models.tvp.processing_tvp" [style="dotted"];
		"transformers.models.tvp" -> "transformers.models.tvp.image_processing_tvp" [style="dotted"];
		"transformers.models.tvp" -> "transformers.models.tvp.modeling_tvp" [style="dotted"];
	}
	subgraph "cluster_tokenizers.models" {
		label="tokenizers.models";
	}
	subgraph "cluster_platformdirs" {
		label="platformdirs";
		"platformdirs" -> "platformdirs.api" [style="dotted"];
		"platformdirs" -> "platformdirs.version" [style="dotted"];
		"platformdirs" -> "platformdirs.windows" [style="dotted"];
		"platformdirs" -> "platformdirs.macos" [style="dotted"];
		"platformdirs" -> "platformdirs.unix" [style="dotted"];
		"platformdirs" -> "platformdirs.android" [style="dotted"];
	}
	subgraph "cluster_sympy.integrals" {
		label="sympy.integrals";
		"sympy.integrals" -> "sympy.integrals.integrals" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.transforms" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.singularityfunctions" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.rationaltools" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.risch" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.manualintegrate" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.heurisch" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.deltafunctions" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.meijerint" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.trigonometry" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.laplace" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.prde" [style="dotted"];
		"sympy.integrals" -> "sympy.integrals.rde" [style="dotted"];
	}
	subgraph "cluster_torch.compiler" {
		label="torch.compiler";
	}
	subgraph "cluster_transformers.models.llava" {
		label="transformers.models.llava";
		"transformers.models.llava" -> "transformers.models.llava.configuration_llava" [style="dotted"];
		"transformers.models.llava" -> "transformers.models.llava.processing_llava" [style="dotted"];
		"transformers.models.llava" -> "transformers.models.llava.modeling_llava" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mt5" {
		label="transformers.models.mt5";
		"transformers.models.mt5" -> "transformers.models.mt5.configuration_mt5" [style="dotted"];
		"transformers.models.mt5" -> "transformers.models.mt5.modeling_mt5" [style="dotted"];
		"transformers.models.mt5" -> "transformers.models.mt5.modeling_tf_mt5" [style="dotted"];
		"transformers.models.mt5" -> "transformers.models.mt5.modeling_flax_mt5" [style="dotted"];
	}
	subgraph "cluster_torch.nested._internal" {
		label="torch.nested._internal";
		"torch.nested._internal" -> "torch.nested._internal.nested_tensor" [style="dotted"];
		"torch.nested._internal" -> "torch.nested._internal.ops" [style="dotted"];
		"torch.nested._internal" -> "torch.nested._internal.sdpa" [style="dotted"];
	}
	subgraph "cluster_networkx" {
		label="networkx";
		"networkx" -> "networkx.lazy_imports" [style="dotted"];
		"networkx" -> "networkx.exception" [style="dotted"];
		"networkx" -> "networkx.utils" [style="dotted"];
		"networkx" -> "networkx.convert" [style="dotted"];
		"networkx" -> "networkx.classes" [style="dotted"];
		"networkx" -> "networkx.convert_matrix" [style="dotted"];
		"networkx" -> "networkx.relabel" [style="dotted"];
		"networkx" -> "networkx.generators" [style="dotted"];
		"networkx" -> "networkx.readwrite" [style="dotted"];
		"networkx" -> "networkx.algorithms" [style="dotted"];
		"networkx" -> "networkx.linalg" [style="dotted"];
		"networkx" -> "networkx.drawing" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.gptsan_japanese" {
		label="transformers.models.deprecated.gptsan_japanese";
		"transformers.models.deprecated.gptsan_japanese" -> "transformers.models.deprecated.gptsan_japanese.configuration_gptsan_japanese" [style="dotted"];
		"transformers.models.deprecated.gptsan_japanese" -> "transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" [style="dotted"];
		"transformers.models.deprecated.gptsan_japanese" -> "transformers.models.deprecated.gptsan_japanese.modeling_gptsan_japanese" [style="dotted"];
	}
	subgraph "cluster_multiprocessing" {
		label="multiprocessing";
		"multiprocessing" -> "multiprocessing.process" [style="dotted"];
		"multiprocessing" -> "multiprocessing.util" [style="dotted"];
		"multiprocessing" -> "multiprocessing.AuthenticationError" [style="dotted"];
		"multiprocessing" -> "multiprocessing.BufferTooShort" [style="dotted"];
		"multiprocessing" -> "multiprocessing.resource_sharer" [style="dotted"];
		"multiprocessing" -> "multiprocessing.connection" [style="dotted"];
		"multiprocessing" -> "multiprocessing.get_start_method" [style="dotted"];
		"multiprocessing" -> "multiprocessing.set_start_method" [style="dotted"];
		"multiprocessing" -> "multiprocessing.resource_tracker" [style="dotted"];
		"multiprocessing" -> "multiprocessing.spawn" [style="dotted"];
		"multiprocessing" -> "multiprocessing.forkserver" [style="dotted"];
		"multiprocessing" -> "multiprocessing.reduction" [style="dotted"];
		"multiprocessing" -> "multiprocessing.get_context" [style="dotted"];
		"multiprocessing" -> "multiprocessing.TimeoutError" [style="dotted"];
		"multiprocessing" -> "multiprocessing.pool" [style="dotted"];
		"multiprocessing" -> "multiprocessing.shared_memory" [style="dotted"];
		"multiprocessing" -> "multiprocessing.context" [style="dotted"];
		"multiprocessing" -> "multiprocessing.RLock" [style="dotted"];
		"multiprocessing" -> "multiprocessing.Pool" [style="dotted"];
		"multiprocessing" -> "multiprocessing.cpu_count" [style="dotted"];
		"multiprocessing" -> "multiprocessing.Pipe" [style="dotted"];
		"multiprocessing" -> "multiprocessing.Process" [style="dotted"];
		"multiprocessing" -> "multiprocessing.Queue" [style="dotted"];
		"multiprocessing" -> "multiprocessing.queues" [style="dotted"];
		"multiprocessing" -> "multiprocessing.synchronize" [style="dotted"];
		"multiprocessing" -> "multiprocessing.heap" [style="dotted"];
		"multiprocessing" -> "multiprocessing.managers" [style="dotted"];
		"multiprocessing" -> "multiprocessing.sharedctypes" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_fork" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_spawn_posix" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_forkserver" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_spawn_win32" [style="dotted"];
		"multiprocessing" -> "multiprocessing.dummy" [style="dotted"];
	}
	subgraph "cluster_transformers.models.convnextv2" {
		label="transformers.models.convnextv2";
		"transformers.models.convnextv2" -> "transformers.models.convnextv2.configuration_convnextv2" [style="dotted"];
		"transformers.models.convnextv2" -> "transformers.models.convnextv2.modeling_convnextv2" [style="dotted"];
		"transformers.models.convnextv2" -> "transformers.models.convnextv2.modeling_tf_convnextv2" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.html4css1" {
		label="docutils.writers.html4css1";
	}
	subgraph "cluster_huggingface_hub.inference._generated.types" {
		label="huggingface_hub.inference._generated.types";
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.audio_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.audio_to_audio" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.automatic_speech_recognition" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.base" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.chat_completion" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.depth_estimation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.document_question_answering" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.feature_extraction" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.fill_mask" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.image_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.image_segmentation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.image_to_image" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.image_to_text" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.object_detection" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.question_answering" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.sentence_similarity" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.summarization" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.table_question_answering" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text2text_generation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_generation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_to_audio" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_to_image" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_to_speech" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.token_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.translation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.video_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.visual_question_answering" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.zero_shot_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.zero_shot_image_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.zero_shot_object_detection" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.pep_html" {
		label="docutils.writers.pep_html";
	}
	subgraph "cluster_transformers.models.xmod" {
		label="transformers.models.xmod";
		"transformers.models.xmod" -> "transformers.models.xmod.configuration_xmod" [style="dotted"];
		"transformers.models.xmod" -> "transformers.models.xmod.modeling_xmod" [style="dotted"];
	}
	subgraph "cluster_sympy.logic" {
		label="sympy.logic";
		"sympy.logic" -> "sympy.logic.boolalg" [style="dotted"];
		"sympy.logic" -> "sympy.logic.inference" [style="dotted"];
		"sympy.logic" -> "sympy.logic.algorithms" [style="dotted"];
	}
	subgraph "cluster_torch.signal.windows" {
		label="torch.signal.windows";
		"torch.signal.windows" -> "torch.signal.windows.windows" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.runtime" {
		label="torch._inductor.runtime";
		"torch._inductor.runtime" -> "torch._inductor.runtime.triton_heuristics" [style="dotted"];
		"torch._inductor.runtime" -> "torch._inductor.runtime.runtime_utils" [style="dotted"];
		"torch._inductor.runtime" -> "torch._inductor.runtime.hints" [style="dotted"];
		"torch._inductor.runtime" -> "torch._inductor.runtime.benchmarking" [style="dotted"];
		"torch._inductor.runtime" -> "torch._inductor.runtime.autotune_cache" [style="dotted"];
		"torch._inductor.runtime" -> "torch._inductor.runtime.coordinate_descent_tuner" [style="dotted"];
		"torch._inductor.runtime" -> "torch._inductor.runtime.compile_tasks" [style="dotted"];
		"torch._inductor.runtime" -> "torch._inductor.runtime.halide_helpers" [style="dotted"];
		"torch._inductor.runtime" -> "torch._inductor.runtime.triton_helpers" [style="dotted"];
	}
	subgraph "cluster_tokenizers.trainers" {
		label="tokenizers.trainers";
	}
	subgraph "cluster_transformers.models.musicgen" {
		label="transformers.models.musicgen";
		"transformers.models.musicgen" -> "transformers.models.musicgen.configuration_musicgen" [style="dotted"];
		"transformers.models.musicgen" -> "transformers.models.musicgen.processing_musicgen" [style="dotted"];
		"transformers.models.musicgen" -> "transformers.models.musicgen.modeling_musicgen" [style="dotted"];
	}
	subgraph "cluster_torch._export.db.examples" {
		label="torch._export.db.examples";
		"torch._export.db.examples" -> "torch._export.db.examples.assume_constant_result" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.autograd_function" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.class_method" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.cond_branch_class_method" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.cond_branch_nested_function" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.cond_branch_nonlocal_variables" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.cond_closed_over_variable" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.cond_operands" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.cond_predicate" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.constrain_as_size_example" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.constrain_as_value_example" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.decorator" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.dictionary" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.dynamic_shape_assert" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.dynamic_shape_constructor" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.dynamic_shape_if_guard" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.dynamic_shape_map" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.dynamic_shape_round" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.dynamic_shape_slicing" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.dynamic_shape_view" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.fn_with_kwargs" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.list_contains" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.list_unpack" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.model_attr_mutation" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.nested_function" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.null_context_manager" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.optional_input" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.pytree_flatten" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.scalar_output" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.specialized_attribute" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.static_for_loop" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.static_if" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.tensor_setattr" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.type_reflection_method" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.unsupported_operator" [style="dotted"];
		"torch._export.db.examples" -> "torch._export.db.examples.user_input_mutation" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.bipartite" {
		label="networkx.algorithms.bipartite";
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.basic" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.centrality" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.cluster" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.covering" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.edgelist" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.matching" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.matrix" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.projection" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.redundancy" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.spectral" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.generators" [style="dotted"];
		"networkx.algorithms.bipartite" -> "networkx.algorithms.bipartite.extendability" [style="dotted"];
	}
	subgraph "cluster_transformers.models.blip_2" {
		label="transformers.models.blip_2";
		"transformers.models.blip_2" -> "transformers.models.blip_2.configuration_blip_2" [style="dotted"];
		"transformers.models.blip_2" -> "transformers.models.blip_2.processing_blip_2" [style="dotted"];
		"transformers.models.blip_2" -> "transformers.models.blip_2.modeling_blip_2" [style="dotted"];
	}
	subgraph "cluster_torch.utils" {
		label="torch.utils";
		"torch.utils" -> "torch.utils.backcompat" [style="dotted"];
		"torch.utils" -> "torch.utils._cxx_pytree" [style="dotted"];
		"torch.utils" -> "torch.utils._pytree" [style="dotted"];
		"torch.utils" -> "torch.utils.cpp_backtrace" [style="dotted"];
		"torch.utils" -> "torch.utils.collect_env" [style="dotted"];
		"torch.utils" -> "torch.utils.data" [style="dotted"];
		"torch.utils" -> "torch.utils.deterministic" [style="dotted"];
		"torch.utils" -> "torch.utils.hooks" [style="dotted"];
		"torch.utils" -> "torch.utils.backend_registration" [style="dotted"];
		"torch.utils" -> "torch.utils.throughput_benchmark" [style="dotted"];
		"torch.utils" -> "torch.utils._foreach_utils" [style="dotted"];
		"torch.utils" -> "torch.utils._typing_utils" [style="dotted"];
		"torch.utils" -> "torch.utils._import_utils" [style="dotted"];
		"torch.utils" -> "torch.utils._python_dispatch" [style="dotted"];
		"torch.utils" -> "torch.utils._triton" [style="dotted"];
		"torch.utils" -> "torch.utils._ordered_set" [style="dotted"];
		"torch.utils" -> "torch.utils.flop_counter" [style="dotted"];
		"torch.utils" -> "torch.utils._traceback" [style="dotted"];
		"torch.utils" -> "torch.utils.dlpack" [style="dotted"];
		"torch.utils" -> "torch.utils._device" [style="dotted"];
		"torch.utils" -> "torch.utils.weak" [style="dotted"];
		"torch.utils" -> "torch.utils._config_module" [style="dotted"];
		"torch.utils" -> "torch.utils._exposed_in" [style="dotted"];
		"torch.utils" -> "torch.utils._sympy" [style="dotted"];
		"torch.utils" -> "torch.utils._mode_utils" [style="dotted"];
		"torch.utils" -> "torch.utils.checkpoint" [style="dotted"];
		"torch.utils" -> "torch.utils.cpp_extension" [style="dotted"];
		"torch.utils" -> "torch.utils.file_baton" [style="dotted"];
		"torch.utils" -> "torch.utils._cpp_extension_versioner" [style="dotted"];
		"torch.utils" -> "torch.utils.hipify" [style="dotted"];
		"torch.utils" -> "torch.utils.mkldnn" [style="dotted"];
		"torch.utils" -> "torch.utils.tensorboard" [style="dotted"];
		"torch.utils" -> "torch.utils._content_store" [style="dotted"];
		"torch.utils" -> "torch.utils._contextlib" [style="dotted"];
		"torch.utils" -> "torch.utils.module_tracker" [style="dotted"];
		"torch.utils" -> "torch.utils._stats" [style="dotted"];
		"torch.utils" -> "torch.utils._thunk" [style="dotted"];
		"torch.utils" -> "torch.utils._backport_slots" [style="dotted"];
		"torch.utils" -> "torch.utils._freeze" [style="dotted"];
		"torch.utils" -> "torch.utils._get_clean_triton" [style="dotted"];
		"torch.utils" -> "torch.utils._zip" [style="dotted"];
		"torch.utils" -> "torch.utils.bundled_inputs" [style="dotted"];
		"torch.utils" -> "torch.utils.mobile_optimizer" [style="dotted"];
		"torch.utils" -> "torch.utils.model_zoo" [style="dotted"];
		"torch.utils" -> "torch.utils.show_pickle" [style="dotted"];
		"torch.utils" -> "torch.utils.viz" [style="dotted"];
		"torch.utils" -> "torch.utils.model_dump" [style="dotted"];
		"torch.utils" -> "torch.utils.jit" [style="dotted"];
		"torch.utils" -> "torch.utils.bottleneck" [style="dotted"];
		"torch.utils" -> "torch.utils.benchmark" [style="dotted"];
		"torch.utils" -> "torch.utils._strobelight" [style="dotted"];
	}
	subgraph "cluster_setuptools.config" {
		label="setuptools.config";
		"setuptools.config" -> "setuptools.config.expand" [style="dotted"];
		"setuptools.config" -> "setuptools.config.setupcfg" [style="dotted"];
		"setuptools.config" -> "setuptools.config._validate_pyproject" [style="dotted"];
		"setuptools.config" -> "setuptools.config.pyprojecttoml" [style="dotted"];
		"setuptools.config" -> "setuptools.config._apply_pyprojecttoml" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.connectivity" {
		label="networkx.algorithms.connectivity";
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.connectivity" [style="dotted"];
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.cuts" [style="dotted"];
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.edge_augmentation" [style="dotted"];
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.edge_kcomponents" [style="dotted"];
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.disjoint_paths" [style="dotted"];
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.kcomponents" [style="dotted"];
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.kcutsets" [style="dotted"];
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.stoerwagner" [style="dotted"];
		"networkx.algorithms.connectivity" -> "networkx.algorithms.connectivity.utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mask2former" {
		label="transformers.models.mask2former";
		"transformers.models.mask2former" -> "transformers.models.mask2former.configuration_mask2former" [style="dotted"];
		"transformers.models.mask2former" -> "transformers.models.mask2former.image_processing_mask2former" [style="dotted"];
		"transformers.models.mask2former" -> "transformers.models.mask2former.modeling_mask2former" [style="dotted"];
	}
	subgraph "cluster_anyio._backends" {
		label="anyio._backends";
		"anyio._backends" -> "anyio._backends._asyncio" [style="dotted"];
		"anyio._backends" -> "anyio._backends._trio" [style="dotted"];
	}
	subgraph "cluster_torch._refs.special" {
		label="torch._refs.special";
	}
	subgraph "cluster_importlib.metadata" {
		label="importlib.metadata";
		"importlib.metadata" -> "importlib.metadata._adapters" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._meta" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._collections" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._functools" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._itertools" [style="dotted"];
		"importlib.metadata" -> "importlib.metadata._text" [style="dotted"];
	}
	subgraph "cluster_transformers.benchmark" {
		label="transformers.benchmark";
		"transformers.benchmark" -> "transformers.benchmark.benchmark" [style="dotted"];
		"transformers.benchmark" -> "transformers.benchmark.benchmark_args" [style="dotted"];
		"transformers.benchmark" -> "transformers.benchmark.benchmark_args_tf" [style="dotted"];
		"transformers.benchmark" -> "transformers.benchmark.benchmark_tf" [style="dotted"];
		"transformers.benchmark" -> "transformers.benchmark.benchmark_utils" [style="dotted"];
		"transformers.benchmark" -> "transformers.benchmark.benchmark_args_utils" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.quantized.modules" {
		label="torch.ao.nn.quantized.modules";
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.activation" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.batchnorm" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.conv" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.dropout" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.embedding_ops" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.functional_modules" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.linear" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.normalization" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.rnn" [style="dotted"];
		"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mbart50" {
		label="transformers.models.mbart50";
		"transformers.models.mbart50" -> "transformers.models.mbart50.tokenization_mbart50" [style="dotted"];
		"transformers.models.mbart50" -> "transformers.models.mbart50.tokenization_mbart50_fast" [style="dotted"];
	}
	subgraph "cluster_transformers.data.datasets" {
		label="transformers.data.datasets";
		"transformers.data.datasets" -> "transformers.data.datasets.glue" [style="dotted"];
		"transformers.data.datasets" -> "transformers.data.datasets.language_modeling" [style="dotted"];
		"transformers.data.datasets" -> "transformers.data.datasets.squad" [style="dotted"];
	}
	subgraph "cluster_torch.fx.experimental.migrate_gradual_types" {
		label="torch.fx.experimental.migrate_gradual_types";
		"torch.fx.experimental.migrate_gradual_types" -> "torch.fx.experimental.migrate_gradual_types.constraint" [style="dotted"];
		"torch.fx.experimental.migrate_gradual_types" -> "torch.fx.experimental.migrate_gradual_types.constraint_generator" [style="dotted"];
		"torch.fx.experimental.migrate_gradual_types" -> "torch.fx.experimental.migrate_gradual_types.constraint_transformation" [style="dotted"];
		"torch.fx.experimental.migrate_gradual_types" -> "torch.fx.experimental.migrate_gradual_types.operation" [style="dotted"];
		"torch.fx.experimental.migrate_gradual_types" -> "torch.fx.experimental.migrate_gradual_types.transform_to_z3" [style="dotted"];
		"torch.fx.experimental.migrate_gradual_types" -> "torch.fx.experimental.migrate_gradual_types.util" [style="dotted"];
		"torch.fx.experimental.migrate_gradual_types" -> "torch.fx.experimental.migrate_gradual_types.z3_types" [style="dotted"];
	}
	subgraph "cluster_pygments.lexers" {
		label="pygments.lexers";
		"pygments.lexers" -> "pygments.lexers._mapping" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.PythonLexer" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.PrologLexer" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._ada_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._asy_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._cl_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._cocoa_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._csound_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._css_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._julia_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._lasso_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._lilypond_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._lua_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._luau_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._mql_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._mysql_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._openedge_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._php_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._postgres_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._qlik_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._scheme_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._scilab_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._sourcemod_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._stan_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._stata_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._tsql_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._usd_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._vbscript_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._vim_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.actionscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ada" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.agile" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.algebra" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ambient" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.amdgpu" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ampl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.apdlexer" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.apl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.archetype" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.arrow" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.arturo" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.asc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.asm" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.asn1" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.automation" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.bare" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.basic" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.bdd" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.berry" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.bibtex" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.blueprint" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.boa" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.bqn" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.business" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.c_cpp" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.c_like" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.capnproto" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.carbon" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.cddl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.chapel" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.clean" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.comal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.compiled" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.configs" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.console" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.cplint" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.crystal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.csound" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.css" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.d" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dalvik" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.data" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dax" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.devicetree" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.diff" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dns" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dotnet" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dsls" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dylan" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ecl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.eiffel" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.elm" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.elpi" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.email" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.erlang" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.esoteric" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ezhil" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.factor" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.fantom" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.felix" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.fift" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.floscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.forth" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.fortran" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.foxpro" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.freefem" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.func" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.functional" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.futhark" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.gcodelexer" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.gdscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.go" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.grammar_notation" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.graph" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.graphics" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.graphql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.graphviz" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.gsql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.haskell" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.haxe" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.hdl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.hexdump" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.html" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.idl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.igor" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.inferno" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.installers" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.int_fiction" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.iolang" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.j" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.javascript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jmespath" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jslt" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jsonnet" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jsx" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.julia" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jvm" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.kuin" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.kusto" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ldap" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.lean" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.lilypond" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.lisp" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.macaulay2" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.make" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.markup" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.math" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.matlab" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.maxima" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.meson" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.mime" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.minecraft" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.mips" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ml" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.modeling" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.modula2" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.mojo" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.monte" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.mosel" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ncl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.nimrod" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.nit" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.nix" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.oberon" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.objective" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ooc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.openscad" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.other" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.parasail" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.parsers" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pascal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pawn" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.perl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.phix" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.php" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pointless" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pony" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.praat" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.procfile" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.prolog" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.promql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.prql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ptx" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.python" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.q" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.qlik" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.qvt" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.r" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rdf" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rebol" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.resource" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ride" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rita" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rnc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.roboconf" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.robotframework" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ruby" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rust" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sas" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.savi" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.scdoc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.scripting" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sgf" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.shell" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sieve" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.slash" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.smalltalk" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.smithy" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.smv" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.snobol" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.solidity" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.soong" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sophia" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.special" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.spice" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.srcinfo" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.stata" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.supercollider" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tact" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tcl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.teal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.templates" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.teraterm" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.testing" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.text" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.textedit" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.textfmts" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.theorem" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.thingsdb" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tlb" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tls" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tnt" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.trafficscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.typoscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.typst" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ul4" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.unicon" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.urbi" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.usd" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.varnish" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.verification" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.verifpal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.vip" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.vyper" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.web" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.webassembly" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.webidl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.webmisc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.wgsl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.whiley" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.wowtoc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.wren" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.x10" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.xorg" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.yang" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.yara" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.zig" [style="dotted"];
	}
	subgraph "cluster_ffmpeg" {
		label="ffmpeg";
		"ffmpeg" -> "ffmpeg.nodes" [style="dotted"];
		"ffmpeg" -> "ffmpeg._ffmpeg" [style="dotted"];
		"ffmpeg" -> "ffmpeg._filters" [style="dotted"];
		"ffmpeg" -> "ffmpeg._probe" [style="dotted"];
		"ffmpeg" -> "ffmpeg._run" [style="dotted"];
		"ffmpeg" -> "ffmpeg._view" [style="dotted"];
		"ffmpeg" -> "ffmpeg.dag" [style="dotted"];
		"ffmpeg" -> "ffmpeg._utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.zamba" {
		label="transformers.models.zamba";
		"transformers.models.zamba" -> "transformers.models.zamba.configuration_zamba" [style="dotted"];
		"transformers.models.zamba" -> "transformers.models.zamba.modeling_zamba" [style="dotted"];
	}
	subgraph "cluster_transformers.models.markuplm" {
		label="transformers.models.markuplm";
		"transformers.models.markuplm" -> "transformers.models.markuplm.configuration_markuplm" [style="dotted"];
		"transformers.models.markuplm" -> "transformers.models.markuplm.feature_extraction_markuplm" [style="dotted"];
		"transformers.models.markuplm" -> "transformers.models.markuplm.processing_markuplm" [style="dotted"];
		"transformers.models.markuplm" -> "transformers.models.markuplm.tokenization_markuplm" [style="dotted"];
		"transformers.models.markuplm" -> "transformers.models.markuplm.tokenization_markuplm_fast" [style="dotted"];
		"transformers.models.markuplm" -> "transformers.models.markuplm.modeling_markuplm" [style="dotted"];
	}
	subgraph "cluster_transformers.models.lilt" {
		label="transformers.models.lilt";
		"transformers.models.lilt" -> "transformers.models.lilt.configuration_lilt" [style="dotted"];
		"transformers.models.lilt" -> "transformers.models.lilt.modeling_lilt" [style="dotted"];
	}
	subgraph "cluster_mpmath.matrices" {
		label="mpmath.matrices";
		"mpmath.matrices" -> "mpmath.matrices.eigen" [style="dotted"];
		"mpmath.matrices" -> "mpmath.matrices.eigen_symmetric" [style="dotted"];
		"mpmath.matrices" -> "mpmath.matrices.matrices" [style="dotted"];
		"mpmath.matrices" -> "mpmath.matrices.calculus" [style="dotted"];
		"mpmath.matrices" -> "mpmath.matrices.linalg" [style="dotted"];
	}
	subgraph "cluster_transformers.models.sew_d" {
		label="transformers.models.sew_d";
		"transformers.models.sew_d" -> "transformers.models.sew_d.configuration_sew_d" [style="dotted"];
		"transformers.models.sew_d" -> "transformers.models.sew_d.modeling_sew_d" [style="dotted"];
	}
	subgraph "cluster_ctypes.macholib" {
		label="ctypes.macholib";
		"ctypes.macholib" -> "ctypes.macholib.dyld" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.framework" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.dylib" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mobilenet_v2" {
		label="transformers.models.mobilenet_v2";
		"transformers.models.mobilenet_v2" -> "transformers.models.mobilenet_v2.configuration_mobilenet_v2" [style="dotted"];
		"transformers.models.mobilenet_v2" -> "transformers.models.mobilenet_v2.feature_extraction_mobilenet_v2" [style="dotted"];
		"transformers.models.mobilenet_v2" -> "transformers.models.mobilenet_v2.image_processing_mobilenet_v2" [style="dotted"];
		"transformers.models.mobilenet_v2" -> "transformers.models.mobilenet_v2.modeling_mobilenet_v2" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._sharding_spec" {
		label="torch.distributed._sharding_spec";
	}
	subgraph "cluster_docutils.writers.latex2e" {
		label="docutils.writers.latex2e";
	}
	subgraph "cluster_kivy.core.clipboard" {
		label="kivy.core.clipboard";
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_dbusklipper" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_pygame" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_sdl2" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_android" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_xclip" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_nspaste" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_gtk3" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_xsel" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_dummy" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard._clipboard_ext" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_winctypes" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard._clipboard_sdl2" [style="dotted"];
	}
	subgraph "cluster_torch.optim" {
		label="torch.optim";
		"torch.optim" -> "torch.optim.lr_scheduler" [style="dotted"];
		"torch.optim" -> "torch.optim.swa_utils" [style="dotted"];
		"torch.optim" -> "torch.optim._adafactor" [style="dotted"];
		"torch.optim" -> "torch.optim.adadelta" [style="dotted"];
		"torch.optim" -> "torch.optim.adagrad" [style="dotted"];
		"torch.optim" -> "torch.optim.adam" [style="dotted"];
		"torch.optim" -> "torch.optim.adamax" [style="dotted"];
		"torch.optim" -> "torch.optim.adamw" [style="dotted"];
		"torch.optim" -> "torch.optim.asgd" [style="dotted"];
		"torch.optim" -> "torch.optim.lbfgs" [style="dotted"];
		"torch.optim" -> "torch.optim.nadam" [style="dotted"];
		"torch.optim" -> "torch.optim.optimizer" [style="dotted"];
		"torch.optim" -> "torch.optim.radam" [style="dotted"];
		"torch.optim" -> "torch.optim.rmsprop" [style="dotted"];
		"torch.optim" -> "torch.optim.rprop" [style="dotted"];
		"torch.optim" -> "torch.optim.sgd" [style="dotted"];
		"torch.optim" -> "torch.optim._functional" [style="dotted"];
		"torch.optim" -> "torch.optim.sparse_adam" [style="dotted"];
		"torch.optim" -> "torch.optim._multi_tensor" [style="dotted"];
	}
	subgraph "cluster_sympy.plotting" {
		label="sympy.plotting";
		"sympy.plotting" -> "sympy.plotting.plot" [style="dotted"];
		"sympy.plotting" -> "sympy.plotting.plot_implicit" [style="dotted"];
		"sympy.plotting" -> "sympy.plotting.textplot" [style="dotted"];
		"sympy.plotting" -> "sympy.plotting.pygletplot" [style="dotted"];
		"sympy.plotting" -> "sympy.plotting.series" [style="dotted"];
		"sympy.plotting" -> "sympy.plotting.utils" [style="dotted"];
		"sympy.plotting" -> "sympy.plotting.intervalmath" [style="dotted"];
		"sympy.plotting" -> "sympy.plotting.plotgrid" [style="dotted"];
		"sympy.plotting" -> "sympy.plotting.backends" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.centrality" {
		label="networkx.algorithms.centrality";
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.betweenness" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.betweenness_subset" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.closeness" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.current_flow_betweenness" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.current_flow_betweenness_subset" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.current_flow_closeness" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.degree_alg" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.dispersion" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.eigenvector" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.group" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.harmonic" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.katz" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.load" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.percolation" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.reaching" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.second_order" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.subgraph_alg" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.trophic" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.voterank_alg" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.laplacian" [style="dotted"];
		"networkx.algorithms.centrality" -> "networkx.algorithms.centrality.flow_matrix" [style="dotted"];
	}
	subgraph "cluster_transformers.models.dac" {
		label="transformers.models.dac";
		"transformers.models.dac" -> "transformers.models.dac.configuration_dac" [style="dotted"];
		"transformers.models.dac" -> "transformers.models.dac.feature_extraction_dac" [style="dotted"];
		"transformers.models.dac" -> "transformers.models.dac.modeling_dac" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning" {
		label="torch.ao.pruning";
		"torch.ao.pruning" -> "torch.ao.pruning._mappings" [style="dotted"];
		"torch.ao.pruning" -> "torch.ao.pruning.sparsifier" [style="dotted"];
		"torch.ao.pruning" -> "torch.ao.pruning.scheduler" [style="dotted"];
		"torch.ao.pruning" -> "torch.ao.pruning._experimental" [style="dotted"];
	}
	subgraph "cluster_transformers.models.fsmt" {
		label="transformers.models.fsmt";
		"transformers.models.fsmt" -> "transformers.models.fsmt.configuration_fsmt" [style="dotted"];
		"transformers.models.fsmt" -> "transformers.models.fsmt.tokenization_fsmt" [style="dotted"];
		"transformers.models.fsmt" -> "transformers.models.fsmt.modeling_fsmt" [style="dotted"];
	}
	subgraph "cluster_win32com.shell" {
		label="win32com.shell";
		"win32com.shell" -> "win32com.shell.shell" [style="dotted"];
		"win32com.shell" -> "win32com.shell.shellcon" [style="dotted"];
	}
	subgraph "cluster_sympy.multipledispatch" {
		label="sympy.multipledispatch";
		"sympy.multipledispatch" -> "sympy.multipledispatch.core" [style="dotted"];
		"sympy.multipledispatch" -> "sympy.multipledispatch.dispatcher" [style="dotted"];
		"sympy.multipledispatch" -> "sympy.multipledispatch.conflict" [style="dotted"];
		"sympy.multipledispatch" -> "sympy.multipledispatch.utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.segformer" {
		label="transformers.models.segformer";
		"transformers.models.segformer" -> "transformers.models.segformer.configuration_segformer" [style="dotted"];
		"transformers.models.segformer" -> "transformers.models.segformer.feature_extraction_segformer" [style="dotted"];
		"transformers.models.segformer" -> "transformers.models.segformer.image_processing_segformer" [style="dotted"];
		"transformers.models.segformer" -> "transformers.models.segformer.modeling_segformer" [style="dotted"];
		"transformers.models.segformer" -> "transformers.models.segformer.modeling_tf_segformer" [style="dotted"];
	}
	subgraph "cluster_torchgen" {
		label="torchgen";
		"torchgen" -> "torchgen.local" [style="dotted"];
		"torchgen" -> "torchgen.model" [style="dotted"];
		"torchgen" -> "torchgen.utils" [style="dotted"];
		"torchgen" -> "torchgen.api" [style="dotted"];
		"torchgen" -> "torchgen.code_template" [style="dotted"];
		"torchgen" -> "torchgen.aoti" [style="dotted"];
		"torchgen" -> "torchgen.gen_schema_utils" [style="dotted"];
	}
	subgraph "cluster_torch.utils.jit" {
		label="torch.utils.jit";
		"torch.utils.jit" -> "torch.utils.jit.log_extract" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bridgetower" {
		label="transformers.models.bridgetower";
		"transformers.models.bridgetower" -> "transformers.models.bridgetower.configuration_bridgetower" [style="dotted"];
		"transformers.models.bridgetower" -> "transformers.models.bridgetower.processing_bridgetower" [style="dotted"];
		"transformers.models.bridgetower" -> "transformers.models.bridgetower.image_processing_bridgetower" [style="dotted"];
		"transformers.models.bridgetower" -> "transformers.models.bridgetower.modeling_bridgetower" [style="dotted"];
	}
	subgraph "cluster_torch._vendor.packaging" {
		label="torch._vendor.packaging";
		"torch._vendor.packaging" -> "torch._vendor.packaging.version" [style="dotted"];
		"torch._vendor.packaging" -> "torch._vendor.packaging._structures" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.community" {
		label="networkx.algorithms.community";
		"networkx.algorithms.community" -> "networkx.algorithms.community.asyn_fluid" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.centrality" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.divisive" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.kclique" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.kernighan_lin" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.label_propagation" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.lukes" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.modularity_max" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.quality" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.community_utils" [style="dotted"];
		"networkx.algorithms.community" -> "networkx.algorithms.community.louvain" [style="dotted"];
	}
	subgraph "cluster_torch.utils.benchmark.op_fuzzers" {
		label="torch.utils.benchmark.op_fuzzers";
		"torch.utils.benchmark.op_fuzzers" -> "torch.utils.benchmark.op_fuzzers.binary" [style="dotted"];
		"torch.utils.benchmark.op_fuzzers" -> "torch.utils.benchmark.op_fuzzers.sparse_binary" [style="dotted"];
		"torch.utils.benchmark.op_fuzzers" -> "torch.utils.benchmark.op_fuzzers.sparse_unary" [style="dotted"];
		"torch.utils.benchmark.op_fuzzers" -> "torch.utils.benchmark.op_fuzzers.spectral" [style="dotted"];
		"torch.utils.benchmark.op_fuzzers" -> "torch.utils.benchmark.op_fuzzers.unary" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._shard.sharded_optim" {
		label="torch.distributed._shard.sharded_optim";
		"torch.distributed._shard.sharded_optim" -> "torch.distributed._shard.sharded_optim.api" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.wheel.vendored.packaging" {
		label="setuptools._vendor.wheel.vendored.packaging";
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._manylinux" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._musllinux" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.tags" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.version" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._structures" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._elffile" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.requirements" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._parser" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging._tokenizer" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.markers" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.specifiers" [style="dotted"];
		"setuptools._vendor.wheel.vendored.packaging" -> "setuptools._vendor.wheel.vendored.packaging.utils" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.more_itertools" {
		label="setuptools._vendor.more_itertools";
		"setuptools._vendor.more_itertools" -> "setuptools._vendor.more_itertools.more" [style="dotted"];
		"setuptools._vendor.more_itertools" -> "setuptools._vendor.more_itertools.recipes" [style="dotted"];
	}
	subgraph "cluster_sympy.combinatorics" {
		label="sympy.combinatorics";
		"sympy.combinatorics" -> "sympy.combinatorics.permutations" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.prufer" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.generators" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.subsets" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.partitions" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.polyhedron" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.perm_groups" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.group_constructs" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.graycode" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.named_groups" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.pc_groups" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.free_groups" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.util" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.homomorphisms" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.fp_groups" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.coset_table" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.galois" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.rewritingsystem" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.rewritingsystem_fsm" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.tensor_can" [style="dotted"];
		"sympy.combinatorics" -> "sympy.combinatorics.testutil" [style="dotted"];
	}
	subgraph "cluster_filelock" {
		label="filelock";
		"filelock" -> "filelock._api" [style="dotted"];
		"filelock" -> "filelock._error" [style="dotted"];
		"filelock" -> "filelock._soft" [style="dotted"];
		"filelock" -> "filelock._unix" [style="dotted"];
		"filelock" -> "filelock._windows" [style="dotted"];
		"filelock" -> "filelock.asyncio" [style="dotted"];
		"filelock" -> "filelock.version" [style="dotted"];
		"filelock" -> "filelock._util" [style="dotted"];
	}
	subgraph "cluster_torch.backends" {
		label="torch.backends";
		"torch.backends" -> "torch.backends.cpu" [style="dotted"];
		"torch.backends" -> "torch.backends.opt_einsum" [style="dotted"];
		"torch.backends" -> "torch.backends.cuda" [style="dotted"];
		"torch.backends" -> "torch.backends.cudnn" [style="dotted"];
		"torch.backends" -> "torch.backends.cusparselt" [style="dotted"];
		"torch.backends" -> "torch.backends.mha" [style="dotted"];
		"torch.backends" -> "torch.backends.mkl" [style="dotted"];
		"torch.backends" -> "torch.backends.mkldnn" [style="dotted"];
		"torch.backends" -> "torch.backends.mps" [style="dotted"];
		"torch.backends" -> "torch.backends.nnpack" [style="dotted"];
		"torch.backends" -> "torch.backends.openmp" [style="dotted"];
		"torch.backends" -> "torch.backends.quantized" [style="dotted"];
		"torch.backends" -> "torch.backends.xnnpack" [style="dotted"];
		"torch.backends" -> "torch.backends.xeon" [style="dotted"];
		"torch.backends" -> "torch.backends._nnapi" [style="dotted"];
		"torch.backends" -> "torch.backends._coreml" [style="dotted"];
	}
	subgraph "cluster_sympy.series" {
		label="sympy.series";
		"sympy.series" -> "sympy.series.order" [style="dotted"];
		"sympy.series" -> "sympy.series.limits" [style="dotted"];
		"sympy.series" -> "sympy.series.gruntz" [style="dotted"];
		"sympy.series" -> "sympy.series.series" [style="dotted"];
		"sympy.series" -> "sympy.series.approximants" [style="dotted"];
		"sympy.series" -> "sympy.series.residues" [style="dotted"];
		"sympy.series" -> "sympy.series.sequences" [style="dotted"];
		"sympy.series" -> "sympy.series.fourier" [style="dotted"];
		"sympy.series" -> "sympy.series.formal" [style="dotted"];
		"sympy.series" -> "sympy.series.limitseq" [style="dotted"];
		"sympy.series" -> "sympy.series.series_class" [style="dotted"];
	}
	subgraph "cluster_transformers.models.pegasus_x" {
		label="transformers.models.pegasus_x";
		"transformers.models.pegasus_x" -> "transformers.models.pegasus_x.configuration_pegasus_x" [style="dotted"];
		"transformers.models.pegasus_x" -> "transformers.models.pegasus_x.modeling_pegasus_x" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mluke" {
		label="transformers.models.mluke";
		"transformers.models.mluke" -> "transformers.models.mluke.tokenization_mluke" [style="dotted"];
	}
	subgraph "cluster_transformers.models.roberta_prelayernorm" {
		label="transformers.models.roberta_prelayernorm";
		"transformers.models.roberta_prelayernorm" -> "transformers.models.roberta_prelayernorm.configuration_roberta_prelayernorm" [style="dotted"];
		"transformers.models.roberta_prelayernorm" -> "transformers.models.roberta_prelayernorm.modeling_roberta_prelayernorm" [style="dotted"];
		"transformers.models.roberta_prelayernorm" -> "transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" [style="dotted"];
		"transformers.models.roberta_prelayernorm" -> "transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.components" {
		label="networkx.algorithms.components";
		"networkx.algorithms.components" -> "networkx.algorithms.components.connected" [style="dotted"];
		"networkx.algorithms.components" -> "networkx.algorithms.components.strongly_connected" [style="dotted"];
		"networkx.algorithms.components" -> "networkx.algorithms.components.weakly_connected" [style="dotted"];
		"networkx.algorithms.components" -> "networkx.algorithms.components.attracting" [style="dotted"];
		"networkx.algorithms.components" -> "networkx.algorithms.components.biconnected" [style="dotted"];
		"networkx.algorithms.components" -> "networkx.algorithms.components.semiconnected" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.quantized.reference" {
		label="torch.ao.nn.quantized.reference";
		"torch.ao.nn.quantized.reference" -> "torch.ao.nn.quantized.reference.modules" [style="dotted"];
	}
	subgraph "cluster_transformers.models.biogpt" {
		label="transformers.models.biogpt";
		"transformers.models.biogpt" -> "transformers.models.biogpt.configuration_biogpt" [style="dotted"];
		"transformers.models.biogpt" -> "transformers.models.biogpt.tokenization_biogpt" [style="dotted"];
		"transformers.models.biogpt" -> "transformers.models.biogpt.modeling_biogpt" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.fx_passes" {
		label="torch._inductor.fx_passes";
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.efficient_conv_bn_eval" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.fb" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.decompose_mem_bound_mm" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.joint_graph" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.post_grad" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.pre_grad" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.freezing_patterns" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.mkldnn_fusion" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.binary_folding" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.quantization" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.split_cat" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.group_batch_fusion" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.misc_patterns" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.numeric_utils" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.b2b_gemm" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.ddp_fusion" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.micro_pipeline_tp" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.reinplace" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.dedupe_symint_uses" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.replace_random" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.fuse_attention" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.pad_mm" [style="dotted"];
		"torch._inductor.fx_passes" -> "torch._inductor.fx_passes.serialized_patterns" [style="dotted"];
	}
	subgraph "cluster_pygments.filters" {
		label="pygments.filters";
	}
	subgraph "cluster_torch._inductor.package" {
		label="torch._inductor.package";
		"torch._inductor.package" -> "torch._inductor.package.package" [style="dotted"];
		"torch._inductor.package" -> "torch._inductor.package.build_package" [style="dotted"];
		"torch._inductor.package" -> "torch._inductor.package.pt2_archive_constants" [style="dotted"];
	}
	subgraph "cluster_torch.utils.benchmark" {
		label="torch.utils.benchmark";
		"torch.utils.benchmark" -> "torch.utils.benchmark.utils" [style="dotted"];
		"torch.utils.benchmark" -> "torch.utils.benchmark.op_fuzzers" [style="dotted"];
		"torch.utils.benchmark" -> "torch.utils.benchmark.examples" [style="dotted"];
	}
	subgraph "cluster_anyio.streams" {
		label="anyio.streams";
		"anyio.streams" -> "anyio.streams.memory" [style="dotted"];
		"anyio.streams" -> "anyio.streams.stapled" [style="dotted"];
		"anyio.streams" -> "anyio.streams.tls" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vit_mae" {
		label="transformers.models.vit_mae";
		"transformers.models.vit_mae" -> "transformers.models.vit_mae.configuration_vit_mae" [style="dotted"];
		"transformers.models.vit_mae" -> "transformers.models.vit_mae.modeling_vit_mae" [style="dotted"];
		"transformers.models.vit_mae" -> "transformers.models.vit_mae.modeling_tf_vit_mae" [style="dotted"];
	}
	subgraph "cluster_tqdm.contrib" {
		label="tqdm.contrib";
		"tqdm.contrib" -> "tqdm.contrib.concurrent" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.importlib_resources.future" {
		label="setuptools._vendor.importlib_resources.future";
		"setuptools._vendor.importlib_resources.future" -> "setuptools._vendor.importlib_resources.future.adapters" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vision_encoder_decoder" {
		label="transformers.models.vision_encoder_decoder";
		"transformers.models.vision_encoder_decoder" -> "transformers.models.vision_encoder_decoder.configuration_vision_encoder_decoder" [style="dotted"];
		"transformers.models.vision_encoder_decoder" -> "transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder" [style="dotted"];
		"transformers.models.vision_encoder_decoder" -> "transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" [style="dotted"];
		"transformers.models.vision_encoder_decoder" -> "transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.open_llama" {
		label="transformers.models.deprecated.open_llama";
		"transformers.models.deprecated.open_llama" -> "transformers.models.deprecated.open_llama.configuration_open_llama" [style="dotted"];
		"transformers.models.deprecated.open_llama" -> "transformers.models.deprecated.open_llama.modeling_open_llama" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning._experimental.pruner" {
		label="torch.ao.pruning._experimental.pruner";
		"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.base_structured_sparsifier" [style="dotted"];
		"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.FPGM_pruner" [style="dotted"];
		"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.lstm_saliency_pruner" [style="dotted"];
		"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.parametrization" [style="dotted"];
		"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.saliency_pruner" [style="dotted"];
		"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.match_utils" [style="dotted"];
		"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.prune_functions" [style="dotted"];
	}
	subgraph "cluster_transformers.models.imagegpt" {
		label="transformers.models.imagegpt";
		"transformers.models.imagegpt" -> "transformers.models.imagegpt.configuration_imagegpt" [style="dotted"];
		"transformers.models.imagegpt" -> "transformers.models.imagegpt.feature_extraction_imagegpt" [style="dotted"];
		"transformers.models.imagegpt" -> "transformers.models.imagegpt.image_processing_imagegpt" [style="dotted"];
		"transformers.models.imagegpt" -> "transformers.models.imagegpt.modeling_imagegpt" [style="dotted"];
	}
	subgraph "cluster_transformers.models.layoutlmv3" {
		label="transformers.models.layoutlmv3";
		"transformers.models.layoutlmv3" -> "transformers.models.layoutlmv3.configuration_layoutlmv3" [style="dotted"];
		"transformers.models.layoutlmv3" -> "transformers.models.layoutlmv3.processing_layoutlmv3" [style="dotted"];
		"transformers.models.layoutlmv3" -> "transformers.models.layoutlmv3.tokenization_layoutlmv3" [style="dotted"];
		"transformers.models.layoutlmv3" -> "transformers.models.layoutlmv3.tokenization_layoutlmv3_fast" [style="dotted"];
		"transformers.models.layoutlmv3" -> "transformers.models.layoutlmv3.modeling_layoutlmv3" [style="dotted"];
		"transformers.models.layoutlmv3" -> "transformers.models.layoutlmv3.modeling_tf_layoutlmv3" [style="dotted"];
		"transformers.models.layoutlmv3" -> "transformers.models.layoutlmv3.feature_extraction_layoutlmv3" [style="dotted"];
		"transformers.models.layoutlmv3" -> "transformers.models.layoutlmv3.image_processing_layoutlmv3" [style="dotted"];
	}
	subgraph "cluster_numpy.fft" {
		label="numpy.fft";
		"numpy.fft" -> "numpy.fft._pocketfft_umath" [style="dotted"];
		"numpy.fft" -> "numpy.fft._pocketfft" [style="dotted"];
		"numpy.fft" -> "numpy.fft._helper" [style="dotted"];
		"numpy.fft" -> "numpy.fft.helper" [style="dotted"];
	}
	subgraph "cluster_pywin" {
		label="pywin";
		"pywin" -> "pywin.mfc" [style="dotted"];
		"pywin" -> "pywin.dialogs" [style="dotted"];
	}
	subgraph "cluster_transformers.models.convnext" {
		label="transformers.models.convnext";
		"transformers.models.convnext" -> "transformers.models.convnext.configuration_convnext" [style="dotted"];
		"transformers.models.convnext" -> "transformers.models.convnext.feature_extraction_convnext" [style="dotted"];
		"transformers.models.convnext" -> "transformers.models.convnext.image_processing_convnext" [style="dotted"];
		"transformers.models.convnext" -> "transformers.models.convnext.modeling_convnext" [style="dotted"];
		"transformers.models.convnext" -> "transformers.models.convnext.modeling_tf_convnext" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mpt" {
		label="transformers.models.mpt";
		"transformers.models.mpt" -> "transformers.models.mpt.configuration_mpt" [style="dotted"];
		"transformers.models.mpt" -> "transformers.models.mpt.modeling_mpt" [style="dotted"];
	}
	subgraph "cluster_concurrent" {
		label="concurrent";
		"concurrent" -> "concurrent.futures" [style="dotted"];
	}
	subgraph "cluster_anyio._core" {
		label="anyio._core";
		"anyio._core" -> "anyio._core._eventloop" [style="dotted"];
		"anyio._core" -> "anyio._core._exceptions" [style="dotted"];
		"anyio._core" -> "anyio._core._fileio" [style="dotted"];
		"anyio._core" -> "anyio._core._resources" [style="dotted"];
		"anyio._core" -> "anyio._core._signals" [style="dotted"];
		"anyio._core" -> "anyio._core._sockets" [style="dotted"];
		"anyio._core" -> "anyio._core._streams" [style="dotted"];
		"anyio._core" -> "anyio._core._subprocesses" [style="dotted"];
		"anyio._core" -> "anyio._core._synchronization" [style="dotted"];
		"anyio._core" -> "anyio._core._tasks" [style="dotted"];
		"anyio._core" -> "anyio._core._testing" [style="dotted"];
		"anyio._core" -> "anyio._core._typedattr" [style="dotted"];
	}
	subgraph "cluster_transformers.models.granitemoe" {
		label="transformers.models.granitemoe";
		"transformers.models.granitemoe" -> "transformers.models.granitemoe.configuration_granitemoe" [style="dotted"];
		"transformers.models.granitemoe" -> "transformers.models.granitemoe.modeling_granitemoe" [style="dotted"];
	}
	subgraph "cluster_transformers.models.focalnet" {
		label="transformers.models.focalnet";
		"transformers.models.focalnet" -> "transformers.models.focalnet.configuration_focalnet" [style="dotted"];
		"transformers.models.focalnet" -> "transformers.models.focalnet.modeling_focalnet" [style="dotted"];
	}
	subgraph "cluster_torch.onnx._internal.fx" {
		label="torch.onnx._internal.fx";
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.patcher" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.serialization" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.registration" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.decomposition_table" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.type_utils" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.diagnostics" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.dynamo_graph_extractor" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.onnxfunction_dispatcher" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx._pass" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.fx_symbolic_graph_extractor" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.decomposition_skip" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.fx_onnx_interpreter" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.analysis" [style="dotted"];
		"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.passes" [style="dotted"];
	}
	subgraph "cluster_numpy.random" {
		label="numpy.random";
		"numpy.random" -> "numpy.random._pickle" [style="dotted"];
		"numpy.random" -> "numpy.random._common" [style="dotted"];
		"numpy.random" -> "numpy.random._bounded_integers" [style="dotted"];
		"numpy.random" -> "numpy.random._generator" [style="dotted"];
		"numpy.random" -> "numpy.random.bit_generator" [style="dotted"];
		"numpy.random" -> "numpy.random._mt19937" [style="dotted"];
		"numpy.random" -> "numpy.random._pcg64" [style="dotted"];
		"numpy.random" -> "numpy.random._philox" [style="dotted"];
		"numpy.random" -> "numpy.random._sfc64" [style="dotted"];
		"numpy.random" -> "numpy.random.mtrand" [style="dotted"];
		"numpy.random" -> "numpy.random.RandomState" [style="dotted"];
	}
	subgraph "cluster_torch._library" {
		label="torch._library";
		"torch._library" -> "torch._library.utils" [style="dotted"];
		"torch._library" -> "torch._library.autograd" [style="dotted"];
		"torch._library" -> "torch._library.fake_impl" [style="dotted"];
		"torch._library" -> "torch._library.simple_registry" [style="dotted"];
		"torch._library" -> "torch._library.fake_class_registry" [style="dotted"];
		"torch._library" -> "torch._library.triton" [style="dotted"];
		"torch._library" -> "torch._library.custom_ops" [style="dotted"];
		"torch._library" -> "torch._library.infer_schema" [style="dotted"];
	}
	subgraph "cluster_transformers.models.seamless_m4t" {
		label="transformers.models.seamless_m4t";
		"transformers.models.seamless_m4t" -> "transformers.models.seamless_m4t.configuration_seamless_m4t" [style="dotted"];
		"transformers.models.seamless_m4t" -> "transformers.models.seamless_m4t.feature_extraction_seamless_m4t" [style="dotted"];
		"transformers.models.seamless_m4t" -> "transformers.models.seamless_m4t.processing_seamless_m4t" [style="dotted"];
		"transformers.models.seamless_m4t" -> "transformers.models.seamless_m4t.tokenization_seamless_m4t" [style="dotted"];
		"transformers.models.seamless_m4t" -> "transformers.models.seamless_m4t.tokenization_seamless_m4t_fast" [style="dotted"];
		"transformers.models.seamless_m4t" -> "transformers.models.seamless_m4t.modeling_seamless_m4t" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gemma" {
		label="transformers.models.gemma";
		"transformers.models.gemma" -> "transformers.models.gemma.configuration_gemma" [style="dotted"];
		"transformers.models.gemma" -> "transformers.models.gemma.tokenization_gemma" [style="dotted"];
		"transformers.models.gemma" -> "transformers.models.gemma.tokenization_gemma_fast" [style="dotted"];
		"transformers.models.gemma" -> "transformers.models.gemma.modeling_gemma" [style="dotted"];
		"transformers.models.gemma" -> "transformers.models.gemma.modeling_flax_gemma" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.opinfo.definitions" {
		label="torch.testing._internal.opinfo.definitions";
		"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions._masked" [style="dotted"];
		"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.fft" [style="dotted"];
		"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.linalg" [style="dotted"];
		"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.signal" [style="dotted"];
		"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.special" [style="dotted"];
		"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.sparse" [style="dotted"];
	}
	subgraph "cluster_docutils.transforms" {
		label="docutils.transforms";
		"docutils.transforms" -> "docutils.transforms.universal" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.writer_aux" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.frontmatter" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.references" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.misc" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.parts" [style="dotted"];
	}
	subgraph "cluster_torch._export.passes" {
		label="torch._export.passes";
		"torch._export.passes" -> "torch._export.passes.replace_view_ops_with_view_copy_ops_pass" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.lift_constants_pass" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.add_runtime_assertions_for_constraints_pass" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.replace_quantized_ops_with_standard_ops_pass" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes._node_metadata_hook" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.collect_tracepoints_pass" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.replace_autocast_with_hop_pass" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.replace_set_grad_with_hop_pass" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.replace_with_hop_pass_util" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.constant_folding" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.functionalize_side_effectful_ops_pass" [style="dotted"];
		"torch._export.passes" -> "torch._export.passes.remove_runtime_assertions" [style="dotted"];
	}
	subgraph "cluster_torch.ao.pruning._experimental" {
		label="torch.ao.pruning._experimental";
		"torch.ao.pruning._experimental" -> "torch.ao.pruning._experimental.pruner" [style="dotted"];
		"torch.ao.pruning._experimental" -> "torch.ao.pruning._experimental.data_sparsifier" [style="dotted"];
		"torch.ao.pruning._experimental" -> "torch.ao.pruning._experimental.data_scheduler" [style="dotted"];
		"torch.ao.pruning._experimental" -> "torch.ao.pruning._experimental.activation_sparsifier" [style="dotted"];
	}
	subgraph "cluster_torch.amp" {
		label="torch.amp";
		"torch.amp" -> "torch.amp.autocast_mode" [style="dotted"];
		"torch.amp" -> "torch.amp.grad_scaler" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bert" {
		label="transformers.models.bert";
		"transformers.models.bert" -> "transformers.models.bert.configuration_bert" [style="dotted"];
		"transformers.models.bert" -> "transformers.models.bert.tokenization_bert" [style="dotted"];
		"transformers.models.bert" -> "transformers.models.bert.tokenization_bert_fast" [style="dotted"];
		"transformers.models.bert" -> "transformers.models.bert.modeling_bert" [style="dotted"];
		"transformers.models.bert" -> "transformers.models.bert.modeling_tf_bert" [style="dotted"];
		"transformers.models.bert" -> "transformers.models.bert.tokenization_bert_tf" [style="dotted"];
		"transformers.models.bert" -> "transformers.models.bert.modeling_flax_bert" [style="dotted"];
	}
	subgraph "cluster_transformers.models.pix2struct" {
		label="transformers.models.pix2struct";
		"transformers.models.pix2struct" -> "transformers.models.pix2struct.configuration_pix2struct" [style="dotted"];
		"transformers.models.pix2struct" -> "transformers.models.pix2struct.processing_pix2struct" [style="dotted"];
		"transformers.models.pix2struct" -> "transformers.models.pix2struct.image_processing_pix2struct" [style="dotted"];
		"transformers.models.pix2struct" -> "transformers.models.pix2struct.modeling_pix2struct" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.flow" {
		label="networkx.algorithms.flow";
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.maxflow" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.mincost" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.boykovkolmogorov" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.dinitz_alg" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.edmondskarp" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.gomory_hu" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.preflowpush" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.shortestaugmentingpath" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.capacityscaling" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.networksimplex" [style="dotted"];
		"networkx.algorithms.flow" -> "networkx.algorithms.flow.utils" [style="dotted"];
	}
	subgraph "cluster_collections" {
		label="collections";
		"collections" -> "collections.Iterable" [style="dotted"];
		"collections" -> "collections.Sequence" [style="dotted"];
		"collections" -> "collections.Iterator" [style="dotted"];
		"collections" -> "collections.Mapping" [style="dotted"];
		"collections" -> "collections.MutableMapping" [style="dotted"];
		"collections" -> "collections.abc" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.backports" {
		label="setuptools._vendor.backports";
		"setuptools._vendor.backports" -> "setuptools._vendor.backports.tarfile" [style="dotted"];
	}
	subgraph "cluster_click" {
		label="click";
		"click" -> "click.types" [style="dotted"];
		"click" -> "click.core" [style="dotted"];
		"click" -> "click.decorators" [style="dotted"];
		"click" -> "click.exceptions" [style="dotted"];
		"click" -> "click.formatting" [style="dotted"];
		"click" -> "click.globals" [style="dotted"];
		"click" -> "click.parser" [style="dotted"];
		"click" -> "click.termui" [style="dotted"];
		"click" -> "click.utils" [style="dotted"];
		"click" -> "click._compat" [style="dotted"];
		"click" -> "click._winconsole" [style="dotted"];
		"click" -> "click._termui_impl" [style="dotted"];
		"click" -> "click._textwrap" [style="dotted"];
		"click" -> "click.shell_completion" [style="dotted"];
	}
	subgraph "cluster_transformers.models.qwen2" {
		label="transformers.models.qwen2";
		"transformers.models.qwen2" -> "transformers.models.qwen2.configuration_qwen2" [style="dotted"];
		"transformers.models.qwen2" -> "transformers.models.qwen2.tokenization_qwen2" [style="dotted"];
		"transformers.models.qwen2" -> "transformers.models.qwen2.tokenization_qwen2_fast" [style="dotted"];
		"transformers.models.qwen2" -> "transformers.models.qwen2.modeling_qwen2" [style="dotted"];
	}
	subgraph "cluster_transformers.models.luke" {
		label="transformers.models.luke";
		"transformers.models.luke" -> "transformers.models.luke.configuration_luke" [style="dotted"];
		"transformers.models.luke" -> "transformers.models.luke.tokenization_luke" [style="dotted"];
		"transformers.models.luke" -> "transformers.models.luke.modeling_luke" [style="dotted"];
	}
	subgraph "cluster_sympy.simplify" {
		label="sympy.simplify";
		"sympy.simplify" -> "sympy.simplify.cse_opts" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.gammasimp" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.simplify" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.fu" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.sqrtdenest" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.cse_main" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.epathtools" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.hyperexpand" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.radsimp" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.trigsimp" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.powsimp" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.combsimp" [style="dotted"];
		"sympy.simplify" -> "sympy.simplify.ratsimp" [style="dotted"];
	}
	subgraph "cluster_importlib.resources" {
		label="importlib.resources";
		"importlib.resources" -> "importlib.resources._common" [style="dotted"];
		"importlib.resources" -> "importlib.resources._legacy" [style="dotted"];
		"importlib.resources" -> "importlib.resources.abc" [style="dotted"];
		"importlib.resources" -> "importlib.resources._adapters" [style="dotted"];
		"importlib.resources" -> "importlib.resources.readers" [style="dotted"];
		"importlib.resources" -> "importlib.resources._itertools" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.serialization" {
		label="huggingface_hub.serialization";
		"huggingface_hub.serialization" -> "huggingface_hub.serialization._base" [style="dotted"];
		"huggingface_hub.serialization" -> "huggingface_hub.serialization._tensorflow" [style="dotted"];
		"huggingface_hub.serialization" -> "huggingface_hub.serialization._torch" [style="dotted"];
	}
	subgraph "cluster_dbm" {
		label="dbm";
		"dbm" -> "dbm.ndbm" [style="dotted"];
		"dbm" -> "dbm.gnu" [style="dotted"];
		"dbm" -> "dbm.dumb" [style="dotted"];
	}
	subgraph "cluster_torch.backends.mkl" {
		label="torch.backends.mkl";
	}
	subgraph "cluster_kivy.input.providers" {
		label="kivy.input.providers";
		"kivy.input.providers" -> "kivy.input.providers.tuio" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.mouse" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.wm_touch" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.wm_pen" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.mactouch" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.probesysfs" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.mtdev" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.hidinput" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.linuxwacom" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.androidjoystick" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.leapfinger" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.wm_common" [style="dotted"];
	}
	subgraph "cluster_torch.utils.data.datapipes.iter" {
		label="torch.utils.data.datapipes.iter";
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.callable" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.combinatorics" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.combining" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.filelister" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.fileopener" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.grouping" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.routeddecoder" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.selecting" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.sharding" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.streamreader" [style="dotted"];
		"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.idefics2" {
		label="transformers.models.idefics2";
		"transformers.models.idefics2" -> "transformers.models.idefics2.configuration_idefics2" [style="dotted"];
		"transformers.models.idefics2" -> "transformers.models.idefics2.image_processing_idefics2" [style="dotted"];
		"transformers.models.idefics2" -> "transformers.models.idefics2.modeling_idefics2" [style="dotted"];
		"transformers.models.idefics2" -> "transformers.models.idefics2.processing_idefics2" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deberta" {
		label="transformers.models.deberta";
		"transformers.models.deberta" -> "transformers.models.deberta.configuration_deberta" [style="dotted"];
		"transformers.models.deberta" -> "transformers.models.deberta.tokenization_deberta" [style="dotted"];
		"transformers.models.deberta" -> "transformers.models.deberta.tokenization_deberta_fast" [style="dotted"];
		"transformers.models.deberta" -> "transformers.models.deberta.modeling_deberta" [style="dotted"];
		"transformers.models.deberta" -> "transformers.models.deberta.modeling_tf_deberta" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.efficientformer" {
		label="transformers.models.deprecated.efficientformer";
		"transformers.models.deprecated.efficientformer" -> "transformers.models.deprecated.efficientformer.configuration_efficientformer" [style="dotted"];
		"transformers.models.deprecated.efficientformer" -> "transformers.models.deprecated.efficientformer.image_processing_efficientformer" [style="dotted"];
		"transformers.models.deprecated.efficientformer" -> "transformers.models.deprecated.efficientformer.modeling_efficientformer" [style="dotted"];
		"transformers.models.deprecated.efficientformer" -> "transformers.models.deprecated.efficientformer.modeling_tf_efficientformer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.owlvit" {
		label="transformers.models.owlvit";
		"transformers.models.owlvit" -> "transformers.models.owlvit.configuration_owlvit" [style="dotted"];
		"transformers.models.owlvit" -> "transformers.models.owlvit.processing_owlvit" [style="dotted"];
		"transformers.models.owlvit" -> "transformers.models.owlvit.feature_extraction_owlvit" [style="dotted"];
		"transformers.models.owlvit" -> "transformers.models.owlvit.image_processing_owlvit" [style="dotted"];
		"transformers.models.owlvit" -> "transformers.models.owlvit.modeling_owlvit" [style="dotted"];
	}
	subgraph "cluster_past.types" {
		label="past.types";
		"past.types" -> "past.types.basestring" [style="dotted"];
		"past.types" -> "past.types.olddict" [style="dotted"];
		"past.types" -> "past.types.oldstr" [style="dotted"];
	}
	subgraph "cluster_torch._subclasses" {
		label="torch._subclasses";
		"torch._subclasses" -> "torch._subclasses.fake_tensor" [style="dotted"];
		"torch._subclasses" -> "torch._subclasses.fake_utils" [style="dotted"];
		"torch._subclasses" -> "torch._subclasses.functional_tensor" [style="dotted"];
		"torch._subclasses" -> "torch._subclasses.schema_check_mode" [style="dotted"];
		"torch._subclasses" -> "torch._subclasses.meta_utils" [style="dotted"];
		"torch._subclasses" -> "torch._subclasses.fake_impls" [style="dotted"];
		"torch._subclasses" -> "torch._subclasses._fake_tensor_utils" [style="dotted"];
	}
	subgraph "cluster_sympy.physics" {
		label="sympy.physics";
		"sympy.physics" -> "sympy.physics.units" [style="dotted"];
		"sympy.physics" -> "sympy.physics.matrices" [style="dotted"];
		"sympy.physics" -> "sympy.physics.control" [style="dotted"];
	}
	subgraph "cluster_torch.onnx" {
		label="torch.onnx";
		"torch.onnx" -> "torch.onnx._exporter_states" [style="dotted"];
		"torch.onnx" -> "torch.onnx._constants" [style="dotted"];
		"torch.onnx" -> "torch.onnx.errors" [style="dotted"];
		"torch.onnx" -> "torch.onnx._type_utils" [style="dotted"];
		"torch.onnx" -> "torch.onnx._deprecation" [style="dotted"];
		"torch.onnx" -> "torch.onnx.utils" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_helper" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_caffe2" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset7" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset8" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset9" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset10" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset11" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset12" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset13" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset14" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset15" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset16" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset17" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset18" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset19" [style="dotted"];
		"torch.onnx" -> "torch.onnx.symbolic_opset20" [style="dotted"];
		"torch.onnx" -> "torch.onnx._internal" [style="dotted"];
		"torch.onnx" -> "torch.onnx._flags" [style="dotted"];
		"torch.onnx" -> "torch.onnx.operators" [style="dotted"];
		"torch.onnx" -> "torch.onnx._globals" [style="dotted"];
		"torch.onnx" -> "torch.onnx._experimental" [style="dotted"];
		"torch.onnx" -> "torch.onnx._onnx_supported_ops" [style="dotted"];
		"torch.onnx" -> "torch.onnx.verification" [style="dotted"];
	}
	subgraph "cluster_transformers.models.pegasus" {
		label="transformers.models.pegasus";
		"transformers.models.pegasus" -> "transformers.models.pegasus.configuration_pegasus" [style="dotted"];
		"transformers.models.pegasus" -> "transformers.models.pegasus.tokenization_pegasus" [style="dotted"];
		"transformers.models.pegasus" -> "transformers.models.pegasus.tokenization_pegasus_fast" [style="dotted"];
		"transformers.models.pegasus" -> "transformers.models.pegasus.modeling_pegasus" [style="dotted"];
		"transformers.models.pegasus" -> "transformers.models.pegasus.modeling_tf_pegasus" [style="dotted"];
		"transformers.models.pegasus" -> "transformers.models.pegasus.modeling_flax_pegasus" [style="dotted"];
	}
	subgraph "cluster_transformers.models.timm_backbone" {
		label="transformers.models.timm_backbone";
		"transformers.models.timm_backbone" -> "transformers.models.timm_backbone.configuration_timm_backbone" [style="dotted"];
		"transformers.models.timm_backbone" -> "transformers.models.timm_backbone.modeling_timm_backbone" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gptj" {
		label="transformers.models.gptj";
		"transformers.models.gptj" -> "transformers.models.gptj.configuration_gptj" [style="dotted"];
		"transformers.models.gptj" -> "transformers.models.gptj.modeling_gptj" [style="dotted"];
		"transformers.models.gptj" -> "transformers.models.gptj.modeling_tf_gptj" [style="dotted"];
		"transformers.models.gptj" -> "transformers.models.gptj.modeling_flax_gptj" [style="dotted"];
	}
	subgraph "cluster_transformers.models.speech_to_text" {
		label="transformers.models.speech_to_text";
		"transformers.models.speech_to_text" -> "transformers.models.speech_to_text.configuration_speech_to_text" [style="dotted"];
		"transformers.models.speech_to_text" -> "transformers.models.speech_to_text.feature_extraction_speech_to_text" [style="dotted"];
		"transformers.models.speech_to_text" -> "transformers.models.speech_to_text.processing_speech_to_text" [style="dotted"];
		"transformers.models.speech_to_text" -> "transformers.models.speech_to_text.tokenization_speech_to_text" [style="dotted"];
		"transformers.models.speech_to_text" -> "transformers.models.speech_to_text.modeling_tf_speech_to_text" [style="dotted"];
		"transformers.models.speech_to_text" -> "transformers.models.speech_to_text.modeling_speech_to_text" [style="dotted"];
	}
	subgraph "cluster_anyio.abc" {
		label="anyio.abc";
		"anyio.abc" -> "anyio.abc._eventloop" [style="dotted"];
		"anyio.abc" -> "anyio.abc._resources" [style="dotted"];
		"anyio.abc" -> "anyio.abc._sockets" [style="dotted"];
		"anyio.abc" -> "anyio.abc._streams" [style="dotted"];
		"anyio.abc" -> "anyio.abc._subprocesses" [style="dotted"];
		"anyio.abc" -> "anyio.abc._tasks" [style="dotted"];
		"anyio.abc" -> "anyio.abc._testing" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.xetex" {
		label="docutils.writers.xetex";
	}
	subgraph "cluster_sympy.functions" {
		label="sympy.functions";
		"sympy.functions" -> "sympy.functions.special" [style="dotted"];
		"sympy.functions" -> "sympy.functions.combinatorial" [style="dotted"];
		"sympy.functions" -> "sympy.functions.elementary" [style="dotted"];
	}
	subgraph "cluster_kivy.input" {
		label="kivy.input";
		"kivy.input" -> "kivy.input.motionevent" [style="dotted"];
		"kivy.input" -> "kivy.input.providers" [style="dotted"];
		"kivy.input" -> "kivy.input.postproc" [style="dotted"];
		"kivy.input" -> "kivy.input.provider" [style="dotted"];
		"kivy.input" -> "kivy.input.factory" [style="dotted"];
		"kivy.input" -> "kivy.input.shape" [style="dotted"];
	}
	subgraph "cluster_transformers.models.glpn" {
		label="transformers.models.glpn";
		"transformers.models.glpn" -> "transformers.models.glpn.configuration_glpn" [style="dotted"];
		"transformers.models.glpn" -> "transformers.models.glpn.feature_extraction_glpn" [style="dotted"];
		"transformers.models.glpn" -> "transformers.models.glpn.image_processing_glpn" [style="dotted"];
		"transformers.models.glpn" -> "transformers.models.glpn.modeling_glpn" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.intrinsic.quantized.dynamic" {
		label="torch.ao.nn.intrinsic.quantized.dynamic";
		"torch.ao.nn.intrinsic.quantized.dynamic" -> "torch.ao.nn.intrinsic.quantized.dynamic.modules" [style="dotted"];
	}
	subgraph "cluster_transformers.onnx" {
		label="transformers.onnx";
		"transformers.onnx" -> "transformers.onnx.config" [style="dotted"];
		"transformers.onnx" -> "transformers.onnx.convert" [style="dotted"];
		"transformers.onnx" -> "transformers.onnx.features" [style="dotted"];
		"transformers.onnx" -> "transformers.onnx.utils" [style="dotted"];
	}
	subgraph "cluster_future.moves.test" {
		label="future.moves.test";
		"future.moves.test" -> "future.moves.test.support" [style="dotted"];
	}
	subgraph "cluster_torch.ao.ns.fx" {
		label="torch.ao.ns.fx";
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.mappings" [style="dotted"];
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.ns_types" [style="dotted"];
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.graph_matcher" [style="dotted"];
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.n_shadows_utils" [style="dotted"];
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.qconfig_multi_mapping" [style="dotted"];
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.graph_passes" [style="dotted"];
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.utils" [style="dotted"];
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.weight_utils" [style="dotted"];
		"torch.ao.ns.fx" -> "torch.ao.ns.fx.pattern_utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.informer" {
		label="transformers.models.informer";
		"transformers.models.informer" -> "transformers.models.informer.configuration_informer" [style="dotted"];
		"transformers.models.informer" -> "transformers.models.informer.modeling_informer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.qwen2_audio" {
		label="transformers.models.qwen2_audio";
		"transformers.models.qwen2_audio" -> "transformers.models.qwen2_audio.configuration_qwen2_audio" [style="dotted"];
		"transformers.models.qwen2_audio" -> "transformers.models.qwen2_audio.processing_qwen2_audio" [style="dotted"];
		"transformers.models.qwen2_audio" -> "transformers.models.qwen2_audio.modeling_qwen2_audio" [style="dotted"];
	}
	subgraph "cluster_transformers.models.vit_msn" {
		label="transformers.models.vit_msn";
		"transformers.models.vit_msn" -> "transformers.models.vit_msn.configuration_vit_msn" [style="dotted"];
		"transformers.models.vit_msn" -> "transformers.models.vit_msn.modeling_vit_msn" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bigbird_pegasus" {
		label="transformers.models.bigbird_pegasus";
		"transformers.models.bigbird_pegasus" -> "transformers.models.bigbird_pegasus.configuration_bigbird_pegasus" [style="dotted"];
		"transformers.models.bigbird_pegasus" -> "transformers.models.bigbird_pegasus.modeling_bigbird_pegasus" [style="dotted"];
	}
	subgraph "cluster_torch.export" {
		label="torch.export";
		"torch.export" -> "torch.export.dynamic_shapes" [style="dotted"];
		"torch.export" -> "torch.export.exported_program" [style="dotted"];
		"torch.export" -> "torch.export.graph_signature" [style="dotted"];
		"torch.export" -> "torch.export.unflatten" [style="dotted"];
		"torch.export" -> "torch.export._trace" [style="dotted"];
		"torch.export" -> "torch.export._tree_utils" [style="dotted"];
		"torch.export" -> "torch.export._unlift" [style="dotted"];
		"torch.export" -> "torch.export._remove_effect_tokens_pass" [style="dotted"];
		"torch.export" -> "torch.export._safeguard" [style="dotted"];
		"torch.export" -> "torch.export._remove_auto_functionalized_pass" [style="dotted"];
		"torch.export" -> "torch.export.custom_obj" [style="dotted"];
		"torch.export" -> "torch.export.passes" [style="dotted"];
		"torch.export" -> "torch.export.experimental" [style="dotted"];
	}
	subgraph "cluster_transformers.models.switch_transformers" {
		label="transformers.models.switch_transformers";
		"transformers.models.switch_transformers" -> "transformers.models.switch_transformers.configuration_switch_transformers" [style="dotted"];
		"transformers.models.switch_transformers" -> "transformers.models.switch_transformers.modeling_switch_transformers" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mgp_str" {
		label="transformers.models.mgp_str";
		"transformers.models.mgp_str" -> "transformers.models.mgp_str.configuration_mgp_str" [style="dotted"];
		"transformers.models.mgp_str" -> "transformers.models.mgp_str.processing_mgp_str" [style="dotted"];
		"transformers.models.mgp_str" -> "transformers.models.mgp_str.tokenization_mgp_str" [style="dotted"];
		"transformers.models.mgp_str" -> "transformers.models.mgp_str.modeling_mgp_str" [style="dotted"];
	}
	subgraph "cluster_transformers.models.speecht5" {
		label="transformers.models.speecht5";
		"transformers.models.speecht5" -> "transformers.models.speecht5.configuration_speecht5" [style="dotted"];
		"transformers.models.speecht5" -> "transformers.models.speecht5.feature_extraction_speecht5" [style="dotted"];
		"transformers.models.speecht5" -> "transformers.models.speecht5.processing_speecht5" [style="dotted"];
		"transformers.models.speecht5" -> "transformers.models.speecht5.tokenization_speecht5" [style="dotted"];
		"transformers.models.speecht5" -> "transformers.models.speecht5.modeling_speecht5" [style="dotted"];
		"transformers.models.speecht5" -> "transformers.models.speecht5.number_normalizer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.roc_bert" {
		label="transformers.models.roc_bert";
		"transformers.models.roc_bert" -> "transformers.models.roc_bert.configuration_roc_bert" [style="dotted"];
		"transformers.models.roc_bert" -> "transformers.models.roc_bert.tokenization_roc_bert" [style="dotted"];
		"transformers.models.roc_bert" -> "transformers.models.roc_bert.modeling_roc_bert" [style="dotted"];
	}
	subgraph "cluster_sympy.polys.matrices" {
		label="sympy.polys.matrices";
		"sympy.polys.matrices" -> "sympy.polys.matrices.domainmatrix" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.exceptions" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.normalforms" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.domainscalar" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.ddm" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.sdm" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.dfm" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.rref" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.dense" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices._typing" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices._dfm" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.lll" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.linsolve" [style="dotted"];
		"sympy.polys.matrices" -> "sympy.polys.matrices.eigen" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.algorithms._comm_hooks" {
		label="torch.distributed.algorithms._comm_hooks";
		"torch.distributed.algorithms._comm_hooks" -> "torch.distributed.algorithms._comm_hooks.default_hooks" [style="dotted"];
	}
	subgraph "cluster_sympy.parsing" {
		label="sympy.parsing";
		"sympy.parsing" -> "sympy.parsing.sympy_parser" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.odf_odt" {
		label="docutils.writers.odf_odt";
		"docutils.writers.odf_odt" -> "docutils.writers.odf_odt.pygmentsformatter" [style="dotted"];
		"docutils.writers.odf_odt" -> "docutils.writers.odf_odt.prepstyles" [style="dotted"];
	}
	subgraph "cluster_sympy.strategies.branch" {
		label="sympy.strategies.branch";
		"sympy.strategies.branch" -> "sympy.strategies.branch.traverse" [style="dotted"];
		"sympy.strategies.branch" -> "sympy.strategies.branch.core" [style="dotted"];
		"sympy.strategies.branch" -> "sympy.strategies.branch.tools" [style="dotted"];
	}
	subgraph "cluster_torch.utils.model_dump" {
		label="torch.utils.model_dump";
		"torch.utils.model_dump" -> "torch.utils.model_dump.__main__" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.distributed.rpc.jit" {
		label="torch.testing._internal.distributed.rpc.jit";
		"torch.testing._internal.distributed.rpc.jit" -> "torch.testing._internal.distributed.rpc.jit.dist_autograd_test" [style="dotted"];
		"torch.testing._internal.distributed.rpc.jit" -> "torch.testing._internal.distributed.rpc.jit.rpc_test" [style="dotted"];
		"torch.testing._internal.distributed.rpc.jit" -> "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.multiprocessing.errors" {
		label="torch.distributed.elastic.multiprocessing.errors";
		"torch.distributed.elastic.multiprocessing.errors" -> "torch.distributed.elastic.multiprocessing.errors.error_handler" [style="dotted"];
		"torch.distributed.elastic.multiprocessing.errors" -> "torch.distributed.elastic.multiprocessing.errors.handlers" [style="dotted"];
	}
	subgraph "cluster_sympy.codegen" {
		label="sympy.codegen";
		"sympy.codegen" -> "sympy.codegen.ast" [style="dotted"];
		"sympy.codegen" -> "sympy.codegen.pynodes" [style="dotted"];
		"sympy.codegen" -> "sympy.codegen.abstract_nodes" [style="dotted"];
		"sympy.codegen" -> "sympy.codegen.fnodes" [style="dotted"];
		"sympy.codegen" -> "sympy.codegen.cfunctions" [style="dotted"];
		"sympy.codegen" -> "sympy.codegen.cnodes" [style="dotted"];
	}
	subgraph "cluster_kivy.core.image" {
		label="kivy.core.image";
		"kivy.core.image" -> "kivy.core.image._img_sdl2" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_sdl2" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_ffpyplayer" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_dds" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_tex" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_pil" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_pygame" [style="dotted"];
	}
	subgraph "cluster_torch.futures" {
		label="torch.futures";
	}
	subgraph "cluster_transformers.models.data2vec" {
		label="transformers.models.data2vec";
		"transformers.models.data2vec" -> "transformers.models.data2vec.configuration_data2vec_audio" [style="dotted"];
		"transformers.models.data2vec" -> "transformers.models.data2vec.configuration_data2vec_text" [style="dotted"];
		"transformers.models.data2vec" -> "transformers.models.data2vec.configuration_data2vec_vision" [style="dotted"];
		"transformers.models.data2vec" -> "transformers.models.data2vec.modeling_data2vec_audio" [style="dotted"];
		"transformers.models.data2vec" -> "transformers.models.data2vec.modeling_data2vec_text" [style="dotted"];
		"transformers.models.data2vec" -> "transformers.models.data2vec.modeling_data2vec_vision" [style="dotted"];
		"transformers.models.data2vec" -> "transformers.models.data2vec.modeling_tf_data2vec_vision" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._composable" {
		label="torch.distributed._composable";
		"torch.distributed._composable" -> "torch.distributed._composable.checkpoint_activation" [style="dotted"];
		"torch.distributed._composable" -> "torch.distributed._composable.contract" [style="dotted"];
		"torch.distributed._composable" -> "torch.distributed._composable.fully_shard" [style="dotted"];
		"torch.distributed._composable" -> "torch.distributed._composable.replicate" [style="dotted"];
		"torch.distributed._composable" -> "torch.distributed._composable.fsdp" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.elastic.rendezvous" {
		label="torch.distributed.elastic.rendezvous";
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.api" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.static_tcp_rendezvous" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.etcd_rendezvous" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.registry" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.dynamic_rendezvous" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.etcd_server" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.etcd_store" [style="dotted"];
		"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.utils" [style="dotted"];
	}
	subgraph "cluster_docutils.readers" {
		label="docutils.readers";
		"docutils.readers" -> "docutils.readers.standalone" [style="dotted"];
	}
	subgraph "cluster_sniffio" {
		label="sniffio";
		"sniffio" -> "sniffio._version" [style="dotted"];
		"sniffio" -> "sniffio._impl" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._shard" {
		label="torch.distributed._shard";
		"torch.distributed._shard" -> "torch.distributed._shard.api" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.metadata" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.sharding_spec" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.op_registry_utils" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.common_op_utils" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.sharded_tensor" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.sharder" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.sharding_plan" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard._utils" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.sharded_optim" [style="dotted"];
		"torch.distributed._shard" -> "torch.distributed._shard.checkpoint" [style="dotted"];
	}
	subgraph "cluster_torch.backends.xnnpack" {
		label="torch.backends.xnnpack";
	}
	subgraph "cluster_sympy.testing" {
		label="sympy.testing";
		"sympy.testing" -> "sympy.testing.runtests" [style="dotted"];
		"sympy.testing" -> "sympy.testing.runtests_pytest" [style="dotted"];
	}
	subgraph "cluster_torch._dynamo" {
		label="torch._dynamo";
		"torch._dynamo" -> "torch._dynamo.config" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.variables" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.logging" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.compiled_autograd" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.mutation_guard" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.replay_record" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.trace_rules" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.convert_frame" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.polyfills" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.eval_frame" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.resume_execution" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.callback" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.code_context" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.decorators" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.external_utils" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.utils" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.distributed" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.exc" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.bytecode_analysis" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.bytecode_transformation" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.cache_size" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.guards" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.hooks" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.symbolic_convert" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.types" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.output_graph" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.backends" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.source" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.codegen" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.create_parameter_op" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.device_interface" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.tensor_version_op" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.testing" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.debug_utils" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.repro" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.side_effects" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.comptime" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo._trace_wrapped_higher_order_op" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.current_scope_id" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.funcname_cache" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.profiler" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.test_case" [style="dotted"];
		"torch._dynamo" -> "torch._dynamo.test_minifier_common" [style="dotted"];
	}
	subgraph "cluster_pyaudio" {
		label="pyaudio";
		"pyaudio" -> "pyaudio._portaudio" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mobilevit" {
		label="transformers.models.mobilevit";
		"transformers.models.mobilevit" -> "transformers.models.mobilevit.configuration_mobilevit" [style="dotted"];
		"transformers.models.mobilevit" -> "transformers.models.mobilevit.feature_extraction_mobilevit" [style="dotted"];
		"transformers.models.mobilevit" -> "transformers.models.mobilevit.image_processing_mobilevit" [style="dotted"];
		"transformers.models.mobilevit" -> "transformers.models.mobilevit.modeling_mobilevit" [style="dotted"];
		"transformers.models.mobilevit" -> "transformers.models.mobilevit.modeling_tf_mobilevit" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.tensor._ops" {
		label="torch.distributed.tensor._ops";
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._conv_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._embedding_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._experimental_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._math_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._matrix_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._pointwise_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._random_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._tensor_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._view_ops" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops.utils" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._common_rules" [style="dotted"];
		"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._einsum_strategy" [style="dotted"];
	}
	subgraph "cluster_transformers.models.byt5" {
		label="transformers.models.byt5";
		"transformers.models.byt5" -> "transformers.models.byt5.tokenization_byt5" [style="dotted"];
	}
	subgraph "cluster_torch.backends.openmp" {
		label="torch.backends.openmp";
	}
	subgraph "cluster_torchgen.aoti" {
		label="torchgen.aoti";
		"torchgen.aoti" -> "torchgen.aoti.fallback_ops" [style="dotted"];
	}
	subgraph "cluster_torch.backends.mkldnn" {
		label="torch.backends.mkldnn";
	}
	subgraph "cluster_torch.ao.nn.quantized.reference.modules" {
		label="torch.ao.nn.quantized.reference.modules";
		"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.conv" [style="dotted"];
		"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.linear" [style="dotted"];
		"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.rnn" [style="dotted"];
		"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.sparse" [style="dotted"];
		"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.utils" [style="dotted"];
	}
	subgraph "cluster_transformers.models.dinov2" {
		label="transformers.models.dinov2";
		"transformers.models.dinov2" -> "transformers.models.dinov2.configuration_dinov2" [style="dotted"];
		"transformers.models.dinov2" -> "transformers.models.dinov2.modeling_dinov2" [style="dotted"];
		"transformers.models.dinov2" -> "transformers.models.dinov2.modeling_flax_dinov2" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.approximation" {
		label="networkx.algorithms.approximation";
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.clustering_coefficient" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.ramsey" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.clique" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.connectivity" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.distance_measures" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.dominating_set" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.kcomponents" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.matching" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.steinertree" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.traveling_salesman" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.treewidth" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.vertex_cover" [style="dotted"];
		"networkx.algorithms.approximation" -> "networkx.algorithms.approximation.maxcut" [style="dotted"];
	}
	subgraph "cluster_torch.fx.passes.backends" {
		label="torch.fx.passes.backends";
		"torch.fx.passes.backends" -> "torch.fx.passes.backends.cudagraphs" [style="dotted"];
	}
	subgraph "cluster_transformers.models.rag" {
		label="transformers.models.rag";
		"transformers.models.rag" -> "transformers.models.rag.configuration_rag" [style="dotted"];
		"transformers.models.rag" -> "transformers.models.rag.retrieval_rag" [style="dotted"];
		"transformers.models.rag" -> "transformers.models.rag.tokenization_rag" [style="dotted"];
		"transformers.models.rag" -> "transformers.models.rag.modeling_rag" [style="dotted"];
		"transformers.models.rag" -> "transformers.models.rag.modeling_tf_rag" [style="dotted"];
	}
	subgraph "cluster_transformers.models.canine" {
		label="transformers.models.canine";
		"transformers.models.canine" -> "transformers.models.canine.configuration_canine" [style="dotted"];
		"transformers.models.canine" -> "transformers.models.canine.tokenization_canine" [style="dotted"];
		"transformers.models.canine" -> "transformers.models.canine.modeling_canine" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.autograd" {
		label="torch.distributed.autograd";
	}
	subgraph "cluster_mpmath.functions" {
		label="mpmath.functions";
		"mpmath.functions" -> "mpmath.functions.functions" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.factorials" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.hypergeometric" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.expintegrals" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.bessel" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.orthogonal" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.theta" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.elliptic" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.signals" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.zeta" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.rszeta" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.zetazeros" [style="dotted"];
		"mpmath.functions" -> "mpmath.functions.qfunctions" [style="dotted"];
	}
	subgraph "cluster_torch.nn.qat.modules" {
		label="torch.nn.qat.modules";
		"torch.nn.qat.modules" -> "torch.nn.qat.modules.conv" [style="dotted"];
		"torch.nn.qat.modules" -> "torch.nn.qat.modules.embedding_ops" [style="dotted"];
		"torch.nn.qat.modules" -> "torch.nn.qat.modules.linear" [style="dotted"];
	}
	subgraph "cluster_sympy.plotting.intervalmath" {
		label="sympy.plotting.intervalmath";
		"sympy.plotting.intervalmath" -> "sympy.plotting.intervalmath.interval_arithmetic" [style="dotted"];
		"sympy.plotting.intervalmath" -> "sympy.plotting.intervalmath.lib_interval" [style="dotted"];
		"sympy.plotting.intervalmath" -> "sympy.plotting.intervalmath.interval_membership" [style="dotted"];
	}
	subgraph "cluster_safetensors" {
		label="safetensors";
		"safetensors" -> "safetensors._safetensors_rust" [style="dotted"];
		"safetensors" -> "safetensors.numpy" [style="dotted"];
		"safetensors" -> "safetensors.flax" [style="dotted"];
		"safetensors" -> "safetensors.torch" [style="dotted"];
		"safetensors" -> "safetensors.tensorflow" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gpt_neox_japanese" {
		label="transformers.models.gpt_neox_japanese";
		"transformers.models.gpt_neox_japanese" -> "transformers.models.gpt_neox_japanese.configuration_gpt_neox_japanese" [style="dotted"];
		"transformers.models.gpt_neox_japanese" -> "transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" [style="dotted"];
		"transformers.models.gpt_neox_japanese" -> "transformers.models.gpt_neox_japanese.modeling_gpt_neox_japanese" [style="dotted"];
	}
	subgraph "cluster_kivy.uix.behaviors" {
		label="kivy.uix.behaviors";
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.button" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.togglebutton" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.drag" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.focus" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.compoundselection" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.codenavigation" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.emacs" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.cover" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.touchripple" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.knspace" [style="dotted"];
	}
	subgraph "cluster_transformers.models.dpt" {
		label="transformers.models.dpt";
		"transformers.models.dpt" -> "transformers.models.dpt.configuration_dpt" [style="dotted"];
		"transformers.models.dpt" -> "transformers.models.dpt.feature_extraction_dpt" [style="dotted"];
		"transformers.models.dpt" -> "transformers.models.dpt.image_processing_dpt" [style="dotted"];
		"transformers.models.dpt" -> "transformers.models.dpt.modeling_dpt" [style="dotted"];
	}
	subgraph "cluster_torch.distributed._shard.sharded_tensor" {
		label="torch.distributed._shard.sharded_tensor";
		"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.api" [style="dotted"];
		"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.metadata" [style="dotted"];
		"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor._ops" [style="dotted"];
		"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.shard" [style="dotted"];
		"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.utils" [style="dotted"];
		"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.reshard" [style="dotted"];
		"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.logger" [style="dotted"];
		"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.logging_handlers" [style="dotted"];
	}
	subgraph "cluster_sympy.assumptions.handlers" {
		label="sympy.assumptions.handlers";
		"sympy.assumptions.handlers" -> "sympy.assumptions.handlers.common" [style="dotted"];
		"sympy.assumptions.handlers" -> "sympy.assumptions.handlers.sets" [style="dotted"];
		"sympy.assumptions.handlers" -> "sympy.assumptions.handlers.calculus" [style="dotted"];
		"sympy.assumptions.handlers" -> "sympy.assumptions.handlers.order" [style="dotted"];
		"sympy.assumptions.handlers" -> "sympy.assumptions.handlers.ntheory" [style="dotted"];
		"sympy.assumptions.handlers" -> "sympy.assumptions.handlers.matrices" [style="dotted"];
	}
	subgraph "cluster_torch.distributed.algorithms._checkpoint" {
		label="torch.distributed.algorithms._checkpoint";
		"torch.distributed.algorithms._checkpoint" -> "torch.distributed.algorithms._checkpoint.checkpoint_wrapper" [style="dotted"];
	}
	subgraph "cluster_transformers.models.deprecated.realm" {
		label="transformers.models.deprecated.realm";
		"transformers.models.deprecated.realm" -> "transformers.models.deprecated.realm.configuration_realm" [style="dotted"];
		"transformers.models.deprecated.realm" -> "transformers.models.deprecated.realm.tokenization_realm" [style="dotted"];
		"transformers.models.deprecated.realm" -> "transformers.models.deprecated.realm.modeling_realm" [style="dotted"];
		"transformers.models.deprecated.realm" -> "transformers.models.deprecated.realm.retrieval_realm" [style="dotted"];
	}
	subgraph "cluster_transformers.models.xlm_roberta_xl" {
		label="transformers.models.xlm_roberta_xl";
		"transformers.models.xlm_roberta_xl" -> "transformers.models.xlm_roberta_xl.configuration_xlm_roberta_xl" [style="dotted"];
		"transformers.models.xlm_roberta_xl" -> "transformers.models.xlm_roberta_xl.modeling_xlm_roberta_xl" [style="dotted"];
	}
	subgraph "cluster_transformers.models.bloom" {
		label="transformers.models.bloom";
		"transformers.models.bloom" -> "transformers.models.bloom.configuration_bloom" [style="dotted"];
		"transformers.models.bloom" -> "transformers.models.bloom.tokenization_bloom_fast" [style="dotted"];
		"transformers.models.bloom" -> "transformers.models.bloom.modeling_bloom" [style="dotted"];
		"transformers.models.bloom" -> "transformers.models.bloom.modeling_flax_bloom" [style="dotted"];
	}
	subgraph "cluster_json" {
		label="json";
		"json" -> "json.scanner" [style="dotted"];
		"json" -> "json.decoder" [style="dotted"];
		"json" -> "json.encoder" [style="dotted"];
	}
	subgraph "cluster_numpy.char" {
		label="numpy.char";
	}
	subgraph "cluster_sympy.physics.control" {
		label="sympy.physics.control";
		"sympy.physics.control" -> "sympy.physics.control.lti" [style="dotted"];
		"sympy.physics.control" -> "sympy.physics.control.control_plots" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.autoheuristic" {
		label="torch._inductor.autoheuristic";
		"torch._inductor.autoheuristic" -> "torch._inductor.autoheuristic.autoheuristic" [style="dotted"];
		"torch._inductor.autoheuristic" -> "torch._inductor.autoheuristic.autoheuristic_utils" [style="dotted"];
		"torch._inductor.autoheuristic" -> "torch._inductor.autoheuristic.learned_heuristic_controller" [style="dotted"];
		"torch._inductor.autoheuristic" -> "torch._inductor.autoheuristic.learnedheuristic_interface" [style="dotted"];
		"torch._inductor.autoheuristic" -> "torch._inductor.autoheuristic.artifacts" [style="dotted"];
	}
	subgraph "cluster_ctypes" {
		label="ctypes";
		"ctypes" -> "ctypes._endian" [style="dotted"];
		"ctypes" -> "ctypes.wintypes" [style="dotted"];
		"ctypes" -> "ctypes.util" [style="dotted"];
		"ctypes" -> "ctypes._aix" [style="dotted"];
		"ctypes" -> "ctypes.macholib" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mamba2" {
		label="transformers.models.mamba2";
		"transformers.models.mamba2" -> "transformers.models.mamba2.configuration_mamba2" [style="dotted"];
		"transformers.models.mamba2" -> "transformers.models.mamba2.modeling_mamba2" [style="dotted"];
	}
	subgraph "cluster_future.utils" {
		label="future.utils";
		"future.utils" -> "future.utils.surrogateescape" [style="dotted"];
	}
	subgraph "cluster_transformers.models.gpt_sw3" {
		label="transformers.models.gpt_sw3";
		"transformers.models.gpt_sw3" -> "transformers.models.gpt_sw3.tokenization_gpt_sw3" [style="dotted"];
	}
	subgraph "cluster_transformers.models.nystromformer" {
		label="transformers.models.nystromformer";
		"transformers.models.nystromformer" -> "transformers.models.nystromformer.configuration_nystromformer" [style="dotted"];
		"transformers.models.nystromformer" -> "transformers.models.nystromformer.modeling_nystromformer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.big_bird" {
		label="transformers.models.big_bird";
		"transformers.models.big_bird" -> "transformers.models.big_bird.configuration_big_bird" [style="dotted"];
		"transformers.models.big_bird" -> "transformers.models.big_bird.tokenization_big_bird" [style="dotted"];
		"transformers.models.big_bird" -> "transformers.models.big_bird.tokenization_big_bird_fast" [style="dotted"];
		"transformers.models.big_bird" -> "transformers.models.big_bird.modeling_big_bird" [style="dotted"];
		"transformers.models.big_bird" -> "transformers.models.big_bird.modeling_flax_big_bird" [style="dotted"];
	}
	subgraph "cluster_torch._functorch._aot_autograd" {
		label="torch._functorch._aot_autograd";
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.utils" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.autograd_cache" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.collect_metadata_analysis" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.functional_utils" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.input_output_analysis" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.jit_compile_runtime_wrappers" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.logging_utils" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.runtime_wrappers" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.schemas" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.subclass_utils" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.traced_function_transforms" [style="dotted"];
		"torch._functorch._aot_autograd" -> "torch._functorch._aot_autograd.dispatch_and_compile_graph" [style="dotted"];
	}
	subgraph "cluster_transformers.models.xlm_roberta" {
		label="transformers.models.xlm_roberta";
		"transformers.models.xlm_roberta" -> "transformers.models.xlm_roberta.configuration_xlm_roberta" [style="dotted"];
		"transformers.models.xlm_roberta" -> "transformers.models.xlm_roberta.tokenization_xlm_roberta" [style="dotted"];
		"transformers.models.xlm_roberta" -> "transformers.models.xlm_roberta.tokenization_xlm_roberta_fast" [style="dotted"];
		"transformers.models.xlm_roberta" -> "transformers.models.xlm_roberta.modeling_xlm_roberta" [style="dotted"];
		"transformers.models.xlm_roberta" -> "transformers.models.xlm_roberta.modeling_tf_xlm_roberta" [style="dotted"];
		"transformers.models.xlm_roberta" -> "transformers.models.xlm_roberta.modeling_flax_xlm_roberta" [style="dotted"];
	}
	subgraph "cluster_transformers.models.grounding_dino" {
		label="transformers.models.grounding_dino";
		"transformers.models.grounding_dino" -> "transformers.models.grounding_dino.configuration_grounding_dino" [style="dotted"];
		"transformers.models.grounding_dino" -> "transformers.models.grounding_dino.processing_grounding_dino" [style="dotted"];
		"transformers.models.grounding_dino" -> "transformers.models.grounding_dino.modeling_grounding_dino" [style="dotted"];
		"transformers.models.grounding_dino" -> "transformers.models.grounding_dino.image_processing_grounding_dino" [style="dotted"];
	}
	subgraph "cluster_transformers.models.mamba" {
		label="transformers.models.mamba";
		"transformers.models.mamba" -> "transformers.models.mamba.configuration_mamba" [style="dotted"];
		"transformers.models.mamba" -> "transformers.models.mamba.modeling_mamba" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.quantized" {
		label="torch.ao.nn.quantized";
		"torch.ao.nn.quantized" -> "torch.ao.nn.quantized.functional" [style="dotted"];
		"torch.ao.nn.quantized" -> "torch.ao.nn.quantized.modules" [style="dotted"];
		"torch.ao.nn.quantized" -> "torch.ao.nn.quantized.reference" [style="dotted"];
		"torch.ao.nn.quantized" -> "torch.ao.nn.quantized.dynamic" [style="dotted"];
	}
	subgraph "cluster_torch.utils._sympy" {
		label="torch.utils._sympy";
		"torch.utils._sympy" -> "torch.utils._sympy.singleton_int" [style="dotted"];
		"torch.utils._sympy" -> "torch.utils._sympy.symbol" [style="dotted"];
		"torch.utils._sympy" -> "torch.utils._sympy.functions" [style="dotted"];
		"torch.utils._sympy" -> "torch.utils._sympy.value_ranges" [style="dotted"];
		"torch.utils._sympy" -> "torch.utils._sympy.solve" [style="dotted"];
		"torch.utils._sympy" -> "torch.utils._sympy.numbers" [style="dotted"];
		"torch.utils._sympy" -> "torch.utils._sympy.reference" [style="dotted"];
		"torch.utils._sympy" -> "torch.utils._sympy.interp" [style="dotted"];
	}
	subgraph "cluster_torch.nn.quantizable" {
		label="torch.nn.quantizable";
		"torch.nn.quantizable" -> "torch.nn.quantizable.modules" [style="dotted"];
	}
	subgraph "cluster_torch.testing._internal.distributed.rpc" {
		label="torch.testing._internal.distributed.rpc";
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.dist_autograd_test" [style="dotted"];
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.dist_optimizer_test" [style="dotted"];
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.faulty_agent_rpc_test" [style="dotted"];
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture" [style="dotted"];
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [style="dotted"];
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.rpc_test" [style="dotted"];
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture" [style="dotted"];
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.jit" [style="dotted"];
		"torch.testing._internal.distributed.rpc" -> "torch.testing._internal.distributed.rpc.examples" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.compile_worker" {
		label="torch._inductor.compile_worker";
		"torch._inductor.compile_worker" -> "torch._inductor.compile_worker.subproc_pool" [style="dotted"];
		"torch._inductor.compile_worker" -> "torch._inductor.compile_worker.watchdog" [style="dotted"];
		"torch._inductor.compile_worker" -> "torch._inductor.compile_worker.__main__" [style="dotted"];
	}
	subgraph "cluster_setuptools.command" {
		label="setuptools.command";
		"setuptools.command" -> "setuptools.command.bdist_egg" [style="dotted"];
		"setuptools.command" -> "setuptools.command._requirestxt" [style="dotted"];
		"setuptools.command" -> "setuptools.command.bdist_wheel" [style="dotted"];
		"setuptools.command" -> "setuptools.command.egg_info" [style="dotted"];
		"setuptools.command" -> "setuptools.command.sdist" [style="dotted"];
		"setuptools.command" -> "setuptools.command.setopt" [style="dotted"];
		"setuptools.command" -> "setuptools.command.build" [style="dotted"];
		"setuptools.command" -> "setuptools.command.build_ext" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.jaraco.text" {
		label="setuptools._vendor.jaraco.text";
	}
	subgraph "cluster_urllib3" {
		label="urllib3";
		"urllib3" -> "urllib3.exceptions" [style="dotted"];
		"urllib3" -> "urllib3._base_connection" [style="dotted"];
		"urllib3" -> "urllib3._collections" [style="dotted"];
		"urllib3" -> "urllib3._version" [style="dotted"];
		"urllib3" -> "urllib3.connectionpool" [style="dotted"];
		"urllib3" -> "urllib3.filepost" [style="dotted"];
		"urllib3" -> "urllib3.poolmanager" [style="dotted"];
		"urllib3" -> "urllib3.response" [style="dotted"];
		"urllib3" -> "urllib3.fields" [style="dotted"];
		"urllib3" -> "urllib3.util" [style="dotted"];
		"urllib3" -> "urllib3.connection" [style="dotted"];
		"urllib3" -> "urllib3.http2" [style="dotted"];
		"urllib3" -> "urllib3._request_methods" [style="dotted"];
		"urllib3" -> "urllib3.contrib" [style="dotted"];
	}
	subgraph "cluster_httpx" {
		label="httpx";
		"httpx" -> "httpx.__version__" [style="dotted"];
		"httpx" -> "httpx._api" [style="dotted"];
		"httpx" -> "httpx._auth" [style="dotted"];
		"httpx" -> "httpx._client" [style="dotted"];
		"httpx" -> "httpx._config" [style="dotted"];
		"httpx" -> "httpx._content" [style="dotted"];
		"httpx" -> "httpx._exceptions" [style="dotted"];
		"httpx" -> "httpx._models" [style="dotted"];
		"httpx" -> "httpx._status_codes" [style="dotted"];
		"httpx" -> "httpx._transports" [style="dotted"];
		"httpx" -> "httpx._types" [style="dotted"];
		"httpx" -> "httpx._urls" [style="dotted"];
		"httpx" -> "httpx._main" [style="dotted"];
		"httpx" -> "httpx._urlparse" [style="dotted"];
		"httpx" -> "httpx._utils" [style="dotted"];
		"httpx" -> "httpx._decoders" [style="dotted"];
		"httpx" -> "httpx._multipart" [style="dotted"];
		"httpx" -> "httpx._compat" [style="dotted"];
	}
	subgraph "cluster_networkx.algorithms.shortest_paths" {
		label="networkx.algorithms.shortest_paths";
		"networkx.algorithms.shortest_paths" -> "networkx.algorithms.shortest_paths.generic" [style="dotted"];
		"networkx.algorithms.shortest_paths" -> "networkx.algorithms.shortest_paths.unweighted" [style="dotted"];
		"networkx.algorithms.shortest_paths" -> "networkx.algorithms.shortest_paths.weighted" [style="dotted"];
		"networkx.algorithms.shortest_paths" -> "networkx.algorithms.shortest_paths.astar" [style="dotted"];
		"networkx.algorithms.shortest_paths" -> "networkx.algorithms.shortest_paths.dense" [style="dotted"];
	}
	subgraph "cluster_importlib" {
		label="importlib";
		"importlib" -> "importlib._bootstrap" [style="dotted"];
		"importlib" -> "importlib._bootstrap_external" [style="dotted"];
		"importlib" -> "importlib.machinery" [style="dotted"];
		"importlib" -> "importlib.util" [style="dotted"];
		"importlib" -> "importlib.readers" [style="dotted"];
		"importlib" -> "importlib.metadata" [style="dotted"];
		"importlib" -> "importlib.abc" [style="dotted"];
		"importlib" -> "importlib._abc" [style="dotted"];
		"importlib" -> "importlib.resources" [style="dotted"];
	}
	subgraph "cluster_kivy.core.video" {
		label="kivy.core.video";
		"kivy.core.video" -> "kivy.core.video.video_null" [style="dotted"];
		"kivy.core.video" -> "kivy.core.video.video_ffpyplayer" [style="dotted"];
		"kivy.core.video" -> "kivy.core.video.video_ffmpeg" [style="dotted"];
		"kivy.core.video" -> "kivy.core.video.video_gstplayer" [style="dotted"];
	}
	subgraph "cluster_transformers.models.speech_encoder_decoder" {
		label="transformers.models.speech_encoder_decoder";
		"transformers.models.speech_encoder_decoder" -> "transformers.models.speech_encoder_decoder.configuration_speech_encoder_decoder" [style="dotted"];
		"transformers.models.speech_encoder_decoder" -> "transformers.models.speech_encoder_decoder.modeling_speech_encoder_decoder" [style="dotted"];
		"transformers.models.speech_encoder_decoder" -> "transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.qat.dynamic" {
		label="torch.ao.nn.qat.dynamic";
		"torch.ao.nn.qat.dynamic" -> "torch.ao.nn.qat.dynamic.modules" [style="dotted"];
	}
	subgraph "cluster_torch.fx.passes" {
		label="torch.fx.passes";
		"torch.fx.passes" -> "torch.fx.passes.graph_drawer" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.graph_manipulation" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.net_min_base" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.operator_support" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.param_fetch" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.reinplace" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.runtime_assert" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.shape_prop" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.split_module" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.split_utils" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.splitter_base" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.tools_common" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.utils" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.infra" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.fake_tensor_prop" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.graph_transform_observer" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.annotate_getitem_nodes" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.pass_manager" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.tests" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.dialect" [style="dotted"];
		"torch.fx.passes" -> "torch.fx.passes.backends" [style="dotted"];
	}
	subgraph "cluster__distutils_hack" {
		label="_distutils_hack";
		"_distutils_hack" -> "_distutils_hack.override" [style="dotted"];
	}
	subgraph "cluster_kivy.uix" {
		label="kivy.uix";
		"kivy.uix" -> "kivy.uix.boxlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.label" [style="dotted"];
		"kivy.uix" -> "kivy.uix.textinput" [style="dotted"];
		"kivy.uix" -> "kivy.uix.button" [style="dotted"];
		"kivy.uix" -> "kivy.uix.widget" [style="dotted"];
		"kivy.uix" -> "kivy.uix.vkeyboard" [style="dotted"];
		"kivy.uix" -> "kivy.uix.scatter" [style="dotted"];
		"kivy.uix" -> "kivy.uix.dropdown" [style="dotted"];
		"kivy.uix" -> "kivy.uix.carousel" [style="dotted"];
		"kivy.uix" -> "kivy.uix.effectwidget" [style="dotted"];
		"kivy.uix" -> "kivy.uix.colorpicker" [style="dotted"];
		"kivy.uix" -> "kivy.uix.actionbar" [style="dotted"];
		"kivy.uix" -> "kivy.uix.slider" [style="dotted"];
		"kivy.uix" -> "kivy.uix.scatterlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.recyclelayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.relativelayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.stacklayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.videoplayer" [style="dotted"];
		"kivy.uix" -> "kivy.uix.recyclegridlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.bubble" [style="dotted"];
		"kivy.uix" -> "kivy.uix.codeinput" [style="dotted"];
		"kivy.uix" -> "kivy.uix.checkbox" [style="dotted"];
		"kivy.uix" -> "kivy.uix.spinner" [style="dotted"];
		"kivy.uix" -> "kivy.uix.treeview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.gesturesurface" [style="dotted"];
		"kivy.uix" -> "kivy.uix.filechooser" [style="dotted"];
		"kivy.uix" -> "kivy.uix.floatlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.anchorlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.recycleboxlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.pagelayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.popup" [style="dotted"];
		"kivy.uix" -> "kivy.uix.progressbar" [style="dotted"];
		"kivy.uix" -> "kivy.uix.image" [style="dotted"];
		"kivy.uix" -> "kivy.uix.stencilview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.gridlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.video" [style="dotted"];
		"kivy.uix" -> "kivy.uix.accordion" [style="dotted"];
		"kivy.uix" -> "kivy.uix.layout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.sandbox" [style="dotted"];
		"kivy.uix" -> "kivy.uix.scrollview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.switch" [style="dotted"];
		"kivy.uix" -> "kivy.uix.togglebutton" [style="dotted"];
		"kivy.uix" -> "kivy.uix.tabbedpanel" [style="dotted"];
		"kivy.uix" -> "kivy.uix.rst" [style="dotted"];
		"kivy.uix" -> "kivy.uix.modalview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.screenmanager" [style="dotted"];
		"kivy.uix" -> "kivy.uix.splitter" [style="dotted"];
		"kivy.uix" -> "kivy.uix.camera" [style="dotted"];
		"kivy.uix" -> "kivy.uix.settings" [style="dotted"];
		"kivy.uix" -> "kivy.uix.recycleview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.behaviors" [style="dotted"];
	}
	subgraph "cluster_torch._dynamo.repro" {
		label="torch._dynamo.repro";
		"torch._dynamo.repro" -> "torch._dynamo.repro.after_dynamo" [style="dotted"];
		"torch._dynamo.repro" -> "torch._dynamo.repro.after_aot" [style="dotted"];
	}
	subgraph "cluster_transformers.models.moshi" {
		label="transformers.models.moshi";
		"transformers.models.moshi" -> "transformers.models.moshi.configuration_moshi" [style="dotted"];
		"transformers.models.moshi" -> "transformers.models.moshi.modeling_moshi" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.backports.tarfile" {
		label="setuptools._vendor.backports.tarfile";
		"setuptools._vendor.backports.tarfile" -> "setuptools._vendor.backports.tarfile.compat" [style="dotted"];
	}
	subgraph "cluster_transformers.models.siglip" {
		label="transformers.models.siglip";
		"transformers.models.siglip" -> "transformers.models.siglip.configuration_siglip" [style="dotted"];
		"transformers.models.siglip" -> "transformers.models.siglip.processing_siglip" [style="dotted"];
		"transformers.models.siglip" -> "transformers.models.siglip.tokenization_siglip" [style="dotted"];
		"transformers.models.siglip" -> "transformers.models.siglip.image_processing_siglip" [style="dotted"];
		"transformers.models.siglip" -> "transformers.models.siglip.modeling_siglip" [style="dotted"];
	}
	subgraph "cluster_torch.nn.intrinsic.qat.modules" {
		label="torch.nn.intrinsic.qat.modules";
		"torch.nn.intrinsic.qat.modules" -> "torch.nn.intrinsic.qat.modules.conv_fused" [style="dotted"];
		"torch.nn.intrinsic.qat.modules" -> "torch.nn.intrinsic.qat.modules.linear_fused" [style="dotted"];
		"torch.nn.intrinsic.qat.modules" -> "torch.nn.intrinsic.qat.modules.linear_relu" [style="dotted"];
	}
	subgraph "cluster_transformers.models.groupvit" {
		label="transformers.models.groupvit";
		"transformers.models.groupvit" -> "transformers.models.groupvit.configuration_groupvit" [style="dotted"];
		"transformers.models.groupvit" -> "transformers.models.groupvit.modeling_groupvit" [style="dotted"];
		"transformers.models.groupvit" -> "transformers.models.groupvit.modeling_tf_groupvit" [style="dotted"];
	}
	subgraph "cluster_xml.etree" {
		label="xml.etree";
		"xml.etree" -> "xml.etree.ElementPath" [style="dotted"];
		"xml.etree" -> "xml.etree.ElementTree" [style="dotted"];
		"xml.etree" -> "xml.etree.ElementInclude" [style="dotted"];
		"xml.etree" -> "xml.etree.cElementTree" [style="dotted"];
	}
	subgraph "cluster_torch.nn" {
		label="torch.nn";
		"torch.nn" -> "torch.nn.parameter" [style="dotted"];
		"torch.nn" -> "torch.nn.Module" [style="dotted"];
		"torch.nn" -> "torch.nn._reduction" [style="dotted"];
		"torch.nn" -> "torch.nn.grad" [style="dotted"];
		"torch.nn" -> "torch.nn.BatchNorm1d" [style="dotted"];
		"torch.nn" -> "torch.nn.BatchNorm2d" [style="dotted"];
		"torch.nn" -> "torch.nn.BatchNorm3d" [style="dotted"];
		"torch.nn" -> "torch.nn.Conv1d" [style="dotted"];
		"torch.nn" -> "torch.nn.Conv2d" [style="dotted"];
		"torch.nn" -> "torch.nn.Conv3d" [style="dotted"];
		"torch.nn" -> "torch.nn.Linear" [style="dotted"];
		"torch.nn" -> "torch.nn.ReLU" [style="dotted"];
		"torch.nn" -> "torch.nn.init" [style="dotted"];
		"torch.nn" -> "torch.nn.CrossEntropyLoss" [style="dotted"];
		"torch.nn" -> "torch.nn.Identity" [style="dotted"];
		"torch.nn" -> "torch.nn.BCEWithLogitsLoss" [style="dotted"];
		"torch.nn" -> "torch.nn.MSELoss" [style="dotted"];
		"torch.nn" -> "torch.nn.ModuleDict" [style="dotted"];
		"torch.nn" -> "torch.nn.ModuleList" [style="dotted"];
		"torch.nn" -> "torch.nn.ParameterDict" [style="dotted"];
		"torch.nn" -> "torch.nn.ParameterList" [style="dotted"];
		"torch.nn" -> "torch.nn.Sequential" [style="dotted"];
		"torch.nn" -> "torch.nn.LayerNorm" [style="dotted"];
		"torch.nn" -> "torch.nn.SmoothL1Loss" [style="dotted"];
		"torch.nn" -> "torch.nn.L1Loss" [style="dotted"];
		"torch.nn" -> "torch.nn.KLDivLoss" [style="dotted"];
		"torch.nn" -> "torch.nn.LogSoftmax" [style="dotted"];
		"torch.nn" -> "torch.nn.BCELoss" [style="dotted"];
		"torch.nn" -> "torch.nn.modules" [style="dotted"];
		"torch.nn" -> "torch.nn.attention" [style="dotted"];
		"torch.nn" -> "torch.nn.functional" [style="dotted"];
		"torch.nn" -> "torch.nn.parallel" [style="dotted"];
		"torch.nn" -> "torch.nn.utils" [style="dotted"];
		"torch.nn" -> "torch.nn.common_types" [style="dotted"];
		"torch.nn" -> "torch.nn.cpp" [style="dotted"];
		"torch.nn" -> "torch.nn.backends" [style="dotted"];
		"torch.nn" -> "torch.nn.quantized" [style="dotted"];
		"torch.nn" -> "torch.nn.quantizable" [style="dotted"];
		"torch.nn" -> "torch.nn.qat" [style="dotted"];
		"torch.nn" -> "torch.nn.intrinsic" [style="dotted"];
	}
	subgraph "cluster_future.backports" {
		label="future.backports";
		"future.backports" -> "future.backports.datetime" [style="dotted"];
		"future.backports" -> "future.backports.email" [style="dotted"];
		"future.backports" -> "future.backports.misc" [style="dotted"];
		"future.backports" -> "future.backports.http" [style="dotted"];
		"future.backports" -> "future.backports.urllib" [style="dotted"];
	}
	subgraph "cluster_transformers.models.phi3" {
		label="transformers.models.phi3";
		"transformers.models.phi3" -> "transformers.models.phi3.configuration_phi3" [style="dotted"];
		"transformers.models.phi3" -> "transformers.models.phi3.modeling_phi3" [style="dotted"];
	}
	subgraph "cluster_torch.utils.viz" {
		label="torch.utils.viz";
		"torch.utils.viz" -> "torch.utils.viz._cycles" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.quantized.dynamic" {
		label="torch.ao.nn.quantized.dynamic";
		"torch.ao.nn.quantized.dynamic" -> "torch.ao.nn.quantized.dynamic.modules" [style="dotted"];
	}
	subgraph "cluster_numpy._utils" {
		label="numpy._utils";
		"numpy._utils" -> "numpy._utils._convertions" [style="dotted"];
		"numpy._utils" -> "numpy._utils._inspect" [style="dotted"];
	}
	subgraph "cluster_torch._inductor.kernel" {
		label="torch._inductor.kernel";
		"torch._inductor.kernel" -> "torch._inductor.kernel.mm" [style="dotted"];
		"torch._inductor.kernel" -> "torch._inductor.kernel.mm_common" [style="dotted"];
		"torch._inductor.kernel" -> "torch._inductor.kernel.mm_plus_mm" [style="dotted"];
		"torch._inductor.kernel" -> "torch._inductor.kernel.unpack_mixed_mm" [style="dotted"];
	}
	subgraph "cluster_transformers.models.univnet" {
		label="transformers.models.univnet";
		"transformers.models.univnet" -> "transformers.models.univnet.configuration_univnet" [style="dotted"];
		"transformers.models.univnet" -> "transformers.models.univnet.feature_extraction_univnet" [style="dotted"];
		"transformers.models.univnet" -> "transformers.models.univnet.modeling_univnet" [style="dotted"];
	}
	subgraph "cluster_numpy.linalg" {
		label="numpy.linalg";
		"numpy.linalg" -> "numpy.linalg._umath_linalg" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg._linalg" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg.linalg" [style="dotted"];
	}
	subgraph "cluster_transformers.models.superpoint" {
		label="transformers.models.superpoint";
		"transformers.models.superpoint" -> "transformers.models.superpoint.configuration_superpoint" [style="dotted"];
		"transformers.models.superpoint" -> "transformers.models.superpoint.image_processing_superpoint" [style="dotted"];
		"transformers.models.superpoint" -> "transformers.models.superpoint.modeling_superpoint" [style="dotted"];
	}
	subgraph "cluster_sympy.polys" {
		label="sympy.polys";
		"sympy.polys" -> "sympy.polys.polytools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polyfuncs" [style="dotted"];
		"sympy.polys" -> "sympy.polys.rationaltools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polyerrors" [style="dotted"];
		"sympy.polys" -> "sympy.polys.numberfields" [style="dotted"];
		"sympy.polys" -> "sympy.polys.monomials" [style="dotted"];
		"sympy.polys" -> "sympy.polys.orderings" [style="dotted"];
		"sympy.polys" -> "sympy.polys.rootoftools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polyroots" [style="dotted"];
		"sympy.polys" -> "sympy.polys.domains" [style="dotted"];
		"sympy.polys" -> "sympy.polys.constructor" [style="dotted"];
		"sympy.polys" -> "sympy.polys.specialpolys" [style="dotted"];
		"sympy.polys" -> "sympy.polys.orthopolys" [style="dotted"];
		"sympy.polys" -> "sympy.polys.appellseqs" [style="dotted"];
		"sympy.polys" -> "sympy.polys.partfrac" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polyoptions" [style="dotted"];
		"sympy.polys" -> "sympy.polys.rings" [style="dotted"];
		"sympy.polys" -> "sympy.polys.fields" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polyutils" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polyclasses" [style="dotted"];
		"sympy.polys" -> "sympy.polys.distributedmodules" [style="dotted"];
		"sympy.polys" -> "sympy.polys.agca" [style="dotted"];
		"sympy.polys" -> "sympy.polys.densebasic" [style="dotted"];
		"sympy.polys" -> "sympy.polys.densearith" [style="dotted"];
		"sympy.polys" -> "sympy.polys.densetools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.euclidtools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.sqfreetools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.factortools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.rootisolation" [style="dotted"];
		"sympy.polys" -> "sympy.polys.galoistools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polyconfig" [style="dotted"];
		"sympy.polys" -> "sympy.polys.compatibility" [style="dotted"];
		"sympy.polys" -> "sympy.polys.heuristicgcd" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polyquinticconst" [style="dotted"];
		"sympy.polys" -> "sympy.polys.matrices" [style="dotted"];
		"sympy.polys" -> "sympy.polys.ring_series" [style="dotted"];
		"sympy.polys" -> "sympy.polys.solvers" [style="dotted"];
		"sympy.polys" -> "sympy.polys.domainmatrix" [style="dotted"];
		"sympy.polys" -> "sympy.polys.fglmtools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.groebnertools" [style="dotted"];
		"sympy.polys" -> "sympy.polys.dispersion" [style="dotted"];
		"sympy.polys" -> "sympy.polys.polymatrix" [style="dotted"];
	}
	subgraph "cluster_transformers.models.sew" {
		label="transformers.models.sew";
		"transformers.models.sew" -> "transformers.models.sew.configuration_sew" [style="dotted"];
		"transformers.models.sew" -> "transformers.models.sew.modeling_sew" [style="dotted"];
	}
	subgraph "cluster_transformers.models.qwen2_moe" {
		label="transformers.models.qwen2_moe";
		"transformers.models.qwen2_moe" -> "transformers.models.qwen2_moe.configuration_qwen2_moe" [style="dotted"];
		"transformers.models.qwen2_moe" -> "transformers.models.qwen2_moe.modeling_qwen2_moe" [style="dotted"];
	}
	subgraph "cluster_sympy.utilities.mathml" {
		label="sympy.utilities.mathml";
	}
	subgraph "cluster_torch.utils._strobelight" {
		label="torch.utils._strobelight";
		"torch.utils._strobelight" -> "torch.utils._strobelight.cli_function_profiler" [style="dotted"];
	}
	subgraph "cluster_torch.onnx._internal.fx.passes" {
		label="torch.onnx._internal.fx.passes";
		"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes._utils" [style="dotted"];
		"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.decomp" [style="dotted"];
		"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.functionalization" [style="dotted"];
		"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.modularization" [style="dotted"];
		"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.readability" [style="dotted"];
		"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.type_promotion" [style="dotted"];
		"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.virtualization" [style="dotted"];
	}
	subgraph "cluster_torch.ao.nn.intrinsic.quantized.dynamic.modules" {
		label="torch.ao.nn.intrinsic.quantized.dynamic.modules";
		"torch.ao.nn.intrinsic.quantized.dynamic.modules" -> "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu" [style="dotted"];
	}
	subgraph "cluster_transformers.models.git" {
		label="transformers.models.git";
		"transformers.models.git" -> "transformers.models.git.configuration_git" [style="dotted"];
		"transformers.models.git" -> "transformers.models.git.processing_git" [style="dotted"];
		"transformers.models.git" -> "transformers.models.git.modeling_git" [style="dotted"];
	}
	subgraph "cluster_sympy.physics.units.definitions" {
		label="sympy.physics.units.definitions";
		"sympy.physics.units.definitions" -> "sympy.physics.units.definitions.unit_definitions" [style="dotted"];
		"sympy.physics.units.definitions" -> "sympy.physics.units.definitions.dimension_definitions" [style="dotted"];
	}
	"<PyiModuleGraph>" -> "gc" [];
	"<PyiModuleGraph>" -> "time" [];
	"<PyiModuleGraph>" -> "codecs" [];
	"<PyiModuleGraph>" -> "posix" [];
	"<PyiModuleGraph>" -> "ntpath" [];
	"<PyiModuleGraph>" -> "_pickle" [];
	"<PyiModuleGraph>" -> "_datetime" [];
	"<PyiModuleGraph>" -> "datetime" [];
	"<PyiModuleGraph>" -> "_posixsubprocess" [];
	"<PyiModuleGraph>" -> "_sre" [];
	"<PyiModuleGraph>" -> "types" [];
	"<PyiModuleGraph>" -> "weakref" [];
	"<PyiModuleGraph>" -> "functools" [];
	"<PyiModuleGraph>" -> "genericpath" [];
	"<PyiModuleGraph>" -> "posixpath" [];
	"<PyiModuleGraph>" -> "io" [];
	"<PyiModuleGraph>" -> "reprlib" [];
	"<PyiModuleGraph>" -> "stat" [];
	"<PyiModuleGraph>" -> "_collections_abc" [];
	"<PyiModuleGraph>" -> "_weakrefset" [];
	"<PyiModuleGraph>" -> "abc" [];
	"<PyiModuleGraph>" -> "os" [];
	"<PyiModuleGraph>" -> "traceback" [];
	"<PyiModuleGraph>" -> "operator" [];
	"<PyiModuleGraph>" -> "encodings" [];
	"<PyiModuleGraph>" -> "sre_parse" [];
	"<PyiModuleGraph>" -> "heapq" [];
	"<PyiModuleGraph>" -> "enum" [];
	"<PyiModuleGraph>" -> "copyreg" [];
	"<PyiModuleGraph>" -> "keyword" [];
	"<PyiModuleGraph>" -> "locale" [];
	"<PyiModuleGraph>" -> "collections" [];
	"<PyiModuleGraph>" -> "re" [];
	"<PyiModuleGraph>" -> "warnings" [];
	"<PyiModuleGraph>" -> "sre_compile" [];
	"<PyiModuleGraph>" -> "linecache" [];
	"<PyiModuleGraph>" -> "sre_constants" [];
	"<PyiModuleGraph>" -> "D:\ai\main.py" [];
	"<PyiModuleGraph>" -> "zipimport" [];
	"<PyiModuleGraph>" -> "_ssl" [];
	"<PyiModuleGraph>" -> "_json" [];
	"<PyiModuleGraph>" -> "_elementtree" [];
	"<PyiModuleGraph>" -> "anydbm" [];
	"anydbm" -> "dbhash" [];
	"anydbm" -> "gdbm" [];
	"anydbm" -> "dbm" [];
	"anydbm" -> "dumbdbm" [];
	"anydbm" -> "whichdb" [];
	"dbm" -> "io" [];
	"dbm" -> "os" [];
	"dbm" -> "struct" [];
	"dbm" -> "sys" [];
	"dbm.ndbm" -> "_dbm" [];
	"struct" -> "_struct" [];
	"_elementtree" -> "pyexpat" [];
	"xml.sax.expatreader" -> "sys" [];
	"xml.sax.expatreader" -> "_weakref" [];
	"xml.sax.expatreader" -> "weakref" [];
	"xml.sax.saxutils" -> "os" [];
	"xml.sax.saxutils" -> "io" [];
	"xml.sax.saxutils" -> "codecs" [];
	"xml.sax.saxutils" -> "sys" [];
	"urllib.request" -> "base64" [];
	"urllib.request" -> "bisect" [];
	"urllib.request" -> "email" [];
	"urllib.request" -> "hashlib" [];
	"urllib.request" -> "io" [];
	"urllib.request" -> "os" [];
	"urllib.request" -> "posixpath" [];
	"urllib.request" -> "re" [];
	"urllib.request" -> "socket" [];
	"urllib.request" -> "string" [];
	"urllib.request" -> "sys" [];
	"urllib.request" -> "time" [];
	"urllib.request" -> "tempfile" [];
	"urllib.request" -> "contextlib" [];
	"urllib.request" -> "warnings" [];
	"urllib.request" -> "ssl" [];
	"urllib.request" -> "mimetypes" [];
	"urllib.request" -> "ftplib" [];
	"urllib.request" -> "nturl2path" [];
	"urllib.request" -> "getpass" [];
	"urllib.request" -> "fnmatch" [];
	"urllib.request" -> "_scproxy" [];
	"urllib.request" -> "winreg" [];
	"fnmatch" -> "os" [];
	"fnmatch" -> "posixpath" [];
	"fnmatch" -> "re" [];
	"fnmatch" -> "functools" [];
	"getpass" -> "contextlib" [];
	"getpass" -> "io" [];
	"getpass" -> "os" [];
	"getpass" -> "sys" [];
	"getpass" -> "warnings" [];
	"getpass" -> "pwd" [];
	"getpass" -> "termios" [];
	"getpass" -> "msvcrt" [];
	"nturl2path" -> "string" [];
	"ftplib" -> "sys" [];
	"ftplib" -> "socket" [];
	"ftplib" -> "ssl" [];
	"ftplib" -> "warnings" [];
	"ftplib" -> "re" [];
	"ftplib" -> "netrc" [];
	"netrc" -> "os" [];
	"netrc" -> "shlex" [];
	"netrc" -> "stat" [];
	"netrc" -> "pwd" [];
	"shlex" -> "os" [];
	"shlex" -> "re" [];
	"shlex" -> "sys" [];
	"shlex" -> "collections" [];
	"shlex" -> "io" [];
	"shlex" -> "warnings" [];
	"mimetypes" -> "os" [];
	"mimetypes" -> "sys" [];
	"mimetypes" -> "posixpath" [];
	"mimetypes" -> "_winapi" [];
	"mimetypes" -> "winreg" [];
	"mimetypes" -> "getopt" [];
	"getopt" -> "os" [];
	"getopt" -> "gettext" [];
	"getopt" -> "sys" [];
	"gettext" -> "os" [];
	"gettext" -> "re" [];
	"gettext" -> "sys" [];
	"gettext" -> "warnings" [];
	"gettext" -> "locale" [];
	"gettext" -> "builtins" [];
	"gettext" -> "struct" [];
	"gettext" -> "errno" [];
	"gettext" -> "copy" [];
	"copy" -> "types" [];
	"copy" -> "weakref" [];
	"copy" -> "copyreg" [];
	"copy" -> "'org.python'" [];
	"email.utils" -> "os" [];
	"email.utils" -> "re" [];
	"email.utils" -> "time" [];
	"email.utils" -> "random" [];
	"email.utils" -> "socket" [];
	"email.utils" -> "datetime" [];
	"email.charset" -> "functools" [];
	"email.encoders" -> "base64" [];
	"email.encoders" -> "quopri" [];
	"quopri" -> "binascii" [];
	"quopri" -> "io" [];
	"quopri" -> "sys" [];
	"quopri" -> "getopt" [];
	"email.quoprimime" -> "re" [];
	"email.quoprimime" -> "string" [];
	"email.base64mime" -> "base64" [];
	"email.base64mime" -> "binascii" [];
	"email._parseaddr" -> "time" [];
	"email._parseaddr" -> "calendar" [];
	"calendar" -> "sys" [];
	"calendar" -> "datetime" [];
	"calendar" -> "locale" [];
	"calendar" -> "itertools" [];
	"calendar" -> "argparse" [];
	"argparse" -> "os" [];
	"argparse" -> "re" [];
	"argparse" -> "sys" [];
	"argparse" -> "warnings" [];
	"argparse" -> "gettext" [];
	"argparse" -> "copy" [];
	"argparse" -> "shutil" [];
	"argparse" -> "textwrap" [];
	"textwrap" -> "re" [];
	"shutil" -> "os" [];
	"shutil" -> "sys" [];
	"shutil" -> "stat" [];
	"shutil" -> "fnmatch" [];
	"shutil" -> "collections" [];
	"shutil" -> "errno" [];
	"shutil" -> "zlib" [];
	"shutil" -> "bz2" [];
	"shutil" -> "lzma" [];
	"shutil" -> "posix" [];
	"shutil" -> "nt" [];
	"shutil" -> "grp" [];
	"shutil" -> "pwd" [];
	"shutil" -> "tarfile" [];
	"shutil" -> "zipfile" [];
	"zipfile" -> "binascii" [];
	"zipfile" -> "io" [];
	"zipfile" -> "itertools" [];
	"zipfile" -> "os" [];
	"zipfile" -> "posixpath" [];
	"zipfile" -> "shutil" [];
	"zipfile" -> "stat" [];
	"zipfile" -> "struct" [];
	"zipfile" -> "sys" [];
	"zipfile" -> "threading" [];
	"zipfile" -> "time" [];
	"zipfile" -> "contextlib" [];
	"zipfile" -> "pathlib" [];
	"zipfile" -> "zlib" [];
	"zipfile" -> "bz2" [];
	"zipfile" -> "lzma" [];
	"zipfile" -> "warnings" [];
	"zipfile" -> "py_compile" [];
	"zipfile" -> "argparse" [];
	"py_compile" -> "enum" [];
	"py_compile" -> "os" [];
	"py_compile" -> "os.path" [];
	"py_compile" -> "sys" [];
	"py_compile" -> "traceback" [];
	"py_compile" -> "argparse" [];
	"os.path" -> "ntpath" [];
	"os.path" -> "os" [];
	"importlib" -> "_imp" [];
	"importlib" -> "sys" [];
	"importlib" -> "_frozen_importlib" [];
	"importlib" -> "_frozen_importlib_external" [];
	"importlib" -> "warnings" [];
	"importlib._bootstrap" -> "_frozen_importlib_external" [];
	"importlib._bootstrap_external" -> "_imp" [];
	"importlib._bootstrap_external" -> "_io" [];
	"importlib._bootstrap_external" -> "sys" [];
	"importlib._bootstrap_external" -> "_warnings" [];
	"importlib._bootstrap_external" -> "marshal" [];
	"importlib._bootstrap_external" -> "nt" [];
	"importlib._bootstrap_external" -> "winreg" [];
	"importlib._bootstrap_external" -> "posix" [];
	"importlib._bootstrap_external" -> "tokenize" [];
	"importlib.metadata" -> "os" [];
	"importlib.metadata" -> "re" [];
	"importlib.metadata" -> "abc" [];
	"importlib.metadata" -> "csv" [];
	"importlib.metadata" -> "sys" [];
	"importlib.metadata" -> "email" [];
	"importlib.metadata" -> "pathlib" [];
	"importlib.metadata" -> "zipfile" [];
	"importlib.metadata" -> "operator" [];
	"importlib.metadata" -> "textwrap" [];
	"importlib.metadata" -> "warnings" [];
	"importlib.metadata" -> "functools" [];
	"importlib.metadata" -> "itertools" [];
	"importlib.metadata" -> "posixpath" [];
	"importlib.metadata" -> "collections" [];
	"importlib.metadata" -> "contextlib" [];
	"importlib.metadata" -> "typing" [];
	"typing" -> "abc" [];
	"typing" -> "collections" [];
	"typing" -> "contextlib" [];
	"typing" -> "functools" [];
	"typing" -> "operator" [];
	"typing" -> "re" [];
	"typing" -> "sys" [];
	"typing" -> "types" [];
	"typing" -> "warnings" [];
	"typing" -> "_typing" [];
	"importlib.abc" -> "_frozen_importlib" [];
	"importlib.abc" -> "_frozen_importlib_external" [];
	"importlib.abc" -> "abc" [];
	"importlib.abc" -> "warnings" [];
	"importlib.resources.abc" -> "abc" [];
	"importlib.resources.abc" -> "io" [];
	"importlib.resources.abc" -> "os" [];
	"importlib.resources.abc" -> "typing" [];
	"importlib.resources._legacy" -> "functools" [];
	"importlib.resources._legacy" -> "os" [];
	"importlib.resources._legacy" -> "pathlib" [];
	"importlib.resources._legacy" -> "types" [];
	"importlib.resources._legacy" -> "warnings" [];
	"importlib.resources._legacy" -> "typing" [];
	"importlib.resources._common" -> "os" [];
	"importlib.resources._common" -> "pathlib" [];
	"importlib.resources._common" -> "tempfile" [];
	"importlib.resources._common" -> "functools" [];
	"importlib.resources._common" -> "contextlib" [];
	"importlib.resources._common" -> "types" [];
	"importlib.resources._common" -> "importlib" [];
	"importlib.resources._common" -> "typing" [];
	"importlib.resources._adapters" -> "contextlib" [];
	"importlib.resources._adapters" -> "io" [];
	"importlib._abc" -> "abc" [];
	"importlib._abc" -> "warnings" [];
	"importlib.metadata._itertools" -> "itertools" [];
	"importlib.metadata._functools" -> "types" [];
	"importlib.metadata._functools" -> "functools" [];
	"importlib.metadata._collections" -> "collections" [];
	"importlib.metadata._meta" -> "typing" [];
	"importlib.metadata._adapters" -> "re" [];
	"importlib.metadata._adapters" -> "textwrap" [];
	"importlib.metadata._text" -> "re" [];
	"email.message" -> "binascii" [];
	"email.message" -> "re" [];
	"email.message" -> "quopri" [];
	"email.message" -> "io" [];
	"email.policy" -> "re" [];
	"email.policy" -> "sys" [];
	"email.contentmanager" -> "binascii" [];
	"email.headerregistry" -> "types" [];
	"email._header_value_parser" -> "re" [];
	"email._header_value_parser" -> "sys" [];
	"email._header_value_parser" -> "urllib" [];
	"email._header_value_parser" -> "string" [];
	"email._header_value_parser" -> "operator" [];
	"email.iterators" -> "sys" [];
	"email.iterators" -> "io" [];
	"email.generator" -> "re" [];
	"email.generator" -> "sys" [];
	"email.generator" -> "time" [];
	"email.generator" -> "random" [];
	"email.generator" -> "copy" [];
	"email.generator" -> "io" [];
	"email._encoded_words" -> "re" [];
	"email._encoded_words" -> "base64" [];
	"email._encoded_words" -> "binascii" [];
	"email._encoded_words" -> "functools" [];
	"email._encoded_words" -> "string" [];
	"email._policybase" -> "abc" [];
	"email.header" -> "re" [];
	"email.header" -> "binascii" [];
	"csv" -> "re" [];
	"csv" -> "_csv" [];
	"csv" -> "io" [];
	"importlib.resources.readers" -> "collections" [];
	"importlib.resources.readers" -> "operator" [];
	"importlib.resources.readers" -> "pathlib" [];
	"importlib.resources.readers" -> "zipfile" [];
	"importlib.resources._itertools" -> "itertools" [];
	"importlib.resources._itertools" -> "typing" [];
	"tokenize" -> "builtins" [];
	"tokenize" -> "codecs" [];
	"tokenize" -> "collections" [];
	"tokenize" -> "functools" [];
	"tokenize" -> "io" [];
	"tokenize" -> "itertools" [];
	"tokenize" -> "re" [];
	"tokenize" -> "sys" [];
	"tokenize" -> "token" [];
	"tokenize" -> "argparse" [];
	"tokenize" -> "_tokenize" [];
	"pathlib" -> "fnmatch" [];
	"pathlib" -> "functools" [];
	"pathlib" -> "io" [];
	"pathlib" -> "ntpath" [];
	"pathlib" -> "os" [];
	"pathlib" -> "posixpath" [];
	"pathlib" -> "re" [];
	"pathlib" -> "sys" [];
	"pathlib" -> "warnings" [];
	"pathlib" -> "_collections_abc" [];
	"pathlib" -> "errno" [];
	"pathlib" -> "operator" [];
	"pathlib" -> "stat" [];
	"pathlib" -> "pwd" [];
	"pathlib" -> "grp" [];
	"threading" -> "os" [];
	"threading" -> "sys" [];
	"threading" -> "_thread" [];
	"threading" -> "functools" [];
	"threading" -> "time" [];
	"threading" -> "_weakrefset" [];
	"threading" -> "itertools" [];
	"threading" -> "_collections" [];
	"threading" -> "collections" [];
	"threading" -> "warnings" [];
	"threading" -> "traceback" [];
	"threading" -> "_threading_local" [];
	"_threading_local" -> "weakref" [];
	"_threading_local" -> "contextlib" [];
	"_threading_local" -> "threading" [];
	"importlib.util" -> "contextlib" [];
	"importlib.util" -> "_imp" [];
	"importlib.util" -> "functools" [];
	"importlib.util" -> "sys" [];
	"importlib.util" -> "types" [];
	"importlib.util" -> "warnings" [];
	"tarfile" -> "builtins" [];
	"tarfile" -> "sys" [];
	"tarfile" -> "os" [];
	"tarfile" -> "io" [];
	"tarfile" -> "shutil" [];
	"tarfile" -> "stat" [];
	"tarfile" -> "time" [];
	"tarfile" -> "struct" [];
	"tarfile" -> "copy" [];
	"tarfile" -> "re" [];
	"tarfile" -> "warnings" [];
	"tarfile" -> "pwd" [];
	"tarfile" -> "grp" [];
	"tarfile" -> "zlib" [];
	"tarfile" -> "bz2" [];
	"tarfile" -> "lzma" [];
	"tarfile" -> "gzip" [];
	"tarfile" -> "argparse" [];
	"gzip" -> "struct" [];
	"gzip" -> "sys" [];
	"gzip" -> "time" [];
	"gzip" -> "os" [];
	"gzip" -> "zlib" [];
	"gzip" -> "builtins" [];
	"gzip" -> "io" [];
	"gzip" -> "_compression" [];
	"gzip" -> "warnings" [];
	"gzip" -> "errno" [];
	"gzip" -> "argparse" [];
	"_compression" -> "io" [];
	"_compression" -> "sys" [];
	"lzma" -> "builtins" [];
	"lzma" -> "io" [];
	"lzma" -> "os" [];
	"lzma" -> "_lzma" [];
	"lzma" -> "_compression" [];
	"bz2" -> "builtins" [];
	"bz2" -> "io" [];
	"bz2" -> "os" [];
	"bz2" -> "_compression" [];
	"bz2" -> "_bz2" [];
	"random" -> "warnings" [];
	"random" -> "math" [];
	"random" -> "os" [];
	"random" -> "_collections_abc" [];
	"random" -> "operator" [];
	"random" -> "itertools" [];
	"random" -> "bisect" [];
	"random" -> "_random" [];
	"random" -> "_sha512" [];
	"random" -> "hashlib" [];
	"random" -> "statistics" [];
	"random" -> "time" [];
	"statistics" -> "math" [];
	"statistics" -> "numbers" [];
	"statistics" -> "random" [];
	"statistics" -> "sys" [];
	"statistics" -> "fractions" [];
	"statistics" -> "decimal" [];
	"statistics" -> "itertools" [];
	"statistics" -> "bisect" [];
	"statistics" -> "functools" [];
	"statistics" -> "operator" [];
	"statistics" -> "collections" [];
	"statistics" -> "_statistics" [];
	"decimal" -> "_decimal" [];
	"decimal" -> "_pydecimal" [];
	"_pydecimal" -> "math" [];
	"_pydecimal" -> "numbers" [];
	"_pydecimal" -> "sys" [];
	"_pydecimal" -> "collections" [];
	"_pydecimal" -> "contextvars" [];
	"_pydecimal" -> "re" [];
	"_pydecimal" -> "locale" [];
	"_pydecimal" -> "itertools" [];
	"contextvars" -> "_contextvars" [];
	"fractions" -> "decimal" [];
	"fractions" -> "math" [];
	"fractions" -> "numbers" [];
	"fractions" -> "operator" [];
	"fractions" -> "re" [];
	"fractions" -> "sys" [];
	"numbers" -> "abc" [];
	"http.cookiejar" -> "os" [];
	"http.cookiejar" -> "copy" [];
	"http.cookiejar" -> "datetime" [];
	"http.cookiejar" -> "re" [];
	"http.cookiejar" -> "time" [];
	"http.cookiejar" -> "threading" [];
	"http.cookiejar" -> "calendar" [];
	"http.cookiejar" -> "logging" [];
	"http.cookiejar" -> "io" [];
	"http.cookiejar" -> "warnings" [];
	"http.cookiejar" -> "traceback" [];
	"http" -> "enum" [];
	"logging" -> "sys" [];
	"logging" -> "os" [];
	"logging" -> "time" [];
	"logging" -> "io" [];
	"logging" -> "re" [];
	"logging" -> "traceback" [];
	"logging" -> "warnings" [];
	"logging" -> "weakref" [];
	"logging" -> "types" [];
	"logging" -> "string" [];
	"logging" -> "threading" [];
	"logging" -> "pickle" [];
	"logging" -> "atexit" [];
	"pickle" -> "types" [];
	"pickle" -> "copyreg" [];
	"pickle" -> "itertools" [];
	"pickle" -> "functools" [];
	"pickle" -> "sys" [];
	"pickle" -> "struct" [];
	"pickle" -> "re" [];
	"pickle" -> "io" [];
	"pickle" -> "codecs" [];
	"pickle" -> "_compat_pickle" [];
	"pickle" -> "_pickle" [];
	"pickle" -> "org" [];
	"pickle" -> "pprint" [];
	"pprint" -> "collections" [];
	"pprint" -> "dataclasses" [];
	"pprint" -> "re" [];
	"pprint" -> "sys" [];
	"pprint" -> "types" [];
	"pprint" -> "io" [];
	"pprint" -> "time" [];
	"dataclasses" -> "re" [];
	"dataclasses" -> "sys" [];
	"dataclasses" -> "copy" [];
	"dataclasses" -> "types" [];
	"dataclasses" -> "inspect" [];
	"dataclasses" -> "keyword" [];
	"dataclasses" -> "builtins" [];
	"dataclasses" -> "functools" [];
	"dataclasses" -> "itertools" [];
	"dataclasses" -> "abc" [];
	"dataclasses" -> "_thread" [];
	"inspect" -> "abc" [];
	"inspect" -> "ast" [];
	"inspect" -> "dis" [];
	"inspect" -> "enum" [];
	"inspect" -> "itertools" [];
	"inspect" -> "linecache" [];
	"inspect" -> "os" [];
	"inspect" -> "re" [];
	"inspect" -> "sys" [];
	"inspect" -> "tokenize" [];
	"inspect" -> "token" [];
	"inspect" -> "types" [];
	"inspect" -> "functools" [];
	"inspect" -> "builtins" [];
	"inspect" -> "keyword" [];
	"inspect" -> "operator" [];
	"inspect" -> "collections" [];
	"inspect" -> "argparse" [];
	"inspect" -> "importlib" [];
	"dis" -> "sys" [];
	"dis" -> "types" [];
	"dis" -> "collections" [];
	"dis" -> "io" [];
	"dis" -> "opcode" [];
	"dis" -> "argparse" [];
	"opcode" -> "_opcode" [];
	"ast" -> "sys" [];
	"ast" -> "_ast" [];
	"ast" -> "contextlib" [];
	"ast" -> "enum" [];
	"ast" -> "inspect" [];
	"ast" -> "collections" [];
	"ast" -> "warnings" [];
	"ast" -> "argparse" [];
	"ssl" -> "sys" [];
	"ssl" -> "os" [];
	"ssl" -> "collections" [];
	"ssl" -> "enum" [];
	"ssl" -> "_ssl" [];
	"ssl" -> "socket" [];
	"ssl" -> "base64" [];
	"ssl" -> "errno" [];
	"ssl" -> "warnings" [];
	"ssl" -> "time" [];
	"ssl" -> "calendar" [];
	"urllib.response" -> "tempfile" [];
	"urllib.error" -> "io" [];
	"contextlib" -> "abc" [];
	"contextlib" -> "os" [];
	"contextlib" -> "sys" [];
	"contextlib" -> "_collections_abc" [];
	"contextlib" -> "collections" [];
	"contextlib" -> "functools" [];
	"contextlib" -> "types" [];
	"tempfile" -> "functools" [];
	"tempfile" -> "warnings" [];
	"tempfile" -> "io" [];
	"tempfile" -> "os" [];
	"tempfile" -> "shutil" [];
	"tempfile" -> "errno" [];
	"tempfile" -> "random" [];
	"tempfile" -> "sys" [];
	"tempfile" -> "types" [];
	"tempfile" -> "weakref" [];
	"tempfile" -> "_thread" [];
	"string" -> "_string" [];
	"string" -> "re" [];
	"string" -> "collections" [];
	"socket" -> "_socket" [];
	"socket" -> "os" [];
	"socket" -> "sys" [];
	"socket" -> "io" [];
	"socket" -> "selectors" [];
	"socket" -> "enum" [];
	"socket" -> "errno" [];
	"socket" -> "array" [];
	"selectors" -> "abc" [];
	"selectors" -> "collections" [];
	"selectors" -> "math" [];
	"selectors" -> "select" [];
	"selectors" -> "sys" [];
	"http.client" -> "errno" [];
	"http.client" -> "io" [];
	"http.client" -> "re" [];
	"http.client" -> "socket" [];
	"http.client" -> "sys" [];
	"http.client" -> "ssl" [];
	"http.client" -> "warnings" [];
	"email.parser" -> "io" [];
	"email.feedparser" -> "re" [];
	"email.feedparser" -> "collections" [];
	"email.feedparser" -> "io" [];
	"hashlib" -> "_sha1" [];
	"hashlib" -> "_md5" [];
	"hashlib" -> "_sha256" [];
	"hashlib" -> "_sha512" [];
	"hashlib" -> "_blake2" [];
	"hashlib" -> "_sha3" [];
	"hashlib" -> "_hashlib" [];
	"hashlib" -> "warnings" [];
	"hashlib" -> "logging" [];
	"bisect" -> "_bisect" [];
	"base64" -> "re" [];
	"base64" -> "struct" [];
	"base64" -> "binascii" [];
	"base64" -> "sys" [];
	"base64" -> "getopt" [];
	"urllib.parse" -> "collections" [];
	"urllib.parse" -> "functools" [];
	"urllib.parse" -> "re" [];
	"urllib.parse" -> "sys" [];
	"urllib.parse" -> "types" [];
	"urllib.parse" -> "warnings" [];
	"urllib.parse" -> "ipaddress" [];
	"urllib.parse" -> "unicodedata" [];
	"ipaddress" -> "functools" [];
	"ipaddress" -> "re" [];
	"xml.sax" -> "io" [];
	"xml.sax" -> "os" [];
	"xml.sax" -> "sys" [];
	"xml.sax" -> "'org.python'" [];
	"xml.parsers.expat" -> "sys" [];
	"xml.parsers.expat" -> "pyexpat" [];
	"xml.sax._exceptions" -> "sys" [];
	"xml.sax._exceptions" -> "'java.lang'" [];
	"xml.etree.ElementTree" -> "sys" [];
	"xml.etree.ElementTree" -> "re" [];
	"xml.etree.ElementTree" -> "warnings" [];
	"xml.etree.ElementTree" -> "io" [];
	"xml.etree.ElementTree" -> "collections" [];
	"xml.etree.ElementTree" -> "contextlib" [];
	"xml.etree.ElementTree" -> "pyexpat" [];
	"xml.etree.ElementTree" -> "_elementtree" [];
	"xml.etree.ElementPath" -> "re" [];
	"xml.etree.ElementInclude" -> "copy" [];
	"setuptools" -> "__future__" [];
	"setuptools" -> "functools" [];
	"setuptools" -> "os" [];
	"setuptools" -> "re" [];
	"setuptools" -> "sys" [];
	"setuptools" -> "abc" [];
	"setuptools" -> "typing" [];
	"setuptools" -> "_distutils_hack" [];
	"setuptools._distutils.zosccompiler" -> "os" [];
	"setuptools._distutils.versionpredicate" -> "operator" [];
	"setuptools._distutils.versionpredicate" -> "re" [];
	"setuptools._distutils.version" -> "contextlib" [];
	"setuptools._distutils.version" -> "re" [];
	"setuptools._distutils.version" -> "warnings" [];
	"setuptools._distutils.util" -> "__future__" [];
	"setuptools._distutils.util" -> "functools" [];
	"setuptools._distutils.util" -> "os" [];
	"setuptools._distutils.util" -> "pathlib" [];
	"setuptools._distutils.util" -> "re" [];
	"setuptools._distutils.util" -> "string" [];
	"setuptools._distutils.util" -> "subprocess" [];
	"setuptools._distutils.util" -> "sys" [];
	"setuptools._distutils.util" -> "sysconfig" [];
	"setuptools._distutils.util" -> "tempfile" [];
	"setuptools._distutils.util" -> "distutils" [];
	"setuptools._distutils.util" -> "pwd" [];
	"setuptools._distutils.util" -> "warnings" [];
	"setuptools._distutils.util" -> "py_compile" [];
	"distutils.sysconfig" -> "_imp" [];
	"distutils.sysconfig" -> "os" [];
	"distutils.sysconfig" -> "re" [];
	"distutils.sysconfig" -> "sys" [];
	"distutils.sysconfig" -> "warnings" [];
	"distutils.sysconfig" -> "functools" [];
	"distutils.sysconfig" -> "sysconfig" [];
	"distutils.sysconfig" -> "_osx_support" [];
	"_osx_support" -> "os" [];
	"_osx_support" -> "re" [];
	"_osx_support" -> "sys" [];
	"_osx_support" -> "contextlib" [];
	"_osx_support" -> "tempfile" [];
	"distutils.text_file" -> "sys" [];
	"distutils.text_file" -> "io" [];
	"distutils" -> "sys" [];
	"distutils" -> "warnings" [];
	"distutils.archive_util" -> "os" [];
	"distutils.archive_util" -> "warnings" [];
	"distutils.archive_util" -> "sys" [];
	"distutils.archive_util" -> "zipfile" [];
	"distutils.archive_util" -> "pwd" [];
	"distutils.archive_util" -> "grp" [];
	"distutils.archive_util" -> "tarfile" [];
	"distutils.dir_util" -> "os" [];
	"distutils.dir_util" -> "errno" [];
	"distutils.file_util" -> "os" [];
	"distutils.file_util" -> "stat" [];
	"distutils.file_util" -> "os.path" [];
	"distutils.file_util" -> "errno" [];
	"distutils.dep_util" -> "os" [];
	"distutils.dep_util" -> "stat" [];
	"distutils.spawn" -> "sys" [];
	"distutils.spawn" -> "os" [];
	"distutils.spawn" -> "subprocess" [];
	"distutils.debug" -> "os" [];
	"distutils.log" -> "sys" [];
	"sysconfig" -> "os" [];
	"sysconfig" -> "sys" [];
	"sysconfig" -> "os.path" [];
	"sysconfig" -> "warnings" [];
	"sysconfig" -> "re" [];
	"sysconfig" -> "pprint" [];
	"sysconfig" -> "types" [];
	"sysconfig" -> "_imp" [];
	"sysconfig" -> "_aix_support" [];
	"_aix_support" -> "sys" [];
	"_aix_support" -> "sysconfig" [];
	"_aix_support" -> "subprocess" [];
	"_aix_support" -> "_bootsubprocess" [];
	"_bootsubprocess" -> "os" [];
	"subprocess" -> "builtins" [];
	"subprocess" -> "errno" [];
	"subprocess" -> "io" [];
	"subprocess" -> "locale" [];
	"subprocess" -> "os" [];
	"subprocess" -> "time" [];
	"subprocess" -> "signal" [];
	"subprocess" -> "sys" [];
	"subprocess" -> "threading" [];
	"subprocess" -> "warnings" [];
	"subprocess" -> "contextlib" [];
	"subprocess" -> "types" [];
	"subprocess" -> "fcntl" [];
	"subprocess" -> "msvcrt" [];
	"subprocess" -> "_winapi" [];
	"subprocess" -> "_posixsubprocess" [];
	"subprocess" -> "select" [];
	"subprocess" -> "selectors" [];
	"subprocess" -> "grp" [];
	"subprocess" -> "pwd" [];
	"signal" -> "_signal" [];
	"signal" -> "enum" [];
	"setuptools._distutils.unixccompiler" -> "__future__" [];
	"setuptools._distutils.unixccompiler" -> "itertools" [];
	"setuptools._distutils.unixccompiler" -> "os" [];
	"setuptools._distutils.unixccompiler" -> "re" [];
	"setuptools._distutils.unixccompiler" -> "shlex" [];
	"setuptools._distutils.unixccompiler" -> "sys" [];
	"distutils.util" -> "os" [];
	"distutils.util" -> "re" [];
	"distutils.util" -> "string" [];
	"distutils.util" -> "sys" [];
	"distutils.util" -> "_aix_support" [];
	"distutils.util" -> "_osx_support" [];
	"distutils.util" -> "pwd" [];
	"distutils.util" -> "subprocess" [];
	"distutils.util" -> "tempfile" [];
	"distutils.util" -> "py_compile" [];
	"distutils.filelist" -> "os" [];
	"distutils.filelist" -> "re" [];
	"distutils.filelist" -> "fnmatch" [];
	"distutils.filelist" -> "functools" [];
	"setuptools._distutils.text_file" -> "sys" [];
	"setuptools._distutils.sysconfig" -> "functools" [];
	"setuptools._distutils.sysconfig" -> "os" [];
	"setuptools._distutils.sysconfig" -> "pathlib" [];
	"setuptools._distutils.sysconfig" -> "re" [];
	"setuptools._distutils.sysconfig" -> "sys" [];
	"setuptools._distutils.sysconfig" -> "sysconfig" [];
	"setuptools._distutils.sysconfig" -> "warnings" [];
	"setuptools._distutils.spawn" -> "__future__" [];
	"setuptools._distutils.spawn" -> "os" [];
	"setuptools._distutils.spawn" -> "platform" [];
	"setuptools._distutils.spawn" -> "shutil" [];
	"setuptools._distutils.spawn" -> "subprocess" [];
	"setuptools._distutils.spawn" -> "sys" [];
	"setuptools._distutils.spawn" -> "warnings" [];
	"setuptools._distutils.spawn" -> "typing" [];
	"platform" -> "collections" [];
	"platform" -> "os" [];
	"platform" -> "re" [];
	"platform" -> "sys" [];
	"platform" -> "functools" [];
	"platform" -> "itertools" [];
	"platform" -> "subprocess" [];
	"platform" -> "winreg" [];
	"platform" -> "_winreg" [];
	"platform" -> "java" [];
	"platform" -> "'java.lang'" [];
	"platform" -> "socket" [];
	"platform" -> "struct" [];
	"platform" -> "vms_lib" [];
	"setuptools._distutils.log" -> "logging" [];
	"setuptools._distutils.log" -> "warnings" [];
	"setuptools._distutils.filelist" -> "fnmatch" [];
	"setuptools._distutils.filelist" -> "functools" [];
	"setuptools._distutils.filelist" -> "os" [];
	"setuptools._distutils.filelist" -> "re" [];
	"setuptools._distutils.file_util" -> "os" [];
	"setuptools._distutils.file_util" -> "'distutils._modified'" [];
	"setuptools._distutils.file_util" -> "stat" [];
	"setuptools._distutils.file_util" -> "errno" [];
	"setuptools._distutils.file_util" -> "os.path" [];
	"setuptools._distutils.fancy_getopt" -> "getopt" [];
	"setuptools._distutils.fancy_getopt" -> "re" [];
	"setuptools._distutils.fancy_getopt" -> "string" [];
	"setuptools._distutils.fancy_getopt" -> "sys" [];
	"setuptools._distutils.fancy_getopt" -> "typing" [];
	"setuptools._distutils.extension" -> "os" [];
	"setuptools._distutils.extension" -> "warnings" [];
	"setuptools._distutils.dist" -> "contextlib" [];
	"setuptools._distutils.dist" -> "logging" [];
	"setuptools._distutils.dist" -> "os" [];
	"setuptools._distutils.dist" -> "pathlib" [];
	"setuptools._distutils.dist" -> "re" [];
	"setuptools._distutils.dist" -> "sys" [];
	"setuptools._distutils.dist" -> "warnings" [];
	"setuptools._distutils.dist" -> "email" [];
	"setuptools._distutils.dist" -> "pprint" [];
	"setuptools._distutils.dist" -> "configparser" [];
	"distutils.versionpredicate" -> "re" [];
	"distutils.versionpredicate" -> "operator" [];
	"distutils.version" -> "re" [];
	"distutils.cmd" -> "sys" [];
	"distutils.cmd" -> "os" [];
	"distutils.cmd" -> "re" [];
	"distutils.fancy_getopt" -> "sys" [];
	"distutils.fancy_getopt" -> "string" [];
	"distutils.fancy_getopt" -> "re" [];
	"distutils.fancy_getopt" -> "getopt" [];
	"distutils.dist" -> "sys" [];
	"distutils.dist" -> "os" [];
	"distutils.dist" -> "re" [];
	"distutils.dist" -> "email" [];
	"distutils.dist" -> "warnings" [];
	"distutils.dist" -> "pprint" [];
	"distutils.dist" -> "configparser" [];
	"configparser" -> "collections" [];
	"configparser" -> "functools" [];
	"configparser" -> "io" [];
	"configparser" -> "itertools" [];
	"configparser" -> "os" [];
	"configparser" -> "re" [];
	"configparser" -> "sys" [];
	"configparser" -> "warnings" [];
	"packaging.utils" -> "__future__" [];
	"packaging.utils" -> "re" [];
	"packaging.utils" -> "typing" [];
	"packaging" -> "pkg_resources" [];
	"pkg_resources" -> "__future__" [];
	"pkg_resources" -> "sys" [];
	"pkg_resources" -> "_imp" [];
	"pkg_resources" -> "collections" [];
	"pkg_resources" -> "errno" [];
	"pkg_resources" -> "functools" [];
	"pkg_resources" -> "importlib" [];
	"pkg_resources" -> "inspect" [];
	"pkg_resources" -> "io" [];
	"pkg_resources" -> "ntpath" [];
	"pkg_resources" -> "operator" [];
	"pkg_resources" -> "os" [];
	"pkg_resources" -> "pkgutil" [];
	"pkg_resources" -> "platform" [];
	"pkg_resources" -> "plistlib" [];
	"pkg_resources" -> "posixpath" [];
	"pkg_resources" -> "re" [];
	"pkg_resources" -> "stat" [];
	"pkg_resources" -> "tempfile" [];
	"pkg_resources" -> "textwrap" [];
	"pkg_resources" -> "time" [];
	"pkg_resources" -> "types" [];
	"pkg_resources" -> "warnings" [];
	"pkg_resources" -> "zipfile" [];
	"pkg_resources" -> "zipimport" [];
	"pkg_resources" -> "typing" [];
	"pkg_resources" -> "os.path" [];
	"pkg_resources" -> "platformdirs" [];
	"pkg_resources" -> "_typeshed" [];
	"pkg_resources" -> "'_typeshed.importlib'" [];
	"pkg_resources" -> "typing_extensions" [];
	"pkg_resources" -> "sysconfig" [];
	"pkg_resources" -> "linecache" [];
	"pkg_resources" -> "packaging" [];
	"packaging.metadata" -> "__future__" [];
	"packaging.metadata" -> "typing" [];
	"packaging._tokenizer" -> "__future__" [];
	"packaging._tokenizer" -> "contextlib" [];
	"packaging._tokenizer" -> "re" [];
	"packaging._tokenizer" -> "dataclasses" [];
	"packaging._tokenizer" -> "typing" [];
	"packaging._parser" -> "__future__" [];
	"packaging._parser" -> "ast" [];
	"packaging._parser" -> "typing" [];
	"packaging._elffile" -> "__future__" [];
	"packaging._elffile" -> "enum" [];
	"packaging._elffile" -> "os" [];
	"packaging._elffile" -> "struct" [];
	"packaging._elffile" -> "typing" [];
	"typing_extensions" -> "abc" [];
	"typing_extensions" -> "collections" [];
	"typing_extensions" -> "contextlib" [];
	"typing_extensions" -> "functools" [];
	"typing_extensions" -> "inspect" [];
	"typing_extensions" -> "operator" [];
	"typing_extensions" -> "sys" [];
	"typing_extensions" -> "types" [];
	"typing_extensions" -> "typing" [];
	"typing_extensions" -> "warnings" [];
	"typing_extensions" -> "_socket" [];
	"platformdirs" -> "__future__" [];
	"platformdirs" -> "os" [];
	"platformdirs" -> "sys" [];
	"platformdirs" -> "typing" [];
	"platformdirs" -> "pathlib" [];
	"platformdirs.android" -> "__future__" [];
	"platformdirs.android" -> "os" [];
	"platformdirs.android" -> "re" [];
	"platformdirs.android" -> "sys" [];
	"platformdirs.android" -> "functools" [];
	"platformdirs.android" -> "typing" [];
	"platformdirs.android" -> "android" [];
	"platformdirs.android" -> "jnius" [];
	"platformdirs.unix" -> "__future__" [];
	"platformdirs.unix" -> "os" [];
	"platformdirs.unix" -> "sys" [];
	"platformdirs.unix" -> "configparser" [];
	"platformdirs.unix" -> "pathlib" [];
	"platformdirs.unix" -> "typing" [];
	"platformdirs.macos" -> "__future__" [];
	"platformdirs.macos" -> "os.path" [];
	"platformdirs.macos" -> "sys" [];
	"platformdirs.macos" -> "typing" [];
	"platformdirs.macos" -> "pathlib" [];
	"platformdirs.windows" -> "__future__" [];
	"platformdirs.windows" -> "os" [];
	"platformdirs.windows" -> "sys" [];
	"platformdirs.windows" -> "functools" [];
	"platformdirs.windows" -> "typing" [];
	"platformdirs.windows" -> "winreg" [];
	"platformdirs.windows" -> "ctypes" [];
	"ctypes" -> "os" [];
	"ctypes" -> "sys" [];
	"ctypes" -> "types" [];
	"ctypes" -> "_ctypes" [];
	"ctypes" -> "struct" [];
	"ctypes" -> "nt" [];
	"ctypes._endian" -> "sys" [];
	"platformdirs.version" -> "typing" [];
	"platformdirs.api" -> "__future__" [];
	"platformdirs.api" -> "os" [];
	"platformdirs.api" -> "abc" [];
	"platformdirs.api" -> "pathlib" [];
	"platformdirs.api" -> "typing" [];
	"packaging.specifiers" -> "__future__" [];
	"packaging.specifiers" -> "abc" [];
	"packaging.specifiers" -> "itertools" [];
	"packaging.specifiers" -> "re" [];
	"packaging.specifiers" -> "typing" [];
	"packaging.requirements" -> "__future__" [];
	"packaging.requirements" -> "typing" [];
	"packaging.markers" -> "__future__" [];
	"packaging.markers" -> "operator" [];
	"packaging.markers" -> "os" [];
	"packaging.markers" -> "platform" [];
	"packaging.markers" -> "sys" [];
	"packaging.markers" -> "typing" [];
	"plistlib" -> "binascii" [];
	"plistlib" -> "codecs" [];
	"plistlib" -> "datetime" [];
	"plistlib" -> "enum" [];
	"plistlib" -> "io" [];
	"plistlib" -> "itertools" [];
	"plistlib" -> "os" [];
	"plistlib" -> "re" [];
	"plistlib" -> "struct" [];
	"pkgutil" -> "collections" [];
	"pkgutil" -> "functools" [];
	"pkgutil" -> "importlib" [];
	"pkgutil" -> "os" [];
	"pkgutil" -> "os.path" [];
	"pkgutil" -> "sys" [];
	"pkgutil" -> "types" [];
	"pkgutil" -> "warnings" [];
	"pkgutil" -> "marshal" [];
	"pkgutil" -> "inspect" [];
	"pkgutil" -> "zipimport" [];
	"pkgutil" -> "re" [];
	"packaging._musllinux" -> "__future__" [];
	"packaging._musllinux" -> "functools" [];
	"packaging._musllinux" -> "re" [];
	"packaging._musllinux" -> "subprocess" [];
	"packaging._musllinux" -> "sys" [];
	"packaging._musllinux" -> "typing" [];
	"packaging._musllinux" -> "sysconfig" [];
	"packaging._manylinux" -> "__future__" [];
	"packaging._manylinux" -> "collections" [];
	"packaging._manylinux" -> "contextlib" [];
	"packaging._manylinux" -> "functools" [];
	"packaging._manylinux" -> "os" [];
	"packaging._manylinux" -> "re" [];
	"packaging._manylinux" -> "sys" [];
	"packaging._manylinux" -> "warnings" [];
	"packaging._manylinux" -> "typing" [];
	"packaging._manylinux" -> "ctypes" [];
	"packaging._manylinux" -> "_manylinux" [];
	"packaging.version" -> "__future__" [];
	"packaging.version" -> "itertools" [];
	"packaging.version" -> "re" [];
	"packaging.version" -> "typing" [];
	"packaging.tags" -> "__future__" [];
	"packaging.tags" -> "logging" [];
	"packaging.tags" -> "platform" [];
	"packaging.tags" -> "re" [];
	"packaging.tags" -> "struct" [];
	"packaging.tags" -> "subprocess" [];
	"packaging.tags" -> "sys" [];
	"packaging.tags" -> "sysconfig" [];
	"packaging.tags" -> "typing" [];
	"setuptools._distutils.dir_util" -> "functools" [];
	"setuptools._distutils.dir_util" -> "itertools" [];
	"setuptools._distutils.dir_util" -> "os" [];
	"setuptools._distutils.dir_util" -> "pathlib" [];
	"setuptools._distutils.dep_util" -> "warnings" [];
	"setuptools._distutils.debug" -> "os" [];
	"setuptools._distutils.cygwinccompiler" -> "copy" [];
	"setuptools._distutils.cygwinccompiler" -> "os" [];
	"setuptools._distutils.cygwinccompiler" -> "pathlib" [];
	"setuptools._distutils.cygwinccompiler" -> "shlex" [];
	"setuptools._distutils.cygwinccompiler" -> "sys" [];
	"setuptools._distutils.cygwinccompiler" -> "warnings" [];
	"setuptools._distutils.cygwinccompiler" -> "subprocess" [];
	"setuptools._distutils.cygwinccompiler" -> "distutils" [];
	"setuptools._distutils.core" -> "os" [];
	"setuptools._distutils.core" -> "sys" [];
	"setuptools._distutils.core" -> "tokenize" [];
	"setuptools._distutils.compat.py39" -> "functools" [];
	"setuptools._distutils.compat.py39" -> "itertools" [];
	"setuptools._distutils.compat.py39" -> "platform" [];
	"setuptools._distutils.compat.py39" -> "sys" [];
	"setuptools._distutils.compat.py39" -> "_imp" [];
	"setuptools._distutils.compat.py38" -> "sys" [];
	"setuptools._distutils.compat.py38" -> "_aix_support" [];
	"setuptools._distutils.compat" -> "__future__" [];
	"setuptools._distutils.command.sdist" -> "os" [];
	"setuptools._distutils.command.sdist" -> "sys" [];
	"setuptools._distutils.command.sdist" -> "distutils" [];
	"setuptools._distutils.command.sdist" -> "'distutils._log'" [];
	"setuptools._distutils.command.sdist" -> "glob" [];
	"setuptools._distutils.command.sdist" -> "itertools" [];
	"glob" -> "contextlib" [];
	"glob" -> "os" [];
	"glob" -> "re" [];
	"glob" -> "fnmatch" [];
	"glob" -> "itertools" [];
	"glob" -> "stat" [];
	"glob" -> "sys" [];
	"setuptools._distutils.command.install_scripts" -> "os" [];
	"setuptools._distutils.command.install_scripts" -> "'distutils._log'" [];
	"setuptools._distutils.command.install_scripts" -> "stat" [];
	"setuptools._distutils.command.install_lib" -> "os" [];
	"setuptools._distutils.command.install_lib" -> "sys" [];
	"setuptools._distutils.command.install_egg_info" -> "os" [];
	"setuptools._distutils.command.install_egg_info" -> "re" [];
	"setuptools._distutils.command.install_egg_info" -> "sys" [];
	"setuptools._distutils.command.install_data" -> "__future__" [];
	"setuptools._distutils.command.install_data" -> "functools" [];
	"setuptools._distutils.command.install_data" -> "os" [];
	"setuptools._distutils.command.install_data" -> "typing" [];
	"setuptools._distutils.command.install" -> "contextlib" [];
	"setuptools._distutils.command.install" -> "itertools" [];
	"setuptools._distutils.command.install" -> "os" [];
	"setuptools._distutils.command.install" -> "sys" [];
	"setuptools._distutils.command.install" -> "sysconfig" [];
	"setuptools._distutils.command.install" -> "'distutils._log'" [];
	"setuptools._distutils.command.install" -> "site" [];
	"setuptools._distutils.command.install" -> "pprint" [];
	"jaraco.collections" -> "__future__" [];
	"jaraco.collections" -> "copy" [];
	"jaraco.collections" -> "functools" [];
	"jaraco.collections" -> "itertools" [];
	"jaraco.collections" -> "operator" [];
	"jaraco.collections" -> "random" [];
	"jaraco.collections" -> "re" [];
	"jaraco.collections" -> "typing" [];
	"jaraco.collections" -> "_operator" [];
	"jaraco.collections" -> "_typeshed" [];
	"jaraco.collections" -> "typing_extensions" [];
	"site" -> "sys" [];
	"site" -> "os" [];
	"site" -> "builtins" [];
	"site" -> "_sitebuiltins" [];
	"site" -> "io" [];
	"site" -> "traceback" [];
	"site" -> "atexit" [];
	"site" -> "readline" [];
	"site" -> "rlcompleter" [];
	"site" -> "sitecustomize" [];
	"site" -> "usercustomize" [];
	"site" -> "textwrap" [];
	"rlcompleter" -> "atexit" [];
	"rlcompleter" -> "builtins" [];
	"rlcompleter" -> "inspect" [];
	"rlcompleter" -> "keyword" [];
	"rlcompleter" -> "re" [];
	"rlcompleter" -> "readline" [];
	"_sitebuiltins" -> "sys" [];
	"_sitebuiltins" -> "os" [];
	"_sitebuiltins" -> "pydoc" [];
	"pydoc" -> "__future__" [];
	"pydoc" -> "builtins" [];
	"pydoc" -> "inspect" [];
	"pydoc" -> "io" [];
	"pydoc" -> "os" [];
	"pydoc" -> "pkgutil" [];
	"pydoc" -> "platform" [];
	"pydoc" -> "re" [];
	"pydoc" -> "sys" [];
	"pydoc" -> "sysconfig" [];
	"pydoc" -> "time" [];
	"pydoc" -> "tokenize" [];
	"pydoc" -> "warnings" [];
	"pydoc" -> "collections" [];
	"pydoc" -> "reprlib" [];
	"pydoc" -> "traceback" [];
	"pydoc" -> "tempfile" [];
	"pydoc" -> "subprocess" [];
	"pydoc" -> "tty" [];
	"pydoc" -> "textwrap" [];
	"pydoc" -> "select" [];
	"pydoc" -> "threading" [];
	"pydoc" -> "webbrowser" [];
	"pydoc" -> "getopt" [];
	"webbrowser" -> "os" [];
	"webbrowser" -> "shlex" [];
	"webbrowser" -> "shutil" [];
	"webbrowser" -> "sys" [];
	"webbrowser" -> "subprocess" [];
	"webbrowser" -> "threading" [];
	"webbrowser" -> "warnings" [];
	"webbrowser" -> "copy" [];
	"webbrowser" -> "glob" [];
	"webbrowser" -> "pwd" [];
	"webbrowser" -> "socket" [];
	"webbrowser" -> "tempfile" [];
	"webbrowser" -> "getopt" [];
	"http.server" -> "copy" [];
	"http.server" -> "datetime" [];
	"http.server" -> "html" [];
	"http.server" -> "io" [];
	"http.server" -> "itertools" [];
	"http.server" -> "mimetypes" [];
	"http.server" -> "os" [];
	"http.server" -> "posixpath" [];
	"http.server" -> "select" [];
	"http.server" -> "shutil" [];
	"http.server" -> "socket" [];
	"http.server" -> "socketserver" [];
	"http.server" -> "sys" [];
	"http.server" -> "time" [];
	"http.server" -> "pwd" [];
	"http.server" -> "base64" [];
	"http.server" -> "binascii" [];
	"http.server" -> "subprocess" [];
	"http.server" -> "argparse" [];
	"http.server" -> "contextlib" [];
	"socketserver" -> "socket" [];
	"socketserver" -> "selectors" [];
	"socketserver" -> "os" [];
	"socketserver" -> "sys" [];
	"socketserver" -> "threading" [];
	"socketserver" -> "io" [];
	"socketserver" -> "time" [];
	"socketserver" -> "traceback" [];
	"html" -> "re" [];
	"tty" -> "termios" [];
	"setuptools._distutils.command.config" -> "__future__" [];
	"setuptools._distutils.command.config" -> "os" [];
	"setuptools._distutils.command.config" -> "pathlib" [];
	"setuptools._distutils.command.config" -> "re" [];
	"setuptools._distutils.command.config" -> "'distutils._log'" [];
	"setuptools._distutils.command.clean" -> "os" [];
	"setuptools._distutils.command.clean" -> "'distutils._log'" [];
	"setuptools._distutils.command.check" -> "contextlib" [];
	"setuptools._distutils.command.build_scripts" -> "os" [];
	"setuptools._distutils.command.build_scripts" -> "re" [];
	"setuptools._distutils.command.build_scripts" -> "tokenize" [];
	"setuptools._distutils.command.build_scripts" -> "distutils" [];
	"setuptools._distutils.command.build_scripts" -> "'distutils._log'" [];
	"setuptools._distutils.command.build_scripts" -> "stat" [];
	"setuptools._distutils.command.build_py" -> "glob" [];
	"setuptools._distutils.command.build_py" -> "os" [];
	"setuptools._distutils.command.build_py" -> "sys" [];
	"setuptools._distutils.command.build_py" -> "'distutils._log'" [];
	"setuptools._distutils.command.build_ext" -> "contextlib" [];
	"setuptools._distutils.command.build_ext" -> "os" [];
	"setuptools._distutils.command.build_ext" -> "re" [];
	"setuptools._distutils.command.build_ext" -> "sys" [];
	"setuptools._distutils.command.build_ext" -> "'distutils._log'" [];
	"setuptools._distutils.command.build_ext" -> "site" [];
	"setuptools._distutils.command.build_ext" -> "distutils" [];
	"concurrent.futures.thread" -> "itertools" [];
	"concurrent.futures.thread" -> "queue" [];
	"concurrent.futures.thread" -> "threading" [];
	"concurrent.futures.thread" -> "types" [];
	"concurrent.futures.thread" -> "weakref" [];
	"concurrent.futures.thread" -> "os" [];
	"queue" -> "threading" [];
	"queue" -> "types" [];
	"queue" -> "collections" [];
	"queue" -> "heapq" [];
	"queue" -> "time" [];
	"queue" -> "_queue" [];
	"concurrent.futures.process" -> "os" [];
	"concurrent.futures.process" -> "queue" [];
	"concurrent.futures.process" -> "multiprocessing" [];
	"concurrent.futures.process" -> "threading" [];
	"concurrent.futures.process" -> "weakref" [];
	"concurrent.futures.process" -> "functools" [];
	"concurrent.futures.process" -> "itertools" [];
	"concurrent.futures.process" -> "sys" [];
	"concurrent.futures.process" -> "traceback" [];
	"multiprocessing.synchronize" -> "threading" [];
	"multiprocessing.synchronize" -> "sys" [];
	"multiprocessing.synchronize" -> "tempfile" [];
	"multiprocessing.synchronize" -> "_multiprocessing" [];
	"multiprocessing.synchronize" -> "time" [];
	"multiprocessing.synchronize" -> "struct" [];
	"multiprocessing.heap" -> "bisect" [];
	"multiprocessing.heap" -> "collections" [];
	"multiprocessing.heap" -> "mmap" [];
	"multiprocessing.heap" -> "os" [];
	"multiprocessing.heap" -> "sys" [];
	"multiprocessing.heap" -> "tempfile" [];
	"multiprocessing.heap" -> "threading" [];
	"multiprocessing.heap" -> "_winapi" [];
	"multiprocessing.resource_tracker" -> "os" [];
	"multiprocessing.resource_tracker" -> "signal" [];
	"multiprocessing.resource_tracker" -> "sys" [];
	"multiprocessing.resource_tracker" -> "threading" [];
	"multiprocessing.resource_tracker" -> "warnings" [];
	"multiprocessing.resource_tracker" -> "_multiprocessing" [];
	"multiprocessing.resource_tracker" -> "_posixshmem" [];
	"multiprocessing.spawn" -> "os" [];
	"multiprocessing.spawn" -> "sys" [];
	"multiprocessing.spawn" -> "runpy" [];
	"multiprocessing.spawn" -> "types" [];
	"multiprocessing.spawn" -> "msvcrt" [];
	"multiprocessing.spawn" -> "_winapi" [];
	"runpy" -> "sys" [];
	"runpy" -> "io" [];
	"runpy" -> "os" [];
	"runpy" -> "warnings" [];
	"runpy" -> "pkgutil" [];
	"multiprocessing.util" -> "os" [];
	"multiprocessing.util" -> "itertools" [];
	"multiprocessing.util" -> "sys" [];
	"multiprocessing.util" -> "weakref" [];
	"multiprocessing.util" -> "atexit" [];
	"multiprocessing.util" -> "threading" [];
	"multiprocessing.util" -> "subprocess" [];
	"multiprocessing.util" -> "logging" [];
	"multiprocessing.util" -> "shutil" [];
	"multiprocessing.util" -> "tempfile" [];
	"multiprocessing.util" -> "traceback" [];
	"multiprocessing.util" -> "_posixsubprocess" [];
	"multiprocessing.forkserver" -> "errno" [];
	"multiprocessing.forkserver" -> "os" [];
	"multiprocessing.forkserver" -> "selectors" [];
	"multiprocessing.forkserver" -> "signal" [];
	"multiprocessing.forkserver" -> "socket" [];
	"multiprocessing.forkserver" -> "struct" [];
	"multiprocessing.forkserver" -> "sys" [];
	"multiprocessing.forkserver" -> "threading" [];
	"multiprocessing.forkserver" -> "warnings" [];
	"multiprocessing.process" -> "os" [];
	"multiprocessing.process" -> "sys" [];
	"multiprocessing.process" -> "signal" [];
	"multiprocessing.process" -> "itertools" [];
	"multiprocessing.process" -> "threading" [];
	"multiprocessing.process" -> "_weakrefset" [];
	"multiprocessing.process" -> "traceback" [];
	"multiprocessing.context" -> "os" [];
	"multiprocessing.context" -> "sys" [];
	"multiprocessing.context" -> "threading" [];
	"multiprocessing.popen_spawn_win32" -> "os" [];
	"multiprocessing.popen_spawn_win32" -> "msvcrt" [];
	"multiprocessing.popen_spawn_win32" -> "signal" [];
	"multiprocessing.popen_spawn_win32" -> "sys" [];
	"multiprocessing.popen_spawn_win32" -> "_winapi" [];
	"multiprocessing.popen_forkserver" -> "io" [];
	"multiprocessing.popen_forkserver" -> "os" [];
	"multiprocessing.popen_spawn_posix" -> "io" [];
	"multiprocessing.popen_spawn_posix" -> "os" [];
	"multiprocessing.popen_fork" -> "os" [];
	"multiprocessing.popen_fork" -> "signal" [];
	"multiprocessing.sharedctypes" -> "ctypes" [];
	"multiprocessing.sharedctypes" -> "weakref" [];
	"multiprocessing.pool" -> "collections" [];
	"multiprocessing.pool" -> "itertools" [];
	"multiprocessing.pool" -> "os" [];
	"multiprocessing.pool" -> "queue" [];
	"multiprocessing.pool" -> "threading" [];
	"multiprocessing.pool" -> "time" [];
	"multiprocessing.pool" -> "traceback" [];
	"multiprocessing.pool" -> "types" [];
	"multiprocessing.pool" -> "warnings" [];
	"multiprocessing.dummy" -> "threading" [];
	"multiprocessing.dummy" -> "sys" [];
	"multiprocessing.dummy" -> "weakref" [];
	"multiprocessing.dummy" -> "array" [];
	"multiprocessing.dummy" -> "queue" [];
	"multiprocessing.dummy.connection" -> "queue" [];
	"multiprocessing.managers" -> "sys" [];
	"multiprocessing.managers" -> "threading" [];
	"multiprocessing.managers" -> "signal" [];
	"multiprocessing.managers" -> "array" [];
	"multiprocessing.managers" -> "queue" [];
	"multiprocessing.managers" -> "time" [];
	"multiprocessing.managers" -> "types" [];
	"multiprocessing.managers" -> "os" [];
	"multiprocessing.managers" -> "traceback" [];
	"multiprocessing.shared_memory" -> "functools" [];
	"multiprocessing.shared_memory" -> "mmap" [];
	"multiprocessing.shared_memory" -> "os" [];
	"multiprocessing.shared_memory" -> "errno" [];
	"multiprocessing.shared_memory" -> "struct" [];
	"multiprocessing.shared_memory" -> "secrets" [];
	"multiprocessing.shared_memory" -> "types" [];
	"multiprocessing.shared_memory" -> "_winapi" [];
	"multiprocessing.shared_memory" -> "_posixshmem" [];
	"secrets" -> "base64" [];
	"secrets" -> "binascii" [];
	"secrets" -> "hmac" [];
	"secrets" -> "random" [];
	"hmac" -> "warnings" [];
	"hmac" -> "_hashlib" [];
	"hmac" -> "_operator" [];
	"hmac" -> "hashlib" [];
	"multiprocessing.reduction" -> "abc" [];
	"multiprocessing.reduction" -> "copyreg" [];
	"multiprocessing.reduction" -> "functools" [];
	"multiprocessing.reduction" -> "io" [];
	"multiprocessing.reduction" -> "os" [];
	"multiprocessing.reduction" -> "pickle" [];
	"multiprocessing.reduction" -> "socket" [];
	"multiprocessing.reduction" -> "sys" [];
	"multiprocessing.reduction" -> "_winapi" [];
	"multiprocessing.reduction" -> "array" [];
	"multiprocessing.resource_sharer" -> "os" [];
	"multiprocessing.resource_sharer" -> "signal" [];
	"multiprocessing.resource_sharer" -> "socket" [];
	"multiprocessing.resource_sharer" -> "sys" [];
	"multiprocessing.resource_sharer" -> "threading" [];
	"multiprocessing.queues" -> "sys" [];
	"multiprocessing.queues" -> "os" [];
	"multiprocessing.queues" -> "threading" [];
	"multiprocessing.queues" -> "collections" [];
	"multiprocessing.queues" -> "time" [];
	"multiprocessing.queues" -> "types" [];
	"multiprocessing.queues" -> "weakref" [];
	"multiprocessing.queues" -> "errno" [];
	"multiprocessing.queues" -> "queue" [];
	"multiprocessing.queues" -> "_multiprocessing" [];
	"multiprocessing.queues" -> "traceback" [];
	"multiprocessing.connection" -> "io" [];
	"multiprocessing.connection" -> "os" [];
	"multiprocessing.connection" -> "sys" [];
	"multiprocessing.connection" -> "socket" [];
	"multiprocessing.connection" -> "struct" [];
	"multiprocessing.connection" -> "time" [];
	"multiprocessing.connection" -> "tempfile" [];
	"multiprocessing.connection" -> "itertools" [];
	"multiprocessing.connection" -> "_multiprocessing" [];
	"multiprocessing.connection" -> "_winapi" [];
	"multiprocessing.connection" -> "hmac" [];
	"multiprocessing.connection" -> "selectors" [];
	"xmlrpc.client" -> "base64" [];
	"xmlrpc.client" -> "sys" [];
	"xmlrpc.client" -> "time" [];
	"xmlrpc.client" -> "datetime" [];
	"xmlrpc.client" -> "decimal" [];
	"xmlrpc.client" -> "errno" [];
	"xmlrpc.client" -> "io" [];
	"xmlrpc.client" -> "gzip" [];
	"multiprocessing" -> "sys" [];
	"concurrent.futures._base" -> "collections" [];
	"concurrent.futures._base" -> "logging" [];
	"concurrent.futures._base" -> "threading" [];
	"concurrent.futures._base" -> "time" [];
	"concurrent.futures._base" -> "types" [];
	"setuptools._distutils.command.build_clib" -> "os" [];
	"setuptools._distutils.command.build_clib" -> "'distutils._log'" [];
	"setuptools._distutils.command.build" -> "os" [];
	"setuptools._distutils.command.build" -> "sys" [];
	"setuptools._distutils.command.build" -> "sysconfig" [];
	"setuptools._distutils.command.bdist_rpm" -> "os" [];
	"setuptools._distutils.command.bdist_rpm" -> "subprocess" [];
	"setuptools._distutils.command.bdist_rpm" -> "sys" [];
	"setuptools._distutils.command.bdist_rpm" -> "'distutils._log'" [];
	"setuptools._distutils.command.bdist_dumb" -> "os" [];
	"setuptools._distutils.command.bdist_dumb" -> "'distutils._log'" [];
	"setuptools._distutils.command.bdist" -> "os" [];
	"setuptools._distutils.command.bdist" -> "warnings" [];
	"setuptools._distutils.command._framework_compat" -> "functools" [];
	"setuptools._distutils.command._framework_compat" -> "os" [];
	"setuptools._distutils.command._framework_compat" -> "subprocess" [];
	"setuptools._distutils.command._framework_compat" -> "sys" [];
	"setuptools._distutils.command._framework_compat" -> "sysconfig" [];
	"setuptools._distutils.cmd" -> "logging" [];
	"setuptools._distutils.cmd" -> "os" [];
	"setuptools._distutils.cmd" -> "re" [];
	"setuptools._distutils.cmd" -> "sys" [];
	"setuptools._distutils.ccompiler" -> "os" [];
	"setuptools._distutils.ccompiler" -> "re" [];
	"setuptools._distutils.ccompiler" -> "sys" [];
	"setuptools._distutils.ccompiler" -> "types" [];
	"setuptools._distutils.ccompiler" -> "warnings" [];
	"setuptools._distutils.ccompiler" -> "more_itertools" [];
	"setuptools._distutils.ccompiler" -> "tempfile" [];
	"setuptools._distutils.archive_util" -> "os" [];
	"setuptools._distutils.archive_util" -> "zipfile" [];
	"setuptools._distutils.archive_util" -> "pwd" [];
	"setuptools._distutils.archive_util" -> "grp" [];
	"setuptools._distutils.archive_util" -> "tarfile" [];
	"setuptools._distutils._msvccompiler" -> "contextlib" [];
	"setuptools._distutils._msvccompiler" -> "os" [];
	"setuptools._distutils._msvccompiler" -> "subprocess" [];
	"setuptools._distutils._msvccompiler" -> "warnings" [];
	"setuptools._distutils._msvccompiler" -> "winreg" [];
	"setuptools._distutils._msvccompiler" -> "itertools" [];
	"unittest.mock" -> "asyncio" [];
	"unittest.mock" -> "contextlib" [];
	"unittest.mock" -> "io" [];
	"unittest.mock" -> "inspect" [];
	"unittest.mock" -> "pprint" [];
	"unittest.mock" -> "sys" [];
	"unittest.mock" -> "builtins" [];
	"unittest.mock" -> "pkgutil" [];
	"unittest.mock" -> "types" [];
	"unittest.mock" -> "functools" [];
	"unittest.mock" -> "threading" [];
	"unittest.mock" -> "_io" [];
	"unittest" -> "os.path" [];
	"unittest.async_case" -> "asyncio" [];
	"unittest.async_case" -> "contextvars" [];
	"unittest.async_case" -> "inspect" [];
	"unittest.async_case" -> "warnings" [];
	"unittest.signals" -> "signal" [];
	"unittest.signals" -> "weakref" [];
	"unittest.signals" -> "functools" [];
	"unittest.main" -> "sys" [];
	"unittest.main" -> "argparse" [];
	"unittest.main" -> "os" [];
	"unittest.main" -> "warnings" [];
	"unittest.runner" -> "sys" [];
	"unittest.runner" -> "time" [];
	"unittest.runner" -> "warnings" [];
	"unittest.loader" -> "os" [];
	"unittest.loader" -> "re" [];
	"unittest.loader" -> "sys" [];
	"unittest.loader" -> "traceback" [];
	"unittest.loader" -> "types" [];
	"unittest.loader" -> "functools" [];
	"unittest.loader" -> "warnings" [];
	"unittest.loader" -> "fnmatch" [];
	"unittest.suite" -> "sys" [];
	"unittest.case" -> "sys" [];
	"unittest.case" -> "functools" [];
	"unittest.case" -> "difflib" [];
	"unittest.case" -> "pprint" [];
	"unittest.case" -> "re" [];
	"unittest.case" -> "warnings" [];
	"unittest.case" -> "collections" [];
	"unittest.case" -> "contextlib" [];
	"unittest.case" -> "traceback" [];
	"unittest.case" -> "types" [];
	"unittest._log" -> "logging" [];
	"unittest._log" -> "collections" [];
	"difflib" -> "heapq" [];
	"difflib" -> "collections" [];
	"difflib" -> "types" [];
	"difflib" -> "re" [];
	"difflib" -> "difflib" [];
	"unittest.result" -> "io" [];
	"unittest.result" -> "sys" [];
	"unittest.result" -> "traceback" [];
	"unittest.result" -> "functools" [];
	"unittest.util" -> "collections" [];
	"unittest.util" -> "os.path" [];
	"asyncio" -> "sys" [];
	"asyncio.unix_events" -> "errno" [];
	"asyncio.unix_events" -> "io" [];
	"asyncio.unix_events" -> "itertools" [];
	"asyncio.unix_events" -> "os" [];
	"asyncio.unix_events" -> "selectors" [];
	"asyncio.unix_events" -> "signal" [];
	"asyncio.unix_events" -> "socket" [];
	"asyncio.unix_events" -> "stat" [];
	"asyncio.unix_events" -> "subprocess" [];
	"asyncio.unix_events" -> "sys" [];
	"asyncio.unix_events" -> "threading" [];
	"asyncio.unix_events" -> "warnings" [];
	"asyncio.log" -> "logging" [];
	"asyncio.windows_events" -> "sys" [];
	"asyncio.windows_events" -> "_overlapped" [];
	"asyncio.windows_events" -> "_winapi" [];
	"asyncio.windows_events" -> "errno" [];
	"asyncio.windows_events" -> "math" [];
	"asyncio.windows_events" -> "msvcrt" [];
	"asyncio.windows_events" -> "socket" [];
	"asyncio.windows_events" -> "struct" [];
	"asyncio.windows_events" -> "time" [];
	"asyncio.windows_events" -> "weakref" [];
	"asyncio.windows_utils" -> "sys" [];
	"asyncio.windows_utils" -> "_winapi" [];
	"asyncio.windows_utils" -> "itertools" [];
	"asyncio.windows_utils" -> "msvcrt" [];
	"asyncio.windows_utils" -> "os" [];
	"asyncio.windows_utils" -> "subprocess" [];
	"asyncio.windows_utils" -> "tempfile" [];
	"asyncio.windows_utils" -> "warnings" [];
	"asyncio.selector_events" -> "collections" [];
	"asyncio.selector_events" -> "errno" [];
	"asyncio.selector_events" -> "functools" [];
	"asyncio.selector_events" -> "selectors" [];
	"asyncio.selector_events" -> "socket" [];
	"asyncio.selector_events" -> "warnings" [];
	"asyncio.selector_events" -> "weakref" [];
	"asyncio.selector_events" -> "ssl" [];
	"asyncio.proactor_events" -> "io" [];
	"asyncio.proactor_events" -> "os" [];
	"asyncio.proactor_events" -> "socket" [];
	"asyncio.proactor_events" -> "warnings" [];
	"asyncio.proactor_events" -> "signal" [];
	"asyncio.proactor_events" -> "threading" [];
	"asyncio.proactor_events" -> "collections" [];
	"asyncio.base_subprocess" -> "collections" [];
	"asyncio.base_subprocess" -> "subprocess" [];
	"asyncio.base_subprocess" -> "warnings" [];
	"asyncio.threads" -> "functools" [];
	"asyncio.threads" -> "contextvars" [];
	"asyncio.timeouts" -> "enum" [];
	"asyncio.timeouts" -> "types" [];
	"asyncio.timeouts" -> "typing" [];
	"asyncio.subprocess" -> "subprocess" [];
	"asyncio.streams" -> "collections" [];
	"asyncio.streams" -> "socket" [];
	"asyncio.streams" -> "sys" [];
	"asyncio.streams" -> "warnings" [];
	"asyncio.streams" -> "weakref" [];
	"asyncio.queues" -> "collections" [];
	"asyncio.queues" -> "heapq" [];
	"asyncio.queues" -> "types" [];
	"asyncio.runners" -> "contextvars" [];
	"asyncio.runners" -> "enum" [];
	"asyncio.runners" -> "functools" [];
	"asyncio.runners" -> "threading" [];
	"asyncio.runners" -> "signal" [];
	"asyncio.runners" -> "sys" [];
	"asyncio.base_events" -> "collections" [];
	"asyncio.base_events" -> "functools" [];
	"asyncio.base_events" -> "heapq" [];
	"asyncio.base_events" -> "itertools" [];
	"asyncio.base_events" -> "os" [];
	"asyncio.base_events" -> "socket" [];
	"asyncio.base_events" -> "stat" [];
	"asyncio.base_events" -> "subprocess" [];
	"asyncio.base_events" -> "threading" [];
	"asyncio.base_events" -> "time" [];
	"asyncio.base_events" -> "traceback" [];
	"asyncio.base_events" -> "sys" [];
	"asyncio.base_events" -> "warnings" [];
	"asyncio.base_events" -> "weakref" [];
	"asyncio.base_events" -> "ssl" [];
	"asyncio.trsock" -> "socket" [];
	"asyncio.staggered" -> "contextlib" [];
	"asyncio.staggered" -> "typing" [];
	"asyncio.tasks" -> "contextvars" [];
	"asyncio.tasks" -> "functools" [];
	"asyncio.tasks" -> "inspect" [];
	"asyncio.tasks" -> "itertools" [];
	"asyncio.tasks" -> "types" [];
	"asyncio.tasks" -> "warnings" [];
	"asyncio.tasks" -> "weakref" [];
	"asyncio.tasks" -> "_asyncio" [];
	"asyncio.locks" -> "collections" [];
	"asyncio.locks" -> "enum" [];
	"asyncio.base_tasks" -> "linecache" [];
	"asyncio.base_tasks" -> "reprlib" [];
	"asyncio.base_tasks" -> "traceback" [];
	"asyncio.mixins" -> "threading" [];
	"asyncio.sslproto" -> "collections" [];
	"asyncio.sslproto" -> "enum" [];
	"asyncio.sslproto" -> "warnings" [];
	"asyncio.sslproto" -> "ssl" [];
	"asyncio.futures" -> "contextvars" [];
	"asyncio.futures" -> "logging" [];
	"asyncio.futures" -> "sys" [];
	"asyncio.futures" -> "types" [];
	"asyncio.futures" -> "_asyncio" [];
	"asyncio.base_futures" -> "reprlib" [];
	"asyncio.base_futures" -> "_thread" [];
	"asyncio.events" -> "contextvars" [];
	"asyncio.events" -> "os" [];
	"asyncio.events" -> "socket" [];
	"asyncio.events" -> "subprocess" [];
	"asyncio.events" -> "sys" [];
	"asyncio.events" -> "threading" [];
	"asyncio.events" -> "_asyncio" [];
	"asyncio.format_helpers" -> "functools" [];
	"asyncio.format_helpers" -> "inspect" [];
	"asyncio.format_helpers" -> "reprlib" [];
	"asyncio.format_helpers" -> "sys" [];
	"asyncio.format_helpers" -> "traceback" [];
	"asyncio.coroutines" -> "inspect" [];
	"asyncio.coroutines" -> "os" [];
	"asyncio.coroutines" -> "sys" [];
	"asyncio.coroutines" -> "traceback" [];
	"asyncio.coroutines" -> "types" [];
	"asyncio.constants" -> "enum" [];
	"setuptools._distutils._modified" -> "functools" [];
	"setuptools._distutils._modified" -> "os.path" [];
	"setuptools._distutils._macos_compat" -> "importlib" [];
	"setuptools._distutils._macos_compat" -> "sys" [];
	"setuptools._distutils._log" -> "logging" [];
	"setuptools._distutils" -> "importlib" [];
	"setuptools._distutils" -> "sys" [];
	"_distutils_hack" -> "os" [];
	"_distutils_hack" -> "sys" [];
	"_distutils_hack" -> "warnings" [];
	"_distutils_hack" -> "importlib" [];
	"_distutils_hack" -> "traceback" [];
	"setuptools.msvc" -> "__future__" [];
	"setuptools.msvc" -> "contextlib" [];
	"setuptools.msvc" -> "itertools" [];
	"setuptools.msvc" -> "json" [];
	"setuptools.msvc" -> "os" [];
	"setuptools.msvc" -> "os.path" [];
	"setuptools.msvc" -> "platform" [];
	"setuptools.msvc" -> "typing" [];
	"setuptools.msvc" -> "more_itertools" [];
	"setuptools.msvc" -> "winreg" [];
	"json" -> "codecs" [];
	"json.encoder" -> "re" [];
	"json.encoder" -> "_json" [];
	"json.decoder" -> "re" [];
	"json.decoder" -> "_json" [];
	"json.scanner" -> "re" [];
	"json.scanner" -> "_json" [];
	"distutils.command.build_ext" -> "contextlib" [];
	"distutils.command.build_ext" -> "os" [];
	"distutils.command.build_ext" -> "re" [];
	"distutils.command.build_ext" -> "sys" [];
	"distutils.command.build_ext" -> "distutils" [];
	"distutils.command.build_ext" -> "site" [];
	"distutils._msvccompiler" -> "os" [];
	"distutils._msvccompiler" -> "subprocess" [];
	"distutils._msvccompiler" -> "winreg" [];
	"distutils._msvccompiler" -> "itertools" [];
	"distutils.ccompiler" -> "sys" [];
	"distutils.ccompiler" -> "os" [];
	"distutils.ccompiler" -> "re" [];
	"distutils.ccompiler" -> "tempfile" [];
	"distutils.extension" -> "os" [];
	"distutils.extension" -> "re" [];
	"distutils.extension" -> "warnings" [];
	"distutils.core" -> "os" [];
	"distutils.core" -> "sys" [];
	"distutils.config" -> "os" [];
	"distutils.config" -> "configparser" [];
	"distutils.config" -> "warnings" [];
	"distutils.config" -> "cgi" [];
	"cgi" -> "io" [];
	"cgi" -> "sys" [];
	"cgi" -> "os" [];
	"cgi" -> "html" [];
	"cgi" -> "locale" [];
	"cgi" -> "tempfile" [];
	"cgi" -> "warnings" [];
	"cgi" -> "traceback" [];
	"cgi" -> "re" [];
	"setuptools.warnings" -> "__future__" [];
	"setuptools.warnings" -> "os" [];
	"setuptools.warnings" -> "warnings" [];
	"setuptools.warnings" -> "datetime" [];
	"setuptools.warnings" -> "inspect" [];
	"setuptools.warnings" -> "textwrap" [];
	"setuptools.warnings" -> "typing" [];
	"setuptools.warnings" -> "typing_extensions" [];
	"setuptools._importlib" -> "sys" [];
	"setuptools._importlib" -> "importlib_metadata" [];
	"setuptools._importlib" -> "importlib_resources" [];
	"importlib_resources" -> "importlib_resources.files" [];
	"setuptools.extension" -> "__future__" [];
	"setuptools.extension" -> "functools" [];
	"setuptools.extension" -> "re" [];
	"setuptools.extension" -> "typing" [];
	"setuptools._path" -> "__future__" [];
	"setuptools._path" -> "contextlib" [];
	"setuptools._path" -> "os" [];
	"setuptools._path" -> "sys" [];
	"setuptools._path" -> "typing" [];
	"setuptools._path" -> "more_itertools" [];
	"setuptools._path" -> "typing_extensions" [];
	"setuptools.dist" -> "__future__" [];
	"setuptools.dist" -> "io" [];
	"setuptools.dist" -> "itertools" [];
	"setuptools.dist" -> "numbers" [];
	"setuptools.dist" -> "os" [];
	"setuptools.dist" -> "re" [];
	"setuptools.dist" -> "sys" [];
	"setuptools.dist" -> "glob" [];
	"setuptools.dist" -> "pathlib" [];
	"setuptools.dist" -> "typing" [];
	"setuptools.dist" -> "more_itertools" [];
	"setuptools.dist" -> "typing_extensions" [];
	"setuptools.dist" -> "configparser" [];
	"setuptools.dist" -> "shlex" [];
	"setuptools.command.bdist_wheel" -> "__future__" [];
	"setuptools.command.bdist_wheel" -> "os" [];
	"setuptools.command.bdist_wheel" -> "re" [];
	"setuptools.command.bdist_wheel" -> "shutil" [];
	"setuptools.command.bdist_wheel" -> "stat" [];
	"setuptools.command.bdist_wheel" -> "struct" [];
	"setuptools.command.bdist_wheel" -> "sys" [];
	"setuptools.command.bdist_wheel" -> "sysconfig" [];
	"setuptools.command.bdist_wheel" -> "warnings" [];
	"setuptools.command.bdist_wheel" -> "glob" [];
	"setuptools.command.bdist_wheel" -> "typing" [];
	"setuptools.command.bdist_wheel" -> "zipfile" [];
	"setuptools.command.bdist_wheel" -> "packaging" [];
	"setuptools.command.bdist_wheel" -> "setuptools" [];
	"setuptools.command.bdist_wheel" -> "distutils" [];
	"setuptools.command.bdist_wheel" -> "_typeshed" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "__future__" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "ctypes" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "os" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "sys" [];
	"setuptools._vendor.wheel.macosx_libfile" -> "wheel" [];
	"setuptools.command.egg_info" -> "functools" [];
	"setuptools.command.egg_info" -> "os" [];
	"setuptools.command.egg_info" -> "re" [];
	"setuptools.command.egg_info" -> "sys" [];
	"setuptools.command.egg_info" -> "time" [];
	"setuptools.command.egg_info" -> "packaging" [];
	"setuptools.command.egg_info" -> "setuptools" [];
	"setuptools.command.egg_info" -> "distutils" [];
	"setuptools.command._requirestxt" -> "__future__" [];
	"setuptools.command._requirestxt" -> "io" [];
	"setuptools.command._requirestxt" -> "collections" [];
	"setuptools.command._requirestxt" -> "itertools" [];
	"setuptools.command._requirestxt" -> "typing" [];
	"setuptools.command._requirestxt" -> "setuptools" [];
	"setuptools.glob" -> "fnmatch" [];
	"setuptools.glob" -> "os" [];
	"setuptools.glob" -> "re" [];
	"setuptools.command.setopt" -> "configparser" [];
	"setuptools.command.setopt" -> "os" [];
	"setuptools.command.setopt" -> "setuptools" [];
	"setuptools.command.setopt" -> "distutils" [];
	"setuptools.command.sdist" -> "__future__" [];
	"setuptools.command.sdist" -> "contextlib" [];
	"setuptools.command.sdist" -> "os" [];
	"setuptools.command.sdist" -> "re" [];
	"setuptools.command.sdist" -> "itertools" [];
	"setuptools.command.sdist" -> "typing" [];
	"setuptools.command.sdist" -> "distutils" [];
	"distutils.command.sdist" -> "os" [];
	"distutils.command.sdist" -> "sys" [];
	"distutils.command.sdist" -> "glob" [];
	"distutils.command.sdist" -> "warnings" [];
	"distutils.command.sdist" -> "distutils" [];
	"setuptools.command.build" -> "__future__" [];
	"setuptools.command.build" -> "typing" [];
	"distutils.command.build" -> "sys" [];
	"distutils.command.build" -> "os" [];
	"setuptools.command.bdist_egg" -> "__future__" [];
	"setuptools.command.bdist_egg" -> "marshal" [];
	"setuptools.command.bdist_egg" -> "os" [];
	"setuptools.command.bdist_egg" -> "re" [];
	"setuptools.command.bdist_egg" -> "sys" [];
	"setuptools.command.bdist_egg" -> "textwrap" [];
	"setuptools.command.bdist_egg" -> "sysconfig" [];
	"setuptools.command.bdist_egg" -> "types" [];
	"setuptools.command.bdist_egg" -> "typing" [];
	"setuptools.command.bdist_egg" -> "setuptools" [];
	"setuptools.command.bdist_egg" -> "distutils" [];
	"setuptools.command.bdist_egg" -> "typing_extensions" [];
	"setuptools.command.bdist_egg" -> "pkg_resources" [];
	"setuptools.command.bdist_egg" -> "zipfile" [];
	"setuptools.unicode_utils" -> "sys" [];
	"setuptools.unicode_utils" -> "unicodedata" [];
	"setuptools.unicode_utils" -> "configparser" [];
	"setuptools.compat.py39" -> "sys" [];
	"setuptools._vendor.wheel.wheelfile" -> "__future__" [];
	"setuptools._vendor.wheel.wheelfile" -> "csv" [];
	"setuptools._vendor.wheel.wheelfile" -> "hashlib" [];
	"setuptools._vendor.wheel.wheelfile" -> "os.path" [];
	"setuptools._vendor.wheel.wheelfile" -> "re" [];
	"setuptools._vendor.wheel.wheelfile" -> "stat" [];
	"setuptools._vendor.wheel.wheelfile" -> "time" [];
	"setuptools._vendor.wheel.wheelfile" -> "io" [];
	"setuptools._vendor.wheel.wheelfile" -> "zipfile" [];
	"setuptools._vendor.wheel.wheelfile" -> "wheel" [];
	"setuptools._vendor.wheel.util" -> "__future__" [];
	"setuptools._vendor.wheel.util" -> "base64" [];
	"setuptools._vendor.wheel.util" -> "logging" [];
	"setuptools._vendor.wheel.util" -> "wheel" [];
	"setuptools._vendor.wheel._setuptools_logging" -> "__future__" [];
	"setuptools._vendor.wheel._setuptools_logging" -> "logging" [];
	"setuptools._vendor.wheel._setuptools_logging" -> "sys" [];
	"setuptools._vendor.wheel.cli" -> "__future__" [];
	"setuptools._vendor.wheel.cli" -> "argparse" [];
	"setuptools._vendor.wheel.cli" -> "os" [];
	"setuptools._vendor.wheel.cli" -> "sys" [];
	"setuptools._vendor.wheel.cli" -> "wheel" [];
	"setuptools._vendor.wheel.cli.tags" -> "__future__" [];
	"setuptools._vendor.wheel.cli.tags" -> "itertools" [];
	"setuptools._vendor.wheel.cli.tags" -> "os" [];
	"setuptools._vendor.wheel.cli.convert" -> "__future__" [];
	"setuptools._vendor.wheel.cli.convert" -> "os.path" [];
	"setuptools._vendor.wheel.cli.convert" -> "re" [];
	"setuptools._vendor.wheel.cli.convert" -> "shutil" [];
	"setuptools._vendor.wheel.cli.convert" -> "tempfile" [];
	"setuptools._vendor.wheel.cli.convert" -> "zipfile" [];
	"setuptools._vendor.wheel.cli.convert" -> "glob" [];
	"setuptools._vendor.wheel.cli.convert" -> "setuptools" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "__future__" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "os" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "re" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "shutil" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "stat" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "struct" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "sys" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "sysconfig" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "warnings" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "glob" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "zipfile" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "setuptools" [];
	"setuptools._vendor.wheel.vendored.packaging.version" -> "itertools" [];
	"setuptools._vendor.wheel.vendored.packaging.version" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging.version" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "logging" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "platform" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "struct" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "subprocess" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "sys" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "sysconfig" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "functools" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "subprocess" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "sys" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._musllinux" -> "sysconfig" [];
	"setuptools._vendor.wheel.vendored.packaging._elffile" -> "enum" [];
	"setuptools._vendor.wheel.vendored.packaging._elffile" -> "os" [];
	"setuptools._vendor.wheel.vendored.packaging._elffile" -> "struct" [];
	"setuptools._vendor.wheel.vendored.packaging._elffile" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "collections" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "contextlib" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "functools" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "os" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "sys" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "warnings" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "ctypes" [];
	"setuptools._vendor.wheel.vendored.packaging._manylinux" -> "_manylinux" [];
	"setuptools._vendor.wheel.cli.pack" -> "__future__" [];
	"setuptools._vendor.wheel.cli.pack" -> "os.path" [];
	"setuptools._vendor.wheel.cli.pack" -> "re" [];
	"setuptools._vendor.wheel.cli.unpack" -> "__future__" [];
	"setuptools._vendor.wheel.cli.unpack" -> "pathlib" [];
	"setuptools._vendor.wheel.metadata" -> "__future__" [];
	"setuptools._vendor.wheel.metadata" -> "functools" [];
	"setuptools._vendor.wheel.metadata" -> "itertools" [];
	"setuptools._vendor.wheel.metadata" -> "os.path" [];
	"setuptools._vendor.wheel.metadata" -> "re" [];
	"setuptools._vendor.wheel.metadata" -> "textwrap" [];
	"setuptools._vendor.wheel.metadata" -> "typing" [];
	"setuptools._vendor.wheel.metadata" -> "wheel" [];
	"setuptools._vendor.wheel.vendored.packaging.requirements" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.utils" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging.utils" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" -> "abc" [];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" -> "itertools" [];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging.specifiers" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "operator" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "os" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "platform" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "sys" [];
	"setuptools._vendor.wheel.vendored.packaging.markers" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" -> "contextlib" [];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" -> "re" [];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" -> "dataclasses" [];
	"setuptools._vendor.wheel.vendored.packaging._tokenizer" -> "typing" [];
	"setuptools._vendor.wheel.vendored.packaging._parser" -> "ast" [];
	"setuptools._vendor.wheel.vendored.packaging._parser" -> "typing" [];
	"setuptools.installer" -> "glob" [];
	"setuptools.installer" -> "os" [];
	"setuptools.installer" -> "subprocess" [];
	"setuptools.installer" -> "sys" [];
	"setuptools.installer" -> "tempfile" [];
	"setuptools.installer" -> "functools" [];
	"setuptools.installer" -> "distutils" [];
	"setuptools.installer" -> "pkg_resources" [];
	"setuptools.wheel" -> "contextlib" [];
	"setuptools.wheel" -> "email" [];
	"setuptools.wheel" -> "functools" [];
	"setuptools.wheel" -> "itertools" [];
	"setuptools.wheel" -> "os" [];
	"setuptools.wheel" -> "posixpath" [];
	"setuptools.wheel" -> "re" [];
	"setuptools.wheel" -> "zipfile" [];
	"setuptools.wheel" -> "distutils" [];
	"setuptools.wheel" -> "pkg_resources" [];
	"setuptools.archive_util" -> "contextlib" [];
	"setuptools.archive_util" -> "os" [];
	"setuptools.archive_util" -> "posixpath" [];
	"setuptools.archive_util" -> "shutil" [];
	"setuptools.archive_util" -> "tarfile" [];
	"setuptools.archive_util" -> "zipfile" [];
	"setuptools.config.setupcfg" -> "__future__" [];
	"setuptools.config.setupcfg" -> "contextlib" [];
	"setuptools.config.setupcfg" -> "functools" [];
	"setuptools.config.setupcfg" -> "os" [];
	"setuptools.config.setupcfg" -> "collections" [];
	"setuptools.config.setupcfg" -> "typing" [];
	"setuptools.config.setupcfg" -> "typing_extensions" [];
	"setuptools.config.expand" -> "__future__" [];
	"setuptools.config.expand" -> "ast" [];
	"setuptools.config.expand" -> "importlib" [];
	"setuptools.config.expand" -> "os" [];
	"setuptools.config.expand" -> "pathlib" [];
	"setuptools.config.expand" -> "sys" [];
	"setuptools.config.expand" -> "configparser" [];
	"setuptools.config.expand" -> "glob" [];
	"setuptools.config.expand" -> "itertools" [];
	"setuptools.config.expand" -> "types" [];
	"setuptools.config.expand" -> "typing" [];
	"setuptools.config.expand" -> "typing_extensions" [];
	"setuptools.config.expand" -> "more_itertools" [];
	"setuptools.errors" -> "__future__" [];
	"setuptools.errors" -> "distutils" [];
	"setuptools.config.pyprojecttoml" -> "__future__" [];
	"setuptools.config.pyprojecttoml" -> "logging" [];
	"setuptools.config.pyprojecttoml" -> "os" [];
	"setuptools.config.pyprojecttoml" -> "contextlib" [];
	"setuptools.config.pyprojecttoml" -> "functools" [];
	"setuptools.config.pyprojecttoml" -> "types" [];
	"setuptools.config.pyprojecttoml" -> "typing" [];
	"setuptools.config.pyprojecttoml" -> "typing_extensions" [];
	"setuptools.config.pyprojecttoml" -> "more_itertools" [];
	"setuptools.config._validate_pyproject" -> "functools" [];
	"setuptools.config._validate_pyproject" -> "typing" [];
	"setuptools.config._validate_pyproject.fastjsonschema_validations" -> "decimal" [];
	"setuptools.config._validate_pyproject.fastjsonschema_validations" -> "re" [];
	"setuptools.config._validate_pyproject.fastjsonschema_exceptions" -> "re" [];
	"setuptools.config._validate_pyproject.extra_validations" -> "inspect" [];
	"setuptools.config._validate_pyproject.extra_validations" -> "typing" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "io" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "json" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "logging" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "os" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "re" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "typing" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "contextlib" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "textwrap" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "sys" [];
	"setuptools.config._validate_pyproject.error_reporting" -> "typing_extensions" [];
	"setuptools.config._validate_pyproject.formats" -> "builtins" [];
	"setuptools.config._validate_pyproject.formats" -> "logging" [];
	"setuptools.config._validate_pyproject.formats" -> "os" [];
	"setuptools.config._validate_pyproject.formats" -> "re" [];
	"setuptools.config._validate_pyproject.formats" -> "string" [];
	"setuptools.config._validate_pyproject.formats" -> "typing" [];
	"setuptools.config._validate_pyproject.formats" -> "itertools" [];
	"setuptools.config._validate_pyproject.formats" -> "typing_extensions" [];
	"setuptools.config._validate_pyproject.formats" -> "packaging" [];
	"setuptools.config._validate_pyproject.formats" -> "ssl" [];
	"setuptools.config._validate_pyproject.formats" -> "trove_classifiers" [];
	"setuptools._vendor.packaging.requirements" -> "__future__" [];
	"setuptools._vendor.packaging.requirements" -> "typing" [];
	"setuptools._vendor.packaging.utils" -> "__future__" [];
	"setuptools._vendor.packaging.utils" -> "re" [];
	"setuptools._vendor.packaging.utils" -> "typing" [];
	"setuptools._vendor.packaging.version" -> "__future__" [];
	"setuptools._vendor.packaging.version" -> "itertools" [];
	"setuptools._vendor.packaging.version" -> "re" [];
	"setuptools._vendor.packaging.version" -> "typing" [];
	"setuptools._vendor.packaging.tags" -> "__future__" [];
	"setuptools._vendor.packaging.tags" -> "logging" [];
	"setuptools._vendor.packaging.tags" -> "platform" [];
	"setuptools._vendor.packaging.tags" -> "re" [];
	"setuptools._vendor.packaging.tags" -> "struct" [];
	"setuptools._vendor.packaging.tags" -> "subprocess" [];
	"setuptools._vendor.packaging.tags" -> "sys" [];
	"setuptools._vendor.packaging.tags" -> "sysconfig" [];
	"setuptools._vendor.packaging.tags" -> "typing" [];
	"setuptools._vendor.packaging._musllinux" -> "__future__" [];
	"setuptools._vendor.packaging._musllinux" -> "functools" [];
	"setuptools._vendor.packaging._musllinux" -> "re" [];
	"setuptools._vendor.packaging._musllinux" -> "subprocess" [];
	"setuptools._vendor.packaging._musllinux" -> "sys" [];
	"setuptools._vendor.packaging._musllinux" -> "typing" [];
	"setuptools._vendor.packaging._musllinux" -> "sysconfig" [];
	"setuptools._vendor.packaging._elffile" -> "__future__" [];
	"setuptools._vendor.packaging._elffile" -> "enum" [];
	"setuptools._vendor.packaging._elffile" -> "os" [];
	"setuptools._vendor.packaging._elffile" -> "struct" [];
	"setuptools._vendor.packaging._elffile" -> "typing" [];
	"setuptools._vendor.packaging._manylinux" -> "__future__" [];
	"setuptools._vendor.packaging._manylinux" -> "collections" [];
	"setuptools._vendor.packaging._manylinux" -> "contextlib" [];
	"setuptools._vendor.packaging._manylinux" -> "functools" [];
	"setuptools._vendor.packaging._manylinux" -> "os" [];
	"setuptools._vendor.packaging._manylinux" -> "re" [];
	"setuptools._vendor.packaging._manylinux" -> "sys" [];
	"setuptools._vendor.packaging._manylinux" -> "warnings" [];
	"setuptools._vendor.packaging._manylinux" -> "typing" [];
	"setuptools._vendor.packaging._manylinux" -> "ctypes" [];
	"setuptools._vendor.packaging._manylinux" -> "_manylinux" [];
	"setuptools._vendor.packaging.specifiers" -> "__future__" [];
	"setuptools._vendor.packaging.specifiers" -> "abc" [];
	"setuptools._vendor.packaging.specifiers" -> "itertools" [];
	"setuptools._vendor.packaging.specifiers" -> "re" [];
	"setuptools._vendor.packaging.specifiers" -> "typing" [];
	"setuptools._vendor.packaging.markers" -> "__future__" [];
	"setuptools._vendor.packaging.markers" -> "operator" [];
	"setuptools._vendor.packaging.markers" -> "os" [];
	"setuptools._vendor.packaging.markers" -> "platform" [];
	"setuptools._vendor.packaging.markers" -> "sys" [];
	"setuptools._vendor.packaging.markers" -> "typing" [];
	"setuptools._vendor.packaging._tokenizer" -> "__future__" [];
	"setuptools._vendor.packaging._tokenizer" -> "contextlib" [];
	"setuptools._vendor.packaging._tokenizer" -> "re" [];
	"setuptools._vendor.packaging._tokenizer" -> "dataclasses" [];
	"setuptools._vendor.packaging._tokenizer" -> "typing" [];
	"setuptools._vendor.packaging._parser" -> "__future__" [];
	"setuptools._vendor.packaging._parser" -> "ast" [];
	"setuptools._vendor.packaging._parser" -> "typing" [];
	"setuptools.compat.py310" -> "sys" [];
	"setuptools.compat.py310" -> "tomllib" [];
	"setuptools.compat.py310" -> "tomli" [];
	"tomllib._parser" -> "__future__" [];
	"tomllib._parser" -> "string" [];
	"tomllib._parser" -> "types" [];
	"tomllib._parser" -> "typing" [];
	"tomllib._types" -> "typing" [];
	"tomllib._re" -> "__future__" [];
	"tomllib._re" -> "datetime" [];
	"tomllib._re" -> "functools" [];
	"tomllib._re" -> "re" [];
	"tomllib._re" -> "typing" [];
	"setuptools.config._apply_pyprojecttoml" -> "__future__" [];
	"setuptools.config._apply_pyprojecttoml" -> "logging" [];
	"setuptools.config._apply_pyprojecttoml" -> "os" [];
	"setuptools.config._apply_pyprojecttoml" -> "functools" [];
	"setuptools.config._apply_pyprojecttoml" -> "inspect" [];
	"setuptools.config._apply_pyprojecttoml" -> "itertools" [];
	"setuptools.config._apply_pyprojecttoml" -> "types" [];
	"setuptools.config._apply_pyprojecttoml" -> "typing" [];
	"setuptools.config._apply_pyprojecttoml" -> "typing_extensions" [];
	"setuptools.config" -> "functools" [];
	"setuptools.config" -> "typing" [];
	"setuptools.windows_support" -> "platform" [];
	"setuptools.windows_support" -> "ctypes" [];
	"setuptools.command" -> "sys" [];
	"distutils.command.bdist" -> "os" [];
	"setuptools._entry_points" -> "functools" [];
	"setuptools._entry_points" -> "itertools" [];
	"setuptools._entry_points" -> "operator" [];
	"setuptools._entry_points" -> "more_itertools" [];
	"setuptools._itertools" -> "more_itertools" [];
	"setuptools.discovery" -> "__future__" [];
	"setuptools.discovery" -> "itertools" [];
	"setuptools.discovery" -> "os" [];
	"setuptools.discovery" -> "fnmatch" [];
	"setuptools.discovery" -> "glob" [];
	"setuptools.discovery" -> "pathlib" [];
	"setuptools.discovery" -> "typing" [];
	"setuptools.discovery" -> "distutils" [];
	"setuptools.discovery" -> "inspect" [];
	"setuptools.depends" -> "__future__" [];
	"setuptools.depends" -> "contextlib" [];
	"setuptools.depends" -> "dis" [];
	"setuptools.depends" -> "marshal" [];
	"setuptools.depends" -> "sys" [];
	"setuptools._imp" -> "os" [];
	"setuptools._imp" -> "tokenize" [];
	"setuptools.logging" -> "inspect" [];
	"setuptools.logging" -> "logging" [];
	"setuptools.logging" -> "sys" [];
	"setuptools.monkey" -> "__future__" [];
	"setuptools.monkey" -> "inspect" [];
	"setuptools.monkey" -> "platform" [];
	"setuptools.monkey" -> "sys" [];
	"setuptools.monkey" -> "types" [];
	"setuptools.monkey" -> "typing" [];
	"setuptools._core_metadata" -> "__future__" [];
	"setuptools._core_metadata" -> "os" [];
	"setuptools._core_metadata" -> "stat" [];
	"setuptools._core_metadata" -> "textwrap" [];
	"setuptools._core_metadata" -> "email" [];
	"setuptools._core_metadata" -> "tempfile" [];
	"setuptools._reqs" -> "__future__" [];
	"setuptools._reqs" -> "functools" [];
	"setuptools._reqs" -> "typing" [];
	"setuptools._reqs" -> "typing_extensions" [];
	"setuptools._normalization" -> "re" [];
	"setuptools._normalization" -> "packaging" [];
	"setuptools._vendor.importlib_resources.abc" -> "abc" [];
	"setuptools._vendor.importlib_resources.abc" -> "io" [];
	"setuptools._vendor.importlib_resources.abc" -> "itertools" [];
	"setuptools._vendor.importlib_resources.abc" -> "pathlib" [];
	"setuptools._vendor.importlib_resources.abc" -> "typing" [];
	"setuptools._vendor.importlib_resources.compat.py38" -> "os" [];
	"setuptools._vendor.importlib_resources.compat.py38" -> "sys" [];
	"setuptools._vendor.importlib_resources.compat.py38" -> "typing" [];
	"setuptools._vendor.importlib_resources.functional" -> "warnings" [];
	"setuptools._vendor.importlib_resources._common" -> "os" [];
	"setuptools._vendor.importlib_resources._common" -> "pathlib" [];
	"setuptools._vendor.importlib_resources._common" -> "tempfile" [];
	"setuptools._vendor.importlib_resources._common" -> "functools" [];
	"setuptools._vendor.importlib_resources._common" -> "contextlib" [];
	"setuptools._vendor.importlib_resources._common" -> "types" [];
	"setuptools._vendor.importlib_resources._common" -> "importlib" [];
	"setuptools._vendor.importlib_resources._common" -> "inspect" [];
	"setuptools._vendor.importlib_resources._common" -> "warnings" [];
	"setuptools._vendor.importlib_resources._common" -> "itertools" [];
	"setuptools._vendor.importlib_resources._common" -> "typing" [];
	"setuptools._vendor.importlib_resources.future.adapters" -> "functools" [];
	"setuptools._vendor.importlib_resources.future.adapters" -> "pathlib" [];
	"setuptools._vendor.importlib_resources.future.adapters" -> "contextlib" [];
	"setuptools._vendor.importlib_resources.future.adapters" -> "types" [];
	"setuptools._vendor.importlib_resources._adapters" -> "contextlib" [];
	"setuptools._vendor.importlib_resources._adapters" -> "io" [];
	"setuptools._vendor.importlib_resources.readers" -> "collections" [];
	"setuptools._vendor.importlib_resources.readers" -> "contextlib" [];
	"setuptools._vendor.importlib_resources.readers" -> "itertools" [];
	"setuptools._vendor.importlib_resources.readers" -> "pathlib" [];
	"setuptools._vendor.importlib_resources.readers" -> "operator" [];
	"setuptools._vendor.importlib_resources.readers" -> "re" [];
	"setuptools._vendor.importlib_resources.readers" -> "warnings" [];
	"setuptools._vendor.importlib_resources.compat.py39" -> "sys" [];
	"setuptools._vendor.importlib_resources.compat.py39" -> "zipfile" [];
	"setuptools._vendor.importlib_resources.compat.py39" -> "zipp" [];
	"setuptools._vendor.wheel" -> "__future__" [];
	"setuptools._vendor.tomli._parser" -> "__future__" [];
	"setuptools._vendor.tomli._parser" -> "string" [];
	"setuptools._vendor.tomli._parser" -> "types" [];
	"setuptools._vendor.tomli._parser" -> "typing" [];
	"setuptools._vendor.tomli._types" -> "typing" [];
	"setuptools._vendor.tomli._re" -> "__future__" [];
	"setuptools._vendor.tomli._re" -> "datetime" [];
	"setuptools._vendor.tomli._re" -> "functools" [];
	"setuptools._vendor.tomli._re" -> "re" [];
	"setuptools._vendor.tomli._re" -> "typing" [];
	"setuptools._vendor.importlib_metadata" -> "__future__" [];
	"setuptools._vendor.importlib_metadata" -> "os" [];
	"setuptools._vendor.importlib_metadata" -> "re" [];
	"setuptools._vendor.importlib_metadata" -> "abc" [];
	"setuptools._vendor.importlib_metadata" -> "sys" [];
	"setuptools._vendor.importlib_metadata" -> "json" [];
	"setuptools._vendor.importlib_metadata" -> "zipp" [];
	"setuptools._vendor.importlib_metadata" -> "email" [];
	"setuptools._vendor.importlib_metadata" -> "types" [];
	"setuptools._vendor.importlib_metadata" -> "inspect" [];
	"setuptools._vendor.importlib_metadata" -> "pathlib" [];
	"setuptools._vendor.importlib_metadata" -> "operator" [];
	"setuptools._vendor.importlib_metadata" -> "textwrap" [];
	"setuptools._vendor.importlib_metadata" -> "functools" [];
	"setuptools._vendor.importlib_metadata" -> "itertools" [];
	"setuptools._vendor.importlib_metadata" -> "posixpath" [];
	"setuptools._vendor.importlib_metadata" -> "collections" [];
	"setuptools._vendor.importlib_metadata" -> "contextlib" [];
	"setuptools._vendor.importlib_metadata" -> "importlib" [];
	"setuptools._vendor.importlib_metadata" -> "typing" [];
	"setuptools._vendor.importlib_metadata" -> "csv" [];
	"setuptools._vendor.importlib_metadata._adapters" -> "re" [];
	"setuptools._vendor.importlib_metadata._adapters" -> "textwrap" [];
	"setuptools._vendor.importlib_metadata._text" -> "re" [];
	"setuptools._vendor.importlib_metadata._itertools" -> "itertools" [];
	"setuptools._vendor.importlib_metadata._functools" -> "types" [];
	"setuptools._vendor.importlib_metadata._functools" -> "functools" [];
	"setuptools._vendor.importlib_metadata._compat" -> "sys" [];
	"setuptools._vendor.importlib_metadata._compat" -> "platform" [];
	"setuptools._vendor.importlib_metadata._collections" -> "collections" [];
	"setuptools._vendor.importlib_metadata.compat.py311" -> "os" [];
	"setuptools._vendor.importlib_metadata.compat.py311" -> "pathlib" [];
	"setuptools._vendor.importlib_metadata.compat.py311" -> "sys" [];
	"setuptools._vendor.importlib_metadata.compat.py311" -> "types" [];
	"setuptools._vendor.importlib_metadata.compat.py39" -> "typing" [];
	"setuptools._vendor.importlib_metadata._meta" -> "__future__" [];
	"setuptools._vendor.importlib_metadata._meta" -> "os" [];
	"setuptools._vendor.importlib_metadata._meta" -> "typing" [];
	"setuptools._vendor.zipp" -> "io" [];
	"setuptools._vendor.zipp" -> "posixpath" [];
	"setuptools._vendor.zipp" -> "zipfile" [];
	"setuptools._vendor.zipp" -> "itertools" [];
	"setuptools._vendor.zipp" -> "contextlib" [];
	"setuptools._vendor.zipp" -> "pathlib" [];
	"setuptools._vendor.zipp" -> "re" [];
	"setuptools._vendor.zipp" -> "stat" [];
	"setuptools._vendor.zipp" -> "sys" [];
	"setuptools._vendor.zipp.glob" -> "os" [];
	"setuptools._vendor.zipp.glob" -> "re" [];
	"setuptools._vendor.zipp.compat.py310" -> "sys" [];
	"setuptools._vendor.zipp.compat.py310" -> "io" [];
	"setuptools._vendor.jaraco.text" -> "re" [];
	"setuptools._vendor.jaraco.text" -> "itertools" [];
	"setuptools._vendor.jaraco.text" -> "textwrap" [];
	"setuptools._vendor.jaraco.text" -> "functools" [];
	"setuptools._vendor.jaraco.text" -> "importlib_resources" [];
	"setuptools._vendor.jaraco.text" -> "importlib_resources.files" [];
	"setuptools._vendor.jaraco.context" -> "__future__" [];
	"setuptools._vendor.jaraco.context" -> "contextlib" [];
	"setuptools._vendor.jaraco.context" -> "functools" [];
	"setuptools._vendor.jaraco.context" -> "operator" [];
	"setuptools._vendor.jaraco.context" -> "os" [];
	"setuptools._vendor.jaraco.context" -> "shutil" [];
	"setuptools._vendor.jaraco.context" -> "subprocess" [];
	"setuptools._vendor.jaraco.context" -> "sys" [];
	"setuptools._vendor.jaraco.context" -> "tempfile" [];
	"setuptools._vendor.jaraco.context" -> "warnings" [];
	"setuptools._vendor.jaraco.context" -> "typing" [];
	"setuptools._vendor.jaraco.context" -> "backports" [];
	"setuptools._vendor.jaraco.context" -> "tarfile" [];
	"backports" -> "pkgutil" [];
	"setuptools._vendor.backports.tarfile" -> "builtins" [];
	"setuptools._vendor.backports.tarfile" -> "sys" [];
	"setuptools._vendor.backports.tarfile" -> "os" [];
	"setuptools._vendor.backports.tarfile" -> "io" [];
	"setuptools._vendor.backports.tarfile" -> "shutil" [];
	"setuptools._vendor.backports.tarfile" -> "stat" [];
	"setuptools._vendor.backports.tarfile" -> "time" [];
	"setuptools._vendor.backports.tarfile" -> "struct" [];
	"setuptools._vendor.backports.tarfile" -> "copy" [];
	"setuptools._vendor.backports.tarfile" -> "re" [];
	"setuptools._vendor.backports.tarfile" -> "pwd" [];
	"setuptools._vendor.backports.tarfile" -> "grp" [];
	"setuptools._vendor.backports.tarfile" -> "zlib" [];
	"setuptools._vendor.backports.tarfile" -> "bz2" [];
	"setuptools._vendor.backports.tarfile" -> "lzma" [];
	"setuptools._vendor.backports.tarfile" -> "warnings" [];
	"setuptools._vendor.backports.tarfile" -> "gzip" [];
	"setuptools._vendor.backports.tarfile" -> "argparse" [];
	"setuptools._vendor.backports.tarfile.compat.py38" -> "sys" [];
	"setuptools._vendor.jaraco.functools" -> "functools" [];
	"setuptools._vendor.jaraco.functools" -> "inspect" [];
	"setuptools._vendor.jaraco.functools" -> "itertools" [];
	"setuptools._vendor.jaraco.functools" -> "operator" [];
	"setuptools._vendor.jaraco.functools" -> "time" [];
	"setuptools._vendor.jaraco.functools" -> "types" [];
	"setuptools._vendor.jaraco.functools" -> "warnings" [];
	"setuptools._vendor.jaraco.functools" -> "more_itertools" [];
	"setuptools._vendor.more_itertools.recipes" -> "math" [];
	"setuptools._vendor.more_itertools.recipes" -> "operator" [];
	"setuptools._vendor.more_itertools.recipes" -> "collections" [];
	"setuptools._vendor.more_itertools.recipes" -> "functools" [];
	"setuptools._vendor.more_itertools.recipes" -> "itertools" [];
	"setuptools._vendor.more_itertools.recipes" -> "random" [];
	"setuptools._vendor.more_itertools.recipes" -> "sys" [];
	"setuptools._vendor.more_itertools.more" -> "math" [];
	"setuptools._vendor.more_itertools.more" -> "warnings" [];
	"setuptools._vendor.more_itertools.more" -> "collections" [];
	"setuptools._vendor.more_itertools.more" -> "functools" [];
	"setuptools._vendor.more_itertools.more" -> "heapq" [];
	"setuptools._vendor.more_itertools.more" -> "itertools" [];
	"setuptools._vendor.more_itertools.more" -> "queue" [];
	"setuptools._vendor.more_itertools.more" -> "random" [];
	"setuptools._vendor.more_itertools.more" -> "operator" [];
	"setuptools._vendor.more_itertools.more" -> "sys" [];
	"setuptools._vendor.more_itertools.more" -> "time" [];
	"_ssl" -> "socket" [];
	"zipimport" -> "_frozen_importlib_external" [];
	"zipimport" -> "_frozen_importlib" [];
	"zipimport" -> "_imp" [];
	"zipimport" -> "_io" [];
	"zipimport" -> "marshal" [];
	"zipimport" -> "sys" [];
	"zipimport" -> "time" [];
	"zipimport" -> "_warnings" [];
	"zipimport" -> "zlib" [];
	"D:\ai\main.py" -> "os" [];
	"D:\ai\main.py" -> "time" [];
	"D:\ai\main.py" -> "torch" [];
	"D:\ai\main.py" -> "transformers" [];
	"D:\ai\main.py" -> "pyaudio" [];
	"D:\ai\main.py" -> "numpy" [];
	"D:\ai\main.py" -> "keyboard" [];
	"D:\ai\main.py" -> "ollama" [];
	"D:\ai\main.py" -> "gtts" [];
	"D:\ai\main.py" -> "pydub" [];
	"D:\ai\main.py" -> "simpleaudio" [];
	"D:\ai\main.py" -> "threading" [];
	"D:\ai\main.py" -> "types" [];
	"D:\ai\main.py" -> "weakref" [];
	"D:\ai\main.py" -> "functools" [];
	"D:\ai\main.py" -> "genericpath" [];
	"D:\ai\main.py" -> "posixpath" [];
	"D:\ai\main.py" -> "io" [];
	"D:\ai\main.py" -> "reprlib" [];
	"D:\ai\main.py" -> "stat" [];
	"D:\ai\main.py" -> "_collections_abc" [];
	"D:\ai\main.py" -> "_weakrefset" [];
	"D:\ai\main.py" -> "abc" [];
	"D:\ai\main.py" -> "traceback" [];
	"D:\ai\main.py" -> "operator" [];
	"D:\ai\main.py" -> "encodings" [];
	"D:\ai\main.py" -> "sre_parse" [];
	"D:\ai\main.py" -> "heapq" [];
	"D:\ai\main.py" -> "enum" [];
	"D:\ai\main.py" -> "copyreg" [];
	"D:\ai\main.py" -> "keyword" [];
	"D:\ai\main.py" -> "codecs" [];
	"D:\ai\main.py" -> "locale" [];
	"D:\ai\main.py" -> "collections" [];
	"D:\ai\main.py" -> "re" [];
	"D:\ai\main.py" -> "warnings" [];
	"D:\ai\main.py" -> "sre_compile" [];
	"D:\ai\main.py" -> "linecache" [];
	"D:\ai\main.py" -> "ntpath" [];
	"D:\ai\main.py" -> "sre_constants" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_kivy.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_gstreamer.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth__tkinter.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pywintypes.py" [];
	"D:\ai\main.py" -> "D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pythoncom.py" [];
	"D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pythoncom.py" -> "sys" [];
	"D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pythoncom.py" -> "os" [];
	"D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pywintypes.py" -> "sys" [];
	"D:\ai\.venv\Lib\site-packages\_pyinstaller_hooks_contrib\rthooks\pyi_rth_pywintypes.py" -> "os" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py" -> "pkgutil" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgutil.py" -> "pyimod02_importers" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth__tkinter.py" -> "os" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth__tkinter.py" -> "sys" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "os" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "pathlib" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "sys" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "pkg_resources" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_pkgres.py" -> "pyimod02_importers" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" -> "os" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" -> "setuptools" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_setuptools.py" -> "_distutils_hack" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" -> "sys" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" -> "multiprocessing" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_multiprocessing.py" -> "subprocess" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_gstreamer.py" -> "os" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_gstreamer.py" -> "sys" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_kivy.py" -> "os" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_kivy.py" -> "sys" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" -> "inspect" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" -> "os" [];
	"D:\ai\.venv\Lib\site-packages\PyInstaller\hooks\rthooks\pyi_rth_inspect.py" -> "sys" [];
	"kivy.core.window" -> "os.path" [];
	"kivy.core.window" -> "os" [];
	"kivy.core.window" -> "collections" [];
	"kivy.core.window" -> "ios" [];
	"kivy.core.window" -> "android" [];
	"kivy.core.window" -> "math" [];
	"kivy.uix.vkeyboard" -> "kivy" [];
	"kivy.uix.vkeyboard" -> "io" [];
	"kivy.uix.vkeyboard" -> "os.path" [];
	"kivy.uix.vkeyboard" -> "os" [];
	"kivy.uix.vkeyboard" -> "json" [];
	"kivy.resources" -> "os.path" [];
	"kivy.resources" -> "sys" [];
	"kivy.resources" -> "os" [];
	"kivy.core.image" -> "re" [];
	"kivy.core.image" -> "base64" [];
	"kivy.core.image" -> "imghdr" [];
	"kivy.core.image" -> "zipfile" [];
	"kivy.core.image" -> "io" [];
	"kivy.core.image" -> "os" [];
	"kivy.core.image" -> "sys" [];
	"kivy.compat" -> "sys" [];
	"kivy.compat" -> "time" [];
	"kivy.compat" -> "math" [];
	"kivy.compat" -> "queue" [];
	"kivy.compat" -> "Queue" [];
	"kivy.atlas" -> "json" [];
	"kivy.atlas" -> "os.path" [];
	"kivy.atlas" -> "os" [];
	"kivy.atlas" -> "PIL" [];
	"kivy.atlas" -> "sys" [];
	"kivy.atlas" -> "glob" [];
	"imghdr" -> "os" [];
	"imghdr" -> "warnings" [];
	"imghdr" -> "sys" [];
	"imghdr" -> "glob" [];
	"kivy.uix.scatter" -> "math" [];
	"kivy.vector" -> "math" [];
	"kivy" -> "sys" [];
	"kivy" -> "shutil" [];
	"kivy" -> "getopt" [];
	"kivy" -> "os" [];
	"kivy" -> "os.path" [];
	"kivy" -> "pkgutil" [];
	"kivy" -> "re" [];
	"kivy" -> "importlib" [];
	"kivy" -> "site" [];
	"kivy" -> "kivy_deps" [];
	"kivy.uix.settings" -> "json" [];
	"kivy.uix.settings" -> "os" [];
	"kivy.uix.settings" -> "kivy" [];
	"kivy.uix.settings" -> "os.path" [];
	"kivy.uix.recycleview.views" -> "collections" [];
	"kivy.uix.recycleview" -> "copy" [];
	"kivy.core.text.text_pygame" -> "pygame" [];
	"kivy.uix.recycleview.datamodel" -> "functools" [];
	"kivy.lib.gstplayer" -> "os" [];
	"kivy.core.text.text_pango" -> "types" [];
	"kivy.core.text.text_pango" -> "os.path" [];
	"kivy.core.text.text_pango" -> "'kivy.core.text._text_pango'" [];
	"kivy.lang.builder" -> "sys" [];
	"kivy.lang.builder" -> "os" [];
	"kivy.lang.builder" -> "os.path" [];
	"kivy.lang.builder" -> "copy" [];
	"kivy.lang.builder" -> "types" [];
	"kivy.lang.builder" -> "functools" [];
	"kivy.lang.builder" -> "kivy" [];
	"kivy.lang.builder" -> "atexit" [];
	"kivy.lang.builder" -> "html" [];
	"kivy.core.image.img_pygame" -> "os.path" [];
	"kivy.core.image.img_pygame" -> "pygame" [];
	"kivy.core.image.img_pygame" -> "traceback" [];
	"kivy.core.image.img_pil" -> "Image" [];
	"kivy.core.image.img_pil" -> "PIL" [];
	"kivy.core.image.img_tex" -> "json" [];
	"kivy.core.image.img_tex" -> "struct" [];
	"kivy.uix.rst" -> "os" [];
	"kivy.uix.rst" -> "os.path" [];
	"kivy.uix.rst" -> "docutils" [];
	"kivy.uix.rst" -> "sys" [];
	"docutils.parsers.rst.directives" -> "re" [];
	"docutils.parsers.rst.directives" -> "codecs" [];
	"docutils.parsers.rst.directives" -> "importlib" [];
	"docutils.parsers.rst.directives" -> "docutils" [];
	"docutils.languages" -> "importlib" [];
	"docutils.utils" -> "sys" [];
	"docutils.utils" -> "os" [];
	"docutils.utils" -> "os.path" [];
	"docutils.utils" -> "pathlib" [];
	"docutils.utils" -> "re" [];
	"docutils.utils" -> "itertools" [];
	"docutils.utils" -> "warnings" [];
	"docutils.utils" -> "unicodedata" [];
	"docutils.utils.smartquotes" -> "re" [];
	"docutils.utils.smartquotes" -> "sys" [];
	"docutils.utils.smartquotes" -> "itertools" [];
	"docutils.utils.smartquotes" -> "locale" [];
	"docutils.utils.smartquotes" -> "argparse" [];
	"docutils.utils.smartquotes" -> "unittest" [];
	"docutils.utils.roman" -> "argparse" [];
	"docutils.utils.roman" -> "re" [];
	"docutils.utils.roman" -> "sys" [];
	"docutils.io" -> "codecs" [];
	"docutils.io" -> "locale" [];
	"docutils.io" -> "os" [];
	"docutils.io" -> "re" [];
	"docutils.io" -> "sys" [];
	"docutils.io" -> "warnings" [];
	"docutils.frontend" -> "codecs" [];
	"docutils.frontend" -> "configparser" [];
	"docutils.frontend" -> "optparse" [];
	"docutils.frontend" -> "os" [];
	"docutils.frontend" -> "os.path" [];
	"docutils.frontend" -> "pathlib" [];
	"docutils.frontend" -> "sys" [];
	"docutils.frontend" -> "warnings" [];
	"optparse" -> "sys" [];
	"optparse" -> "os" [];
	"optparse" -> "textwrap" [];
	"optparse" -> "gettext" [];
	"docutils.nodes" -> "collections" [];
	"docutils.nodes" -> "re" [];
	"docutils.nodes" -> "sys" [];
	"docutils.nodes" -> "warnings" [];
	"docutils.nodes" -> "unicodedata" [];
	"docutils.transforms.parts" -> "sys" [];
	"docutils.transforms.parts" -> "docutils" [];
	"docutils.transforms.misc" -> "docutils" [];
	"docutils.transforms.references" -> "docutils" [];
	"docutils.transforms.frontmatter" -> "re" [];
	"docutils.transforms.frontmatter" -> "docutils" [];
	"docutils.transforms.writer_aux" -> "warnings" [];
	"docutils.transforms.writer_aux" -> "docutils" [];
	"docutils.transforms.universal" -> "re" [];
	"docutils.transforms.universal" -> "time" [];
	"docutils.transforms.universal" -> "docutils" [];
	"xml.dom.minidom" -> "io" [];
	"xml.dom.pulldom" -> "io" [];
	"xml.dom.xmlbuilder" -> "copy" [];
	"xml.dom.xmlbuilder" -> "posixpath" [];
	"xml.dom.domreg" -> "sys" [];
	"xml.dom.domreg" -> "os" [];
	"docutils" -> "collections" [];
	"docutils" -> "warnings" [];
	"docutils.parsers.rst.directives.tables" -> "csv" [];
	"docutils.parsers.rst.directives.tables" -> "warnings" [];
	"docutils.parsers.rst.directives.tables" -> "docutils" [];
	"docutils.statemachine" -> "sys" [];
	"docutils.statemachine" -> "re" [];
	"docutils.statemachine" -> "unicodedata" [];
	"docutils.parsers.rst.directives.references" -> "docutils" [];
	"docutils.parsers.rst.directives.parts" -> "docutils" [];
	"docutils.parsers.rst.directives.misc" -> "pathlib" [];
	"docutils.parsers.rst.directives.misc" -> "re" [];
	"docutils.parsers.rst.directives.misc" -> "time" [];
	"docutils.parsers.rst.directives.misc" -> "docutils" [];
	"docutils.parsers.rst.states" -> "re" [];
	"docutils.parsers.rst.states" -> "types" [];
	"docutils.parsers.rst.states" -> "docutils" [];
	"docutils.parsers.rst.tableparser" -> "re" [];
	"docutils.parsers.rst.tableparser" -> "sys" [];
	"docutils.parsers.rst.tableparser" -> "docutils" [];
	"docutils.parsers.rst.directives.images" -> "'PIL.Image'" [];
	"docutils.parsers.rst.directives.images" -> "Image" [];
	"docutils.parsers.rst.directives.images" -> "docutils" [];
	"docutils.parsers.rst.directives.html" -> "warnings" [];
	"docutils.parsers.rst.directives.body" -> "docutils" [];
	"docutils.utils.code_analyzer" -> "docutils" [];
	"docutils.utils.code_analyzer" -> "pygments" [];
	"pygments.formatters.html" -> "functools" [];
	"pygments.formatters.html" -> "os" [];
	"pygments.formatters.html" -> "sys" [];
	"pygments.formatters.html" -> "os.path" [];
	"pygments.formatters.html" -> "io" [];
	"pygments.formatters.html" -> "ctags" [];
	"pygments.formatters" -> "re" [];
	"pygments.formatters" -> "sys" [];
	"pygments.formatters" -> "types" [];
	"pygments.formatters" -> "fnmatch" [];
	"pygments.formatters" -> "os.path" [];
	"pygments.util" -> "re" [];
	"pygments.util" -> "io" [];
	"pygments.util" -> "locale" [];
	"pygments.formatter" -> "codecs" [];
	"pygments.lexers" -> "re" [];
	"pygments.lexers" -> "sys" [];
	"pygments.lexers" -> "types" [];
	"pygments.lexers" -> "fnmatch" [];
	"pygments.lexers" -> "os.path" [];
	"pygments.modeline" -> "re" [];
	"pygments" -> "io" [];
	"pygments.lexers.wren" -> "re" [];
	"pygments.lexers.wowtoc" -> "re" [];
	"pygments.lexers.wgsl" -> "pygments" [];
	"pygments.lexers.webmisc" -> "re" [];
	"pygments.lexers.vip" -> "re" [];
	"pygments.lexers.urbi" -> "re" [];
	"pygments.lexers.unicon" -> "re" [];
	"pygments.lexers.ul4" -> "re" [];
	"pygments.lexers.typoscript" -> "re" [];
	"pygments.lexers.tnt" -> "re" [];
	"pygments.lexers.tls" -> "re" [];
	"pygments.lexers.textfmts" -> "re" [];
	"pygments.lexers.textedit" -> "re" [];
	"pygments.lexers.textedit" -> "bisect" [];
	"pygments.lexers.teraterm" -> "re" [];
	"pygments.lexers.templates" -> "re" [];
	"pygments.lexers.supercollider" -> "re" [];
	"pygments.lexers.stata" -> "re" [];
	"pygments.lexers.sql" -> "re" [];
	"pygments.lexers.special" -> "ast" [];
	"pygments.lexers.special" -> "gzip" [];
	"pygments.lexers.special" -> "bz2" [];
	"pygments.lexers.shell" -> "re" [];
	"pygments.lexers.scripting" -> "re" [];
	"pygments.lexers.scdoc" -> "re" [];
	"pygments.lexers.sas" -> "re" [];
	"pygments.lexers.ruby" -> "re" [];
	"pygments.lexers.robotframework" -> "re" [];
	"pygments.lexers.resource" -> "re" [];
	"pygments.lexers.rebol" -> "re" [];
	"pygments.lexers.rdf" -> "re" [];
	"pygments.lexers.r" -> "re" [];
	"pygments.lexers.qlik" -> "re" [];
	"pygments.lexers.python" -> "keyword" [];
	"pygments.lexers.python" -> "pygments" [];
	"pygments.lexers.prolog" -> "re" [];
	"pygments.lexers.php" -> "re" [];
	"pygments.lexers.phix" -> "re" [];
	"pygments.lexers.perl" -> "re" [];
	"pygments.lexers.pascal" -> "re" [];
	"pygments.scanner" -> "re" [];
	"pygments.lexers.parsers" -> "re" [];
	"pygments.lexers.parasail" -> "re" [];
	"pygments.lexers.objective" -> "re" [];
	"pygments.lexers.oberon" -> "re" [];
	"pygments.lexers.nix" -> "re" [];
	"pygments.lexers.nimrod" -> "re" [];
	"pygments.lexers.ncl" -> "re" [];
	"pygments.lexers.mojo" -> "keyword" [];
	"pygments.lexers.mojo" -> "pygments" [];
	"pygments.lexers.modula2" -> "re" [];
	"pygments.lexers.modeling" -> "re" [];
	"pygments.lexers.ml" -> "re" [];
	"pygments.lexers.mime" -> "re" [];
	"pygments.lexers.maxima" -> "re" [];
	"pygments.lexers.matlab" -> "re" [];
	"pygments.lexers.markup" -> "re" [];
	"pygments.lexers.make" -> "re" [];
	"pygments.lexers.lisp" -> "re" [];
	"pygments.lexers.lilypond" -> "re" [];
	"pygments.lexers.lean" -> "re" [];
	"pygments.lexers.ldap" -> "re" [];
	"pygments.lexers.jvm" -> "re" [];
	"pygments.lexers.jvm" -> "pygments" [];
	"pygments.lexers.jsx" -> "re" [];
	"pygments.lexers.javascript" -> "re" [];
	"pygments.lexers.int_fiction" -> "re" [];
	"pygments.lexers.installers" -> "re" [];
	"pygments.lexers.inferno" -> "re" [];
	"pygments.lexers.igor" -> "re" [];
	"pygments.lexers.idl" -> "re" [];
	"pygments.lexers.html" -> "re" [];
	"pygments.lexers.hdl" -> "re" [];
	"pygments.lexers.haxe" -> "re" [];
	"pygments.lexers.haskell" -> "re" [];
	"pygments.lexers.haskell" -> "pygments" [];
	"pygments.lexers.gsql" -> "re" [];
	"pygments.lexers.graph" -> "re" [];
	"pygments.lexers.gdscript" -> "re" [];
	"pygments.lexers.futhark" -> "pygments" [];
	"pygments.lexers.foxpro" -> "re" [];
	"pygments.lexers.fortran" -> "re" [];
	"pygments.lexers.forth" -> "re" [];
	"pygments.lexers.fantom" -> "string" [];
	"pygments.lexers.ezhil" -> "re" [];
	"pygments.lexers.erlang" -> "re" [];
	"pygments.lexers.ecl" -> "re" [];
	"pygments.lexers.dylan" -> "re" [];
	"pygments.lexers.dsls" -> "re" [];
	"pygments.lexers.dotnet" -> "re" [];
	"pygments.lexers.dotnet" -> "pygments" [];
	"pygments.lexers.dns" -> "re" [];
	"pygments.lexers.diff" -> "re" [];
	"pygments.lexers.dalvik" -> "re" [];
	"pygments.lexers.css" -> "re" [];
	"pygments.lexers.css" -> "copy" [];
	"pygments.lexers.csound" -> "re" [];
	"pygments.lexers.crystal" -> "re" [];
	"pygments.lexers.configs" -> "re" [];
	"pygments.lexers.comal" -> "re" [];
	"pygments.lexers.carbon" -> "re" [];
	"pygments.lexers.c_like" -> "re" [];
	"pygments.lexers.c_cpp" -> "re" [];
	"pygments.lexers.business" -> "re" [];
	"pygments.lexers.blueprint" -> "re" [];
	"pygments.lexers.bibtex" -> "re" [];
	"pygments.lexers.basic" -> "re" [];
	"pygments.lexers.asn1" -> "re" [];
	"pygments.lexers.asm" -> "re" [];
	"pygments.lexers.asc" -> "re" [];
	"pygments.lexers.apdlexer" -> "re" [];
	"pygments.lexers.amdgpu" -> "re" [];
	"pygments.lexers.ambient" -> "re" [];
	"pygments.lexers.algebra" -> "re" [];
	"pygments.lexers.ada" -> "re" [];
	"pygments.lexers.actionscript" -> "re" [];
	"pygments.lexers._sourcemod_builtins" -> "re" [];
	"pygments.lexers._scilab_builtins" -> "subprocess" [];
	"pygments.lexers._postgres_builtins" -> "re" [];
	"pygments.lexers._php_builtins" -> "glob" [];
	"pygments.lexers._php_builtins" -> "os" [];
	"pygments.lexers._php_builtins" -> "pprint" [];
	"pygments.lexers._php_builtins" -> "re" [];
	"pygments.lexers._php_builtins" -> "shutil" [];
	"pygments.lexers._php_builtins" -> "tarfile" [];
	"pygments.lexers._mysql_builtins" -> "re" [];
	"pygments.lexers._lua_builtins" -> "re" [];
	"pygments.lexers._lua_builtins" -> "pprint" [];
	"pygments.lexers._cocoa_builtins" -> "os" [];
	"pygments.lexers._cocoa_builtins" -> "re" [];
	"pygments.formatters.rtf" -> "collections" [];
	"pygments.formatters.other" -> "gzip" [];
	"pygments.formatters.other" -> "bz2" [];
	"pygments.formatters.latex" -> "io" [];
	"pygments.formatters.img" -> "os" [];
	"pygments.formatters.img" -> "sys" [];
	"pygments.formatters.img" -> "subprocess" [];
	"pygments.formatters.img" -> "PIL" [];
	"pygments.formatters.img" -> "_winreg" [];
	"pygments.formatters.img" -> "winreg" [];
	"pygments.formatters.groff" -> "math" [];
	"pygments.unistring" -> "unicodedata" [];
	"pygments.lexer" -> "re" [];
	"pygments.lexer" -> "sys" [];
	"pygments.lexer" -> "time" [];
	"pygments.lexer" -> "chardet" [];
	"pygments.regexopt" -> "re" [];
	"pygments.regexopt" -> "os.path" [];
	"pygments.regexopt" -> "itertools" [];
	"pygments.regexopt" -> "operator" [];
	"pygments.filters" -> "re" [];
	"docutils.parsers.rst.directives.admonitions" -> "docutils" [];
	"docutils.writers.xetex" -> "docutils" [];
	"docutils.writers.s5_html" -> "sys" [];
	"docutils.writers.s5_html" -> "os" [];
	"docutils.writers.s5_html" -> "re" [];
	"docutils.writers.s5_html" -> "docutils" [];
	"docutils.writers.pseudoxml" -> "docutils" [];
	"docutils.writers.pep_html" -> "os" [];
	"docutils.writers.pep_html" -> "os.path" [];
	"docutils.writers.pep_html" -> "docutils" [];
	"docutils.writers.pep_html" -> "random" [];
	"docutils.writers.odf_odt.pygmentsformatter" -> "pygments" [];
	"docutils.writers.odf_odt.prepstyles" -> "sys" [];
	"docutils.writers.odf_odt.prepstyles" -> "zipfile" [];
	"docutils.writers.odf_odt.prepstyles" -> "tempfile" [];
	"docutils.writers.odf_odt.prepstyles" -> "shutil" [];
	"docutils.writers.odf_odt.prepstyles" -> "os" [];
	"docutils.writers.odf_odt" -> "configparser" [];
	"docutils.writers.odf_odt" -> "copy" [];
	"docutils.writers.odf_odt" -> "io" [];
	"docutils.writers.odf_odt" -> "itertools" [];
	"docutils.writers.odf_odt" -> "locale" [];
	"docutils.writers.odf_odt" -> "os" [];
	"docutils.writers.odf_odt" -> "os.path" [];
	"docutils.writers.odf_odt" -> "pathlib" [];
	"docutils.writers.odf_odt" -> "re" [];
	"docutils.writers.odf_odt" -> "subprocess" [];
	"docutils.writers.odf_odt" -> "tempfile" [];
	"docutils.writers.odf_odt" -> "time" [];
	"docutils.writers.odf_odt" -> "urllib" [];
	"docutils.writers.odf_odt" -> "weakref" [];
	"docutils.writers.odf_odt" -> "zipfile" [];
	"docutils.writers.odf_odt" -> "docutils" [];
	"docutils.writers.odf_odt" -> "pygments" [];
	"docutils.readers.standalone" -> "docutils" [];
	"docutils.readers" -> "importlib" [];
	"docutils.writers.null" -> "docutils" [];
	"docutils.writers.manpage" -> "re" [];
	"docutils.writers.manpage" -> "docutils" [];
	"docutils.writers.manpage" -> "roman" [];
	"docutils.writers.latex2e" -> "pathlib" [];
	"docutils.writers.latex2e" -> "re" [];
	"docutils.writers.latex2e" -> "string" [];
	"docutils.writers.latex2e" -> "warnings" [];
	"docutils.writers.latex2e" -> "roman" [];
	"docutils.writers.latex2e" -> "docutils" [];
	"docutils.utils.math.tex2mathml_extern" -> "subprocess" [];
	"docutils.utils.math.tex2mathml_extern" -> "docutils" [];
	"docutils.utils.math.math2html" -> "pathlib" [];
	"docutils.utils.math.math2html" -> "sys" [];
	"docutils.utils.math.math2html" -> "unicodedata" [];
	"docutils.utils.math.latex2mathml" -> "re" [];
	"docutils.utils.math.latex2mathml" -> "unicodedata" [];
	"docutils.utils.math.mathml_elements" -> "numbers" [];
	"docutils.writers.html5_polyglot" -> "pathlib" [];
	"docutils.writers.html5_polyglot" -> "docutils" [];
	"docutils.writers.html4css1" -> "os.path" [];
	"docutils.writers.html4css1" -> "re" [];
	"docutils.writers.html4css1" -> "docutils" [];
	"docutils.writers.docutils_xml" -> "io" [];
	"docutils.writers.docutils_xml" -> "docutils" [];
	"docutils.writers._html_base" -> "base64" [];
	"docutils.writers._html_base" -> "mimetypes" [];
	"docutils.writers._html_base" -> "os" [];
	"docutils.writers._html_base" -> "os.path" [];
	"docutils.writers._html_base" -> "pathlib" [];
	"docutils.writers._html_base" -> "re" [];
	"docutils.writers._html_base" -> "urllib" [];
	"docutils.writers._html_base" -> "warnings" [];
	"docutils.writers._html_base" -> "docutils" [];
	"docutils.writers" -> "importlib" [];
	"docutils.parsers.rst.roles" -> "docutils" [];
	"docutils.parsers.rst" -> "docutils" [];
	"docutils.parsers" -> "importlib" [];
	"kivy.core.clipboard.clipboard_winctypes" -> "ctypes" [];
	"kivy.input.postproc" -> "os" [];
	"kivy.input.postproc.retaintouch" -> "time" [];
	"kivy.input.postproc.tripletap" -> "time" [];
	"kivy.input.postproc.doubletap" -> "time" [];
	"kivy.input.providers" -> "os" [];
	"kivy.input.providers.leapfinger" -> "collections" [];
	"kivy.input.providers.leapfinger" -> "Leap" [];
	"kivy.input.providers.androidjoystick" -> "os" [];
	"kivy.input.providers.androidjoystick" -> "android" [];
	"kivy.input.providers.androidjoystick" -> "pygame" [];
	"kivy.input.providers.linuxwacom" -> "os" [];
	"kivy.input.providers.linuxwacom" -> "threading" [];
	"kivy.input.providers.linuxwacom" -> "collections" [];
	"kivy.input.providers.linuxwacom" -> "struct" [];
	"kivy.input.providers.linuxwacom" -> "fcntl" [];
	"kivy.input.providers.hidinput" -> "os" [];
	"kivy.input.providers.hidinput" -> "threading" [];
	"kivy.input.providers.hidinput" -> "collections" [];
	"kivy.input.providers.hidinput" -> "struct" [];
	"kivy.input.providers.hidinput" -> "fcntl" [];
	"kivy.input.providers.mtdev" -> "os" [];
	"kivy.input.providers.mtdev" -> "os.path" [];
	"kivy.input.providers.mtdev" -> "time" [];
	"kivy.input.providers.mtdev" -> "threading" [];
	"kivy.input.providers.mtdev" -> "collections" [];
	"kivy.lib.mtdev" -> "os" [];
	"kivy.lib.mtdev" -> "time" [];
	"kivy.lib.mtdev" -> "ctypes" [];
	"kivy.input.providers.probesysfs" -> "os" [];
	"kivy.input.providers.probesysfs" -> "os.path" [];
	"kivy.input.providers.probesysfs" -> "ctypes" [];
	"kivy.input.providers.probesysfs" -> "re" [];
	"kivy.input.providers.probesysfs" -> "glob" [];
	"kivy.input.providers.probesysfs" -> "subprocess" [];
	"kivy.input.providers.mactouch" -> "ctypes" [];
	"kivy.input.providers.mactouch" -> "threading" [];
	"kivy.input.providers.mactouch" -> "collections" [];
	"kivy.input.providers.mactouch" -> "os" [];
	"kivy.input.providers.wm_pen" -> "os" [];
	"kivy.input.providers.wm_pen" -> "collections" [];
	"kivy.input.providers.wm_pen" -> "ctypes" [];
	"kivy.input.providers.wm_common" -> "os" [];
	"kivy.input.providers.wm_common" -> "ctypes" [];
	"kivy.input.providers.wm_touch" -> "os" [];
	"kivy.input.providers.wm_touch" -> "ctypes" [];
	"kivy.input.providers.wm_touch" -> "collections" [];
	"kivy.input.providers.mouse" -> "collections" [];
	"kivy.input.providers.tuio" -> "functools" [];
	"kivy.input.providers.tuio" -> "collections" [];
	"kivy.input.providers.tuio" -> "oscpy" [];
	"kivy.input.motionevent" -> "weakref" [];
	"kivy.input.motionevent" -> "inspect" [];
	"kivy.input.motionevent" -> "copy" [];
	"kivy.input.motionevent" -> "time" [];
	"kivy.weakmethod" -> "weakref" [];
	"kivy.uix.tabbedpanel" -> "functools" [];
	"kivy.core.audio.audio_ffpyplayer" -> "ffpyplayer" [];
	"kivy.core.audio.audio_ffpyplayer" -> "'ffpyplayer.player'" [];
	"kivy.core.audio.audio_ffpyplayer" -> "'ffpyplayer.tools'" [];
	"kivy.core.audio.audio_ffpyplayer" -> "time" [];
	"kivy.uix.scrollview" -> "functools" [];
	"kivy.uix.sandbox" -> "functools" [];
	"kivy.uix.sandbox" -> "traceback" [];
	"kivy.core.camera.camera_gi" -> "'gi.repository'" [];
	"kivy.core.camera.camera_gi" -> "ctypes" [];
	"kivy.core.camera.camera_gi" -> "weakref" [];
	"kivy.core.camera.camera_gi" -> "atexit" [];
	"kivy.support" -> "gi" [];
	"kivy.support" -> "gobject" [];
	"kivy.support" -> "android" [];
	"kivy.support" -> "pygame" [];
	"kivy.support" -> "collections" [];
	"kivy.support" -> "sys" [];
	"kivy.uix.video" -> "sys" [];
	"kivy.uix.gridlayout" -> "math" [];
	"kivy.uix.gridlayout" -> "itertools" [];
	"kivy.uix.gridlayout" -> "operator" [];
	"kivy.uix.behaviors.codenavigation" -> "string" [];
	"kivy.core.text" -> "re" [];
	"kivy.core.text" -> "os" [];
	"kivy.core.text" -> "ast" [];
	"kivy.core.text" -> "functools" [];
	"kivy.core.text" -> "copy" [];
	"kivy.core.text" -> "kivy" [];
	"kivy.core.text" -> "sys" [];
	"kivy.core.video.video_gstplayer" -> "threading" [];
	"kivy.core.video.video_gstplayer" -> "functools" [];
	"kivy.core.video.video_gstplayer" -> "os.path" [];
	"kivy.core.video.video_gstplayer" -> "weakref" [];
	"kivy.core.video.video_gstplayer" -> "urllib" [];
	"kivy.core.clipboard.clipboard_xsel" -> "subprocess" [];
	"kivy.core.clipboard.clipboard_gtk3" -> "gi" [];
	"kivy.core.clipboard.clipboard_gtk3" -> "'gi.repository'" [];
	"kivy.lang.parser" -> "os" [];
	"kivy.lang.parser" -> "re" [];
	"kivy.lang.parser" -> "sys" [];
	"kivy.lang.parser" -> "traceback" [];
	"kivy.lang.parser" -> "ast" [];
	"kivy.lang.parser" -> "importlib" [];
	"kivy.lang.parser" -> "types" [];
	"kivy.lang.parser" -> "functools" [];
	"kivy.lang.parser" -> "collections" [];
	"kivy.lang.parser" -> "kivy" [];
	"kivy.core.audio.audio_avplayer" -> "pyobjus" [];
	"kivy.core.audio.audio_avplayer" -> "'pyobjus.dylib_manager'" [];
	"kivy.factory" -> "copy" [];
	"kivy.factory" -> "importlib" [];
	"kivy.effects.kinetic" -> "time" [];
	"kivy.core.clipboard.clipboard_nspaste" -> "pyobjus" [];
	"kivy.core.clipboard.clipboard_nspaste" -> "'pyobjus.dylib_manager'" [];
	"kivy.loader" -> "collections" [];
	"kivy.loader" -> "time" [];
	"kivy.loader" -> "os.path" [];
	"kivy.loader" -> "os" [];
	"kivy.loader" -> "threading" [];
	"kivy.loader" -> "mimetypes" [];
	"kivy.loader" -> "tempfile" [];
	"kivy.loader" -> "smb" [];
	"kivy.loader" -> "certifi" [];
	"kivy.loader" -> "ssl" [];
	"certifi.core" -> "sys" [];
	"certifi.core" -> "atexit" [];
	"certifi.core" -> "os" [];
	"certifi.core" -> "types" [];
	"certifi.core" -> "typing" [];
	"kivy.uix.behaviors.cover" -> "decimal" [];
	"kivy.uix.filechooser" -> "weakref" [];
	"kivy.uix.filechooser" -> "time" [];
	"kivy.uix.filechooser" -> "os" [];
	"kivy.uix.filechooser" -> "os.path" [];
	"kivy.uix.filechooser" -> "fnmatch" [];
	"kivy.uix.filechooser" -> "win32file" [];
	"kivy.uix.filechooser" -> "pprint" [];
	"kivy.uix.filechooser" -> "textwrap" [];
	"kivy.uix.filechooser" -> "sys" [];
	"kivy.core.video.video_ffmpeg" -> "ffmpeg" [];
	"ffmpeg" -> "__future__" [];
	"ffmpeg._view" -> "__future__" [];
	"ffmpeg._view" -> "builtins" [];
	"ffmpeg._view" -> "tempfile" [];
	"ffmpeg._view" -> "graphviz" [];
	"ffmpeg.dag" -> "__future__" [];
	"ffmpeg.dag" -> "builtins" [];
	"ffmpeg.dag" -> "collections" [];
	"ffmpeg._utils" -> "__future__" [];
	"ffmpeg._utils" -> "builtins" [];
	"ffmpeg._utils" -> "hashlib" [];
	"ffmpeg._utils" -> "sys" [];
	"past.builtins" -> "__builtin__" [];
	"past.utils" -> "sys" [];
	"past.utils" -> "numbers" [];
	"past.builtins.misc" -> "__future__" [];
	"past.builtins.misc" -> "inspect" [];
	"past.builtins.misc" -> "sys" [];
	"past.builtins.misc" -> "math" [];
	"past.builtins.misc" -> "numbers" [];
	"past.builtins.misc" -> "collections" [];
	"past.builtins.misc" -> "builtins" [];
	"past.builtins.misc" -> "importlib" [];
	"past.builtins.misc" -> "imp" [];
	"past.builtins.misc" -> "__builtin__" [];
	"imp" -> "_imp" [];
	"imp" -> "importlib" [];
	"imp" -> "os" [];
	"imp" -> "sys" [];
	"imp" -> "tokenize" [];
	"imp" -> "types" [];
	"imp" -> "warnings" [];
	"past.types.oldstr" -> "numbers" [];
	"past.types.oldstr" -> "collections" [];
	"past.types.olddict" -> "sys" [];
	"past.types.basestring" -> "sys" [];
	"past.types" -> "__builtin__" [];
	"past.builtins.noniterators" -> "__future__" [];
	"past.builtins.noniterators" -> "itertools" [];
	"past.builtins.noniterators" -> "builtins" [];
	"past.builtins.noniterators" -> "functools" [];
	"past.builtins.noniterators" -> "__builtin__" [];
	"past" -> "future" [];
	"future.standard_library" -> "__future__" [];
	"future.standard_library" -> "sys" [];
	"future.standard_library" -> "logging" [];
	"future.standard_library" -> "importlib" [];
	"future.standard_library" -> "imp" [];
	"future.standard_library" -> "contextlib" [];
	"future.standard_library" -> "copy" [];
	"future.standard_library" -> "os" [];
	"future.standard_library" -> "urllib" [];
	"future.standard_library" -> "test" [];
	"future.standard_library" -> "dbm" [];
	"future.standard_library" -> "email" [];
	"future.standard_library" -> "pickle" [];
	"future.moves.dbm.ndbm" -> "__future__" [];
	"future.moves.dbm.ndbm" -> "dbm" [];
	"future.moves.dbm.gnu" -> "__future__" [];
	"future.moves.dbm.gnu" -> "gdbm" [];
	"dbm.gnu" -> "_gdbm" [];
	"future.moves.dbm.dumb" -> "__future__" [];
	"future.moves.dbm.dumb" -> "dumbdbm" [];
	"dbm.dumb" -> "ast" [];
	"dbm.dumb" -> "io" [];
	"dbm.dumb" -> "os" [];
	"future.moves.dbm" -> "__future__" [];
	"future.moves.dbm" -> "dbm" [];
	"future.moves.dbm" -> "whichdb" [];
	"future.moves.dbm" -> "anydbm" [];
	"future.moves" -> "__future__" [];
	"future.moves" -> "sys" [];
	"future.moves.test.support" -> "__future__" [];
	"future.moves.test.support" -> "sys" [];
	"test.test_support" -> "errno" [];
	"test.test_support" -> "importlib" [];
	"test.test_support" -> "io" [];
	"test.test_support" -> "os" [];
	"test.test_support" -> "shutil" [];
	"test.test_support" -> "socket" [];
	"test.test_support" -> "stat" [];
	"test.test_support" -> "subprocess" [];
	"test.test_support" -> "sys" [];
	"test.test_support" -> "tempfile" [];
	"test.test_support" -> "textwrap" [];
	"test.test_support" -> "time" [];
	"test.test_support" -> "unittest" [];
	"test.test_support" -> "warnings" [];
	"test.test_support" -> "sched" [];
	"sched" -> "time" [];
	"sched" -> "heapq" [];
	"sched" -> "collections" [];
	"sched" -> "itertools" [];
	"sched" -> "threading" [];
	"test.support.socket_helper" -> "contextlib" [];
	"test.support.socket_helper" -> "errno" [];
	"test.support.socket_helper" -> "socket" [];
	"test.support.socket_helper" -> "unittest" [];
	"test.support.socket_helper" -> "sys" [];
	"test.support.socket_helper" -> "test" [];
	"test.support.script_helper" -> "collections" [];
	"test.support.script_helper" -> "importlib" [];
	"test.support.script_helper" -> "sys" [];
	"test.support.script_helper" -> "os" [];
	"test.support.script_helper" -> "os.path" [];
	"test.support.script_helper" -> "subprocess" [];
	"test.support.script_helper" -> "py_compile" [];
	"test.support.script_helper" -> "zipfile" [];
	"test.support.script_helper" -> "test" [];
	"test.support.import_helper" -> "contextlib" [];
	"test.support.import_helper" -> "_imp" [];
	"test.support.import_helper" -> "importlib" [];
	"test.support.import_helper" -> "os" [];
	"test.support.import_helper" -> "shutil" [];
	"test.support.import_helper" -> "sys" [];
	"test.support.import_helper" -> "unittest" [];
	"test.support.import_helper" -> "warnings" [];
	"test.support.warnings_helper" -> "contextlib" [];
	"test.support.warnings_helper" -> "functools" [];
	"test.support.warnings_helper" -> "importlib" [];
	"test.support.warnings_helper" -> "re" [];
	"test.support.warnings_helper" -> "sys" [];
	"test.support.warnings_helper" -> "warnings" [];
	"test.support.os_helper" -> "contextlib" [];
	"test.support.os_helper" -> "errno" [];
	"test.support.os_helper" -> "os" [];
	"test.support.os_helper" -> "re" [];
	"test.support.os_helper" -> "stat" [];
	"test.support.os_helper" -> "sys" [];
	"test.support.os_helper" -> "time" [];
	"test.support.os_helper" -> "unittest" [];
	"test.support.os_helper" -> "warnings" [];
	"test.support.os_helper" -> "unicodedata" [];
	"test.support.os_helper" -> "tempfile" [];
	"test.support.os_helper" -> "platform" [];
	"test.support.os_helper" -> "ctypes" [];
	"test.support.os_helper" -> "shutil" [];
	"test.support.os_helper" -> "msvcrt" [];
	"test.support" -> "contextlib" [];
	"test.support" -> "functools" [];
	"test.support" -> "getpass" [];
	"test.support" -> "os" [];
	"test.support" -> "re" [];
	"test.support" -> "stat" [];
	"test.support" -> "sys" [];
	"test.support" -> "sysconfig" [];
	"test.support" -> "time" [];
	"test.support" -> "types" [];
	"test.support" -> "unittest" [];
	"test.support" -> "warnings" [];
	"test.support" -> "_testcapi" [];
	"test.support" -> "platform" [];
	"test.support" -> "ctypes" [];
	"test.support" -> "tkinter" [];
	"test.support" -> "zlib" [];
	"test.support" -> "gzip" [];
	"test.support" -> "bz2" [];
	"test.support" -> "lzma" [];
	"test.support" -> "_testinternalcapi" [];
	"test.support" -> "shutil" [];
	"test.support" -> "io" [];
	"test.support" -> "gc" [];
	"test.support" -> "struct" [];
	"test.support" -> "locale" [];
	"test.support" -> "subprocess" [];
	"test.support" -> "fnmatch" [];
	"test.support" -> "doctest" [];
	"test.support" -> "glob" [];
	"test.support" -> "_winapi" [];
	"test.support" -> "msvcrt" [];
	"test.support" -> "resource" [];
	"test.support" -> "tracemalloc" [];
	"test.support" -> "distutils" [];
	"test.support" -> "faulthandler" [];
	"test.support" -> "signal" [];
	"test.support" -> "decimal" [];
	"tracemalloc" -> "functools" [];
	"tracemalloc" -> "fnmatch" [];
	"tracemalloc" -> "linecache" [];
	"tracemalloc" -> "os.path" [];
	"tracemalloc" -> "pickle" [];
	"tracemalloc" -> "_tracemalloc" [];
	"doctest" -> "__future__" [];
	"doctest" -> "difflib" [];
	"doctest" -> "inspect" [];
	"doctest" -> "linecache" [];
	"doctest" -> "os" [];
	"doctest" -> "pdb" [];
	"doctest" -> "re" [];
	"doctest" -> "sys" [];
	"doctest" -> "traceback" [];
	"doctest" -> "unittest" [];
	"doctest" -> "io" [];
	"doctest" -> "collections" [];
	"doctest" -> "builtins" [];
	"doctest" -> "argparse" [];
	"pdb" -> "os" [];
	"pdb" -> "io" [];
	"pdb" -> "re" [];
	"pdb" -> "sys" [];
	"pdb" -> "cmd" [];
	"pdb" -> "bdb" [];
	"pdb" -> "dis" [];
	"pdb" -> "code" [];
	"pdb" -> "glob" [];
	"pdb" -> "pprint" [];
	"pdb" -> "signal" [];
	"pdb" -> "inspect" [];
	"pdb" -> "tokenize" [];
	"pdb" -> "functools" [];
	"pdb" -> "traceback" [];
	"pdb" -> "linecache" [];
	"pdb" -> "typing" [];
	"pdb" -> "runpy" [];
	"pdb" -> "readline" [];
	"pdb" -> "shlex" [];
	"pdb" -> "pydoc" [];
	"pdb" -> "getopt" [];
	"pdb" -> "pdb" [];
	"code" -> "sys" [];
	"code" -> "traceback" [];
	"code" -> "codeop" [];
	"code" -> "readline" [];
	"code" -> "argparse" [];
	"codeop" -> "__future__" [];
	"codeop" -> "warnings" [];
	"bdb" -> "fnmatch" [];
	"bdb" -> "sys" [];
	"bdb" -> "os" [];
	"bdb" -> "inspect" [];
	"bdb" -> "linecache" [];
	"bdb" -> "reprlib" [];
	"cmd" -> "string" [];
	"cmd" -> "sys" [];
	"cmd" -> "readline" [];
	"tkinter" -> "collections" [];
	"tkinter" -> "enum" [];
	"tkinter" -> "sys" [];
	"tkinter" -> "types" [];
	"tkinter" -> "_tkinter" [];
	"tkinter" -> "re" [];
	"tkinter" -> "os" [];
	"tkinter" -> "traceback" [];
	"ctypes.util" -> "os" [];
	"ctypes.util" -> "shutil" [];
	"ctypes.util" -> "subprocess" [];
	"ctypes.util" -> "sys" [];
	"ctypes.util" -> "re" [];
	"ctypes.util" -> "tempfile" [];
	"ctypes.util" -> "struct" [];
	"ctypes._aix" -> "re" [];
	"ctypes._aix" -> "os" [];
	"ctypes._aix" -> "sys" [];
	"ctypes._aix" -> "subprocess" [];
	"ctypes.macholib.dyld" -> "os" [];
	"ctypes.macholib.dyld" -> "itertools" [];
	"ctypes.macholib.dyld" -> "_ctypes" [];
	"ctypes.macholib.dylib" -> "re" [];
	"ctypes.macholib.framework" -> "re" [];
	"test.support.testresult" -> "functools" [];
	"test.support.testresult" -> "io" [];
	"test.support.testresult" -> "sys" [];
	"test.support.testresult" -> "time" [];
	"test.support.testresult" -> "traceback" [];
	"test.support.testresult" -> "unittest" [];
	"test.support.testresult" -> "datetime" [];
	"future.moves.test" -> "__future__" [];
	"future.backports.urllib.robotparser" -> "__future__" [];
	"future.backports.urllib.robotparser" -> "time" [];
	"future.backports" -> "__future__" [];
	"future.backports" -> "sys" [];
	"future.backports.misc" -> "__future__" [];
	"future.backports.misc" -> "subprocess" [];
	"future.backports.misc" -> "math" [];
	"future.backports.misc" -> "operator" [];
	"future.backports.misc" -> "sys" [];
	"future.backports.misc" -> "heapq" [];
	"future.backports.misc" -> "_weakref" [];
	"future.backports.misc" -> "itertools" [];
	"future.backports.misc" -> "socket" [];
	"future.backports.misc" -> "collections" [];
	"future.backports.misc" -> "_thread" [];
	"future.backports.misc" -> "_dummy_thread" [];
	"future.backports.misc" -> "thread" [];
	"future.backports.misc" -> "dummy_thread" [];
	"future.backports.misc" -> "functools" [];
	"future.backports.misc" -> "reprlib" [];
	"future.backports.email" -> "__future__" [];
	"future.backports.email.parser" -> "__future__" [];
	"future.backports.email.parser" -> "warnings" [];
	"future.backports.email.parser" -> "io" [];
	"future.backports.email._policybase" -> "__future__" [];
	"future.backports.email._policybase" -> "abc" [];
	"future.backports.email.charset" -> "__future__" [];
	"future.backports.email.charset" -> "functools" [];
	"future.backports.email.encoders" -> "__future__" [];
	"future.backports.email.encoders" -> "base64" [];
	"future.backports.email.encoders" -> "quopri" [];
	"future.backports.email.feedparser" -> "__future__" [];
	"future.backports.email.feedparser" -> "re" [];
	"future.backports.email.message" -> "__future__" [];
	"future.backports.email.message" -> "re" [];
	"future.backports.email.message" -> "uu" [];
	"future.backports.email.message" -> "base64" [];
	"future.backports.email.message" -> "binascii" [];
	"future.backports.email.message" -> "io" [];
	"future.backports.email.iterators" -> "__future__" [];
	"future.backports.email.iterators" -> "sys" [];
	"future.backports.email.iterators" -> "io" [];
	"future.backports.email.generator" -> "__future__" [];
	"future.backports.email.generator" -> "re" [];
	"future.backports.email.generator" -> "sys" [];
	"future.backports.email.generator" -> "time" [];
	"future.backports.email.generator" -> "random" [];
	"future.backports.email.generator" -> "warnings" [];
	"future.backports.email.generator" -> "io" [];
	"future.backports.email._encoded_words" -> "__future__" [];
	"future.backports.email._encoded_words" -> "re" [];
	"future.backports.email._encoded_words" -> "base64" [];
	"future.backports.email._encoded_words" -> "binascii" [];
	"future.backports.email._encoded_words" -> "functools" [];
	"future.backports.email._encoded_words" -> "string" [];
	"uu" -> "binascii" [];
	"uu" -> "os" [];
	"uu" -> "sys" [];
	"uu" -> "warnings" [];
	"uu" -> "optparse" [];
	"future.backports.email.header" -> "__future__" [];
	"future.backports.email.header" -> "re" [];
	"future.backports.email.header" -> "binascii" [];
	"future.backports.email.header" -> "sys" [];
	"future.backports.email.quoprimime" -> "__future__" [];
	"future.backports.email.quoprimime" -> "re" [];
	"future.backports.email.quoprimime" -> "io" [];
	"future.backports.email.quoprimime" -> "string" [];
	"future.backports.email.base64mime" -> "__future__" [];
	"future.backports.email.base64mime" -> "base64" [];
	"future.backports.email.base64mime" -> "binascii" [];
	"future.backports.email.utils" -> "__future__" [];
	"future.backports.email.utils" -> "future" [];
	"future.backports.email.utils" -> "os" [];
	"future.backports.email.utils" -> "re" [];
	"future.backports.email.utils" -> "time" [];
	"future.backports.email.utils" -> "base64" [];
	"future.backports.email.utils" -> "random" [];
	"future.backports.email.utils" -> "socket" [];
	"future.backports.email.utils" -> "warnings" [];
	"future.backports.email.utils" -> "io" [];
	"future.backports.email.utils" -> "quopri" [];
	"future.backports.email._parseaddr" -> "__future__" [];
	"future.backports.email._parseaddr" -> "time" [];
	"future.backports.email._parseaddr" -> "calendar" [];
	"future.backports.email.errors" -> "__future__" [];
	"future.utils.surrogateescape" -> "codecs" [];
	"future.utils.surrogateescape" -> "sys" [];
	"future.utils.surrogateescape" -> "future" [];
	"future.backports.datetime" -> "__future__" [];
	"future.backports.datetime" -> "time" [];
	"future.backports.datetime" -> "math" [];
	"future.backports.datetime" -> "_strptime" [];
	"future.backports.datetime" -> "_datetime" [];
	"_strptime" -> "time" [];
	"_strptime" -> "locale" [];
	"_strptime" -> "calendar" [];
	"_strptime" -> "re" [];
	"_strptime" -> "datetime" [];
	"_strptime" -> "_thread" [];
	"future.builtins" -> "builtins" [];
	"future.types.newstr" -> "numbers" [];
	"future.types.newstr" -> "collections" [];
	"future.types.newrange" -> "__future__" [];
	"future.types.newrange" -> "collections" [];
	"future.types.newrange" -> "itertools" [];
	"future.types.newlist" -> "sys" [];
	"future.types.newlist" -> "copy" [];
	"future.types.newint" -> "__future__" [];
	"future.types.newint" -> "struct" [];
	"future.types.newint" -> "collections" [];
	"future.types.newdict" -> "sys" [];
	"future.types.newbytes" -> "numbers" [];
	"future.types.newbytes" -> "string" [];
	"future.types.newbytes" -> "copy" [];
	"future.types.newbytes" -> "collections" [];
	"future.types" -> "__future__" [];
	"future.types" -> "functools" [];
	"future.types" -> "numbers" [];
	"future.types" -> "builtins" [];
	"future.builtins.misc" -> "future" [];
	"future.builtins.misc" -> "io" [];
	"future.builtins.misc" -> "future_builtins" [];
	"future.builtins.misc" -> "__builtin__" [];
	"future.builtins.misc" -> "builtins" [];
	"future.builtins.new_min_max" -> "itertools" [];
	"future.builtins.new_min_max" -> "future" [];
	"future.builtins.new_min_max" -> "__builtin__" [];
	"future.builtins.new_min_max" -> "builtins" [];
	"future.builtins.newsuper" -> "__future__" [];
	"future.builtins.newsuper" -> "sys" [];
	"future.builtins.newsuper" -> "types" [];
	"future.builtins.newround" -> "__future__" [];
	"future.builtins.newround" -> "decimal" [];
	"future.builtins.newround" -> "math" [];
	"future.builtins.iterators" -> "__future__" [];
	"future.builtins.iterators" -> "itertools" [];
	"future.builtins.iterators" -> "future" [];
	"future.builtins.iterators" -> "builtins" [];
	"future.backports.urllib.error" -> "__future__" [];
	"future.backports.urllib.error" -> "future" [];
	"future.backports.urllib.parse" -> "__future__" [];
	"future.backports.urllib.parse" -> "re" [];
	"future.backports.urllib.parse" -> "sys" [];
	"future.backports.urllib.parse" -> "collections" [];
	"future.backports.urllib.response" -> "__future__" [];
	"future.backports.urllib.request" -> "__future__" [];
	"future.backports.urllib.request" -> "base64" [];
	"future.backports.urllib.request" -> "bisect" [];
	"future.backports.urllib.request" -> "hashlib" [];
	"future.backports.urllib.request" -> "array" [];
	"future.backports.urllib.request" -> "io" [];
	"future.backports.urllib.request" -> "os" [];
	"future.backports.urllib.request" -> "posixpath" [];
	"future.backports.urllib.request" -> "re" [];
	"future.backports.urllib.request" -> "socket" [];
	"future.backports.urllib.request" -> "sys" [];
	"future.backports.urllib.request" -> "time" [];
	"future.backports.urllib.request" -> "tempfile" [];
	"future.backports.urllib.request" -> "contextlib" [];
	"future.backports.urllib.request" -> "warnings" [];
	"future.backports.urllib.request" -> "collections" [];
	"future.backports.urllib.request" -> "ssl" [];
	"future.backports.urllib.request" -> "mimetypes" [];
	"future.backports.urllib.request" -> "ftplib" [];
	"future.backports.urllib.request" -> "nturl2path" [];
	"future.backports.urllib.request" -> "getpass" [];
	"future.backports.urllib.request" -> "fnmatch" [];
	"future.backports.urllib.request" -> "_scproxy" [];
	"future.backports.urllib.request" -> "winreg" [];
	"future.backports.http.cookiejar" -> "__future__" [];
	"future.backports.http.cookiejar" -> "copy" [];
	"future.backports.http.cookiejar" -> "datetime" [];
	"future.backports.http.cookiejar" -> "re" [];
	"future.backports.http.cookiejar" -> "time" [];
	"future.backports.http.cookiejar" -> "threading" [];
	"future.backports.http.cookiejar" -> "dummy_threading" [];
	"future.backports.http.cookiejar" -> "calendar" [];
	"future.backports.http.cookiejar" -> "logging" [];
	"future.backports.http.cookiejar" -> "io" [];
	"future.backports.http.cookiejar" -> "warnings" [];
	"future.backports.http.cookiejar" -> "traceback" [];
	"future.backports.http.client" -> "__future__" [];
	"future.backports.http.client" -> "io" [];
	"future.backports.http.client" -> "os" [];
	"future.backports.http.client" -> "socket" [];
	"future.backports.http.client" -> "warnings" [];
	"future.backports.http.client" -> "array" [];
	"future.backports.http.client" -> "collections" [];
	"future.backports.http.client" -> "ssl" [];
	"future.utils" -> "types" [];
	"future.utils" -> "sys" [];
	"future.utils" -> "numbers" [];
	"future.utils" -> "functools" [];
	"future.utils" -> "copy" [];
	"future.utils" -> "inspect" [];
	"future.utils" -> "__builtin__" [];
	"future.utils" -> "re" [];
	"future.utils" -> "builtins" [];
	"ffmpeg._run" -> "__future__" [];
	"ffmpeg._run" -> "builtins" [];
	"ffmpeg._run" -> "functools" [];
	"ffmpeg._run" -> "collections" [];
	"ffmpeg._run" -> "copy" [];
	"ffmpeg._run" -> "operator" [];
	"ffmpeg._run" -> "subprocess" [];
	"ffmpeg._probe" -> "json" [];
	"ffmpeg._probe" -> "subprocess" [];
	"ffmpeg._filters" -> "__future__" [];
	"ffmpeg._ffmpeg" -> "__future__" [];
	"ffmpeg.nodes" -> "__future__" [];
	"ffmpeg.nodes" -> "builtins" [];
	"ffmpeg.nodes" -> "os" [];
	"kivy.uix.gesturesurface" -> "random" [];
	"kivy.uix.gesturesurface" -> "colorsys" [];
	"kivy.core.camera.camera_opencv" -> "__future__" [];
	"kivy.core.camera.camera_opencv" -> "opencv" [];
	"kivy.core.camera.camera_opencv" -> "'opencv.highgui'" [];
	"kivy.core.camera.camera_opencv" -> "cv2" [];
	"kivy.uix.checkbox" -> "random" [];
	"kivy.uix.codeinput" -> "pygments" [];
	"kivy.extras.highlight" -> "pygments" [];
	"kivy.extras.highlight" -> "sys" [];
	"kivy.core.spelling.spelling_enchant" -> "enchant" [];
	"kivy.core.audio.audio_android" -> "jnius" [];
	"kivy.core.audio.audio_android" -> "android" [];
	"kivy.core.text.markup" -> "re" [];
	"kivy.core.text.markup" -> "copy" [];
	"kivy.core.text.markup" -> "functools" [];
	"kivy.parser" -> "re" [];
	"kivy.core.audio" -> "sys" [];
	"kivy.uix.recyclegridlayout" -> "itertools" [];
	"kivy.uix.recyclegridlayout" -> "collections" [];
	"kivy.core.clipboard.clipboard_xclip" -> "subprocess" [];
	"kivy.core.camera.camera_android" -> "jnius" [];
	"kivy.core.camera.camera_android" -> "threading" [];
	"kivy.core.camera.camera_android" -> "numpy" [];
	"kivy.core.camera.camera_android" -> "cv2" [];
	"kivy.uix.videoplayer" -> "json" [];
	"kivy.uix.videoplayer" -> "os.path" [];
	"kivy.uix.videoplayer" -> "sys" [];
	"kivy.core.text.text_pil" -> "PIL" [];
	"kivy.core.audio.audio_pygame" -> "'android.mixer'" [];
	"kivy.core.audio.audio_pygame" -> "android_mixer" [];
	"kivy.core.audio.audio_pygame" -> "pygame" [];
	"kivy.uix.behaviors.button" -> "time" [];
	"kivy.uix.behaviors.compoundselection" -> "time" [];
	"kivy.uix.behaviors.compoundselection" -> "os" [];
	"kivy.core.spelling.spelling_osxappkit" -> "AppKit" [];
	"kivy.core.video.video_ffpyplayer" -> "ffpyplayer" [];
	"kivy.core.video.video_ffpyplayer" -> "'ffpyplayer.player'" [];
	"kivy.core.video.video_ffpyplayer" -> "'ffpyplayer.tools'" [];
	"kivy.core.video.video_ffpyplayer" -> "threading" [];
	"kivy.core.video.video_ffpyplayer" -> "queue" [];
	"kivy.core.video.video_ffpyplayer" -> "time" [];
	"kivy.core.clipboard.clipboard_android" -> "kivy" [];
	"kivy.core.clipboard.clipboard_android" -> "jnius" [];
	"kivy.core.clipboard.clipboard_android" -> "'android.runnable'" [];
	"kivy.core.clipboard.clipboard_android" -> "android" [];
	"kivy.core.clipboard.clipboard_android" -> "time" [];
	"kivy.core.audio.audio_gstplayer" -> "os.path" [];
	"kivy.core.audio.audio_gstplayer" -> "urllib" [];
	"kivy.effects.scroll" -> "time" [];
	"kivy.core.spelling" -> "sys" [];
	"kivy.uix.behaviors.drag" -> "functools" [];
	"kivy.core.window.window_egl_rpi" -> "os" [];
	"kivy.core.window.window_pygame" -> "pygame" [];
	"kivy.core.window.window_pygame" -> "os" [];
	"kivy.core.window.window_pygame" -> "os.path" [];
	"kivy.core.window.window_pygame" -> "kivy" [];
	"kivy.core.window.window_pygame" -> "android" [];
	"kivy.core.window.window_pygame" -> "win32api" [];
	"kivy.core.window.window_pygame" -> "win32gui" [];
	"kivy.core.window.window_pygame" -> "win32con" [];
	"kivy.core.clipboard.clipboard_pygame" -> "pygame" [];
	"kivy.core.clipboard.clipboard_pygame" -> "'pygame.scrap'" [];
	"kivy.uix.actionbar" -> "functools" [];
	"kivy.gesture" -> "pickle" [];
	"kivy.gesture" -> "base64" [];
	"kivy.gesture" -> "zlib" [];
	"kivy.gesture" -> "math" [];
	"kivy.gesture" -> "io" [];
	"kivy.core.camera.camera_picamera" -> "math" [];
	"kivy.core.camera.camera_picamera" -> "picamera" [];
	"kivy.core.camera.camera_picamera" -> "numpy" [];
	"kivy.core.clipboard.clipboard_dbusklipper" -> "dbus" [];
	"kivy.core.window.window_sdl2" -> "os.path" [];
	"kivy.core.window.window_sdl2" -> "sys" [];
	"kivy.core.window.window_sdl2" -> "typing" [];
	"kivy.core.window.window_sdl2" -> "kivy" [];
	"kivy.core.window.window_sdl2" -> "collections" [];
	"kivy.core.window.window_sdl2" -> "android" [];
	"kivy.core.window.window_sdl2" -> "win32con" [];
	"kivy.core.window.window_sdl2" -> "ctypes" [];
	"kivy.uix.recycleview.__init__" -> "copy" [];
	"kivy.uix.colorpicker" -> "math" [];
	"kivy.uix.colorpicker" -> "colorsys" [];
	"kivy.uix.behaviors.togglebutton" -> "weakref" [];
	"kivy.lib.ddsfile" -> "struct" [];
	"kivy.lib.ddsfile" -> "sys" [];
	"kivy.uix.carousel" -> "functools" [];
	"kivy.core.image.img_ffpyplayer" -> "ffpyplayer" [];
	"kivy.core.image.img_ffpyplayer" -> "'ffpyplayer.pic'" [];
	"kivy.core.image.img_ffpyplayer" -> "'ffpyplayer.tools'" [];
	"kivy.core.clipboard" -> "kivy" [];
	"kivy.multistroke" -> "pickle" [];
	"kivy.multistroke" -> "base64" [];
	"kivy.multistroke" -> "zlib" [];
	"kivy.multistroke" -> "re" [];
	"kivy.multistroke" -> "collections" [];
	"kivy.multistroke" -> "math" [];
	"kivy.multistroke" -> "io" [];
	"kivy.uix.widget" -> "functools" [];
	"kivy.uix.widget" -> "itertools" [];
	"kivy.cache" -> "os" [];
	"kivy.cache" -> "heapq" [];
	"kivy.metrics" -> "os" [];
	"kivy.metrics" -> "jnius" [];
	"kivy.metrics" -> "android" [];
	"kivy.metrics" -> "ios" [];
	"kivy.core.gl" -> "sys" [];
	"kivy.core.gl" -> "os" [];
	"kivy.core.gl" -> "ctypes" [];
	"kivy.animation" -> "math" [];
	"kivy.animation" -> "collections" [];
	"kivy.utils" -> "os" [];
	"kivy.utils" -> "sys" [];
	"kivy.utils" -> "re" [];
	"kivy.utils" -> "random" [];
	"kivy.utils" -> "inspect" [];
	"kivy.utils" -> "functools" [];
	"kivy.modules" -> "importlib" [];
	"kivy.modules" -> "os" [];
	"kivy.modules" -> "sys" [];
	"kivy.modules" -> "traceback" [];
	"kivy.base" -> "sys" [];
	"kivy.base" -> "os" [];
	"kivy.base" -> "android" [];
	"kivy.logger" -> "logging" [];
	"kivy.logger" -> "os" [];
	"kivy.logger" -> "sys" [];
	"kivy.logger" -> "functools" [];
	"kivy.logger" -> "pathlib" [];
	"kivy.logger" -> "time" [];
	"kivy.config" -> "ConfigParser" [];
	"kivy.config" -> "configparser" [];
	"kivy.config" -> "collections" [];
	"kivy.config" -> "os" [];
	"kivy.config" -> "os.path" [];
	"kivy.config" -> "weakref" [];
	"kivy.clock" -> "sys" [];
	"kivy.clock" -> "os" [];
	"kivy.clock" -> "functools" [];
	"kivy.clock" -> "time" [];
	"kivy.clock" -> "threading" [];
	"kivy.clock" -> "ctypes" [];
	"kivy.clock" -> "trio" [];
	"kivy.clock" -> "asyncio" [];
	"kivy.core" -> "os" [];
	"kivy.core" -> "sysconfig" [];
	"kivy.core" -> "sys" [];
	"kivy.core" -> "traceback" [];
	"kivy.core" -> "tempfile" [];
	"kivy.core" -> "subprocess" [];
	"kivy.core" -> "importlib" [];
	"kivy.uix.textinput" -> "re" [];
	"kivy.uix.textinput" -> "sys" [];
	"kivy.uix.textinput" -> "math" [];
	"kivy.uix.textinput" -> "os" [];
	"kivy.uix.textinput" -> "weakref" [];
	"kivy.uix.textinput" -> "itertools" [];
	"kivy.uix.textinput" -> "textwrap" [];
	"kivy.app" -> "os" [];
	"kivy.app" -> "inspect" [];
	"kivy.app" -> "os.path" [];
	"kivy.app" -> "jnius" [];
	"kivy.app" -> "android" [];
	"kivy.app" -> "pygame" [];
	"simpleaudio.shiny" -> "time" [];
	"simpleaudio.shiny" -> "wave" [];
	"wave" -> "collections" [];
	"wave" -> "builtins" [];
	"wave" -> "struct" [];
	"wave" -> "sys" [];
	"pydub.audio_segment" -> "__future__" [];
	"pydub.audio_segment" -> "array" [];
	"pydub.audio_segment" -> "os" [];
	"pydub.audio_segment" -> "subprocess" [];
	"pydub.audio_segment" -> "tempfile" [];
	"pydub.audio_segment" -> "wave" [];
	"pydub.audio_segment" -> "sys" [];
	"pydub.audio_segment" -> "struct" [];
	"pydub.audio_segment" -> "base64" [];
	"pydub.audio_segment" -> "collections" [];
	"pydub.audio_segment" -> "StringIO" [];
	"pydub.audio_segment" -> "io" [];
	"pydub.audio_segment" -> "itertools" [];
	"pydub.utils" -> "__future__" [];
	"pydub.utils" -> "json" [];
	"pydub.utils" -> "os" [];
	"pydub.utils" -> "re" [];
	"pydub.utils" -> "sys" [];
	"pydub.utils" -> "subprocess" [];
	"pydub.utils" -> "math" [];
	"pydub.utils" -> "tempfile" [];
	"pydub.utils" -> "warnings" [];
	"pydub.utils" -> "functools" [];
	"pydub.utils" -> "audioop" [];
	"pydub.utils" -> "pyaudioop" [];
	"pydub.logging_utils" -> "logging" [];
	"pydub.effects" -> "sys" [];
	"pydub.effects" -> "math" [];
	"pydub.effects" -> "array" [];
	"pydub.silence" -> "itertools" [];
	"gtts.tts" -> "base64" [];
	"gtts.tts" -> "json" [];
	"gtts.tts" -> "logging" [];
	"gtts.tts" -> "re" [];
	"gtts.tts" -> "urllib" [];
	"gtts.tts" -> "requests" [];
	"gtts.utils" -> "string" [];
	"gtts.utils" -> "re" [];
	"gtts.tokenizer.pre_processors" -> "re" [];
	"gtts.tokenizer.core" -> "re" [];
	"gtts.lang" -> "warnings" [];
	"gtts.lang" -> "logging" [];
	"requests" -> "warnings" [];
	"requests" -> "charset_normalizer" [];
	"requests" -> "chardet" [];
	"requests" -> "ssl" [];
	"requests" -> "cryptography" [];
	"requests" -> "logging" [];
	"requests.structures" -> "collections" [];
	"requests.compat" -> "importlib" [];
	"requests.compat" -> "sys" [];
	"requests.compat" -> "simplejson" [];
	"requests.compat" -> "json" [];
	"requests.compat" -> "collections" [];
	"requests.compat" -> "http" [];
	"requests.compat" -> "io" [];
	"http.cookies" -> "re" [];
	"http.cookies" -> "string" [];
	"http.cookies" -> "types" [];
	"http.cookies" -> "time" [];
	"requests.models" -> "datetime" [];
	"requests.models" -> "io" [];
	"requests.models" -> "idna" [];
	"idna.intranges" -> "bisect" [];
	"idna.intranges" -> "typing" [];
	"idna.core" -> "bisect" [];
	"idna.core" -> "re" [];
	"idna.core" -> "unicodedata" [];
	"idna.core" -> "typing" [];
	"idna.uts46data" -> "typing" [];
	"requests.cookies" -> "calendar" [];
	"requests.cookies" -> "copy" [];
	"requests.cookies" -> "time" [];
	"requests.cookies" -> "threading" [];
	"requests.cookies" -> "dummy_threading" [];
	"requests.auth" -> "hashlib" [];
	"requests.auth" -> "os" [];
	"requests.auth" -> "re" [];
	"requests.auth" -> "threading" [];
	"requests.auth" -> "time" [];
	"requests.auth" -> "warnings" [];
	"requests.auth" -> "base64" [];
	"requests._internal_utils" -> "re" [];
	"urllib3.util" -> "__future__" [];
	"urllib3.util.wait" -> "__future__" [];
	"urllib3.util.wait" -> "select" [];
	"urllib3.util.wait" -> "socket" [];
	"urllib3.util.wait" -> "functools" [];
	"urllib3.util.url" -> "__future__" [];
	"urllib3.util.url" -> "re" [];
	"urllib3.util.url" -> "typing" [];
	"urllib3.util.url" -> "idna" [];
	"urllib3.util.util" -> "__future__" [];
	"urllib3.util.util" -> "typing" [];
	"urllib3.util.util" -> "types" [];
	"urllib3.util.timeout" -> "__future__" [];
	"urllib3.util.timeout" -> "time" [];
	"urllib3.util.timeout" -> "typing" [];
	"urllib3.util.timeout" -> "enum" [];
	"urllib3.util.timeout" -> "socket" [];
	"urllib3.util.ssl_" -> "__future__" [];
	"urllib3.util.ssl_" -> "hashlib" [];
	"urllib3.util.ssl_" -> "hmac" [];
	"urllib3.util.ssl_" -> "os" [];
	"urllib3.util.ssl_" -> "socket" [];
	"urllib3.util.ssl_" -> "sys" [];
	"urllib3.util.ssl_" -> "typing" [];
	"urllib3.util.ssl_" -> "warnings" [];
	"urllib3.util.ssl_" -> "binascii" [];
	"urllib3.util.ssl_" -> "ssl" [];
	"urllib3.util.ssltransport" -> "__future__" [];
	"urllib3.util.ssltransport" -> "io" [];
	"urllib3.util.ssltransport" -> "socket" [];
	"urllib3.util.ssltransport" -> "ssl" [];
	"urllib3.util.ssltransport" -> "typing" [];
	"urllib3.util.ssltransport" -> "typing_extensions" [];
	"urllib3.util.retry" -> "__future__" [];
	"urllib3.util.retry" -> "email" [];
	"urllib3.util.retry" -> "logging" [];
	"urllib3.util.retry" -> "random" [];
	"urllib3.util.retry" -> "re" [];
	"urllib3.util.retry" -> "time" [];
	"urllib3.util.retry" -> "typing" [];
	"urllib3.util.retry" -> "itertools" [];
	"urllib3.util.retry" -> "types" [];
	"urllib3.util.retry" -> "typing_extensions" [];
	"urllib3.response" -> "__future__" [];
	"urllib3.response" -> "collections" [];
	"urllib3.response" -> "io" [];
	"urllib3.response" -> "json" [];
	"urllib3.response" -> "logging" [];
	"urllib3.response" -> "re" [];
	"urllib3.response" -> "sys" [];
	"urllib3.response" -> "typing" [];
	"urllib3.response" -> "warnings" [];
	"urllib3.response" -> "zlib" [];
	"urllib3.response" -> "contextlib" [];
	"urllib3.response" -> "socket" [];
	"urllib3.response" -> "brotlicffi" [];
	"urllib3.response" -> "brotli" [];
	"urllib3.response" -> "zstandard" [];
	"urllib3.connection" -> "__future__" [];
	"urllib3.connection" -> "datetime" [];
	"urllib3.connection" -> "logging" [];
	"urllib3.connection" -> "os" [];
	"urllib3.connection" -> "re" [];
	"urllib3.connection" -> "socket" [];
	"urllib3.connection" -> "sys" [];
	"urllib3.connection" -> "threading" [];
	"urllib3.connection" -> "typing" [];
	"urllib3.connection" -> "warnings" [];
	"urllib3.connection" -> "ssl" [];
	"urllib3.util.ssl_match_hostname" -> "__future__" [];
	"urllib3.util.ssl_match_hostname" -> "ipaddress" [];
	"urllib3.util.ssl_match_hostname" -> "re" [];
	"urllib3.util.ssl_match_hostname" -> "typing" [];
	"urllib3._version" -> "typing" [];
	"urllib3.http2.probe" -> "__future__" [];
	"urllib3.http2.probe" -> "threading" [];
	"urllib3.http2" -> "__future__" [];
	"urllib3.http2" -> "typing" [];
	"urllib3.http2.connection" -> "__future__" [];
	"urllib3.http2.connection" -> "logging" [];
	"urllib3.http2.connection" -> "re" [];
	"urllib3.http2.connection" -> "threading" [];
	"urllib3.http2.connection" -> "types" [];
	"urllib3.http2.connection" -> "typing" [];
	"urllib3.http2.connection" -> "h2" [];
	"urllib3.http2.connection" -> "'h2.connection'" [];
	"urllib3.http2.connection" -> "'h2.events'" [];
	"urllib3._collections" -> "__future__" [];
	"urllib3._collections" -> "typing" [];
	"urllib3._collections" -> "collections" [];
	"urllib3._collections" -> "enum" [];
	"urllib3._collections" -> "threading" [];
	"urllib3._collections" -> "typing_extensions" [];
	"urllib3._base_connection" -> "__future__" [];
	"urllib3._base_connection" -> "typing" [];
	"urllib3._base_connection" -> "ssl" [];
	"urllib3.connectionpool" -> "__future__" [];
	"urllib3.connectionpool" -> "errno" [];
	"urllib3.connectionpool" -> "logging" [];
	"urllib3.connectionpool" -> "queue" [];
	"urllib3.connectionpool" -> "sys" [];
	"urllib3.connectionpool" -> "typing" [];
	"urllib3.connectionpool" -> "warnings" [];
	"urllib3.connectionpool" -> "weakref" [];
	"urllib3.connectionpool" -> "socket" [];
	"urllib3.connectionpool" -> "types" [];
	"urllib3.connectionpool" -> "ssl" [];
	"urllib3.connectionpool" -> "typing_extensions" [];
	"urllib3.util.proxy" -> "__future__" [];
	"urllib3.util.proxy" -> "typing" [];
	"urllib3._request_methods" -> "__future__" [];
	"urllib3._request_methods" -> "json" [];
	"urllib3._request_methods" -> "typing" [];
	"urllib3.util.response" -> "__future__" [];
	"urllib3.util.request" -> "__future__" [];
	"urllib3.util.request" -> "io" [];
	"urllib3.util.request" -> "typing" [];
	"urllib3.util.request" -> "base64" [];
	"urllib3.util.request" -> "enum" [];
	"urllib3.util.request" -> "brotlicffi" [];
	"urllib3.util.request" -> "brotli" [];
	"urllib3.util.request" -> "zstandard" [];
	"urllib3.util.connection" -> "__future__" [];
	"urllib3.util.connection" -> "socket" [];
	"urllib3.util.connection" -> "typing" [];
	"urllib3.filepost" -> "__future__" [];
	"urllib3.filepost" -> "binascii" [];
	"urllib3.filepost" -> "codecs" [];
	"urllib3.filepost" -> "os" [];
	"urllib3.filepost" -> "typing" [];
	"urllib3.filepost" -> "io" [];
	"urllib3.fields" -> "__future__" [];
	"urllib3.fields" -> "mimetypes" [];
	"urllib3.fields" -> "typing" [];
	"urllib3.fields" -> "warnings" [];
	"requests.sessions" -> "os" [];
	"requests.sessions" -> "sys" [];
	"requests.sessions" -> "time" [];
	"requests.sessions" -> "collections" [];
	"requests.sessions" -> "datetime" [];
	"requests.adapters" -> "os.path" [];
	"requests.adapters" -> "socket" [];
	"requests.adapters" -> "typing" [];
	"requests.adapters" -> "warnings" [];
	"requests.adapters" -> "ssl" [];
	"urllib3.contrib.socks" -> "__future__" [];
	"urllib3.contrib.socks" -> "socks" [];
	"urllib3.contrib.socks" -> "warnings" [];
	"urllib3.contrib.socks" -> "typing" [];
	"urllib3.contrib.socks" -> "socket" [];
	"urllib3.contrib.socks" -> "ssl" [];
	"urllib3.poolmanager" -> "__future__" [];
	"urllib3.poolmanager" -> "functools" [];
	"urllib3.poolmanager" -> "logging" [];
	"urllib3.poolmanager" -> "typing" [];
	"urllib3.poolmanager" -> "warnings" [];
	"urllib3.poolmanager" -> "types" [];
	"urllib3.poolmanager" -> "ssl" [];
	"urllib3.poolmanager" -> "typing_extensions" [];
	"requests.utils" -> "codecs" [];
	"requests.utils" -> "contextlib" [];
	"requests.utils" -> "io" [];
	"requests.utils" -> "os" [];
	"requests.utils" -> "re" [];
	"requests.utils" -> "socket" [];
	"requests.utils" -> "struct" [];
	"requests.utils" -> "sys" [];
	"requests.utils" -> "tempfile" [];
	"requests.utils" -> "warnings" [];
	"requests.utils" -> "zipfile" [];
	"requests.utils" -> "collections" [];
	"requests.utils" -> "winreg" [];
	"requests.utils" -> "netrc" [];
	"requests.certs" -> "certifi" [];
	"requests.packages" -> "sys" [];
	"urllib3.exceptions" -> "__future__" [];
	"urllib3.exceptions" -> "socket" [];
	"urllib3.exceptions" -> "typing" [];
	"urllib3.exceptions" -> "warnings" [];
	"urllib3.contrib.pyopenssl" -> "__future__" [];
	"urllib3.contrib.pyopenssl" -> "OpenSSL" [];
	"urllib3.contrib.pyopenssl" -> "cryptography" [];
	"urllib3.contrib.pyopenssl" -> "'cryptography.x509'" [];
	"urllib3.contrib.pyopenssl" -> "logging" [];
	"urllib3.contrib.pyopenssl" -> "ssl" [];
	"urllib3.contrib.pyopenssl" -> "typing" [];
	"urllib3.contrib.pyopenssl" -> "io" [];
	"urllib3.contrib.pyopenssl" -> "socket" [];
	"urllib3.contrib.pyopenssl" -> "'OpenSSL.crypto'" [];
	"urllib3.contrib.pyopenssl" -> "idna" [];
	"charset_normalizer" -> "logging" [];
	"charset_normalizer.utils" -> "importlib" [];
	"charset_normalizer.utils" -> "logging" [];
	"charset_normalizer.utils" -> "unicodedata" [];
	"charset_normalizer.utils" -> "codecs" [];
	"charset_normalizer.utils" -> "functools" [];
	"charset_normalizer.utils" -> "re" [];
	"charset_normalizer.utils" -> "typing" [];
	"charset_normalizer.utils" -> "_multibytecodec" [];
	"charset_normalizer.constant" -> "codecs" [];
	"charset_normalizer.constant" -> "re" [];
	"charset_normalizer.constant" -> "typing" [];
	"charset_normalizer.models" -> "hashlib" [];
	"charset_normalizer.models" -> "json" [];
	"charset_normalizer.models" -> "re" [];
	"charset_normalizer.models" -> "typing" [];
	"charset_normalizer.cd" -> "importlib" [];
	"charset_normalizer.cd" -> "codecs" [];
	"charset_normalizer.cd" -> "collections" [];
	"charset_normalizer.cd" -> "functools" [];
	"charset_normalizer.cd" -> "typing" [];
	"charset_normalizer.legacy" -> "__future__" [];
	"charset_normalizer.legacy" -> "typing" [];
	"charset_normalizer.legacy" -> "warnings" [];
	"charset_normalizer.legacy" -> "typing_extensions" [];
	"charset_normalizer.api" -> "logging" [];
	"charset_normalizer.api" -> "os" [];
	"charset_normalizer.api" -> "typing" [];
	"urllib3" -> "__future__" [];
	"urllib3" -> "logging" [];
	"urllib3" -> "sys" [];
	"urllib3" -> "typing" [];
	"urllib3" -> "warnings" [];
	"urllib3" -> "ssl" [];
	"urllib3.contrib.emscripten" -> "__future__" [];
	"urllib3.contrib.emscripten.connection" -> "__future__" [];
	"urllib3.contrib.emscripten.connection" -> "os" [];
	"urllib3.contrib.emscripten.connection" -> "typing" [];
	"urllib3.contrib.emscripten.response" -> "__future__" [];
	"urllib3.contrib.emscripten.response" -> "json" [];
	"urllib3.contrib.emscripten.response" -> "logging" [];
	"urllib3.contrib.emscripten.response" -> "typing" [];
	"urllib3.contrib.emscripten.response" -> "contextlib" [];
	"urllib3.contrib.emscripten.response" -> "dataclasses" [];
	"urllib3.contrib.emscripten.response" -> "io" [];
	"urllib3.contrib.emscripten.request" -> "__future__" [];
	"urllib3.contrib.emscripten.request" -> "dataclasses" [];
	"urllib3.contrib.emscripten.fetch" -> "__future__" [];
	"urllib3.contrib.emscripten.fetch" -> "io" [];
	"urllib3.contrib.emscripten.fetch" -> "json" [];
	"urllib3.contrib.emscripten.fetch" -> "typing" [];
	"urllib3.contrib.emscripten.fetch" -> "js" [];
	"urllib3.contrib.emscripten.fetch" -> "pyodide" [];
	"urllib3.contrib.emscripten.fetch" -> "typing_extensions" [];
	"ollama._types" -> "json" [];
	"ollama._types" -> "typing" [];
	"ollama._types" -> "sys" [];
	"ollama._types" -> "typing_extensions" [];
	"ollama._client" -> "ipaddress" [];
	"ollama._client" -> "os" [];
	"ollama._client" -> "io" [];
	"ollama._client" -> "json" [];
	"ollama._client" -> "binascii" [];
	"ollama._client" -> "platform" [];
	"ollama._client" -> "pathlib" [];
	"ollama._client" -> "copy" [];
	"ollama._client" -> "hashlib" [];
	"ollama._client" -> "base64" [];
	"ollama._client" -> "typing" [];
	"ollama._client" -> "sys" [];
	"ollama._client" -> "importlib" [];
	"httpx" -> "sys" [];
	"httpx._main" -> "__future__" [];
	"httpx._main" -> "functools" [];
	"httpx._main" -> "json" [];
	"httpx._main" -> "sys" [];
	"httpx._main" -> "typing" [];
	"httpx._main" -> "click" [];
	"httpx._main" -> "httpcore" [];
	"httpx._main" -> "rich" [];
	"httpx._main" -> "'rich.markup'" [];
	"httpx._main" -> "'rich.progress'" [];
	"httpx._main" -> "'rich.syntax'" [];
	"httpx._main" -> "'rich.table'" [];
	"httpcore._backends.trio" -> "ssl" [];
	"httpcore._backends.trio" -> "typing" [];
	"httpcore._backends.trio" -> "trio" [];
	"httpcore._backends.anyio" -> "ssl" [];
	"httpcore._backends.anyio" -> "typing" [];
	"httpcore._backends.anyio" -> "anyio" [];
	"httpcore._utils" -> "select" [];
	"httpcore._utils" -> "socket" [];
	"httpcore._utils" -> "sys" [];
	"httpcore._utils" -> "typing" [];
	"anyio" -> "__future__" [];
	"anyio._backends._trio" -> "__future__" [];
	"anyio._backends._trio" -> "array" [];
	"anyio._backends._trio" -> "math" [];
	"anyio._backends._trio" -> "os" [];
	"anyio._backends._trio" -> "socket" [];
	"anyio._backends._trio" -> "sys" [];
	"anyio._backends._trio" -> "types" [];
	"anyio._backends._trio" -> "weakref" [];
	"anyio._backends._trio" -> "contextlib" [];
	"anyio._backends._trio" -> "dataclasses" [];
	"anyio._backends._trio" -> "functools" [];
	"anyio._backends._trio" -> "io" [];
	"anyio._backends._trio" -> "signal" [];
	"anyio._backends._trio" -> "typing" [];
	"anyio._backends._trio" -> "'trio.from_thread'" [];
	"anyio._backends._trio" -> "'trio.lowlevel'" [];
	"anyio._backends._trio" -> "outcome" [];
	"anyio._backends._trio" -> "'trio.socket'" [];
	"anyio._backends._trio" -> "'trio.to_thread'" [];
	"anyio._backends._trio" -> "anyio" [];
	"anyio._backends._trio" -> "typing_extensions" [];
	"anyio._backends._trio" -> "exceptiongroup" [];
	"anyio._backends._trio" -> "queue" [];
	"anyio._backends._trio" -> "'trio.testing'" [];
	"anyio.streams.memory" -> "__future__" [];
	"anyio.streams.memory" -> "warnings" [];
	"anyio.streams.memory" -> "collections" [];
	"anyio.streams.memory" -> "dataclasses" [];
	"anyio.streams.memory" -> "types" [];
	"anyio.streams.memory" -> "typing" [];
	"anyio.streams.memory" -> "anyio" [];
	"anyio.lowlevel" -> "__future__" [];
	"anyio.lowlevel" -> "enum" [];
	"anyio.lowlevel" -> "dataclasses" [];
	"anyio.lowlevel" -> "typing" [];
	"anyio.lowlevel" -> "weakref" [];
	"anyio.abc._eventloop" -> "__future__" [];
	"anyio.abc._eventloop" -> "math" [];
	"anyio.abc._eventloop" -> "sys" [];
	"anyio.abc._eventloop" -> "abc" [];
	"anyio.abc._eventloop" -> "contextlib" [];
	"anyio.abc._eventloop" -> "os" [];
	"anyio.abc._eventloop" -> "signal" [];
	"anyio.abc._eventloop" -> "socket" [];
	"anyio.abc._eventloop" -> "typing" [];
	"anyio.abc._eventloop" -> "typing_extensions" [];
	"anyio.abc._testing" -> "__future__" [];
	"anyio.abc._testing" -> "types" [];
	"anyio.abc._testing" -> "abc" [];
	"anyio.abc._testing" -> "typing" [];
	"anyio.abc._tasks" -> "__future__" [];
	"anyio.abc._tasks" -> "sys" [];
	"anyio.abc._tasks" -> "abc" [];
	"anyio.abc._tasks" -> "types" [];
	"anyio.abc._tasks" -> "typing" [];
	"anyio.abc._tasks" -> "typing_extensions" [];
	"anyio.abc._subprocesses" -> "__future__" [];
	"anyio.abc._subprocesses" -> "abc" [];
	"anyio.abc._subprocesses" -> "signal" [];
	"anyio.abc._streams" -> "__future__" [];
	"anyio.abc._streams" -> "abc" [];
	"anyio.abc._streams" -> "typing" [];
	"anyio.abc._resources" -> "__future__" [];
	"anyio.abc._resources" -> "abc" [];
	"anyio.abc._resources" -> "types" [];
	"anyio.abc._resources" -> "typing" [];
	"anyio.abc._sockets" -> "__future__" [];
	"anyio.abc._sockets" -> "socket" [];
	"anyio.abc._sockets" -> "abc" [];
	"anyio.abc._sockets" -> "contextlib" [];
	"anyio.abc._sockets" -> "io" [];
	"anyio.abc._sockets" -> "ipaddress" [];
	"anyio.abc._sockets" -> "types" [];
	"anyio.abc._sockets" -> "typing" [];
	"anyio.abc._sockets" -> "anyio" [];
	"anyio.from_thread" -> "__future__" [];
	"anyio.from_thread" -> "sys" [];
	"anyio.from_thread" -> "contextlib" [];
	"anyio.from_thread" -> "dataclasses" [];
	"anyio.from_thread" -> "inspect" [];
	"anyio.from_thread" -> "threading" [];
	"anyio.from_thread" -> "types" [];
	"anyio.from_thread" -> "typing" [];
	"anyio.from_thread" -> "typing_extensions" [];
	"anyio.abc" -> "__future__" [];
	"anyio.abc" -> "typing" [];
	"anyio._backends._asyncio" -> "__future__" [];
	"anyio._backends._asyncio" -> "array" [];
	"anyio._backends._asyncio" -> "asyncio" [];
	"anyio._backends._asyncio" -> "math" [];
	"anyio._backends._asyncio" -> "os" [];
	"anyio._backends._asyncio" -> "socket" [];
	"anyio._backends._asyncio" -> "sys" [];
	"anyio._backends._asyncio" -> "threading" [];
	"anyio._backends._asyncio" -> "weakref" [];
	"anyio._backends._asyncio" -> "collections" [];
	"anyio._backends._asyncio" -> "contextlib" [];
	"anyio._backends._asyncio" -> "contextvars" [];
	"anyio._backends._asyncio" -> "dataclasses" [];
	"anyio._backends._asyncio" -> "functools" [];
	"anyio._backends._asyncio" -> "inspect" [];
	"anyio._backends._asyncio" -> "io" [];
	"anyio._backends._asyncio" -> "queue" [];
	"anyio._backends._asyncio" -> "signal" [];
	"anyio._backends._asyncio" -> "types" [];
	"anyio._backends._asyncio" -> "typing" [];
	"anyio._backends._asyncio" -> "sniffio" [];
	"anyio._backends._asyncio" -> "anyio" [];
	"anyio._backends._asyncio" -> "typing_extensions" [];
	"anyio._backends._asyncio" -> "enum" [];
	"anyio._backends._asyncio" -> "exceptiongroup" [];
	"anyio._backends._asyncio" -> "uvloop" [];
	"anyio._backends._asyncio" -> "'_pytest.outcomes'" [];
	"sniffio._impl" -> "contextvars" [];
	"sniffio._impl" -> "typing" [];
	"sniffio._impl" -> "sys" [];
	"sniffio._impl" -> "threading" [];
	"sniffio._impl" -> "asyncio" [];
	"sniffio._impl" -> "curio" [];
	"anyio._core._typedattr" -> "__future__" [];
	"anyio._core._typedattr" -> "typing" [];
	"anyio._core._testing" -> "__future__" [];
	"anyio._core._testing" -> "typing" [];
	"anyio._core._tasks" -> "__future__" [];
	"anyio._core._tasks" -> "math" [];
	"anyio._core._tasks" -> "contextlib" [];
	"anyio._core._tasks" -> "types" [];
	"anyio._core._synchronization" -> "__future__" [];
	"anyio._core._synchronization" -> "math" [];
	"anyio._core._synchronization" -> "collections" [];
	"anyio._core._synchronization" -> "dataclasses" [];
	"anyio._core._synchronization" -> "types" [];
	"anyio._core._synchronization" -> "sniffio" [];
	"anyio._core._subprocesses" -> "__future__" [];
	"anyio._core._subprocesses" -> "sys" [];
	"anyio._core._subprocesses" -> "io" [];
	"anyio._core._subprocesses" -> "os" [];
	"anyio._core._subprocesses" -> "subprocess" [];
	"anyio._core._subprocesses" -> "typing" [];
	"anyio._core._subprocesses" -> "typing_extensions" [];
	"anyio._core._streams" -> "__future__" [];
	"anyio._core._streams" -> "math" [];
	"anyio._core._streams" -> "typing" [];
	"anyio._core._streams" -> "warnings" [];
	"anyio._core._sockets" -> "__future__" [];
	"anyio._core._sockets" -> "errno" [];
	"anyio._core._sockets" -> "os" [];
	"anyio._core._sockets" -> "socket" [];
	"anyio._core._sockets" -> "ssl" [];
	"anyio._core._sockets" -> "stat" [];
	"anyio._core._sockets" -> "sys" [];
	"anyio._core._sockets" -> "ipaddress" [];
	"anyio._core._sockets" -> "typing" [];
	"anyio._core._sockets" -> "anyio" [];
	"anyio._core._sockets" -> "exceptiongroup" [];
	"anyio._core._sockets" -> "idna" [];
	"anyio.streams.tls" -> "__future__" [];
	"anyio.streams.tls" -> "logging" [];
	"anyio.streams.tls" -> "re" [];
	"anyio.streams.tls" -> "ssl" [];
	"anyio.streams.tls" -> "sys" [];
	"anyio.streams.tls" -> "dataclasses" [];
	"anyio.streams.tls" -> "functools" [];
	"anyio.streams.tls" -> "typing" [];
	"anyio.streams.tls" -> "anyio" [];
	"anyio.streams.tls" -> "typing_extensions" [];
	"anyio.streams.stapled" -> "__future__" [];
	"anyio.streams.stapled" -> "dataclasses" [];
	"anyio.streams.stapled" -> "typing" [];
	"anyio.streams.stapled" -> "anyio" [];
	"anyio._core._signals" -> "__future__" [];
	"anyio._core._signals" -> "contextlib" [];
	"anyio._core._signals" -> "signal" [];
	"anyio._core._resources" -> "__future__" [];
	"anyio._core._fileio" -> "__future__" [];
	"anyio._core._fileio" -> "os" [];
	"anyio._core._fileio" -> "pathlib" [];
	"anyio._core._fileio" -> "sys" [];
	"anyio._core._fileio" -> "dataclasses" [];
	"anyio._core._fileio" -> "functools" [];
	"anyio._core._fileio" -> "typing" [];
	"anyio._core._fileio" -> "anyio" [];
	"anyio._core._fileio" -> "_typeshed" [];
	"anyio._core._exceptions" -> "__future__" [];
	"anyio._core._exceptions" -> "sys" [];
	"anyio._core._exceptions" -> "exceptiongroup" [];
	"anyio._core._eventloop" -> "__future__" [];
	"anyio._core._eventloop" -> "math" [];
	"anyio._core._eventloop" -> "sys" [];
	"anyio._core._eventloop" -> "threading" [];
	"anyio._core._eventloop" -> "contextlib" [];
	"anyio._core._eventloop" -> "importlib" [];
	"anyio._core._eventloop" -> "typing" [];
	"anyio._core._eventloop" -> "sniffio" [];
	"anyio._core._eventloop" -> "typing_extensions" [];
	"anyio.to_thread" -> "__future__" [];
	"anyio.to_thread" -> "sys" [];
	"anyio.to_thread" -> "typing" [];
	"anyio.to_thread" -> "warnings" [];
	"anyio.to_thread" -> "typing_extensions" [];
	"httpcore._sync.socks_proxy" -> "logging" [];
	"httpcore._sync.socks_proxy" -> "ssl" [];
	"httpcore._sync.socks_proxy" -> "typing" [];
	"httpcore._sync.socks_proxy" -> "socksio" [];
	"httpcore._trace" -> "inspect" [];
	"httpcore._trace" -> "logging" [];
	"httpcore._trace" -> "types" [];
	"httpcore._trace" -> "typing" [];
	"httpcore._synchronization" -> "threading" [];
	"httpcore._synchronization" -> "types" [];
	"httpcore._synchronization" -> "typing" [];
	"httpcore._synchronization" -> "trio" [];
	"httpcore._synchronization" -> "anyio" [];
	"httpcore._synchronization" -> "sniffio" [];
	"httpcore._sync.http2" -> "enum" [];
	"httpcore._sync.http2" -> "logging" [];
	"httpcore._sync.http2" -> "time" [];
	"httpcore._sync.http2" -> "types" [];
	"httpcore._sync.http2" -> "typing" [];
	"httpcore._sync.http2" -> "'h2.config'" [];
	"httpcore._sync.http2" -> "'h2.connection'" [];
	"httpcore._sync.http2" -> "'h2.events'" [];
	"httpcore._sync.http2" -> "'h2.exceptions'" [];
	"httpcore._sync.http2" -> "'h2.settings'" [];
	"httpcore._sync.interfaces" -> "contextlib" [];
	"httpcore._sync.interfaces" -> "typing" [];
	"httpcore._sync.http_proxy" -> "logging" [];
	"httpcore._sync.http_proxy" -> "ssl" [];
	"httpcore._sync.http_proxy" -> "base64" [];
	"httpcore._sync.http_proxy" -> "typing" [];
	"httpcore._sync.http11" -> "enum" [];
	"httpcore._sync.http11" -> "logging" [];
	"httpcore._sync.http11" -> "ssl" [];
	"httpcore._sync.http11" -> "time" [];
	"httpcore._sync.http11" -> "types" [];
	"httpcore._sync.http11" -> "typing" [];
	"httpcore._sync.http11" -> "h11" [];
	"h11._util" -> "typing" [];
	"h11._state" -> "typing" [];
	"h11._events" -> "re" [];
	"h11._events" -> "abc" [];
	"h11._events" -> "dataclasses" [];
	"h11._events" -> "typing" [];
	"h11._headers" -> "re" [];
	"h11._headers" -> "typing" [];
	"h11._headers" -> "typing_extensions" [];
	"h11._connection" -> "typing" [];
	"h11._writers" -> "typing" [];
	"h11._receivebuffer" -> "re" [];
	"h11._receivebuffer" -> "sys" [];
	"h11._receivebuffer" -> "typing" [];
	"h11._readers" -> "re" [];
	"h11._readers" -> "typing" [];
	"httpcore._sync.connection_pool" -> "ssl" [];
	"httpcore._sync.connection_pool" -> "sys" [];
	"httpcore._sync.connection_pool" -> "types" [];
	"httpcore._sync.connection_pool" -> "typing" [];
	"httpcore._sync.connection" -> "itertools" [];
	"httpcore._sync.connection" -> "logging" [];
	"httpcore._sync.connection" -> "ssl" [];
	"httpcore._sync.connection" -> "types" [];
	"httpcore._sync.connection" -> "typing" [];
	"httpcore._ssl" -> "ssl" [];
	"httpcore._ssl" -> "certifi" [];
	"httpcore._models" -> "typing" [];
	"httpcore._exceptions" -> "contextlib" [];
	"httpcore._exceptions" -> "typing" [];
	"httpcore._backends.sync" -> "socket" [];
	"httpcore._backends.sync" -> "ssl" [];
	"httpcore._backends.sync" -> "sys" [];
	"httpcore._backends.sync" -> "typing" [];
	"httpcore._backends.sync" -> "functools" [];
	"httpcore._backends.mock" -> "ssl" [];
	"httpcore._backends.mock" -> "typing" [];
	"httpcore._backends.base" -> "ssl" [];
	"httpcore._backends.base" -> "time" [];
	"httpcore._backends.base" -> "typing" [];
	"httpcore._async.socks_proxy" -> "logging" [];
	"httpcore._async.socks_proxy" -> "ssl" [];
	"httpcore._async.socks_proxy" -> "typing" [];
	"httpcore._async.socks_proxy" -> "socksio" [];
	"httpcore._backends.auto" -> "typing" [];
	"httpcore._async.http2" -> "enum" [];
	"httpcore._async.http2" -> "logging" [];
	"httpcore._async.http2" -> "time" [];
	"httpcore._async.http2" -> "types" [];
	"httpcore._async.http2" -> "typing" [];
	"httpcore._async.http2" -> "'h2.config'" [];
	"httpcore._async.http2" -> "'h2.connection'" [];
	"httpcore._async.http2" -> "'h2.events'" [];
	"httpcore._async.http2" -> "'h2.exceptions'" [];
	"httpcore._async.http2" -> "'h2.settings'" [];
	"httpcore._async.interfaces" -> "contextlib" [];
	"httpcore._async.interfaces" -> "typing" [];
	"httpcore._async.http_proxy" -> "logging" [];
	"httpcore._async.http_proxy" -> "ssl" [];
	"httpcore._async.http_proxy" -> "base64" [];
	"httpcore._async.http_proxy" -> "typing" [];
	"httpcore._async.http11" -> "enum" [];
	"httpcore._async.http11" -> "logging" [];
	"httpcore._async.http11" -> "ssl" [];
	"httpcore._async.http11" -> "time" [];
	"httpcore._async.http11" -> "types" [];
	"httpcore._async.http11" -> "typing" [];
	"httpcore._async.http11" -> "h11" [];
	"httpcore._async.connection_pool" -> "ssl" [];
	"httpcore._async.connection_pool" -> "sys" [];
	"httpcore._async.connection_pool" -> "types" [];
	"httpcore._async.connection_pool" -> "typing" [];
	"httpcore._async.connection" -> "itertools" [];
	"httpcore._async.connection" -> "logging" [];
	"httpcore._async.connection" -> "ssl" [];
	"httpcore._async.connection" -> "types" [];
	"httpcore._async.connection" -> "typing" [];
	"httpcore._api" -> "contextlib" [];
	"httpcore._api" -> "typing" [];
	"click.utils" -> "os" [];
	"click.utils" -> "re" [];
	"click.utils" -> "sys" [];
	"click.utils" -> "typing" [];
	"click.utils" -> "functools" [];
	"click.utils" -> "types" [];
	"click.utils" -> "typing_extensions" [];
	"click.utils" -> "errno" [];
	"click.utils" -> "glob" [];
	"click._compat" -> "codecs" [];
	"click._compat" -> "io" [];
	"click._compat" -> "os" [];
	"click._compat" -> "re" [];
	"click._compat" -> "sys" [];
	"click._compat" -> "typing" [];
	"click._compat" -> "weakref" [];
	"click._compat" -> "errno" [];
	"click._compat" -> "random" [];
	"click._compat" -> "locale" [];
	"click._compat" -> "colorama" [];
	"colorama.ansitowin32" -> "re" [];
	"colorama.ansitowin32" -> "sys" [];
	"colorama.ansitowin32" -> "os" [];
	"colorama.winterm" -> "msvcrt" [];
	"colorama.initialise" -> "atexit" [];
	"colorama.initialise" -> "contextlib" [];
	"colorama.initialise" -> "sys" [];
	"colorama.win32" -> "ctypes" [];
	"click._winconsole" -> "io" [];
	"click._winconsole" -> "sys" [];
	"click._winconsole" -> "time" [];
	"click._winconsole" -> "typing" [];
	"click._winconsole" -> "ctypes" [];
	"click._winconsole" -> "msvcrt" [];
	"click.termui" -> "inspect" [];
	"click.termui" -> "io" [];
	"click.termui" -> "itertools" [];
	"click.termui" -> "sys" [];
	"click.termui" -> "typing" [];
	"click.termui" -> "gettext" [];
	"click.termui" -> "getpass" [];
	"click._termui_impl" -> "contextlib" [];
	"click._termui_impl" -> "math" [];
	"click._termui_impl" -> "os" [];
	"click._termui_impl" -> "sys" [];
	"click._termui_impl" -> "time" [];
	"click._termui_impl" -> "typing" [];
	"click._termui_impl" -> "gettext" [];
	"click._termui_impl" -> "io" [];
	"click._termui_impl" -> "types" [];
	"click._termui_impl" -> "operator" [];
	"click._termui_impl" -> "shutil" [];
	"click._termui_impl" -> "tempfile" [];
	"click._termui_impl" -> "subprocess" [];
	"click._termui_impl" -> "webbrowser" [];
	"click._termui_impl" -> "msvcrt" [];
	"click._termui_impl" -> "tty" [];
	"click._termui_impl" -> "termios" [];
	"click.parser" -> "typing" [];
	"click.parser" -> "collections" [];
	"click.parser" -> "gettext" [];
	"click.parser" -> "typing_extensions" [];
	"click.parser" -> "shlex" [];
	"click.parser" -> "difflib" [];
	"click.globals" -> "typing" [];
	"click.globals" -> "threading" [];
	"click.globals" -> "typing_extensions" [];
	"click.formatting" -> "typing" [];
	"click.formatting" -> "contextlib" [];
	"click.formatting" -> "gettext" [];
	"click.formatting" -> "shutil" [];
	"click._textwrap" -> "textwrap" [];
	"click._textwrap" -> "typing" [];
	"click._textwrap" -> "contextlib" [];
	"click.exceptions" -> "typing" [];
	"click.exceptions" -> "gettext" [];
	"click.decorators" -> "inspect" [];
	"click.decorators" -> "types" [];
	"click.decorators" -> "typing" [];
	"click.decorators" -> "functools" [];
	"click.decorators" -> "gettext" [];
	"click.decorators" -> "typing_extensions" [];
	"click.decorators" -> "importlib" [];
	"click.decorators" -> "importlib_metadata" [];
	"click.core" -> "enum" [];
	"click.core" -> "errno" [];
	"click.core" -> "inspect" [];
	"click.core" -> "os" [];
	"click.core" -> "sys" [];
	"click.core" -> "typing" [];
	"click.core" -> "collections" [];
	"click.core" -> "contextlib" [];
	"click.core" -> "functools" [];
	"click.core" -> "gettext" [];
	"click.core" -> "itertools" [];
	"click.core" -> "types" [];
	"click.core" -> "typing_extensions" [];
	"click.shell_completion" -> "os" [];
	"click.shell_completion" -> "re" [];
	"click.shell_completion" -> "typing" [];
	"click.shell_completion" -> "gettext" [];
	"click.shell_completion" -> "subprocess" [];
	"click.types" -> "os" [];
	"click.types" -> "stat" [];
	"click.types" -> "sys" [];
	"click.types" -> "typing" [];
	"click.types" -> "datetime" [];
	"click.types" -> "gettext" [];
	"click.types" -> "typing_extensions" [];
	"click.types" -> "operator" [];
	"click.types" -> "uuid" [];
	"click.types" -> "pathlib" [];
	"uuid" -> "os" [];
	"uuid" -> "sys" [];
	"uuid" -> "enum" [];
	"uuid" -> "platform" [];
	"uuid" -> "io" [];
	"uuid" -> "shutil" [];
	"uuid" -> "subprocess" [];
	"uuid" -> "socket" [];
	"uuid" -> "_uuid" [];
	"uuid" -> "random" [];
	"uuid" -> "time" [];
	"uuid" -> "hashlib" [];
	"httpx._urls" -> "__future__" [];
	"httpx._urls" -> "typing" [];
	"httpx._urls" -> "idna" [];
	"httpx._utils" -> "__future__" [];
	"httpx._utils" -> "codecs" [];
	"httpx._utils" -> "ipaddress" [];
	"httpx._utils" -> "mimetypes" [];
	"httpx._utils" -> "os" [];
	"httpx._utils" -> "re" [];
	"httpx._utils" -> "time" [];
	"httpx._utils" -> "typing" [];
	"httpx._utils" -> "pathlib" [];
	"httpx._utils" -> "sniffio" [];
	"httpx._utils" -> "trio" [];
	"httpx._utils" -> "asyncio" [];
	"httpx._urlparse" -> "__future__" [];
	"httpx._urlparse" -> "ipaddress" [];
	"httpx._urlparse" -> "re" [];
	"httpx._urlparse" -> "typing" [];
	"httpx._urlparse" -> "idna" [];
	"httpx._types" -> "ssl" [];
	"httpx._types" -> "typing" [];
	"httpx._transports.wsgi" -> "__future__" [];
	"httpx._transports.wsgi" -> "io" [];
	"httpx._transports.wsgi" -> "itertools" [];
	"httpx._transports.wsgi" -> "sys" [];
	"httpx._transports.wsgi" -> "typing" [];
	"httpx._transports.wsgi" -> "_typeshed" [];
	"httpx._transports.wsgi" -> "'_typeshed.wsgi'" [];
	"httpx._transports.mock" -> "__future__" [];
	"httpx._transports.mock" -> "typing" [];
	"httpx._transports.default" -> "__future__" [];
	"httpx._transports.default" -> "contextlib" [];
	"httpx._transports.default" -> "typing" [];
	"httpx._transports.default" -> "types" [];
	"httpx._transports.default" -> "httpcore" [];
	"httpx._transports.default" -> "socksio" [];
	"httpx._transports.base" -> "__future__" [];
	"httpx._transports.base" -> "typing" [];
	"httpx._transports.base" -> "types" [];
	"httpx._transports.asgi" -> "__future__" [];
	"httpx._transports.asgi" -> "typing" [];
	"httpx._transports.asgi" -> "sniffio" [];
	"httpx._transports.asgi" -> "asyncio" [];
	"httpx._transports.asgi" -> "trio" [];
	"httpx._status_codes" -> "__future__" [];
	"httpx._status_codes" -> "enum" [];
	"httpx._models" -> "__future__" [];
	"httpx._models" -> "datetime" [];
	"httpx._models" -> "json" [];
	"httpx._models" -> "typing" [];
	"httpx._multipart" -> "__future__" [];
	"httpx._multipart" -> "io" [];
	"httpx._multipart" -> "os" [];
	"httpx._multipart" -> "typing" [];
	"httpx._multipart" -> "pathlib" [];
	"httpx._decoders" -> "__future__" [];
	"httpx._decoders" -> "codecs" [];
	"httpx._decoders" -> "io" [];
	"httpx._decoders" -> "typing" [];
	"httpx._decoders" -> "zlib" [];
	"httpx._compat" -> "re" [];
	"httpx._compat" -> "ssl" [];
	"httpx._compat" -> "sys" [];
	"httpx._compat" -> "types" [];
	"httpx._compat" -> "typing" [];
	"httpx._compat" -> "brotlicffi" [];
	"httpx._compat" -> "brotli" [];
	"httpx._compat" -> "zstandard" [];
	"httpx._exceptions" -> "__future__" [];
	"httpx._exceptions" -> "contextlib" [];
	"httpx._exceptions" -> "typing" [];
	"httpx._content" -> "__future__" [];
	"httpx._content" -> "inspect" [];
	"httpx._content" -> "warnings" [];
	"httpx._content" -> "json" [];
	"httpx._content" -> "typing" [];
	"httpx._config" -> "__future__" [];
	"httpx._config" -> "logging" [];
	"httpx._config" -> "os" [];
	"httpx._config" -> "ssl" [];
	"httpx._config" -> "typing" [];
	"httpx._config" -> "pathlib" [];
	"httpx._config" -> "certifi" [];
	"httpx._client" -> "__future__" [];
	"httpx._client" -> "datetime" [];
	"httpx._client" -> "enum" [];
	"httpx._client" -> "logging" [];
	"httpx._client" -> "typing" [];
	"httpx._client" -> "warnings" [];
	"httpx._client" -> "contextlib" [];
	"httpx._client" -> "types" [];
	"httpx._client" -> "h2" [];
	"httpx._auth" -> "__future__" [];
	"httpx._auth" -> "hashlib" [];
	"httpx._auth" -> "os" [];
	"httpx._auth" -> "re" [];
	"httpx._auth" -> "time" [];
	"httpx._auth" -> "typing" [];
	"httpx._auth" -> "base64" [];
	"httpx._auth" -> "netrc" [];
	"httpx._api" -> "__future__" [];
	"httpx._api" -> "typing" [];
	"httpx._api" -> "contextlib" [];
	"keyboard" -> "__future__" [];
	"keyboard" -> "re" [];
	"keyboard" -> "itertools" [];
	"keyboard" -> "collections" [];
	"keyboard" -> "threading" [];
	"keyboard" -> "time" [];
	"keyboard" -> "Queue" [];
	"keyboard" -> "queue" [];
	"keyboard" -> "platform" [];
	"keyboard._canonical_names" -> "__future__" [];
	"keyboard._canonical_names" -> "platform" [];
	"keyboard._generic" -> "threading" [];
	"keyboard._generic" -> "traceback" [];
	"keyboard._generic" -> "functools" [];
	"keyboard._generic" -> "queue" [];
	"keyboard._generic" -> "Queue" [];
	"keyboard._keyboard_event" -> "time" [];
	"keyboard._keyboard_event" -> "json" [];
	"keyboard._darwinkeyboard" -> "ctypes" [];
	"keyboard._darwinkeyboard" -> "Quartz" [];
	"keyboard._darwinkeyboard" -> "time" [];
	"keyboard._darwinkeyboard" -> "os" [];
	"keyboard._darwinkeyboard" -> "threading" [];
	"keyboard._darwinkeyboard" -> "AppKit" [];
	"keyboard._nixkeyboard" -> "struct" [];
	"keyboard._nixkeyboard" -> "traceback" [];
	"keyboard._nixkeyboard" -> "time" [];
	"keyboard._nixkeyboard" -> "collections" [];
	"keyboard._nixkeyboard" -> "subprocess" [];
	"keyboard._nixkeyboard" -> "re" [];
	"keyboard._nixcommon" -> "struct" [];
	"keyboard._nixcommon" -> "os" [];
	"keyboard._nixcommon" -> "atexit" [];
	"keyboard._nixcommon" -> "time" [];
	"keyboard._nixcommon" -> "threading" [];
	"keyboard._nixcommon" -> "glob" [];
	"keyboard._nixcommon" -> "queue" [];
	"keyboard._nixcommon" -> "Queue" [];
	"keyboard._nixcommon" -> "fcntl" [];
	"keyboard._nixcommon" -> "re" [];
	"keyboard._nixcommon" -> "collections" [];
	"keyboard._nixcommon" -> "warnings" [];
	"keyboard._winkeyboard" -> "__future__" [];
	"keyboard._winkeyboard" -> "re" [];
	"keyboard._winkeyboard" -> "atexit" [];
	"keyboard._winkeyboard" -> "traceback" [];
	"keyboard._winkeyboard" -> "threading" [];
	"keyboard._winkeyboard" -> "collections" [];
	"keyboard._winkeyboard" -> "ctypes" [];
	"keyboard._winkeyboard" -> "pprint" [];
	"numpy" -> "os" [];
	"numpy" -> "sys" [];
	"numpy" -> "warnings" [];
	"numpy" -> "pathlib" [];
	"numpy._core._dtype_ctypes" -> "numpy" [];
	"numpy._core._dtype_ctypes" -> "ctypes" [];
	"numpy._core._dtype_ctypes" -> "_ctypes" [];
	"numpy._pytesttester" -> "sys" [];
	"numpy._pytesttester" -> "os" [];
	"numpy._pytesttester" -> "warnings" [];
	"numpy._core.strings" -> "sys" [];
	"numpy._core.strings" -> "numpy" [];
	"numpy._core.umath" -> "numpy" [];
	"numpy._core.multiarray" -> "functools" [];
	"numpy._core.overrides" -> "collections" [];
	"numpy._core.overrides" -> "functools" [];
	"numpy._core.overrides" -> "os" [];
	"numpy._utils._inspect" -> "types" [];
	"numpy._utils" -> "functools" [];
	"numpy._utils" -> "warnings" [];
	"numpy.core._utils" -> "warnings" [];
	"numpy._core.defchararray" -> "functools" [];
	"numpy._core.defchararray" -> "numpy" [];
	"numpy._core.numeric" -> "functools" [];
	"numpy._core.numeric" -> "itertools" [];
	"numpy._core.numeric" -> "operator" [];
	"numpy._core.numeric" -> "sys" [];
	"numpy._core.numeric" -> "warnings" [];
	"numpy._core.numeric" -> "numbers" [];
	"numpy._core.numeric" -> "builtins" [];
	"numpy._core.numeric" -> "math" [];
	"numpy._core.numeric" -> "numpy" [];
	"numpy._core.arrayprint" -> "functools" [];
	"numpy._core.arrayprint" -> "numbers" [];
	"numpy._core.arrayprint" -> "sys" [];
	"numpy._core.arrayprint" -> "_thread" [];
	"numpy._core.arrayprint" -> "_dummy_thread" [];
	"numpy._core.arrayprint" -> "numpy" [];
	"numpy._core.arrayprint" -> "operator" [];
	"numpy._core.arrayprint" -> "warnings" [];
	"numpy._core.arrayprint" -> "contextlib" [];
	"numpy._core.fromnumeric" -> "functools" [];
	"numpy._core.fromnumeric" -> "types" [];
	"numpy._core.fromnumeric" -> "warnings" [];
	"numpy._core.fromnumeric" -> "numpy" [];
	"numpy._core._methods" -> "os" [];
	"numpy._core._methods" -> "pickle" [];
	"numpy._core._methods" -> "warnings" [];
	"numpy._core._methods" -> "contextlib" [];
	"numpy._core._methods" -> "numpy" [];
	"numpy._core._ufunc_config" -> "contextlib" [];
	"numpy._core._ufunc_config" -> "contextvars" [];
	"numpy._core._ufunc_config" -> "functools" [];
	"numpy._core.shape_base" -> "functools" [];
	"numpy._core.shape_base" -> "itertools" [];
	"numpy._core.shape_base" -> "operator" [];
	"numpy._core.shape_base" -> "warnings" [];
	"numpy._core.numerictypes" -> "numbers" [];
	"numpy._core.numerictypes" -> "warnings" [];
	"numpy._core.numerictypes" -> "builtins" [];
	"numpy._core._dtype" -> "numpy" [];
	"numpy._core.records" -> "os" [];
	"numpy._core.records" -> "warnings" [];
	"numpy._core.records" -> "collections" [];
	"numpy._core.records" -> "contextlib" [];
	"numpy._typing._add_docstring" -> "re" [];
	"numpy._typing._add_docstring" -> "textwrap" [];
	"numpy._typing._array_like" -> "__future__" [];
	"numpy._typing._array_like" -> "sys" [];
	"numpy._typing._array_like" -> "typing" [];
	"numpy._typing._array_like" -> "numpy" [];
	"numpy._typing._nested_sequence" -> "__future__" [];
	"numpy._typing._nested_sequence" -> "typing" [];
	"numpy._typing" -> "__future__" [];
	"numpy._typing" -> "typing" [];
	"numpy._typing._dtype_like" -> "typing" [];
	"numpy._typing._dtype_like" -> "numpy" [];
	"numpy._typing._shape" -> "typing" [];
	"numpy._typing._scalars" -> "typing" [];
	"numpy._typing._scalars" -> "numpy" [];
	"numpy._typing._char_codes" -> "typing" [];
	"numpy._typing._nbit" -> "typing" [];
	"numpy.f2py" -> "sys" [];
	"numpy.f2py" -> "subprocess" [];
	"numpy.f2py" -> "os" [];
	"numpy.f2py" -> "warnings" [];
	"numpy.f2py.diagnose" -> "os" [];
	"numpy.f2py.diagnose" -> "sys" [];
	"numpy.f2py.diagnose" -> "tempfile" [];
	"numpy.f2py.diagnose" -> "numpy" [];
	"numpy.f2py.diagnose" -> "numpy_distutils" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.command'" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.fcompiler'" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.cpuinfo'" [];
	"numpy.f2py.f2py2e" -> "sys" [];
	"numpy.f2py.f2py2e" -> "os" [];
	"numpy.f2py.f2py2e" -> "pprint" [];
	"numpy.f2py.f2py2e" -> "re" [];
	"numpy.f2py.f2py2e" -> "pathlib" [];
	"numpy.f2py.f2py2e" -> "itertools" [];
	"numpy.f2py.f2py2e" -> "argparse" [];
	"numpy.f2py.f2py2e" -> "copy" [];
	"numpy.f2py.f2py2e" -> "tempfile" [];
	"numpy.f2py._backends._distutils" -> "os" [];
	"numpy.f2py._backends._distutils" -> "sys" [];
	"numpy.f2py._backends._distutils" -> "shutil" [];
	"numpy.f2py._backends._distutils" -> "warnings" [];
	"numpy.f2py._backends._backend" -> "__future__" [];
	"numpy.f2py._backends._backend" -> "abc" [];
	"numpy.f2py._backends._meson" -> "__future__" [];
	"numpy.f2py._backends._meson" -> "os" [];
	"numpy.f2py._backends._meson" -> "errno" [];
	"numpy.f2py._backends._meson" -> "shutil" [];
	"numpy.f2py._backends._meson" -> "subprocess" [];
	"numpy.f2py._backends._meson" -> "sys" [];
	"numpy.f2py._backends._meson" -> "re" [];
	"numpy.f2py._backends._meson" -> "pathlib" [];
	"numpy.f2py._backends._meson" -> "string" [];
	"numpy.f2py._backends._meson" -> "itertools" [];
	"numpy.f2py._backends._meson" -> "warnings" [];
	"numpy.f2py.auxfuncs" -> "pprint" [];
	"numpy.f2py.auxfuncs" -> "sys" [];
	"numpy.f2py.auxfuncs" -> "re" [];
	"numpy.f2py.auxfuncs" -> "types" [];
	"numpy.f2py.auxfuncs" -> "functools" [];
	"numpy.f2py.auxfuncs" -> "copy" [];
	"numpy.f2py.f90mod_rules" -> "numpy" [];
	"numpy.f2py.rules" -> "os" [];
	"numpy.f2py.rules" -> "sys" [];
	"numpy.f2py.rules" -> "time" [];
	"numpy.f2py.rules" -> "copy" [];
	"numpy.f2py.rules" -> "pathlib" [];
	"numpy.f2py.func2subr" -> "copy" [];
	"numpy.f2py.crackfortran" -> "sys" [];
	"numpy.f2py.crackfortran" -> "string" [];
	"numpy.f2py.crackfortran" -> "fileinput" [];
	"numpy.f2py.crackfortran" -> "re" [];
	"numpy.f2py.crackfortran" -> "os" [];
	"numpy.f2py.crackfortran" -> "copy" [];
	"numpy.f2py.crackfortran" -> "platform" [];
	"numpy.f2py.crackfortran" -> "codecs" [];
	"numpy.f2py.crackfortran" -> "pathlib" [];
	"numpy.f2py.crackfortran" -> "charset_normalizer" [];
	"fileinput" -> "io" [];
	"fileinput" -> "sys" [];
	"fileinput" -> "os" [];
	"fileinput" -> "types" [];
	"fileinput" -> "warnings" [];
	"fileinput" -> "gzip" [];
	"fileinput" -> "bz2" [];
	"fileinput" -> "getopt" [];
	"numpy.f2py.symbolic" -> "re" [];
	"numpy.f2py.symbolic" -> "warnings" [];
	"numpy.f2py.symbolic" -> "enum" [];
	"numpy.f2py.symbolic" -> "math" [];
	"numpy.f2py.capi_maps" -> "copy" [];
	"numpy.f2py.capi_maps" -> "re" [];
	"numpy.f2py.capi_maps" -> "os" [];
	"numpy.f2py.cfuncs" -> "sys" [];
	"numpy.f2py.cfuncs" -> "copy" [];
	"numpy.matlib" -> "warnings" [];
	"numpy.matrixlib.defmatrix" -> "sys" [];
	"numpy.matrixlib.defmatrix" -> "warnings" [];
	"numpy.matrixlib.defmatrix" -> "ast" [];
	"numpy.testing" -> "unittest" [];
	"numpy.testing.overrides" -> "numpy" [];
	"numpy.lib.recfunctions" -> "itertools" [];
	"numpy.lib.recfunctions" -> "numpy" [];
	"numpy.lib._iotools" -> "numpy" [];
	"numpy.ma.mrecords" -> "warnings" [];
	"numpy.ma.mrecords" -> "numpy" [];
	"numpy.testing._private.extbuild" -> "os" [];
	"numpy.testing._private.extbuild" -> "pathlib" [];
	"numpy.testing._private.extbuild" -> "subprocess" [];
	"numpy.testing._private.extbuild" -> "sys" [];
	"numpy.testing._private.extbuild" -> "sysconfig" [];
	"numpy.testing._private.extbuild" -> "textwrap" [];
	"numpy.testing._private.utils" -> "os" [];
	"numpy.testing._private.utils" -> "sys" [];
	"numpy.testing._private.utils" -> "platform" [];
	"numpy.testing._private.utils" -> "re" [];
	"numpy.testing._private.utils" -> "gc" [];
	"numpy.testing._private.utils" -> "operator" [];
	"numpy.testing._private.utils" -> "warnings" [];
	"numpy.testing._private.utils" -> "functools" [];
	"numpy.testing._private.utils" -> "shutil" [];
	"numpy.testing._private.utils" -> "contextlib" [];
	"numpy.testing._private.utils" -> "tempfile" [];
	"numpy.testing._private.utils" -> "pprint" [];
	"numpy.testing._private.utils" -> "sysconfig" [];
	"numpy.testing._private.utils" -> "numpy" [];
	"numpy.testing._private.utils" -> "io" [];
	"numpy.testing._private.utils" -> "win32pdh" [];
	"numpy.testing._private.utils" -> "time" [];
	"numpy.testing._private.utils" -> "traceback" [];
	"numpy.testing._private.utils" -> "difflib" [];
	"numpy.testing._private.utils" -> "doctest" [];
	"numpy.testing._private.utils" -> "subprocess" [];
	"numpy.testing._private.utils" -> "unittest" [];
	"numpy.testing._private.utils" -> "inspect" [];
	"numpy.testing._private.utils" -> "psutil" [];
	"numpy.ctypeslib" -> "os" [];
	"numpy.ctypeslib" -> "ctypes" [];
	"numpy.ctypeslib" -> "sys" [];
	"numpy.ctypeslib" -> "sysconfig" [];
	"numpy._core._internal" -> "ast" [];
	"numpy._core._internal" -> "math" [];
	"numpy._core._internal" -> "re" [];
	"numpy._core._internal" -> "sys" [];
	"numpy._core._internal" -> "warnings" [];
	"numpy._core._internal" -> "numpy" [];
	"numpy._core._internal" -> "ctypes" [];
	"numpy.ma.extras" -> "itertools" [];
	"numpy.ma.extras" -> "warnings" [];
	"numpy.ma.extras" -> "numpy" [];
	"numpy.ma.core" -> "builtins" [];
	"numpy.ma.core" -> "inspect" [];
	"numpy.ma.core" -> "operator" [];
	"numpy.ma.core" -> "warnings" [];
	"numpy.ma.core" -> "textwrap" [];
	"numpy.ma.core" -> "re" [];
	"numpy.ma.core" -> "functools" [];
	"numpy.ma.core" -> "typing" [];
	"numpy.ma.core" -> "numpy" [];
	"numpy.ma.core" -> "copy" [];
	"numpy.polynomial._polybase" -> "os" [];
	"numpy.polynomial._polybase" -> "abc" [];
	"numpy.polynomial._polybase" -> "numbers" [];
	"numpy.polynomial._polybase" -> "typing" [];
	"numpy.polynomial._polybase" -> "numpy" [];
	"numpy.polynomial.laguerre" -> "numpy" [];
	"numpy.polynomial.hermite_e" -> "numpy" [];
	"numpy.polynomial.hermite" -> "numpy" [];
	"numpy.polynomial.legendre" -> "numpy" [];
	"numpy.polynomial.chebyshev" -> "numpy" [];
	"numpy.polynomial.polynomial" -> "numpy" [];
	"numpy.polynomial.polyutils" -> "operator" [];
	"numpy.polynomial.polyutils" -> "functools" [];
	"numpy.polynomial.polyutils" -> "warnings" [];
	"numpy.polynomial.polyutils" -> "numpy" [];
	"numpy.fft.helper" -> "warnings" [];
	"numpy.fft._pocketfft" -> "functools" [];
	"numpy.fft._pocketfft" -> "warnings" [];
	"numpy.linalg.linalg" -> "warnings" [];
	"numpy.linalg._linalg" -> "functools" [];
	"numpy.linalg._linalg" -> "operator" [];
	"numpy.linalg._linalg" -> "warnings" [];
	"numpy.linalg._linalg" -> "typing" [];
	"numpy.linalg._linalg" -> "numpy" [];
	"numpy.lib._index_tricks_impl" -> "functools" [];
	"numpy.lib._index_tricks_impl" -> "sys" [];
	"numpy.lib._index_tricks_impl" -> "math" [];
	"numpy.lib._index_tricks_impl" -> "warnings" [];
	"numpy.lib._index_tricks_impl" -> "numpy" [];
	"numpy.lib._npyio_impl" -> "os" [];
	"numpy.lib._npyio_impl" -> "re" [];
	"numpy.lib._npyio_impl" -> "functools" [];
	"numpy.lib._npyio_impl" -> "itertools" [];
	"numpy.lib._npyio_impl" -> "warnings" [];
	"numpy.lib._npyio_impl" -> "weakref" [];
	"numpy.lib._npyio_impl" -> "contextlib" [];
	"numpy.lib._npyio_impl" -> "operator" [];
	"numpy.lib._npyio_impl" -> "pickle" [];
	"numpy.lib._npyio_impl" -> "numpy" [];
	"numpy.lib._npyio_impl" -> "zipfile" [];
	"numpy.lib._datasource" -> "os" [];
	"numpy.lib._datasource" -> "bz2" [];
	"numpy.lib._datasource" -> "gzip" [];
	"numpy.lib._datasource" -> "lzma" [];
	"numpy.lib._datasource" -> "tempfile" [];
	"numpy.lib._datasource" -> "shutil" [];
	"numpy.lib.format" -> "io" [];
	"numpy.lib.format" -> "os" [];
	"numpy.lib.format" -> "pickle" [];
	"numpy.lib.format" -> "warnings" [];
	"numpy.lib.format" -> "numpy" [];
	"numpy.lib.format" -> "struct" [];
	"numpy.lib.format" -> "tokenize" [];
	"numpy.lib.format" -> "ast" [];
	"numpy.lib._polynomial_impl" -> "functools" [];
	"numpy.lib._polynomial_impl" -> "re" [];
	"numpy.lib._polynomial_impl" -> "warnings" [];
	"numpy.lib._stride_tricks_impl" -> "numpy" [];
	"numpy.lib._utils_impl" -> "os" [];
	"numpy.lib._utils_impl" -> "sys" [];
	"numpy.lib._utils_impl" -> "textwrap" [];
	"numpy.lib._utils_impl" -> "types" [];
	"numpy.lib._utils_impl" -> "re" [];
	"numpy.lib._utils_impl" -> "warnings" [];
	"numpy.lib._utils_impl" -> "functools" [];
	"numpy.lib._utils_impl" -> "platform" [];
	"numpy.lib._utils_impl" -> "numpy" [];
	"numpy.lib._utils_impl" -> "pprint" [];
	"numpy.lib._utils_impl" -> "threadpoolctl" [];
	"numpy.lib._utils_impl" -> "pydoc" [];
	"numpy.lib._utils_impl" -> "inspect" [];
	"numpy.lib._utils_impl" -> "ast" [];
	"numpy.lib._arraypad_impl" -> "numpy" [];
	"numpy.lib._ufunclike_impl" -> "warnings" [];
	"numpy.lib._ufunclike_impl" -> "functools" [];
	"numpy.lib._arraysetops_impl" -> "functools" [];
	"numpy.lib._arraysetops_impl" -> "warnings" [];
	"numpy.lib._arraysetops_impl" -> "typing" [];
	"numpy.lib._arraysetops_impl" -> "numpy" [];
	"numpy.lib._type_check_impl" -> "functools" [];
	"numpy._core.getlimits" -> "warnings" [];
	"numpy._core._machar" -> "math" [];
	"numpy.lib._shape_base_impl" -> "functools" [];
	"numpy.lib._shape_base_impl" -> "warnings" [];
	"numpy.lib._twodim_base_impl" -> "functools" [];
	"numpy.lib._twodim_base_impl" -> "operator" [];
	"numpy.lib._twodim_base_impl" -> "numpy" [];
	"numpy.lib._function_base_impl" -> "builtins" [];
	"numpy.lib._function_base_impl" -> "functools" [];
	"numpy.lib._function_base_impl" -> "re" [];
	"numpy.lib._function_base_impl" -> "sys" [];
	"numpy.lib._function_base_impl" -> "warnings" [];
	"numpy.lib._function_base_impl" -> "numpy" [];
	"numpy.lib._nanfunctions_impl" -> "functools" [];
	"numpy.lib._nanfunctions_impl" -> "warnings" [];
	"numpy.lib._nanfunctions_impl" -> "numpy" [];
	"numpy.lib._histograms_impl" -> "contextlib" [];
	"numpy.lib._histograms_impl" -> "functools" [];
	"numpy.lib._histograms_impl" -> "operator" [];
	"numpy.lib._histograms_impl" -> "warnings" [];
	"numpy.lib._histograms_impl" -> "numpy" [];
	"numpy.lib" -> "math" [];
	"numpy.lib" -> "warnings" [];
	"numpy._core.function_base" -> "functools" [];
	"numpy._core.function_base" -> "warnings" [];
	"numpy._core.function_base" -> "operator" [];
	"numpy._core.function_base" -> "types" [];
	"numpy._core.function_base" -> "numpy" [];
	"numpy.lib._version" -> "re" [];
	"numpy.lib._arrayterator_impl" -> "operator" [];
	"numpy.lib._arrayterator_impl" -> "functools" [];
	"numpy.lib.introspect" -> "re" [];
	"numpy._core.printoptions" -> "sys" [];
	"numpy._core.printoptions" -> "contextvars" [];
	"numpy._core.memmap" -> "contextlib" [];
	"numpy._core.memmap" -> "operator" [];
	"numpy._core.memmap" -> "numpy" [];
	"numpy._core.memmap" -> "mmap" [];
	"numpy._core.memmap" -> "os.path" [];
	"numpy._core" -> "os" [];
	"numpy._core" -> "sys" [];
	"numpy._core" -> "warnings" [];
	"numpy._core" -> "copyreg" [];
	"numpy._core._add_newdocs_scalars" -> "sys" [];
	"numpy._core._add_newdocs_scalars" -> "os" [];
	"numpy._core.einsumfunc" -> "itertools" [];
	"numpy._core.einsumfunc" -> "operator" [];
	"numpy.__config__" -> "enum" [];
	"numpy.__config__" -> "yaml" [];
	"numpy.__config__" -> "warnings" [];
	"numpy.__config__" -> "json" [];
	"yaml" -> "io" [];
	"yaml.resolver" -> "re" [];
	"yaml.representer" -> "datetime" [];
	"yaml.representer" -> "copyreg" [];
	"yaml.representer" -> "types" [];
	"yaml.representer" -> "base64" [];
	"yaml.representer" -> "collections" [];
	"yaml.constructor" -> "datetime" [];
	"yaml.constructor" -> "base64" [];
	"yaml.constructor" -> "binascii" [];
	"yaml.constructor" -> "re" [];
	"yaml.constructor" -> "sys" [];
	"yaml.constructor" -> "types" [];
	"yaml.reader" -> "codecs" [];
	"yaml.reader" -> "re" [];
	"numpy._globals" -> "enum" [];
	"pyaudio" -> "locale" [];
	"pyaudio" -> "warnings" [];
	"transformers" -> "typing" [];
	"transformers" -> "'transformers.utils.dummies_sentencepiece_and_tokenizers_objects'" [];
	"transformers" -> "sys" [];
	"transformers.modeling_flax_utils" -> "gc" [];
	"transformers.modeling_flax_utils" -> "json" [];
	"transformers.modeling_flax_utils" -> "os" [];
	"transformers.modeling_flax_utils" -> "re" [];
	"transformers.modeling_flax_utils" -> "warnings" [];
	"transformers.modeling_flax_utils" -> "functools" [];
	"transformers.modeling_flax_utils" -> "pickle" [];
	"transformers.modeling_flax_utils" -> "typing" [];
	"transformers.modeling_flax_utils" -> "'flax.linen'" [];
	"transformers.modeling_flax_utils" -> "jax" [];
	"transformers.modeling_flax_utils" -> "'jax.numpy'" [];
	"transformers.modeling_flax_utils" -> "msgpack" [];
	"transformers.modeling_flax_utils" -> "'flax.core'" [];
	"transformers.modeling_flax_utils" -> "'flax.serialization'" [];
	"transformers.modeling_flax_utils" -> "'flax.traverse_util'" [];
	"transformers.modeling_flax_utils" -> "'jax.random'" [];
	"transformers.modeling_flax_utils" -> "safetensors" [];
	"safetensors.flax" -> "os" [];
	"safetensors.flax" -> "typing" [];
	"safetensors.flax" -> "numpy" [];
	"safetensors.flax" -> "'jax.numpy'" [];
	"safetensors.flax" -> "jax" [];
	"safetensors.numpy" -> "os" [];
	"safetensors.numpy" -> "sys" [];
	"safetensors.numpy" -> "typing" [];
	"safetensors.numpy" -> "numpy" [];
	"transformers.utils.import_utils" -> "json" [];
	"transformers.utils.import_utils" -> "os" [];
	"transformers.utils.import_utils" -> "shutil" [];
	"transformers.utils.import_utils" -> "subprocess" [];
	"transformers.utils.import_utils" -> "sys" [];
	"transformers.utils.import_utils" -> "warnings" [];
	"transformers.utils.import_utils" -> "collections" [];
	"transformers.utils.import_utils" -> "functools" [];
	"transformers.utils.import_utils" -> "itertools" [];
	"transformers.utils.import_utils" -> "types" [];
	"transformers.utils.import_utils" -> "typing" [];
	"transformers.utils.import_utils" -> "packaging" [];
	"transformers.utils.import_utils" -> "torch" [];
	"transformers.utils.import_utils" -> "mamba_ssm" [];
	"transformers.utils.import_utils" -> "'torch_xla.core'" [];
	"transformers.utils.import_utils" -> "torch_xla" [];
	"transformers.utils.import_utils" -> "torch_npu" [];
	"transformers.utils.import_utils" -> "torch_mlu" [];
	"transformers.utils.import_utils" -> "torch_musa" [];
	"transformers.utils.import_utils" -> "intel_extension_for_pytorch" [];
	"transformers.utils.import_utils" -> "bitsandbytes" [];
	"torch.fx.interpreter" -> "torch" [];
	"torch.fx.interpreter" -> "typing" [];
	"torch.fx.interpreter" -> "inspect" [];
	"torch.fx.interpreter" -> "contextlib" [];
	"torch.hub" -> "contextlib" [];
	"torch.hub" -> "errno" [];
	"torch.hub" -> "hashlib" [];
	"torch.hub" -> "json" [];
	"torch.hub" -> "os" [];
	"torch.hub" -> "re" [];
	"torch.hub" -> "shutil" [];
	"torch.hub" -> "sys" [];
	"torch.hub" -> "tempfile" [];
	"torch.hub" -> "uuid" [];
	"torch.hub" -> "warnings" [];
	"torch.hub" -> "zipfile" [];
	"torch.hub" -> "pathlib" [];
	"torch.hub" -> "typing" [];
	"torch.hub" -> "typing_extensions" [];
	"torch.hub" -> "tqdm" [];
	"tqdm" -> "warnings" [];
	"tqdm.notebook" -> "re" [];
	"tqdm.notebook" -> "sys" [];
	"tqdm.notebook" -> "html" [];
	"tqdm.notebook" -> "weakref" [];
	"tqdm.notebook" -> "ipywidgets" [];
	"tqdm.notebook" -> "warnings" [];
	"tqdm.notebook" -> "'IPython.html'" [];
	"tqdm.notebook" -> "'IPython.display'" [];
	"tqdm.version" -> "setuptools_scm" [];
	"tqdm.std" -> "sys" [];
	"tqdm.std" -> "collections" [];
	"tqdm.std" -> "contextlib" [];
	"tqdm.std" -> "datetime" [];
	"tqdm.std" -> "numbers" [];
	"tqdm.std" -> "time" [];
	"tqdm.std" -> "warnings" [];
	"tqdm.std" -> "weakref" [];
	"tqdm.std" -> "threading" [];
	"tqdm.std" -> "multiprocessing" [];
	"tqdm.std" -> "pandas" [];
	"tqdm.std" -> "'pandas.core'" [];
	"tqdm.utils" -> "os" [];
	"tqdm.utils" -> "re" [];
	"tqdm.utils" -> "sys" [];
	"tqdm.utils" -> "functools" [];
	"tqdm.utils" -> "inspect" [];
	"tqdm.utils" -> "unicodedata" [];
	"tqdm.utils" -> "warnings" [];
	"tqdm.utils" -> "weakref" [];
	"tqdm.utils" -> "colorama" [];
	"tqdm.utils" -> "struct" [];
	"tqdm.utils" -> "ctypes" [];
	"tqdm.utils" -> "shlex" [];
	"tqdm.utils" -> "subprocess" [];
	"tqdm.utils" -> "array" [];
	"tqdm.utils" -> "fcntl" [];
	"tqdm.utils" -> "termios" [];
	"tqdm.gui" -> "re" [];
	"tqdm.gui" -> "warnings" [];
	"tqdm.gui" -> "collections" [];
	"tqdm.gui" -> "matplotlib" [];
	"tqdm.gui" -> "'matplotlib.pyplot'" [];
	"tqdm.cli" -> "logging" [];
	"tqdm.cli" -> "re" [];
	"tqdm.cli" -> "sys" [];
	"tqdm.cli" -> "ast" [];
	"tqdm.cli" -> "textwrap" [];
	"tqdm.cli" -> "importlib_resources" [];
	"tqdm.cli" -> "importlib" [];
	"tqdm.cli" -> "pathlib" [];
	"tqdm._tqdm_pandas" -> "sys" [];
	"tqdm._monitor" -> "atexit" [];
	"tqdm._monitor" -> "threading" [];
	"tqdm._monitor" -> "time" [];
	"tqdm._monitor" -> "warnings" [];
	"torch.serialization" -> "copyreg" [];
	"torch.serialization" -> "difflib" [];
	"torch.serialization" -> "functools" [];
	"torch.serialization" -> "io" [];
	"torch.serialization" -> "os" [];
	"torch.serialization" -> "pickle" [];
	"torch.serialization" -> "re" [];
	"torch.serialization" -> "shutil" [];
	"torch.serialization" -> "struct" [];
	"torch.serialization" -> "sys" [];
	"torch.serialization" -> "tarfile" [];
	"torch.serialization" -> "tempfile" [];
	"torch.serialization" -> "threading" [];
	"torch.serialization" -> "warnings" [];
	"torch.serialization" -> "contextlib" [];
	"torch.serialization" -> "enum" [];
	"torch.serialization" -> "typing" [];
	"torch.serialization" -> "typing_extensions" [];
	"torch.serialization" -> "mmap" [];
	"torch.nn.utils.weight_norm" -> "typing" [];
	"torch.nn.utils.weight_norm" -> "typing_extensions" [];
	"torch.nn.utils.weight_norm" -> "torch" [];
	"torch.nn.utils.spectral_norm" -> "typing" [];
	"torch.nn.utils.spectral_norm" -> "torch" [];
	"torch.nn.utils.memory_format" -> "torch" [];
	"torch.nn.utils.init" -> "inspect" [];
	"torch.nn.utils.init" -> "torch" [];
	"torch.nn.utils.fusion" -> "__future__" [];
	"torch.nn.utils.fusion" -> "copy" [];
	"torch.nn.utils.fusion" -> "typing" [];
	"torch.nn.utils.fusion" -> "torch" [];
	"torch.nn.utils.convert_parameters" -> "typing" [];
	"torch.nn.utils.convert_parameters" -> "torch" [];
	"torch.nn.utils.clip_grad" -> "functools" [];
	"torch.nn.utils.clip_grad" -> "typing" [];
	"torch.nn.utils.clip_grad" -> "typing_extensions" [];
	"torch.nn.utils.clip_grad" -> "torch" [];
	"torch.utils._foreach_utils" -> "typing" [];
	"torch.utils._foreach_utils" -> "torch" [];
	"torch.utils._foreach_utils" -> "typing_extensions" [];
	"torch.utils" -> "copyreg" [];
	"torch.utils" -> "os.path" [];
	"torch.utils" -> "weakref" [];
	"torch.utils.backend_registration" -> "torch" [];
	"torch.utils.backend_registration" -> "typing" [];
	"torch.overrides" -> "__future__" [];
	"torch.overrides" -> "collections" [];
	"torch.overrides" -> "contextlib" [];
	"torch.overrides" -> "functools" [];
	"torch.overrides" -> "types" [];
	"torch.overrides" -> "warnings" [];
	"torch.overrides" -> "typing" [];
	"torch.utils.hooks" -> "torch" [];
	"torch.utils.hooks" -> "collections" [];
	"torch.utils.hooks" -> "weakref" [];
	"torch.utils.hooks" -> "warnings" [];
	"torch.utils.hooks" -> "typing" [];
	"torch.utils.deterministic" -> "sys" [];
	"torch.utils.deterministic" -> "types" [];
	"torch.utils.deterministic" -> "torch" [];
	"torch.utils.data.sampler" -> "typing" [];
	"torch.utils.data.sampler" -> "torch" [];
	"torch.utils.data.sampler" -> "warnings" [];
	"torch.utils.data.distributed" -> "math" [];
	"torch.utils.data.distributed" -> "typing" [];
	"torch.utils.data.distributed" -> "torch" [];
	"torch.distributed" -> "logging" [];
	"torch.distributed" -> "pdb" [];
	"torch.distributed" -> "sys" [];
	"torch.distributed" -> "traceback" [];
	"torch.distributed" -> "typing" [];
	"torch.distributed" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed._functional_collectives_impl" -> "typing" [];
	"torch.distributed._functional_collectives_impl" -> "torch" [];
	"torch.distributed.rendezvous" -> "numbers" [];
	"torch.distributed.rendezvous" -> "os" [];
	"torch.distributed.rendezvous" -> "sys" [];
	"torch.distributed.rendezvous" -> "datetime" [];
	"torch.distributed.rendezvous" -> "typing" [];
	"torch.distributed.constants" -> "datetime" [];
	"torch.distributed.constants" -> "typing" [];
	"torch.distributed.constants" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed.remote_device" -> "typing" [];
	"torch.distributed.remote_device" -> "torch" [];
	"torch.distributed.distributed_c10d" -> "contextlib" [];
	"torch.distributed.distributed_c10d" -> "hashlib" [];
	"torch.distributed.distributed_c10d" -> "io" [];
	"torch.distributed.distributed_c10d" -> "itertools" [];
	"torch.distributed.distributed_c10d" -> "logging" [];
	"torch.distributed.distributed_c10d" -> "os" [];
	"torch.distributed.distributed_c10d" -> "pickle" [];
	"torch.distributed.distributed_c10d" -> "sys" [];
	"torch.distributed.distributed_c10d" -> "time" [];
	"torch.distributed.distributed_c10d" -> "warnings" [];
	"torch.distributed.distributed_c10d" -> "collections" [];
	"torch.distributed.distributed_c10d" -> "datetime" [];
	"torch.distributed.distributed_c10d" -> "typing" [];
	"torch.distributed.distributed_c10d" -> "typing_extensions" [];
	"torch.distributed.distributed_c10d" -> "torch" [];
	"torch.distributed.distributed_c10d" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed.c10d_logger" -> "functools" [];
	"torch.distributed.c10d_logger" -> "logging" [];
	"torch.distributed.c10d_logger" -> "time" [];
	"torch.distributed.c10d_logger" -> "typing" [];
	"torch.distributed.c10d_logger" -> "typing_extensions" [];
	"torch.distributed.c10d_logger" -> "torch" [];
	"torch.distributed.logging_handlers" -> "logging" [];
	"torch.distributed.logging_handlers" -> "typing" [];
	"torch.utils._typing_utils" -> "typing" [];
	"torch._utils_internal" -> "functools" [];
	"torch._utils_internal" -> "logging" [];
	"torch._utils_internal" -> "os" [];
	"torch._utils_internal" -> "sys" [];
	"torch._utils_internal" -> "tempfile" [];
	"torch._utils_internal" -> "typing" [];
	"torch._utils_internal" -> "shutil" [];
	"torch._utils_internal" -> "triton" [];
	"torch._strobelight.compile_time_profiler" -> "logging" [];
	"torch._strobelight.compile_time_profiler" -> "os" [];
	"torch._strobelight.compile_time_profiler" -> "datetime" [];
	"torch._strobelight.compile_time_profiler" -> "socket" [];
	"torch._strobelight.compile_time_profiler" -> "typing" [];
	"torch._strobelight.compile_time_profiler" -> "shutil" [];
	"torch._strobelight.cli_function_profiler" -> "functools" [];
	"torch._strobelight.cli_function_profiler" -> "logging" [];
	"torch._strobelight.cli_function_profiler" -> "os" [];
	"torch._strobelight.cli_function_profiler" -> "re" [];
	"torch._strobelight.cli_function_profiler" -> "subprocess" [];
	"torch._strobelight.cli_function_profiler" -> "time" [];
	"torch._strobelight.cli_function_profiler" -> "threading" [];
	"torch._strobelight.cli_function_profiler" -> "timeit" [];
	"torch._strobelight.cli_function_profiler" -> "typing" [];
	"timeit" -> "gc" [];
	"timeit" -> "sys" [];
	"timeit" -> "time" [];
	"timeit" -> "itertools" [];
	"timeit" -> "linecache" [];
	"timeit" -> "traceback" [];
	"timeit" -> "getopt" [];
	"timeit" -> "os" [];
	"timeit" -> "warnings" [];
	"torch.distributed.device_mesh" -> "logging" [];
	"torch.distributed.device_mesh" -> "math" [];
	"torch.distributed.device_mesh" -> "threading" [];
	"torch.distributed.device_mesh" -> "functools" [];
	"torch.distributed.device_mesh" -> "itertools" [];
	"torch.distributed.device_mesh" -> "typing" [];
	"torch.distributed.device_mesh" -> "torch" [];
	"torch.distributed.device_mesh" -> "sys" [];
	"torch.utils.data.dataset" -> "bisect" [];
	"torch.utils.data.dataset" -> "itertools" [];
	"torch.utils.data.dataset" -> "math" [];
	"torch.utils.data.dataset" -> "warnings" [];
	"torch.utils.data.dataset" -> "typing" [];
	"torch.utils.data.dataset" -> "typing_extensions" [];
	"torch.utils.data.dataset" -> "torch" [];
	"torch.utils.data.datapipes.datapipe" -> "functools" [];
	"torch.utils.data.datapipes.datapipe" -> "pickle" [];
	"torch.utils.data.datapipes.datapipe" -> "typing" [];
	"torch.utils.data.datapipes.map.utils" -> "copy" [];
	"torch.utils.data.datapipes.map.utils" -> "warnings" [];
	"torch.utils.data.datapipes.map.grouping" -> "typing" [];
	"torch.utils.data.datapipes.map.combining" -> "typing" [];
	"torch.utils.data.datapipes.map.combinatorics" -> "random" [];
	"torch.utils.data.datapipes.map.combinatorics" -> "typing" [];
	"torch.utils.data.datapipes.map.combinatorics" -> "torch" [];
	"torch.utils.data.datapipes.map.callable" -> "typing" [];
	"torch.utils.data.datapipes.iter.utils" -> "copy" [];
	"torch.utils.data.datapipes.iter.utils" -> "warnings" [];
	"torch.utils.data.datapipes.iter.streamreader" -> "typing" [];
	"torch.utils.data.datapipes.iter.sharding" -> "enum" [];
	"torch.utils.data.datapipes.iter.sharding" -> "typing" [];
	"torch.utils.data.datapipes.iter.selecting" -> "typing" [];
	"torch.utils.data.datapipes.dataframe.dataframe_wrapper" -> "typing" [];
	"torch.utils.data.datapipes.dataframe.dataframe_wrapper" -> "pandas" [];
	"torch.utils.data.datapipes.iter.routeddecoder" -> "io" [];
	"torch.utils.data.datapipes.iter.routeddecoder" -> "typing" [];
	"torch.utils.data.datapipes.utils.decoder" -> "io" [];
	"torch.utils.data.datapipes.utils.decoder" -> "json" [];
	"torch.utils.data.datapipes.utils.decoder" -> "os.path" [];
	"torch.utils.data.datapipes.utils.decoder" -> "pickle" [];
	"torch.utils.data.datapipes.utils.decoder" -> "tempfile" [];
	"torch.utils.data.datapipes.utils.decoder" -> "torch" [];
	"torch.utils.data.datapipes.utils.decoder" -> "numpy" [];
	"torch.utils.data.datapipes.utils.decoder" -> "'PIL.Image'" [];
	"torch.utils.data.datapipes.utils.decoder" -> "'torchvision.io'" [];
	"torch.utils.data.datapipes.utils.decoder" -> "torchaudio" [];
	"torch.utils.data.datapipes.utils.decoder" -> "'scipy.io'" [];
	"torch.utils.data.datapipes.iter.grouping" -> "warnings" [];
	"torch.utils.data.datapipes.iter.grouping" -> "collections" [];
	"torch.utils.data.datapipes.iter.grouping" -> "typing" [];
	"torch.utils.data.datapipes.iter.fileopener" -> "io" [];
	"torch.utils.data.datapipes.iter.fileopener" -> "typing" [];
	"torch.utils.data.datapipes.iter.filelister" -> "typing" [];
	"torch.utils.data.datapipes.iter.combining" -> "copy" [];
	"torch.utils.data.datapipes.iter.combining" -> "warnings" [];
	"torch.utils.data.datapipes.iter.combining" -> "abc" [];
	"torch.utils.data.datapipes.iter.combining" -> "collections" [];
	"torch.utils.data.datapipes.iter.combining" -> "typing" [];
	"torch.utils.data.datapipes.iter.combinatorics" -> "random" [];
	"torch.utils.data.datapipes.iter.combinatorics" -> "typing" [];
	"torch.utils.data.datapipes.iter.combinatorics" -> "torch" [];
	"torch.utils.data.datapipes.iter.callable" -> "functools" [];
	"torch.utils.data.datapipes.iter.callable" -> "collections" [];
	"torch.utils.data.datapipes.iter.callable" -> "typing" [];
	"torch.utils.data.datapipes.iter.callable" -> "torcharrow" [];
	"torch.utils.data._utils.collate" -> "collections" [];
	"torch.utils.data._utils.collate" -> "contextlib" [];
	"torch.utils.data._utils.collate" -> "copy" [];
	"torch.utils.data._utils.collate" -> "re" [];
	"torch.utils.data._utils.collate" -> "typing" [];
	"torch.utils.data._utils.collate" -> "torch" [];
	"torch.utils.data._utils.collate" -> "numpy" [];
	"torch.utils.data._utils" -> "atexit" [];
	"torch.utils.data._utils" -> "sys" [];
	"torch.utils.data._utils" -> "numpy" [];
	"torch.utils.data._utils.worker" -> "os" [];
	"torch.utils.data._utils.worker" -> "queue" [];
	"torch.utils.data._utils.worker" -> "random" [];
	"torch.utils.data._utils.worker" -> "dataclasses" [];
	"torch.utils.data._utils.worker" -> "typing" [];
	"torch.utils.data._utils.worker" -> "torch" [];
	"torch.utils.data._utils.worker" -> "ctypes" [];
	"torch.utils.data._utils.worker" -> "numpy" [];
	"torch.utils.data.graph_settings" -> "inspect" [];
	"torch.utils.data.graph_settings" -> "warnings" [];
	"torch.utils.data.graph_settings" -> "typing" [];
	"torch.utils.data.graph_settings" -> "typing_extensions" [];
	"torch.utils.data.graph_settings" -> "torch" [];
	"torch.utils.data.graph" -> "io" [];
	"torch.utils.data.graph" -> "pickle" [];
	"torch.utils.data.graph" -> "warnings" [];
	"torch.utils.data.graph" -> "typing" [];
	"torch.utils.data.graph" -> "dill" [];
	"torch.utils.data._utils.signal_handling" -> "signal" [];
	"torch.utils.data._utils.signal_handling" -> "threading" [];
	"torch.utils.data._utils.pin_memory" -> "collections" [];
	"torch.utils.data._utils.pin_memory" -> "copy" [];
	"torch.utils.data._utils.pin_memory" -> "queue" [];
	"torch.utils.data._utils.pin_memory" -> "torch" [];
	"torch.utils.data.datapipes.dataframe.datapipes" -> "random" [];
	"torch.utils.data.datapipes.dataframe.dataframes" -> "typing" [];
	"torch.utils.data.datapipes.utils.common" -> "fnmatch" [];
	"torch.utils.data.datapipes.utils.common" -> "functools" [];
	"torch.utils.data.datapipes.utils.common" -> "inspect" [];
	"torch.utils.data.datapipes.utils.common" -> "os" [];
	"torch.utils.data.datapipes.utils.common" -> "warnings" [];
	"torch.utils.data.datapipes.utils.common" -> "io" [];
	"torch.utils.data.datapipes.utils.common" -> "typing" [];
	"torch.utils.data.datapipes._typing" -> "collections" [];
	"torch.utils.data.datapipes._typing" -> "functools" [];
	"torch.utils.data.datapipes._typing" -> "numbers" [];
	"torch.utils.data.datapipes._typing" -> "sys" [];
	"torch.utils.data.datapipes._typing" -> "abc" [];
	"torch.utils.data.datapipes._typing" -> "typing" [];
	"torch.utils.data.datapipes._hook_iterator" -> "functools" [];
	"torch.utils.data.datapipes._hook_iterator" -> "inspect" [];
	"torch.utils.data.datapipes._hook_iterator" -> "enum" [];
	"torch.utils.data.datapipes._hook_iterator" -> "torch" [];
	"torch.utils._import_utils" -> "functools" [];
	"torch.utils._import_utils" -> "torch" [];
	"torch.utils._import_utils" -> "dill" [];
	"torch.utils.data.datapipes._decorator" -> "inspect" [];
	"torch.utils.data.datapipes._decorator" -> "functools" [];
	"torch.utils.data.datapipes._decorator" -> "typing" [];
	"torch.utils.data.dataloader" -> "functools" [];
	"torch.utils.data.dataloader" -> "itertools" [];
	"torch.utils.data.dataloader" -> "logging" [];
	"torch.utils.data.dataloader" -> "multiprocessing" [];
	"torch.utils.data.dataloader" -> "os" [];
	"torch.utils.data.dataloader" -> "queue" [];
	"torch.utils.data.dataloader" -> "threading" [];
	"torch.utils.data.dataloader" -> "warnings" [];
	"torch.utils.data.dataloader" -> "typing" [];
	"torch.utils.data.dataloader" -> "torch" [];
	"torch.utils.data.dataloader" -> "math" [];
	"torch.utils.data.dataloader" -> "atexit" [];
	"torch.utils.data.dataloader" -> "errno" [];
	"torch.utils.data.dataloader" -> "tempfile" [];
	"torch.utils.collect_env" -> "datetime" [];
	"torch.utils.collect_env" -> "locale" [];
	"torch.utils.collect_env" -> "re" [];
	"torch.utils.collect_env" -> "subprocess" [];
	"torch.utils.collect_env" -> "sys" [];
	"torch.utils.collect_env" -> "os" [];
	"torch.utils.collect_env" -> "collections" [];
	"torch.utils.collect_env" -> "torch" [];
	"torch.utils.collect_env" -> "platform" [];
	"torch.backends.xnnpack" -> "sys" [];
	"torch.backends.xnnpack" -> "types" [];
	"torch.backends.xnnpack" -> "torch" [];
	"torch.backends" -> "types" [];
	"torch.backends" -> "contextlib" [];
	"torch.backends.quantized" -> "sys" [];
	"torch.backends.quantized" -> "types" [];
	"torch.backends.quantized" -> "typing" [];
	"torch.backends.quantized" -> "torch" [];
	"torch.backends.openmp" -> "torch" [];
	"torch.backends.nnpack" -> "contextlib" [];
	"torch.backends.nnpack" -> "torch" [];
	"torch.backends.mps" -> "functools" [];
	"torch.backends.mps" -> "typing" [];
	"torch.backends.mps" -> "torch" [];
	"torch._refs" -> "builtins" [];
	"torch._refs" -> "collections" [];
	"torch._refs" -> "inspect" [];
	"torch._refs" -> "itertools" [];
	"torch._refs" -> "math" [];
	"torch._refs" -> "operator" [];
	"torch._refs" -> "warnings" [];
	"torch._refs" -> "enum" [];
	"torch._refs" -> "functools" [];
	"torch._refs" -> "typing" [];
	"torch._refs.special" -> "math" [];
	"torch._refs.special" -> "typing" [];
	"torch._refs.special" -> "torch" [];
	"torch._refs.nn.functional" -> "math" [];
	"torch._refs.nn.functional" -> "functools" [];
	"torch._refs.nn.functional" -> "typing" [];
	"torch._refs.nn.functional" -> "torch" [];
	"torch._refs.nn" -> "typing" [];
	"torch._meta_registrations" -> "math" [];
	"torch._meta_registrations" -> "enum" [];
	"torch._meta_registrations" -> "typing" [];
	"torch._ops" -> "abc" [];
	"torch._ops" -> "contextlib" [];
	"torch._ops" -> "ctypes" [];
	"torch._ops" -> "importlib" [];
	"torch._ops" -> "inspect" [];
	"torch._ops" -> "sys" [];
	"torch._ops" -> "types" [];
	"torch._ops" -> "typing" [];
	"torch._higher_order_ops.effects" -> "enum" [];
	"torch._higher_order_ops.effects" -> "typing" [];
	"torch._higher_order_ops.effects" -> "weakref" [];
	"torch._higher_order_ops.effects" -> "torch" [];
	"torch._higher_order_ops.torchbind" -> "logging" [];
	"torch._higher_order_ops.torchbind" -> "contextlib" [];
	"torch._higher_order_ops.torchbind" -> "torch" [];
	"torch._library.fake_class_registry" -> "logging" [];
	"torch._library.fake_class_registry" -> "typing" [];
	"torch._library.fake_class_registry" -> "torch" [];
	"torch._library.triton" -> "contextlib" [];
	"torch._library.triton" -> "threading" [];
	"torch._library.triton" -> "typing" [];
	"torch._library.triton" -> "'triton.runtime'" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "collections" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "copy" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "dataclasses" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "inspect" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "logging" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "threading" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "typing" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "torch" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "sympy" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "triton" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "'triton.compiler'" [];
	"torch._higher_order_ops.triton_kernel_wrap" -> "'triton.runtime'" [];
	"torch._inductor.codegen.wrapper" -> "__future__" [];
	"torch._inductor.codegen.wrapper" -> "collections" [];
	"torch._inductor.codegen.wrapper" -> "contextlib" [];
	"torch._inductor.codegen.wrapper" -> "dataclasses" [];
	"torch._inductor.codegen.wrapper" -> "dis" [];
	"torch._inductor.codegen.wrapper" -> "functools" [];
	"torch._inductor.codegen.wrapper" -> "inspect" [];
	"torch._inductor.codegen.wrapper" -> "logging" [];
	"torch._inductor.codegen.wrapper" -> "operator" [];
	"torch._inductor.codegen.wrapper" -> "re" [];
	"torch._inductor.codegen.wrapper" -> "tempfile" [];
	"torch._inductor.codegen.wrapper" -> "itertools" [];
	"torch._inductor.codegen.wrapper" -> "typing" [];
	"torch._inductor.codegen.wrapper" -> "sympy" [];
	"torch._inductor.codegen.wrapper" -> "torch" [];
	"torch._inductor.codegen.wrapper" -> "triton" [];
	"torch._inductor.codegen.wrapper" -> "copy" [];
	"torch._inductor.codegen.wrapper" -> "pickle" [];
	"torch._inductor.codegen.wrapper" -> "'triton.language'" [];
	"torch._inductor.codegen.triton" -> "__future__" [];
	"torch._inductor.codegen.triton" -> "dataclasses" [];
	"torch._inductor.codegen.triton" -> "functools" [];
	"torch._inductor.codegen.triton" -> "itertools" [];
	"torch._inductor.codegen.triton" -> "logging" [];
	"torch._inductor.codegen.triton" -> "os" [];
	"torch._inductor.codegen.triton" -> "textwrap" [];
	"torch._inductor.codegen.triton" -> "typing" [];
	"torch._inductor.codegen.triton" -> "sympy" [];
	"torch._inductor.codegen.triton" -> "torch" [];
	"torch._inductor.codegen.triton" -> "'triton.compiler'" [];
	"torch._inductor.scheduler" -> "__future__" [];
	"torch._inductor.scheduler" -> "collections" [];
	"torch._inductor.scheduler" -> "dataclasses" [];
	"torch._inductor.scheduler" -> "functools" [];
	"torch._inductor.scheduler" -> "itertools" [];
	"torch._inductor.scheduler" -> "logging" [];
	"torch._inductor.scheduler" -> "math" [];
	"torch._inductor.scheduler" -> "operator" [];
	"torch._inductor.scheduler" -> "os" [];
	"torch._inductor.scheduler" -> "pprint" [];
	"torch._inductor.scheduler" -> "textwrap" [];
	"torch._inductor.scheduler" -> "traceback" [];
	"torch._inductor.scheduler" -> "typing" [];
	"torch._inductor.scheduler" -> "sympy" [];
	"torch._inductor.scheduler" -> "torch" [];
	"torch._inductor.scheduler" -> "'triton.compiler'" [];
	"torch._inductor.codegen.cuda_combined_scheduling" -> "typing" [];
	"torch._inductor.codegen.rocm.rocm_cpp_scheduling" -> "logging" [];
	"torch._inductor.codegen.rocm.rocm_cpp_scheduling" -> "typing" [];
	"torch._inductor.codegen.cuda.cuda_cpp_scheduling" -> "logging" [];
	"torch._inductor.codegen.cuda.cuda_cpp_scheduling" -> "typing" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "functools" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "logging" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "os" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "sys" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "dataclasses" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "pathlib" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "typing" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "sympy" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "torch" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "cutlass_library" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "'cutlass_library.library'" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "'cutlass_library.manifest'" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "'cutlass_library.generator'" [];
	"torch._inductor.codegen.cuda.cuda_env" -> "functools" [];
	"torch._inductor.codegen.cuda.cuda_env" -> "logging" [];
	"torch._inductor.codegen.cuda.cuda_env" -> "typing" [];
	"torch._inductor.codegen.cuda.cuda_env" -> "torch" [];
	"torch._inductor.codegen.cuda.cuda_env" -> "subprocess" [];
	"torch._dynamo.convert_frame" -> "__future__" [];
	"torch._dynamo.convert_frame" -> "collections" [];
	"torch._dynamo.convert_frame" -> "contextlib" [];
	"torch._dynamo.convert_frame" -> "cProfile" [];
	"torch._dynamo.convert_frame" -> "dis" [];
	"torch._dynamo.convert_frame" -> "functools" [];
	"torch._dynamo.convert_frame" -> "itertools" [];
	"torch._dynamo.convert_frame" -> "logging" [];
	"torch._dynamo.convert_frame" -> "os" [];
	"torch._dynamo.convert_frame" -> "pstats" [];
	"torch._dynamo.convert_frame" -> "random" [];
	"torch._dynamo.convert_frame" -> "subprocess" [];
	"torch._dynamo.convert_frame" -> "sys" [];
	"torch._dynamo.convert_frame" -> "threading" [];
	"torch._dynamo.convert_frame" -> "time" [];
	"torch._dynamo.convert_frame" -> "traceback" [];
	"torch._dynamo.convert_frame" -> "typing" [];
	"torch._dynamo.convert_frame" -> "weakref" [];
	"torch._dynamo.convert_frame" -> "pathlib" [];
	"torch._dynamo.convert_frame" -> "types" [];
	"torch._dynamo.convert_frame" -> "typing_extensions" [];
	"torch._dynamo.convert_frame" -> "torch" [];
	"torch._dynamo.convert_frame" -> "'torch._C._dynamo'" [];
	"torch._dynamo.convert_frame" -> "numpy" [];
	"torch._dynamo.convert_frame" -> "inspect" [];
	"torch._dynamo.backends.distributed" -> "logging" [];
	"torch._dynamo.backends.distributed" -> "traceback" [];
	"torch._dynamo.backends.distributed" -> "dataclasses" [];
	"torch._dynamo.backends.distributed" -> "typing" [];
	"torch._dynamo.backends.distributed" -> "unittest" [];
	"torch._dynamo.backends.distributed" -> "torch" [];
	"torch._dynamo.backends.distributed" -> "tabulate" [];
	"torch._dynamo.backends.debugging" -> "dataclasses" [];
	"torch._dynamo.backends.debugging" -> "functools" [];
	"torch._dynamo.backends.debugging" -> "logging" [];
	"torch._dynamo.backends.debugging" -> "importlib" [];
	"torch._dynamo.backends.debugging" -> "typing" [];
	"torch._dynamo.backends.debugging" -> "torch" [];
	"torch._dynamo.backends.common" -> "contextlib" [];
	"torch._dynamo.backends.common" -> "functools" [];
	"torch._dynamo.backends.common" -> "logging" [];
	"torch._dynamo.backends.common" -> "torch" [];
	"torch._functorch.aot_autograd" -> "itertools" [];
	"torch._functorch.aot_autograd" -> "contextlib" [];
	"torch._functorch.aot_autograd" -> "functools" [];
	"torch._functorch.aot_autograd" -> "typing" [];
	"torch._functorch.aot_autograd" -> "torch" [];
	"torch._dynamo.source" -> "collections" [];
	"torch._dynamo.source" -> "dataclasses" [];
	"torch._dynamo.source" -> "enum" [];
	"torch._dynamo.source" -> "typing" [];
	"torch._dynamo.variables.torch_function" -> "inspect" [];
	"torch._dynamo.variables.torch_function" -> "typing" [];
	"torch._dynamo.variables.torch_function" -> "collections" [];
	"torch._dynamo.variables.torch_function" -> "torch" [];
	"torch._dynamo.variables.torch" -> "functools" [];
	"torch._dynamo.variables.torch" -> "inspect" [];
	"torch._dynamo.variables.torch" -> "logging" [];
	"torch._dynamo.variables.torch" -> "math" [];
	"torch._dynamo.variables.torch" -> "re" [];
	"torch._dynamo.variables.torch" -> "typing" [];
	"torch._dynamo.variables.torch" -> "numpy" [];
	"torch._dynamo.tensor_version_op" -> "torch" [];
	"torch.distributed.tensor" -> "torch" [];
	"torch.optim.optimizer" -> "functools" [];
	"torch.optim.optimizer" -> "warnings" [];
	"torch.optim.optimizer" -> "collections" [];
	"torch.optim.optimizer" -> "copy" [];
	"torch.optim.optimizer" -> "itertools" [];
	"torch.optim.optimizer" -> "typing" [];
	"torch.optim.optimizer" -> "typing_extensions" [];
	"torch.optim.optimizer" -> "torch" [];
	"torch.optim.optimizer" -> "inspect" [];
	"torch.optim.sparse_adam" -> "typing" [];
	"torch.optim.sparse_adam" -> "torch" [];
	"torch.optim._functional" -> "math" [];
	"torch.optim._functional" -> "typing" [];
	"torch.optim._functional" -> "torch" [];
	"torch.optim.sgd" -> "typing" [];
	"torch.optim.sgd" -> "torch" [];
	"torch.optim.rprop" -> "typing" [];
	"torch.optim.rprop" -> "torch" [];
	"torch.optim.rmsprop" -> "typing" [];
	"torch.optim.rmsprop" -> "torch" [];
	"torch.optim.radam" -> "typing" [];
	"torch.optim.radam" -> "torch" [];
	"torch.optim.nadam" -> "typing" [];
	"torch.optim.nadam" -> "torch" [];
	"torch.optim.lbfgs" -> "typing" [];
	"torch.optim.lbfgs" -> "torch" [];
	"torch.optim.asgd" -> "typing" [];
	"torch.optim.asgd" -> "torch" [];
	"torch.optim.adamw" -> "typing" [];
	"torch.optim.adamw" -> "torch" [];
	"torch.optim.adamax" -> "typing" [];
	"torch.optim.adamax" -> "torch" [];
	"torch.optim.adam" -> "typing" [];
	"torch.optim.adam" -> "torch" [];
	"torch.optim.adagrad" -> "typing" [];
	"torch.optim.adagrad" -> "torch" [];
	"torch.optim.adadelta" -> "typing" [];
	"torch.optim.adadelta" -> "torch" [];
	"torch.optim._adafactor" -> "typing" [];
	"torch.optim._adafactor" -> "torch" [];
	"torch.optim.swa_utils" -> "itertools" [];
	"torch.optim.swa_utils" -> "math" [];
	"torch.optim.swa_utils" -> "warnings" [];
	"torch.optim.swa_utils" -> "copy" [];
	"torch.optim.swa_utils" -> "typing" [];
	"torch.optim.swa_utils" -> "torch" [];
	"torch.optim.lr_scheduler" -> "math" [];
	"torch.optim.lr_scheduler" -> "types" [];
	"torch.optim.lr_scheduler" -> "warnings" [];
	"torch.optim.lr_scheduler" -> "bisect" [];
	"torch.optim.lr_scheduler" -> "collections" [];
	"torch.optim.lr_scheduler" -> "functools" [];
	"torch.optim.lr_scheduler" -> "typing" [];
	"torch.optim.lr_scheduler" -> "weakref" [];
	"torch.optim.lr_scheduler" -> "torch" [];
	"torch.distributed.tensor.placement_types" -> "dataclasses" [];
	"torch.distributed.tensor.placement_types" -> "typing" [];
	"torch.distributed.tensor.placement_types" -> "torch" [];
	"torch.distributed.tensor._collective_utils" -> "logging" [];
	"torch.distributed.tensor._collective_utils" -> "math" [];
	"torch.distributed.tensor._collective_utils" -> "dataclasses" [];
	"torch.distributed.tensor._collective_utils" -> "functools" [];
	"torch.distributed.tensor._collective_utils" -> "typing" [];
	"torch.distributed.tensor._collective_utils" -> "torch" [];
	"torch.distributed.tensor._collective_utils" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed.tensor._collective_utils" -> "warnings" [];
	"torch.distributed.tensor._dtensor_spec" -> "dataclasses" [];
	"torch.distributed.tensor._dtensor_spec" -> "typing" [];
	"torch.distributed.tensor._dtensor_spec" -> "torch" [];
	"torch.distributed._functional_collectives" -> "sys" [];
	"torch.distributed._functional_collectives" -> "warnings" [];
	"torch.distributed._functional_collectives" -> "typing" [];
	"torch.distributed._functional_collectives" -> "torch" [];
	"torch.compiler" -> "typing" [];
	"torch._dynamo.external_utils" -> "functools" [];
	"torch._dynamo.external_utils" -> "warnings" [];
	"torch._dynamo.external_utils" -> "typing" [];
	"torch._dynamo.external_utils" -> "torch" [];
	"torch._dynamo.external_utils" -> "numpy" [];
	"torch._inductor.cudagraph_trees" -> "__future__" [];
	"torch._inductor.cudagraph_trees" -> "contextlib" [];
	"torch._inductor.cudagraph_trees" -> "dataclasses" [];
	"torch._inductor.cudagraph_trees" -> "functools" [];
	"torch._inductor.cudagraph_trees" -> "gc" [];
	"torch._inductor.cudagraph_trees" -> "itertools" [];
	"torch._inductor.cudagraph_trees" -> "operator" [];
	"torch._inductor.cudagraph_trees" -> "sys" [];
	"torch._inductor.cudagraph_trees" -> "threading" [];
	"torch._inductor.cudagraph_trees" -> "traceback" [];
	"torch._inductor.cudagraph_trees" -> "warnings" [];
	"torch._inductor.cudagraph_trees" -> "weakref" [];
	"torch._inductor.cudagraph_trees" -> "collections" [];
	"torch._inductor.cudagraph_trees" -> "enum" [];
	"torch._inductor.cudagraph_trees" -> "typing" [];
	"torch._inductor.cudagraph_trees" -> "torch" [];
	"torch.utils.weak" -> "__future__" [];
	"torch.utils.weak" -> "weakref" [];
	"torch.utils.weak" -> "_weakrefset" [];
	"torch.utils.weak" -> "torch" [];
	"torch.utils.weak" -> "copy" [];
	"torch.multiprocessing.reductions" -> "multiprocessing" [];
	"torch.multiprocessing.reductions" -> "os" [];
	"torch.multiprocessing.reductions" -> "threading" [];
	"torch.multiprocessing.reductions" -> "typing" [];
	"torch.multiprocessing.reductions" -> "torch" [];
	"torch.nested._internal.nested_tensor" -> "typing" [];
	"torch.nested._internal.nested_tensor" -> "torch" [];
	"torch.nested._internal.ops" -> "functools" [];
	"torch.nested._internal.ops" -> "math" [];
	"torch.nested._internal.ops" -> "operator" [];
	"torch.nested._internal.ops" -> "typing" [];
	"torch.nested._internal.ops" -> "torch" [];
	"torch.nested._internal.sdpa" -> "logging" [];
	"torch.nested._internal.sdpa" -> "typing" [];
	"torch.nested._internal.sdpa" -> "torch" [];
	"torch.fx.operator_schemas" -> "torch" [];
	"torch.fx.operator_schemas" -> "inspect" [];
	"torch.fx.operator_schemas" -> "numbers" [];
	"torch.fx.operator_schemas" -> "types" [];
	"torch.fx.operator_schemas" -> "typing" [];
	"torch.fx.operator_schemas" -> "enum" [];
	"torch.fx.operator_schemas" -> "warnings" [];
	"torch._jit_internal" -> "ast" [];
	"torch._jit_internal" -> "builtins" [];
	"torch._jit_internal" -> "collections" [];
	"torch._jit_internal" -> "contextlib" [];
	"torch._jit_internal" -> "enum" [];
	"torch._jit_internal" -> "inspect" [];
	"torch._jit_internal" -> "io" [];
	"torch._jit_internal" -> "pickle" [];
	"torch._jit_internal" -> "sys" [];
	"torch._jit_internal" -> "textwrap" [];
	"torch._jit_internal" -> "threading" [];
	"torch._jit_internal" -> "types" [];
	"torch._jit_internal" -> "typing" [];
	"torch._jit_internal" -> "warnings" [];
	"torch._jit_internal" -> "weakref" [];
	"torch._jit_internal" -> "_thread" [];
	"torch._jit_internal" -> "_dummy_thread" [];
	"torch._jit_internal" -> "'torch._C._distributed_rpc'" [];
	"torch.futures" -> "__future__" [];
	"torch.futures" -> "typing" [];
	"torch._awaits" -> "__future__" [];
	"torch._awaits" -> "typing" [];
	"torch.package._mangling" -> "re" [];
	"torch.package.package_importer" -> "builtins" [];
	"torch.package.package_importer" -> "importlib" [];
	"torch.package.package_importer" -> "inspect" [];
	"torch.package.package_importer" -> "io" [];
	"torch.package.package_importer" -> "linecache" [];
	"torch.package.package_importer" -> "os" [];
	"torch.package.package_importer" -> "types" [];
	"torch.package.package_importer" -> "contextlib" [];
	"torch.package.package_importer" -> "typing" [];
	"torch.package.package_importer" -> "weakref" [];
	"torch.package.package_importer" -> "torch" [];
	"torch.package.package_importer" -> "pathlib" [];
	"torch.package._package_unpickler" -> "_compat_pickle" [];
	"torch.package._package_unpickler" -> "pickle" [];
	"torch.package._importlib" -> "_warnings" [];
	"torch.package._importlib" -> "os.path" [];
	"torch.package._directory_reader" -> "os.path" [];
	"torch.package._directory_reader" -> "glob" [];
	"torch.package._directory_reader" -> "typing" [];
	"torch.package._directory_reader" -> "torch" [];
	"torch.package.package_exporter" -> "collections" [];
	"torch.package.package_exporter" -> "io" [];
	"torch.package.package_exporter" -> "linecache" [];
	"torch.package.package_exporter" -> "pickletools" [];
	"torch.package.package_exporter" -> "platform" [];
	"torch.package.package_exporter" -> "types" [];
	"torch.package.package_exporter" -> "dataclasses" [];
	"torch.package.package_exporter" -> "enum" [];
	"torch.package.package_exporter" -> "pathlib" [];
	"torch.package.package_exporter" -> "typing" [];
	"torch.package.package_exporter" -> "torch" [];
	"torch.package.find_file_dependencies" -> "ast" [];
	"torch.package.find_file_dependencies" -> "typing" [];
	"torch.package._stdlib" -> "sys" [];
	"torch.package._package_pickler" -> "pickle" [];
	"torch.package._package_pickler" -> "struct" [];
	"torch.package._package_pickler" -> "types" [];
	"torch.package._digraph" -> "collections" [];
	"torch.package._digraph" -> "typing" [];
	"pickletools" -> "codecs" [];
	"pickletools" -> "io" [];
	"pickletools" -> "pickle" [];
	"pickletools" -> "re" [];
	"pickletools" -> "sys" [];
	"pickletools" -> "struct" [];
	"pickletools" -> "doctest" [];
	"pickletools" -> "argparse" [];
	"torch.package.importer" -> "importlib" [];
	"torch.package.importer" -> "abc" [];
	"torch.package.importer" -> "pickle" [];
	"torch.package.importer" -> "types" [];
	"torch.package.importer" -> "typing" [];
	"torch.package.glob_group" -> "re" [];
	"torch.package.glob_group" -> "typing" [];
	"torch.package.file_structure_representation" -> "typing" [];
	"torch.package.analyze.is_from_package" -> "types" [];
	"torch.package.analyze.is_from_package" -> "typing" [];
	"torch.package.analyze.trace_dependencies" -> "sys" [];
	"torch.package.analyze.trace_dependencies" -> "typing" [];
	"torch.package.analyze.find_first_use_of_broken_modules" -> "typing" [];
	"torch.distributed.rpc" -> "logging" [];
	"torch.distributed.rpc" -> "os" [];
	"torch.distributed.rpc" -> "threading" [];
	"torch.distributed.rpc" -> "warnings" [];
	"torch.distributed.rpc" -> "datetime" [];
	"torch.distributed.rpc" -> "typing" [];
	"torch.distributed.rpc" -> "torch" [];
	"torch.distributed.rpc" -> "numbers" [];
	"torch.distributed.rpc" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed.rpc" -> "'torch._C._distributed_rpc'" [];
	"torch.distributed.rpc.server_process_global_profiler" -> "itertools" [];
	"torch.distributed.rpc.server_process_global_profiler" -> "typing" [];
	"torch.distributed.rpc.server_process_global_profiler" -> "torch" [];
	"torch.autograd.profiler_legacy" -> "itertools" [];
	"torch.autograd.profiler_legacy" -> "warnings" [];
	"torch.autograd.profiler_legacy" -> "typing_extensions" [];
	"torch.autograd.profiler_legacy" -> "torch" [];
	"torch.autograd.profiler_util" -> "bisect" [];
	"torch.autograd.profiler_util" -> "itertools" [];
	"torch.autograd.profiler_util" -> "math" [];
	"torch.autograd.profiler_util" -> "collections" [];
	"torch.autograd.profiler_util" -> "operator" [];
	"torch.autograd.profiler_util" -> "typing" [];
	"torch.autograd.profiler_util" -> "typing_extensions" [];
	"torch.autograd.profiler_util" -> "torch" [];
	"torch.autograd.profiler_util" -> "os" [];
	"torch.autograd" -> "warnings" [];
	"torch.autograd" -> "typing" [];
	"torch.autograd" -> "'torch._C._autograd'" [];
	"torch.autograd" -> "'torch._C._profiler'" [];
	"torch.autograd.profiler" -> "collections" [];
	"torch.autograd.profiler" -> "dataclasses" [];
	"torch.autograd.profiler" -> "time" [];
	"torch.autograd.profiler" -> "typing" [];
	"torch.autograd.profiler" -> "warnings" [];
	"torch.autograd.profiler" -> "torch" [];
	"torch.autograd.profiler" -> "'torch._C._profiler'" [];
	"torch.autograd.profiler" -> "contextlib" [];
	"torch.autograd.profiler" -> "functools" [];
	"torch.autograd.profiler" -> "sqlite3" [];
	"sqlite3" -> "warnings" [];
	"sqlite3.dbapi2" -> "datetime" [];
	"sqlite3.dbapi2" -> "time" [];
	"sqlite3.dbapi2" -> "_sqlite3" [];
	"sqlite3.dbapi2" -> "warnings" [];
	"torch.autograd.variable" -> "torch" [];
	"torch.autograd.gradcheck" -> "collections" [];
	"torch.autograd.gradcheck" -> "functools" [];
	"torch.autograd.gradcheck" -> "warnings" [];
	"torch.autograd.gradcheck" -> "itertools" [];
	"torch.autograd.gradcheck" -> "typing" [];
	"torch.autograd.gradcheck" -> "typing_extensions" [];
	"torch.autograd.gradcheck" -> "torch" [];
	"torch.testing._creation" -> "math" [];
	"torch.testing._creation" -> "warnings" [];
	"torch.testing._creation" -> "typing" [];
	"torch.testing._creation" -> "torch" [];
	"torch.testing._comparison" -> "abc" [];
	"torch.testing._comparison" -> "cmath" [];
	"torch.testing._comparison" -> "contextlib" [];
	"torch.testing._comparison" -> "typing" [];
	"torch.testing._comparison" -> "typing_extensions" [];
	"torch.testing._comparison" -> "torch" [];
	"torch.testing._comparison" -> "numpy" [];
	"torch.testing._utils" -> "contextlib" [];
	"torch.testing._utils" -> "torch" [];
	"torch.autograd.anomaly_mode" -> "warnings" [];
	"torch.autograd.anomaly_mode" -> "torch" [];
	"torch.autograd.graph" -> "abc" [];
	"torch.autograd.graph" -> "contextlib" [];
	"torch.autograd.graph" -> "functools" [];
	"torch.autograd.graph" -> "logging" [];
	"torch.autograd.graph" -> "threading" [];
	"torch.autograd.graph" -> "collections" [];
	"torch.autograd.graph" -> "typing" [];
	"torch.autograd.graph" -> "typing_extensions" [];
	"torch.autograd.graph" -> "weakref" [];
	"torch.autograd.graph" -> "torch" [];
	"torch.testing._internal.common_utils" -> "argparse" [];
	"torch.testing._internal.common_utils" -> "contextlib" [];
	"torch.testing._internal.common_utils" -> "copy" [];
	"torch.testing._internal.common_utils" -> "ctypes" [];
	"torch.testing._internal.common_utils" -> "errno" [];
	"torch.testing._internal.common_utils" -> "functools" [];
	"torch.testing._internal.common_utils" -> "gc" [];
	"torch.testing._internal.common_utils" -> "hashlib" [];
	"torch.testing._internal.common_utils" -> "inspect" [];
	"torch.testing._internal.common_utils" -> "io" [];
	"torch.testing._internal.common_utils" -> "json" [];
	"torch.testing._internal.common_utils" -> "logging" [];
	"torch.testing._internal.common_utils" -> "math" [];
	"torch.testing._internal.common_utils" -> "operator" [];
	"torch.testing._internal.common_utils" -> "os" [];
	"torch.testing._internal.common_utils" -> "platform" [];
	"torch.testing._internal.common_utils" -> "random" [];
	"torch.testing._internal.common_utils" -> "re" [];
	"torch.testing._internal.common_utils" -> "shutil" [];
	"torch.testing._internal.common_utils" -> "signal" [];
	"torch.testing._internal.common_utils" -> "socket" [];
	"torch.testing._internal.common_utils" -> "subprocess" [];
	"torch.testing._internal.common_utils" -> "sys" [];
	"torch.testing._internal.common_utils" -> "tempfile" [];
	"torch.testing._internal.common_utils" -> "threading" [];
	"torch.testing._internal.common_utils" -> "time" [];
	"torch.testing._internal.common_utils" -> "types" [];
	"torch.testing._internal.common_utils" -> "unittest" [];
	"torch.testing._internal.common_utils" -> "warnings" [];
	"torch.testing._internal.common_utils" -> "dataclasses" [];
	"torch.testing._internal.common_utils" -> "enum" [];
	"torch.testing._internal.common_utils" -> "itertools" [];
	"torch.testing._internal.common_utils" -> "pathlib" [];
	"torch.testing._internal.common_utils" -> "statistics" [];
	"torch.testing._internal.common_utils" -> "typing" [];
	"torch.testing._internal.common_utils" -> "expecttest" [];
	"torch.testing._internal.common_utils" -> "numpy" [];
	"torch.testing._internal.common_utils" -> "torch" [];
	"torch.testing._internal.common_utils" -> "pytest" [];
	"torch.testing._internal.common_utils" -> "xmlrunner" [];
	"torch.testing._internal.common_utils" -> "'xmlrunner.result'" [];
	"torch.testing._internal.common_utils" -> "hypothesis" [];
	"torch.testing._internal.common_utils" -> "urllib" [];
	"torch.testing._internal.dynamo_test_failures" -> "logging" [];
	"torch.testing._internal.dynamo_test_failures" -> "os" [];
	"torch.testing._internal.dynamo_test_failures" -> "sys" [];
	"torch.testing._internal.dynamo_test_failures" -> "os.path" [];
	"torch.testing._internal.common_device_type" -> "copy" [];
	"torch.testing._internal.common_device_type" -> "gc" [];
	"torch.testing._internal.common_device_type" -> "inspect" [];
	"torch.testing._internal.common_device_type" -> "os" [];
	"torch.testing._internal.common_device_type" -> "runpy" [];
	"torch.testing._internal.common_device_type" -> "sys" [];
	"torch.testing._internal.common_device_type" -> "threading" [];
	"torch.testing._internal.common_device_type" -> "unittest" [];
	"torch.testing._internal.common_device_type" -> "collections" [];
	"torch.testing._internal.common_device_type" -> "enum" [];
	"torch.testing._internal.common_device_type" -> "functools" [];
	"torch.testing._internal.common_device_type" -> "typing" [];
	"torch.testing._internal.common_device_type" -> "torch" [];
	"torch.testing._internal.common_device_type" -> "psutil" [];
	"torch._lazy.ts_backend" -> "'torch._C._lazy_ts_backend'" [];
	"torch._lazy.metrics" -> "'torch._C._lazy'" [];
	"torch._lazy" -> "'torch._C._lazy'" [];
	"torch._lazy.closure" -> "os" [];
	"torch._lazy.closure" -> "threading" [];
	"torch._lazy.closure" -> "queue" [];
	"torch._lazy.device_context" -> "threading" [];
	"torch._lazy.device_context" -> "typing" [];
	"torch._lazy.device_context" -> "'torch._C._lazy'" [];
	"torch.testing._internal.common_cuda" -> "functools" [];
	"torch.testing._internal.common_cuda" -> "torch" [];
	"torch.testing._internal.common_cuda" -> "inspect" [];
	"torch.testing._internal.common_cuda" -> "contextlib" [];
	"torch.testing._internal.common_cuda" -> "os" [];
	"torch.testing._internal.common_cuda" -> "numba" [];
	"torch.testing._internal.common_dtype" -> "typing" [];
	"torch.testing._internal.common_dtype" -> "torch" [];
	"torch.onnx" -> "__future__" [];
	"torch.onnx" -> "typing" [];
	"torch.onnx" -> "'torch._C._onnx'" [];
	"torch.onnx" -> "os" [];
	"torch.onnx" -> "warnings" [];
	"torch.onnx._flags" -> "logging" [];
	"torch.onnx._flags" -> "os" [];
	"torch.onnx._internal.exporter._compat" -> "__future__" [];
	"torch.onnx._internal.exporter._compat" -> "inspect" [];
	"torch.onnx._internal.exporter._compat" -> "logging" [];
	"torch.onnx._internal.exporter._compat" -> "typing" [];
	"torch.onnx._internal.exporter._compat" -> "torch" [];
	"torch.onnx._internal.exporter._compat" -> "os" [];
	"torch.onnx._internal._lazy_import" -> "__future__" [];
	"torch.onnx._internal._lazy_import" -> "importlib" [];
	"torch.onnx._internal._lazy_import" -> "typing" [];
	"torch.onnx._internal._lazy_import" -> "onnx" [];
	"torch.onnx._internal._lazy_import" -> "onnxscript" [];
	"torch.onnx._internal._lazy_import" -> "'onnxscript._framework_apis'" [];
	"torch.onnx._internal.exporter._testing" -> "__future__" [];
	"torch.onnx._internal.exporter._testing" -> "typing" [];
	"torch.onnx._internal.exporter._testing" -> "torch" [];
	"torch.onnx._internal.exporter._core" -> "__future__" [];
	"torch.onnx._internal.exporter._core" -> "ctypes" [];
	"torch.onnx._internal.exporter._core" -> "datetime" [];
	"torch.onnx._internal.exporter._core" -> "inspect" [];
	"torch.onnx._internal.exporter._core" -> "itertools" [];
	"torch.onnx._internal.exporter._core" -> "logging" [];
	"torch.onnx._internal.exporter._core" -> "operator" [];
	"torch.onnx._internal.exporter._core" -> "pathlib" [];
	"torch.onnx._internal.exporter._core" -> "textwrap" [];
	"torch.onnx._internal.exporter._core" -> "traceback" [];
	"torch.onnx._internal.exporter._core" -> "typing" [];
	"torch.onnx._internal.exporter._core" -> "onnxscript" [];
	"torch.onnx._internal.exporter._core" -> "'onnxscript.evaluator'" [];
	"torch.onnx._internal.exporter._core" -> "'onnxscript.ir'" [];
	"torch.onnx._internal.exporter._core" -> "torch" [];
	"torch.onnx._internal.exporter._core" -> "os" [];
	"torch.onnx._internal.exporter._core" -> "numpy" [];
	"torch.onnx._internal.exporter._core" -> "pyinstrument" [];
	"torch.export.graph_signature" -> "dataclasses" [];
	"torch.export.graph_signature" -> "enum" [];
	"torch.export.graph_signature" -> "typing" [];
	"torch.export.graph_signature" -> "torch" [];
	"torch.export.graph_signature" -> "types" [];
	"torch.export" -> "builtins" [];
	"torch.export" -> "copy" [];
	"torch.export" -> "dataclasses" [];
	"torch.export" -> "inspect" [];
	"torch.export" -> "io" [];
	"torch.export" -> "os" [];
	"torch.export" -> "sys" [];
	"torch.export" -> "typing" [];
	"torch.export" -> "warnings" [];
	"torch.export" -> "zipfile" [];
	"torch.export" -> "enum" [];
	"torch._export.utils" -> "ast" [];
	"torch._export.utils" -> "dataclasses" [];
	"torch._export.utils" -> "inspect" [];
	"torch._export.utils" -> "math" [];
	"torch._export.utils" -> "operator" [];
	"torch._export.utils" -> "re" [];
	"torch._export.utils" -> "typing" [];
	"torch._export.utils" -> "torch" [];
	"torch._export.utils" -> "sympy" [];
	"torch._export" -> "copy" [];
	"torch._export" -> "dataclasses" [];
	"torch._export" -> "functools" [];
	"torch._export" -> "io" [];
	"torch._export" -> "json" [];
	"torch._export" -> "logging" [];
	"torch._export" -> "os" [];
	"torch._export" -> "re" [];
	"torch._export" -> "sys" [];
	"torch._export" -> "types" [];
	"torch._export" -> "warnings" [];
	"torch._export" -> "weakref" [];
	"torch._export" -> "zipfile" [];
	"torch._export" -> "collections" [];
	"torch._export" -> "contextlib" [];
	"torch._export" -> "typing" [];
	"torch._inductor.decomposition" -> "functools" [];
	"torch._inductor.decomposition" -> "logging" [];
	"torch._inductor.decomposition" -> "math" [];
	"torch._inductor.decomposition" -> "sys" [];
	"torch._inductor.decomposition" -> "typing" [];
	"torch._inductor.decomposition" -> "torch" [];
	"torch._inductor.inductor_prims" -> "__future__" [];
	"torch._inductor.inductor_prims" -> "logging" [];
	"torch._inductor.inductor_prims" -> "typing" [];
	"torch._inductor.inductor_prims" -> "torch" [];
	"torch._higher_order_ops.out_dtype" -> "torch" [];
	"torch.ao.quantization.fx._decomposed" -> "math" [];
	"torch.ao.quantization.fx._decomposed" -> "typing" [];
	"torch.ao.quantization.fx._decomposed" -> "torch" [];
	"torch.ao.quantization.fx.prepare" -> "copy" [];
	"torch.ao.quantization.fx.prepare" -> "warnings" [];
	"torch.ao.quantization.fx.prepare" -> "dataclasses" [];
	"torch.ao.quantization.fx.prepare" -> "typing" [];
	"torch.ao.quantization.fx.prepare" -> "torch" [];
	"torch.ao.quantization.fx.utils" -> "copy" [];
	"torch.ao.quantization.fx.utils" -> "operator" [];
	"torch.ao.quantization.fx.utils" -> "warnings" [];
	"torch.ao.quantization.fx.utils" -> "collections" [];
	"torch.ao.quantization.fx.utils" -> "dataclasses" [];
	"torch.ao.quantization.fx.utils" -> "typing" [];
	"torch.ao.quantization.fx.utils" -> "torch" [];
	"torch.ao.quantization.stubs" -> "torch" [];
	"torch.ao.quantization.fake_quantize" -> "re" [];
	"torch.ao.quantization.fake_quantize" -> "abc" [];
	"torch.ao.quantization.fake_quantize" -> "typing" [];
	"torch.ao.quantization.fake_quantize" -> "torch" [];
	"torch.ao.quantization.fx.quantize_handler" -> "abc" [];
	"torch.ao.quantization.fx.quantize_handler" -> "typing" [];
	"torch.ao.quantization.fx.quantize_handler" -> "torch" [];
	"torch.ao.quantization.fx.qconfig_mapping_utils" -> "re" [];
	"torch.ao.quantization.fx.qconfig_mapping_utils" -> "collections" [];
	"torch.ao.quantization.fx.qconfig_mapping_utils" -> "typing" [];
	"torch.ao.quantization.fx.qconfig_mapping_utils" -> "torch" [];
	"torch.ao.nn.intrinsic" -> "importlib" [];
	"torch.ao.nn" -> "importlib" [];
	"torch.ao" -> "importlib" [];
	"torch.ao.nn.intrinsic.modules.fused" -> "torch" [];
	"torch.ao.quantization.fx.pattern_utils" -> "copy" [];
	"torch.ao.quantization.fx.pattern_utils" -> "collections" [];
	"torch.ao.quantization.fx.pattern_utils" -> "typing" [];
	"torch.ao.quantization.fx.match_utils" -> "sys" [];
	"torch.ao.quantization.fx.match_utils" -> "typing" [];
	"torch.ao.quantization.fx.match_utils" -> "torch" [];
	"torch.ao.quantization.fx.graph_module" -> "copy" [];
	"torch.ao.quantization.fx.graph_module" -> "typing" [];
	"torch.ao.quantization.fx.graph_module" -> "torch" [];
	"torch.ao.quantization.fx.custom_config" -> "__future__" [];
	"torch.ao.quantization.fx.custom_config" -> "dataclasses" [];
	"torch.ao.quantization.fx.custom_config" -> "typing" [];
	"torch.ao.quantization.quant_type" -> "enum" [];
	"torch.ao.quantization.fx._equalize" -> "operator" [];
	"torch.ao.quantization.fx._equalize" -> "warnings" [];
	"torch.ao.quantization.fx._equalize" -> "collections" [];
	"torch.ao.quantization.fx._equalize" -> "typing" [];
	"torch.ao.quantization.fx._equalize" -> "torch" [];
	"torch.ao.ns.fx.mappings" -> "operator" [];
	"torch.ao.ns.fx.mappings" -> "typing" [];
	"torch.ao.ns.fx.mappings" -> "torch" [];
	"torch.ao.ns.fx.ns_types" -> "enum" [];
	"torch.ao.ns.fx.ns_types" -> "typing" [];
	"torch.ao.quantization.quantization_mappings" -> "copy" [];
	"torch.ao.quantization.quantization_mappings" -> "typing" [];
	"torch.ao.quantization.quantization_mappings" -> "torch" [];
	"torch.ao.nn.sparse.quantized.dynamic.linear" -> "typing" [];
	"torch.ao.nn.sparse.quantized.dynamic.linear" -> "torch" [];
	"torch.ao.nn.sparse.quantized.utils" -> "threading" [];
	"torch.ao.nn.quantized.modules.utils" -> "abc" [];
	"torch.ao.nn.quantized.modules.utils" -> "collections" [];
	"torch.ao.nn.quantized.modules.utils" -> "itertools" [];
	"torch.ao.nn.quantized.modules.utils" -> "torch" [];
	"torch.ao.nn.quantized.modules" -> "torch" [];
	"torch.ao.nn.quantized.modules.rnn" -> "torch" [];
	"torch.ao.nn.quantized.modules.normalization" -> "torch" [];
	"torch.ao.nn.quantized.modules.linear" -> "typing" [];
	"torch.ao.nn.quantized.modules.linear" -> "torch" [];
	"torch.ao.nn.quantized.modules.functional_modules" -> "typing" [];
	"torch.ao.nn.quantized.modules.functional_modules" -> "torch" [];
	"torch.ao.nn.quantized.modules.embedding_ops" -> "torch" [];
	"torch.ao.nn.quantized.modules.dropout" -> "torch" [];
	"torch.ao.nn.quantized.modules.conv" -> "typing" [];
	"torch.ao.nn.quantized.modules.conv" -> "torch" [];
	"torch.nn.modules.utils" -> "collections" [];
	"torch.nn.modules.utils" -> "itertools" [];
	"torch.nn.modules.utils" -> "typing" [];
	"torch.nn.modules.utils" -> "torch" [];
	"torch.nn.common_types" -> "typing" [];
	"torch.nn.common_types" -> "torch" [];
	"torch.ao.nn.quantized.modules.batchnorm" -> "torch" [];
	"torch.ao.nn.quantized.modules.activation" -> "warnings" [];
	"torch.ao.nn.quantized.modules.activation" -> "torch" [];
	"torch.nn.modules.pooling" -> "typing" [];
	"torch.nn.modules.pooling" -> "torch" [];
	"torch.ao.nn.quantizable.modules.rnn" -> "numbers" [];
	"torch.ao.nn.quantizable.modules.rnn" -> "warnings" [];
	"torch.ao.nn.quantizable.modules.rnn" -> "typing" [];
	"torch.ao.nn.quantizable.modules.rnn" -> "torch" [];
	"torch.ao.nn.quantizable.modules.activation" -> "warnings" [];
	"torch.ao.nn.quantizable.modules.activation" -> "typing" [];
	"torch.ao.nn.quantizable.modules.activation" -> "torch" [];
	"torch.jit" -> "warnings" [];
	"torch.jit" -> "contextlib" [];
	"torch.jit" -> "typing" [];
	"torch.jit._trace" -> "contextlib" [];
	"torch.jit._trace" -> "copy" [];
	"torch.jit._trace" -> "functools" [];
	"torch.jit._trace" -> "inspect" [];
	"torch.jit._trace" -> "os" [];
	"torch.jit._trace" -> "re" [];
	"torch.jit._trace" -> "warnings" [];
	"torch.jit._trace" -> "enum" [];
	"torch.jit._trace" -> "typing" [];
	"torch.jit._trace" -> "typing_extensions" [];
	"torch.jit._trace" -> "torch" [];
	"torch.jit._trace" -> "difflib" [];
	"torch.jit._state" -> "os" [];
	"torch.jit._state" -> "weakref" [];
	"torch.jit._state" -> "typing" [];
	"torch.jit._state" -> "torch" [];
	"torch.jit._serialization" -> "os" [];
	"torch.jit._serialization" -> "torch" [];
	"torch.jit._recursive" -> "collections" [];
	"torch.jit._recursive" -> "functools" [];
	"torch.jit._recursive" -> "inspect" [];
	"torch.jit._recursive" -> "sys" [];
	"torch.jit._recursive" -> "textwrap" [];
	"torch.jit._recursive" -> "types" [];
	"torch.jit._recursive" -> "warnings" [];
	"torch.jit._recursive" -> "typing" [];
	"torch.jit._recursive" -> "torch" [];
	"torch.jit.frontend" -> "ast" [];
	"torch.jit.frontend" -> "dataclasses" [];
	"torch.jit.frontend" -> "inspect" [];
	"torch.jit.frontend" -> "re" [];
	"torch.jit.frontend" -> "string" [];
	"torch.jit.frontend" -> "sys" [];
	"torch.jit.frontend" -> "collections" [];
	"torch.jit.frontend" -> "textwrap" [];
	"torch.jit.frontend" -> "typing" [];
	"torch.jit.frontend" -> "torch" [];
	"torch.jit.frontend" -> "'torch._C._jit_tree_views'" [];
	"torch.jit.frontend" -> "astunparse" [];
	"torch.jit._monkeytype_config" -> "inspect" [];
	"torch.jit._monkeytype_config" -> "sys" [];
	"torch.jit._monkeytype_config" -> "typing" [];
	"torch.jit._monkeytype_config" -> "collections" [];
	"torch.jit._monkeytype_config" -> "pathlib" [];
	"torch.jit._monkeytype_config" -> "types" [];
	"torch.jit._monkeytype_config" -> "torch" [];
	"torch.jit._monkeytype_config" -> "monkeytype" [];
	"torch.jit._monkeytype_config" -> "'monkeytype.config'" [];
	"torch.jit._monkeytype_config" -> "'monkeytype.db'" [];
	"torch.jit._monkeytype_config" -> "'monkeytype.tracing'" [];
	"torch.jit._dataclass_impls" -> "ast" [];
	"torch.jit._dataclass_impls" -> "dataclasses" [];
	"torch.jit._dataclass_impls" -> "inspect" [];
	"torch.jit._dataclass_impls" -> "os" [];
	"torch.jit._dataclass_impls" -> "functools" [];
	"torch.jit._dataclass_impls" -> "typing" [];
	"torch.jit.annotations" -> "ast" [];
	"torch.jit.annotations" -> "builtins" [];
	"torch.jit.annotations" -> "dis" [];
	"torch.jit.annotations" -> "enum" [];
	"torch.jit.annotations" -> "inspect" [];
	"torch.jit.annotations" -> "re" [];
	"torch.jit.annotations" -> "typing" [];
	"torch.jit.annotations" -> "warnings" [];
	"torch.jit.annotations" -> "textwrap" [];
	"torch.jit.annotations" -> "torch" [];
	"torch.jit._check" -> "ast" [];
	"torch.jit._check" -> "inspect" [];
	"torch.jit._check" -> "textwrap" [];
	"torch.jit._check" -> "warnings" [];
	"torch.jit._check" -> "torch" [];
	"torch.jit._builtins" -> "cmath" [];
	"torch.jit._builtins" -> "math" [];
	"torch.jit._builtins" -> "warnings" [];
	"torch.jit._builtins" -> "collections" [];
	"torch.jit._builtins" -> "typing" [];
	"torch.jit._builtins" -> "torch" [];
	"torch.jit._script" -> "collections" [];
	"torch.jit._script" -> "copy" [];
	"torch.jit._script" -> "enum" [];
	"torch.jit._script" -> "functools" [];
	"torch.jit._script" -> "inspect" [];
	"torch.jit._script" -> "pickle" [];
	"torch.jit._script" -> "warnings" [];
	"torch.jit._script" -> "typing" [];
	"torch.jit._script" -> "torch" [];
	"torch._classes" -> "types" [];
	"torch.jit._ir_utils" -> "typing" [];
	"torch.jit._ir_utils" -> "torch" [];
	"torch.jit._fuser" -> "contextlib" [];
	"torch.jit._fuser" -> "typing" [];
	"torch.jit._fuser" -> "torch" [];
	"torch.jit._freeze" -> "typing" [];
	"torch.jit._freeze" -> "torch" [];
	"torch.jit._decomposition_utils" -> "torch" [];
	"torch.jit._await" -> "torch" [];
	"torch.jit._async" -> "torch" [];
	"torch.nn.modules.module" -> "functools" [];
	"torch.nn.modules.module" -> "inspect" [];
	"torch.nn.modules.module" -> "itertools" [];
	"torch.nn.modules.module" -> "warnings" [];
	"torch.nn.modules.module" -> "weakref" [];
	"torch.nn.modules.module" -> "collections" [];
	"torch.nn.modules.module" -> "typing" [];
	"torch.nn.modules.module" -> "typing_extensions" [];
	"torch.nn.modules.module" -> "torch" [];
	"torch.ao.nn.sparse.quantized.linear" -> "typing" [];
	"torch.ao.nn.sparse.quantized.linear" -> "torch" [];
	"torch.ao.nn.quantized.reference.modules.sparse" -> "typing" [];
	"torch.ao.nn.quantized.reference.modules.sparse" -> "torch" [];
	"torch.ao.nn.quantized.reference.modules.utils" -> "typing" [];
	"torch.ao.nn.quantized.reference.modules.utils" -> "torch" [];
	"torch.ao.nn.quantized.reference.modules.rnn" -> "typing" [];
	"torch.ao.nn.quantized.reference.modules.rnn" -> "torch" [];
	"torch._VF" -> "sys" [];
	"torch._VF" -> "types" [];
	"torch.ao.nn.quantized.reference.modules.linear" -> "typing" [];
	"torch.ao.nn.quantized.reference.modules.linear" -> "torch" [];
	"torch.ao.nn.quantized.reference.modules.conv" -> "typing" [];
	"torch.ao.nn.quantized.reference.modules.conv" -> "torch" [];
	"torch.ao.quantization.fx._lower_to_native_backend" -> "operator" [];
	"torch.ao.quantization.fx._lower_to_native_backend" -> "typing" [];
	"torch.ao.quantization.fx._lower_to_native_backend" -> "torch" [];
	"torch.ao.nn.quantized.dynamic.modules.rnn" -> "numbers" [];
	"torch.ao.nn.quantized.dynamic.modules.rnn" -> "warnings" [];
	"torch.ao.nn.quantized.dynamic.modules.rnn" -> "typing_extensions" [];
	"torch.ao.nn.quantized.dynamic.modules.rnn" -> "torch" [];
	"torch.ao.nn.quantized.dynamic.modules.linear" -> "torch" [];
	"torch.ao.nn.quantized.dynamic.modules.conv" -> "warnings" [];
	"torch.ao.nn.quantized.dynamic.modules.conv" -> "torch" [];
	"torch.ao.nn.quantized.functional" -> "warnings" [];
	"torch.ao.nn.quantized.functional" -> "typing" [];
	"torch.ao.nn.quantized.functional" -> "torch" [];
	"torch.ao.nn.qat.dynamic.modules.linear" -> "torch" [];
	"torch.ao.nn.qat.modules.linear" -> "torch" [];
	"torch.ao.nn.qat.modules.embedding_ops" -> "torch" [];
	"torch.ao.nn.qat.modules.conv" -> "typing" [];
	"torch.ao.nn.qat.modules.conv" -> "torch" [];
	"torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu" -> "torch" [];
	"torch.ao.nn.intrinsic.quantized.modules.linear_relu" -> "torch" [];
	"torch.ao.nn.intrinsic.quantized.modules.conv_relu" -> "torch" [];
	"torch.ao.nn.intrinsic.quantized.modules.conv_add" -> "torch" [];
	"torch.ao.nn.intrinsic.quantized.modules.bn_relu" -> "torch" [];
	"torch.ao.nn.intrinsic.qat.modules.linear_relu" -> "torch" [];
	"torch.ao.nn.intrinsic.qat.modules.linear_fused" -> "torch" [];
	"torch.ao.nn.intrinsic.qat.modules.conv_fused" -> "math" [];
	"torch.ao.nn.intrinsic.qat.modules.conv_fused" -> "typing" [];
	"torch.ao.nn.intrinsic.qat.modules.conv_fused" -> "torch" [];
	"torch.ao.ns._numeric_suite_fx" -> "collections" [];
	"torch.ao.ns._numeric_suite_fx" -> "typing" [];
	"torch.ao.ns._numeric_suite_fx" -> "torch" [];
	"torch.ao.ns.fx.weight_utils" -> "typing" [];
	"torch.ao.ns.fx.weight_utils" -> "torch" [];
	"torch.ao.ns.fx.utils" -> "enum" [];
	"torch.ao.ns.fx.utils" -> "operator" [];
	"torch.ao.ns.fx.utils" -> "typing" [];
	"torch.ao.ns.fx.utils" -> "torch" [];
	"torch.ao.ns.fx.graph_passes" -> "typing" [];
	"torch.ao.ns.fx.graph_passes" -> "torch" [];
	"torch.ao.ns.fx.qconfig_multi_mapping" -> "__future__" [];
	"torch.ao.ns.fx.qconfig_multi_mapping" -> "copy" [];
	"torch.ao.ns.fx.qconfig_multi_mapping" -> "typing" [];
	"torch.ao.ns.fx.qconfig_multi_mapping" -> "torch" [];
	"torch.ao.ns.fx.n_shadows_utils" -> "collections" [];
	"torch.ao.ns.fx.n_shadows_utils" -> "copy" [];
	"torch.ao.ns.fx.n_shadows_utils" -> "operator" [];
	"torch.ao.ns.fx.n_shadows_utils" -> "typing" [];
	"torch.ao.ns.fx.n_shadows_utils" -> "torch" [];
	"torch.ao.ns.fx.n_shadows_utils" -> "tabulate" [];
	"torch.ao.ns.fx.graph_matcher" -> "collections" [];
	"torch.ao.ns.fx.graph_matcher" -> "enum" [];
	"torch.ao.ns.fx.graph_matcher" -> "typing" [];
	"torch.ao.ns.fx.graph_matcher" -> "torch" [];
	"torch.ao.ns.fx.pattern_utils" -> "typing" [];
	"torch.ao.ns.fx.pattern_utils" -> "torch" [];
	"torch.ao.quantization.quantize_fx" -> "copy" [];
	"torch.ao.quantization.quantize_fx" -> "warnings" [];
	"torch.ao.quantization.quantize_fx" -> "typing" [];
	"torch.ao.quantization.quantize_fx" -> "torch" [];
	"torch.ao.quantization.fx.tracer" -> "typing" [];
	"torch.ao.quantization.fx.tracer" -> "torch" [];
	"torch.ao.quantization.quantizer.quantizer" -> "abc" [];
	"torch.ao.quantization.quantizer.quantizer" -> "dataclasses" [];
	"torch.ao.quantization.quantizer.quantizer" -> "typing" [];
	"torch.ao.quantization.quantizer.quantizer" -> "torch" [];
	"torch.ao.quantization.quantize" -> "copy" [];
	"torch.ao.quantization.quantize" -> "inspect" [];
	"torch.ao.quantization.quantize" -> "itertools" [];
	"torch.ao.quantization.quantize" -> "warnings" [];
	"torch.ao.quantization.quantize" -> "torch" [];
	"torch.ao.quantization.qconfig_mapping" -> "__future__" [];
	"torch.ao.quantization.qconfig_mapping" -> "collections" [];
	"torch.ao.quantization.qconfig_mapping" -> "typing" [];
	"torch.ao.quantization.qconfig_mapping" -> "torch" [];
	"torch.ao.quantization.qconfig" -> "copy" [];
	"torch.ao.quantization.qconfig" -> "warnings" [];
	"torch.ao.quantization.qconfig" -> "collections" [];
	"torch.ao.quantization.qconfig" -> "typing" [];
	"torch.ao.quantization.qconfig" -> "typing_extensions" [];
	"torch.ao.quantization.qconfig" -> "torch" [];
	"torch.ao.quantization.observer" -> "re" [];
	"torch.ao.quantization.observer" -> "warnings" [];
	"torch.ao.quantization.observer" -> "abc" [];
	"torch.ao.quantization.observer" -> "collections" [];
	"torch.ao.quantization.observer" -> "functools" [];
	"torch.ao.quantization.observer" -> "typing" [];
	"torch.ao.quantization.observer" -> "torch" [];
	"torch.ao.quantization.backend_config.utils" -> "typing" [];
	"torch.ao.quantization.backend_config.utils" -> "torch" [];
	"torch.ao.quantization.backend_config.backend_config" -> "__future__" [];
	"torch.ao.quantization.backend_config.backend_config" -> "dataclasses" [];
	"torch.ao.quantization.backend_config.backend_config" -> "enum" [];
	"torch.ao.quantization.backend_config.backend_config" -> "typing" [];
	"torch.ao.quantization.backend_config.backend_config" -> "torch" [];
	"torch.ao.quantization.fuser_method_mappings" -> "itertools" [];
	"torch.ao.quantization.fuser_method_mappings" -> "typing" [];
	"torch.ao.quantization.backend_config.tensorrt" -> "torch" [];
	"torch.ao.quantization.backend_config._common_operator_config_utils" -> "copy" [];
	"torch.ao.quantization.backend_config._common_operator_config_utils" -> "operator" [];
	"torch.ao.quantization.backend_config._common_operator_config_utils" -> "collections" [];
	"torch.ao.quantization.backend_config._common_operator_config_utils" -> "typing" [];
	"torch.ao.quantization.backend_config._common_operator_config_utils" -> "torch" [];
	"torch.ao.quantization.backend_config.qnnpack" -> "torch" [];
	"torch.ao.quantization.backend_config.onednn" -> "itertools" [];
	"torch.ao.quantization.backend_config.onednn" -> "operator" [];
	"torch.ao.quantization.backend_config.onednn" -> "torch" [];
	"torch.ao.quantization.backend_config.native" -> "torch" [];
	"torch.ao.quantization.backend_config.fbgemm" -> "torch" [];
	"torch.ao.quantization.backend_config.executorch" -> "operator" [];
	"torch.ao.quantization.backend_config.executorch" -> "typing" [];
	"torch.ao.quantization.backend_config.executorch" -> "torch" [];
	"torch.ao.quantization.fx.fuse" -> "warnings" [];
	"torch.ao.quantization.fx.fuse" -> "typing" [];
	"torch.ao.quantization.fx.fuse_handler" -> "abc" [];
	"torch.ao.quantization.fx.fuse_handler" -> "typing" [];
	"torch.ao.quantization.fx.fuse_handler" -> "torch" [];
	"torch.ao.quantization.fx.convert" -> "copy" [];
	"torch.ao.quantization.fx.convert" -> "operator" [];
	"torch.ao.quantization.fx.convert" -> "warnings" [];
	"torch.ao.quantization.fx.convert" -> "typing" [];
	"torch.ao.quantization.fx.convert" -> "torch" [];
	"torch.ao.quantization.fx.lower_to_fbgemm" -> "typing" [];
	"torch.ao.quantization" -> "typing" [];
	"torch.ao.quantization" -> "torch" [];
	"torch.ao.quantization.quantize_jit" -> "torch" [];
	"torch.ao.quantization.pt2e.export_utils" -> "types" [];
	"torch.ao.quantization.pt2e.export_utils" -> "torch" [];
	"torch.ao.quantization.pt2e.utils" -> "operator" [];
	"torch.ao.quantization.pt2e.utils" -> "types" [];
	"torch.ao.quantization.pt2e.utils" -> "typing" [];
	"torch.ao.quantization.pt2e.utils" -> "torch" [];
	"torch.ao.quantization.pt2e._numeric_debugger" -> "copy" [];
	"torch.ao.quantization.pt2e._numeric_debugger" -> "logging" [];
	"torch.ao.quantization.pt2e._numeric_debugger" -> "dataclasses" [];
	"torch.ao.quantization.pt2e._numeric_debugger" -> "typing" [];
	"torch.ao.quantization.pt2e._numeric_debugger" -> "torch" [];
	"torch.ao.quantization.fuse_modules" -> "copy" [];
	"torch.ao.quantization.fuse_modules" -> "typing" [];
	"torch.ao.quantization.utils" -> "functools" [];
	"torch.ao.quantization.utils" -> "warnings" [];
	"torch.ao.quantization.utils" -> "collections" [];
	"torch.ao.quantization.utils" -> "inspect" [];
	"torch.ao.quantization.utils" -> "typing" [];
	"torch.ao.quantization.utils" -> "torch" [];
	"torch.export._unlift" -> "copy" [];
	"torch.export._unlift" -> "warnings" [];
	"torch.export._unlift" -> "itertools" [];
	"torch.export._unlift" -> "typing" [];
	"torch.export._unlift" -> "torch" [];
	"torch.export._remove_effect_tokens_pass" -> "operator" [];
	"torch.export._remove_effect_tokens_pass" -> "typing" [];
	"torch.export._remove_effect_tokens_pass" -> "torch" [];
	"torch._export.non_strict_utils" -> "contextlib" [];
	"torch._export.non_strict_utils" -> "inspect" [];
	"torch._export.non_strict_utils" -> "logging" [];
	"torch._export.non_strict_utils" -> "collections" [];
	"torch._export.non_strict_utils" -> "typing" [];
	"torch._export.non_strict_utils" -> "torch" [];
	"torch._export.non_strict_utils" -> "sympy" [];
	"torch.fx.experimental._config" -> "os" [];
	"torch.fx.experimental._config" -> "sys" [];
	"torch.fx.experimental._config" -> "typing" [];
	"torch.utils._config_module" -> "contextlib" [];
	"torch.utils._config_module" -> "copy" [];
	"torch.utils._config_module" -> "hashlib" [];
	"torch.utils._config_module" -> "inspect" [];
	"torch.utils._config_module" -> "io" [];
	"torch.utils._config_module" -> "pickle" [];
	"torch.utils._config_module" -> "tokenize" [];
	"torch.utils._config_module" -> "unittest" [];
	"torch.utils._config_module" -> "warnings" [];
	"torch.utils._config_module" -> "types" [];
	"torch.utils._config_module" -> "typing" [];
	"torch.utils._config_module" -> "typing_extensions" [];
	"torch.fx.experimental.const_fold" -> "re" [];
	"torch.fx.experimental.const_fold" -> "typing" [];
	"torch._export.wrappers" -> "contextlib" [];
	"torch._export.wrappers" -> "torch" [];
	"torch._higher_order_ops.strict_mode" -> "torch" [];
	"torch._functorch.utils" -> "contextlib" [];
	"torch._functorch.utils" -> "typing" [];
	"torch._functorch.utils" -> "torch" [];
	"torch._functorch.utils" -> "'torch._C._functorch'" [];
	"torch._custom_ops" -> "inspect" [];
	"torch._custom_op.impl" -> "dataclasses" [];
	"torch._custom_op.impl" -> "functools" [];
	"torch._custom_op.impl" -> "inspect" [];
	"torch._custom_op.impl" -> "sys" [];
	"torch._custom_op.impl" -> "typing" [];
	"torch._custom_op.impl" -> "weakref" [];
	"torch._custom_op.impl" -> "warnings" [];
	"torch._custom_op.impl" -> "torch" [];
	"torch._custom_op.autograd" -> "torch" [];
	"torch._custom_op.autograd" -> "collections" [];
	"torch._custom_op.autograd" -> "functools" [];
	"torchgen.model" -> "__future__" [];
	"torchgen.model" -> "dataclasses" [];
	"torchgen.model" -> "itertools" [];
	"torchgen.model" -> "re" [];
	"torchgen.model" -> "enum" [];
	"torchgen.model" -> "typing" [];
	"torchgen.api.ufunc" -> "__future__" [];
	"torchgen.api.ufunc" -> "dataclasses" [];
	"torchgen.api.structured" -> "__future__" [];
	"torchgen.api.types.signatures" -> "__future__" [];
	"torchgen.api.types.signatures" -> "dataclasses" [];
	"torchgen.api.types.signatures" -> "typing" [];
	"torchgen.api.translate" -> "__future__" [];
	"torchgen.api.translate" -> "typing" [];
	"torchgen.api.native" -> "__future__" [];
	"torchgen.api.native" -> "typing" [];
	"torchgen.api.native" -> "torchgen" [];
	"torchgen.local" -> "__future__" [];
	"torchgen.local" -> "threading" [];
	"torchgen.local" -> "contextlib" [];
	"torchgen.local" -> "typing" [];
	"torchgen.api.functionalization" -> "__future__" [];
	"torchgen.api.dispatcher" -> "__future__" [];
	"torchgen.api.dispatcher" -> "itertools" [];
	"torchgen.api.dispatcher" -> "typing" [];
	"torchgen.api.types.types_base" -> "__future__" [];
	"torchgen.api.types.types_base" -> "abc" [];
	"torchgen.api.types.types_base" -> "dataclasses" [];
	"torchgen.api.types.types_base" -> "enum" [];
	"torchgen.api.types.types_base" -> "typing" [];
	"torchgen.api.types.types" -> "__future__" [];
	"torchgen.api.types.types" -> "dataclasses" [];
	"torchgen.api.cpp" -> "__future__" [];
	"torchgen.api.cpp" -> "typing" [];
	"torchgen.api.cpp" -> "torchgen" [];
	"torchgen.utils" -> "__future__" [];
	"torchgen.utils" -> "contextlib" [];
	"torchgen.utils" -> "functools" [];
	"torchgen.utils" -> "hashlib" [];
	"torchgen.utils" -> "os" [];
	"torchgen.utils" -> "re" [];
	"torchgen.utils" -> "sys" [];
	"torchgen.utils" -> "textwrap" [];
	"torchgen.utils" -> "dataclasses" [];
	"torchgen.utils" -> "enum" [];
	"torchgen.utils" -> "pathlib" [];
	"torchgen.utils" -> "typing" [];
	"torchgen.utils" -> "typing_extensions" [];
	"torchgen.utils" -> "argparse" [];
	"torchgen.utils" -> "pprint" [];
	"torchgen.code_template" -> "__future__" [];
	"torchgen.code_template" -> "re" [];
	"torchgen.code_template" -> "typing" [];
	"torch.export._tree_utils" -> "typing" [];
	"torch._export.converter" -> "builtins" [];
	"torch._export.converter" -> "logging" [];
	"torch._export.converter" -> "operator" [];
	"torch._export.converter" -> "typing" [];
	"torch._export.converter" -> "warnings" [];
	"torch._export.converter" -> "contextlib" [];
	"torch._export.converter" -> "torch" [];
	"torch._export.passes.replace_quantized_ops_with_standard_ops_pass" -> "logging" [];
	"torch._export.passes.replace_quantized_ops_with_standard_ops_pass" -> "operator" [];
	"torch._export.passes.replace_quantized_ops_with_standard_ops_pass" -> "typing" [];
	"torch._export.passes.replace_quantized_ops_with_standard_ops_pass" -> "torch" [];
	"torch._export.passes.replace_view_ops_with_view_copy_ops_pass" -> "typing" [];
	"torch._export.passes.replace_view_ops_with_view_copy_ops_pass" -> "torch" [];
	"torch._export.pass_base" -> "operator" [];
	"torch._export.pass_base" -> "traceback" [];
	"torch._export.pass_base" -> "typing" [];
	"torch._export.pass_base" -> "contextlib" [];
	"torch._export.pass_base" -> "torch" [];
	"torch.fx.passes.shape_prop" -> "torch" [];
	"torch.fx.passes.shape_prop" -> "traceback" [];
	"torch.fx.passes.shape_prop" -> "typing" [];
	"torch.fx.passes.tools_common" -> "typing" [];
	"torch.fx.passes.tools_common" -> "collections" [];
	"torch.fx.passes.tools_common" -> "dataclasses" [];
	"torch.fx.passes.tools_common" -> "operator" [];
	"torch.fx.passes.tools_common" -> "torch" [];
	"torch.fx.passes.splitter_base" -> "argparse" [];
	"torch.fx.passes.splitter_base" -> "copy" [];
	"torch.fx.passes.splitter_base" -> "collections" [];
	"torch.fx.passes.splitter_base" -> "dataclasses" [];
	"torch.fx.passes.splitter_base" -> "typing" [];
	"torch.fx.passes.splitter_base" -> "logging" [];
	"torch.fx.passes.splitter_base" -> "torch" [];
	"torch.fx.passes.split_utils" -> "copy" [];
	"torch.fx.passes.split_utils" -> "dataclasses" [];
	"torch.fx.passes.split_utils" -> "typing" [];
	"torch.fx.passes.utils.common" -> "typing" [];
	"torch.fx.passes.utils.matcher_utils" -> "dataclasses" [];
	"torch.fx.passes.utils.matcher_utils" -> "collections" [];
	"torch.fx.passes.utils.matcher_utils" -> "copy" [];
	"torch.fx.passes.utils.matcher_utils" -> "torch" [];
	"torch.fx.passes.utils.matcher_utils" -> "typing" [];
	"torch.fx.passes.utils.matcher_utils" -> "logging" [];
	"torch.fx.passes.utils.matcher_utils" -> "os" [];
	"torch.fx.passes.utils.fuser_utils" -> "copy" [];
	"torch.fx.passes.utils.fuser_utils" -> "queue" [];
	"torch.fx.passes.utils.fuser_utils" -> "typing" [];
	"torch.fx.passes.runtime_assert" -> "functools" [];
	"torch.fx.passes.runtime_assert" -> "logging" [];
	"torch.fx.passes.runtime_assert" -> "operator" [];
	"torch.fx.passes.runtime_assert" -> "sys" [];
	"torch.fx.passes.runtime_assert" -> "typing" [];
	"torch.fx.passes.runtime_assert" -> "sympy" [];
	"torch.fx.passes.runtime_assert" -> "torch" [];
	"torch.utils._sympy.interp" -> "functools" [];
	"torch.utils._sympy.interp" -> "logging" [];
	"torch.utils._sympy.interp" -> "typing" [];
	"torch.utils._sympy.interp" -> "sympy" [];
	"torch.utils._sympy.interp" -> "torch" [];
	"sympy.logic.boolalg" -> "collections" [];
	"sympy.logic.boolalg" -> "itertools" [];
	"sympy.functions.elementary.complexes" -> "typing" [];
	"sympy.integrals.integrals" -> "typing" [];
	"sympy.integrals.meijerint" -> "__future__" [];
	"sympy.integrals.meijerint" -> "itertools" [];
	"sympy.integrals.meijerint" -> "sympy" [];
	"sympy.simplify.radsimp" -> "collections" [];
	"sympy.core.parameters" -> "contextlib" [];
	"sympy.core.parameters" -> "threading" [];
	"sympy.core.random" -> "random" [];
	"sympy.core.facts" -> "collections" [];
	"sympy.core.facts" -> "typing" [];
	"sympy.simplify.hyperexpand" -> "collections" [];
	"sympy.simplify.hyperexpand" -> "itertools" [];
	"sympy.simplify.hyperexpand" -> "functools" [];
	"sympy.simplify.hyperexpand" -> "math" [];
	"sympy.simplify.hyperexpand" -> "sympy" [];
	"sympy.solvers.simplex" -> "sympy" [];
	"sympy.matrices.dense" -> "random" [];
	"sympy.matrices.dense" -> "numpy" [];
	"sympy.multipledispatch.dispatcher" -> "__future__" [];
	"sympy.multipledispatch.dispatcher" -> "warnings" [];
	"sympy.multipledispatch.dispatcher" -> "inspect" [];
	"sympy.multipledispatch.dispatcher" -> "itertools" [];
	"sympy.multipledispatch.utils" -> "collections" [];
	"sympy.multipledispatch.core" -> "__future__" [];
	"sympy.multipledispatch.core" -> "typing" [];
	"sympy.multipledispatch.core" -> "inspect" [];
	"sympy.matrices.utilities" -> "contextlib" [];
	"sympy.matrices.utilities" -> "threading" [];
	"sympy.functions.special.tensor_functions" -> "math" [];
	"sympy.external.gmpy" -> "os" [];
	"sympy.external.gmpy" -> "ctypes" [];
	"sympy.external.gmpy" -> "functools" [];
	"sympy.external.gmpy" -> "typing" [];
	"sympy.external.gmpy" -> "warnings" [];
	"sympy.external.gmpy" -> "flint" [];
	"sympy.external.ntheory" -> "sys" [];
	"sympy.external.ntheory" -> "math" [];
	"sympy.external.ntheory" -> "functools" [];
	"mpmath" -> "os.path" [];
	"mpmath" -> "inspect" [];
	"mpmath" -> "sys" [];
	"mpmath" -> "timeit" [];
	"mpmath" -> "doctest" [];
	"mpmath.tests.runtests" -> "sys" [];
	"mpmath.tests.runtests" -> "os" [];
	"mpmath.tests.runtests" -> "traceback" [];
	"mpmath.tests.runtests" -> "os.path" [];
	"mpmath.tests.runtests" -> "mpmath" [];
	"mpmath.tests.runtests" -> "py" [];
	"mpmath.tests.runtests" -> "glob" [];
	"mpmath.tests.runtests" -> "timeit" [];
	"mpmath.tests.runtests" -> "cProfile" [];
	"mpmath.tests.runtests" -> "trace" [];
	"trace" -> "io" [];
	"trace" -> "linecache" [];
	"trace" -> "os" [];
	"trace" -> "sys" [];
	"trace" -> "sysconfig" [];
	"trace" -> "token" [];
	"trace" -> "tokenize" [];
	"trace" -> "inspect" [];
	"trace" -> "gc" [];
	"trace" -> "dis" [];
	"trace" -> "pickle" [];
	"trace" -> "time" [];
	"trace" -> "threading" [];
	"trace" -> "argparse" [];
	"trace" -> "runpy" [];
	"mpmath.ctx_iv" -> "operator" [];
	"mpmath.ctx_iv" -> "numbers" [];
	"mpmath.ctx_base" -> "operator" [];
	"mpmath.visualization" -> "colorsys" [];
	"mpmath.visualization" -> "pylab" [];
	"mpmath.visualization" -> "mpl_toolkits" [];
	"mpmath.identification" -> "doctest" [];
	"mpmath.matrices.linalg" -> "copy" [];
	"mpmath.calculus.odes" -> "bisect" [];
	"mpmath.calculus.odes" -> "doctest" [];
	"mpmath.calculus.extrapolation" -> "itertools" [];
	"mpmath.calculus.extrapolation" -> "random" [];
	"mpmath.calculus.optimization" -> "__future__" [];
	"mpmath.calculus.optimization" -> "copy" [];
	"mpmath.calculus.optimization" -> "doctest" [];
	"mpmath.calculus.inverselaplace" -> "doctest" [];
	"mpmath.calculus.quadrature" -> "math" [];
	"mpmath.calculus.quadrature" -> "doctest" [];
	"mpmath.functions.rszeta" -> "math" [];
	"mpmath.functions.zeta" -> "__future__" [];
	"mpmath.functions.zeta" -> "urllib" [];
	"mpmath.functions.functions" -> "math" [];
	"mpmath.functions.functions" -> "cmath" [];
	"mpmath.ctx_mp" -> "functools" [];
	"mpmath.ctx_mp" -> "re" [];
	"mpmath.ctx_mp" -> "'sage.libs'" [];
	"mpmath.ctx_mp" -> "doctest" [];
	"mpmath.ctx_mp_python" -> "numpy" [];
	"mpmath.ctx_mp_python" -> "numbers" [];
	"mpmath.rational" -> "operator" [];
	"mpmath.rational" -> "sys" [];
	"mpmath.rational" -> "numbers" [];
	"mpmath.ctx_fp" -> "math" [];
	"mpmath.ctx_fp" -> "cmath" [];
	"mpmath.ctx_fp" -> "random" [];
	"mpmath.math2" -> "operator" [];
	"mpmath.math2" -> "math" [];
	"mpmath.math2" -> "cmath" [];
	"mpmath.usertools" -> "timeit" [];
	"mpmath.libmp.backend" -> "os" [];
	"mpmath.libmp.backend" -> "sys" [];
	"mpmath.libmp.backend" -> "builtins" [];
	"mpmath.libmp.backend" -> "gmpy2" [];
	"mpmath.libmp.backend" -> "gmpy" [];
	"mpmath.libmp.backend" -> "sage" [];
	"mpmath.libmp.backend" -> "'sage.libs'" [];
	"mpmath.libmp.libintmath" -> "math" [];
	"mpmath.libmp.libintmath" -> "bisect" [];
	"mpmath.libmp.libintmath" -> "operator" [];
	"mpmath.libmp.gammazeta" -> "math" [];
	"mpmath.libmp.gammazeta" -> "sys" [];
	"mpmath.libmp.libhyper" -> "operator" [];
	"mpmath.libmp.libhyper" -> "math" [];
	"mpmath.libmp.libhyper" -> "'sage.libs'" [];
	"mpmath.libmp.libelefun" -> "math" [];
	"mpmath.libmp.libelefun" -> "bisect" [];
	"mpmath.libmp.libelefun" -> "'sage.libs'" [];
	"mpmath.libmp.libmpc" -> "sys" [];
	"mpmath.libmp.libmpc" -> "'sage.libs'" [];
	"mpmath.libmp.libmpf" -> "math" [];
	"mpmath.libmp.libmpf" -> "bisect" [];
	"mpmath.libmp.libmpf" -> "sys" [];
	"mpmath.libmp.libmpf" -> "numpy" [];
	"mpmath.libmp.libmpf" -> "random" [];
	"mpmath.libmp.libmpf" -> "'sage.libs'" [];
	"sympy.external.pythonmpq" -> "operator" [];
	"sympy.external.pythonmpq" -> "math" [];
	"sympy.external.pythonmpq" -> "decimal" [];
	"sympy.external.pythonmpq" -> "fractions" [];
	"sympy.external.pythonmpq" -> "sys" [];
	"sympy.external.pythonmpq" -> "typing" [];
	"sympy.external.importtools" -> "sys" [];
	"sympy.external.importtools" -> "re" [];
	"sympy.external.importtools" -> "os" [];
	"sympy.external.importtools" -> "warnings" [];
	"sympy.combinatorics.permutations" -> "random" [];
	"sympy.combinatorics.permutations" -> "collections" [];
	"sympy.combinatorics.permutations" -> "functools" [];
	"sympy.combinatorics.perm_groups" -> "math" [];
	"sympy.combinatorics.perm_groups" -> "itertools" [];
	"sympy.printing.latex" -> "__future__" [];
	"sympy.printing.latex" -> "typing" [];
	"sympy.printing.latex" -> "itertools" [];
	"sympy.printing.latex" -> "re" [];
	"sympy.printing.latex" -> "sympy" [];
	"sympy.categories.diagram_drawing" -> "itertools" [];
	"sympy.printing.preview" -> "os" [];
	"sympy.printing.preview" -> "os.path" [];
	"sympy.printing.preview" -> "shutil" [];
	"sympy.printing.preview" -> "tempfile" [];
	"sympy.printing.preview" -> "subprocess" [];
	"sympy.printing.preview" -> "platform" [];
	"sympy.printing.preview" -> "pyglet" [];
	"sympy.printing.preview" -> "'pyglet.window'" [];
	"sympy.printing.preview" -> "'pyglet.image'" [];
	"sympy.sets.ordinals" -> "operator" [];
	"sympy.sets.fancysets" -> "functools" [];
	"sympy.sets.fancysets" -> "itertools" [];
	"sympy.plotting.series" -> "warnings" [];
	"sympy.plotting.pygletplot.plot" -> "threading" [];
	"sympy.plotting.pygletplot.plot" -> "pyglet" [];
	"sympy.plotting.pygletplot.plot" -> "time" [];
	"sympy.plotting.pygletplot.plot" -> "os" [];
	"sympy.plotting.pygletplot.plot" -> "ctypes" [];
	"sympy.plotting.pygletplot.plot" -> "PIL" [];
	"sympy.plotting.pygletplot.util" -> "ctypes" [];
	"sympy.plotting.pygletplot.util" -> "'pyglet.gl'" [];
	"sympy.plotting.pygletplot.plot_window" -> "time" [];
	"sympy.plotting.pygletplot.plot_window" -> "'pyglet.gl'" [];
	"sympy.plotting.pygletplot.plot_controller" -> "'pyglet.window'" [];
	"sympy.plotting.pygletplot.plot_camera" -> "'pyglet.gl'" [];
	"sympy.plotting.pygletplot.plot_rotation" -> "ctypes" [];
	"sympy.plotting.pygletplot.plot_rotation" -> "'pyglet.gl'" [];
	"sympy.plotting.pygletplot.plot_rotation" -> "math" [];
	"sympy.plotting.pygletplot.managed_window" -> "'pyglet.window'" [];
	"sympy.plotting.pygletplot.managed_window" -> "'pyglet.clock'" [];
	"sympy.plotting.pygletplot.managed_window" -> "threading" [];
	"sympy.plotting.pygletplot.plot_axes" -> "'pyglet.gl'" [];
	"sympy.plotting.pygletplot.plot_axes" -> "pyglet" [];
	"sympy.geometry.entity" -> "__future__" [];
	"sympy.geometry.polygon" -> "warnings" [];
	"sympy.geometry.ellipse" -> "random" [];
	"sympy.polys.polyutils" -> "__future__" [];
	"sympy.polys.polyutils" -> "re" [];
	"sympy.polys.polyutils" -> "flint" [];
	"sympy.polys.domains.modularinteger" -> "__future__" [];
	"sympy.polys.domains.modularinteger" -> "typing" [];
	"sympy.polys.domains.modularinteger" -> "operator" [];
	"sympy.polys.domains.groundtypes" -> "builtins" [];
	"sympy.polys.domains.groundtypes" -> "gmpy2" [];
	"sympy.polys.domains.groundtypes" -> "flint" [];
	"sympy.polys.agca.modules" -> "copy" [];
	"sympy.polys.agca.modules" -> "functools" [];
	"sympy.polys.distributedmodules" -> "itertools" [];
	"sympy.polys.monomials" -> "itertools" [];
	"sympy.polys.monomials" -> "textwrap" [];
	"sympy.polys.polyclasses" -> "__future__" [];
	"sympy.polys.polyclasses" -> "flint" [];
	"sympy.polys.factortools" -> "math" [];
	"sympy.polys.factortools" -> "flint" [];
	"sympy.polys.polyconfig" -> "contextlib" [];
	"sympy.polys.polyconfig" -> "os" [];
	"sympy.polys.galoistools" -> "math" [];
	"sympy.polys.densetools" -> "math" [];
	"sympy.polys.densebasic" -> "random" [];
	"sympy.polys.orderings" -> "__future__" [];
	"sympy.polys.fields" -> "__future__" [];
	"sympy.polys.fields" -> "typing" [];
	"sympy.polys.fields" -> "functools" [];
	"sympy.polys.fields" -> "operator" [];
	"sympy.utilities.magic" -> "inspect" [];
	"sympy.polys.rings" -> "__future__" [];
	"sympy.polys.rings" -> "typing" [];
	"sympy.polys.rings" -> "operator" [];
	"sympy.polys.rings" -> "functools" [];
	"sympy.polys.rings" -> "types" [];
	"sympy.polys.numberfields.galoisgroups" -> "collections" [];
	"sympy.polys.numberfields.galoisgroups" -> "random" [];
	"sympy.combinatorics.galois" -> "collections" [];
	"sympy.combinatorics.galois" -> "enum" [];
	"sympy.combinatorics.galois" -> "itertools" [];
	"sympy.polys.numberfields.galois_resolvents" -> "mpmath" [];
	"sympy.polys.numberfields.galois_resolvents" -> "time" [];
	"sympy.polys.numberfields.galois_resolvents" -> "sys" [];
	"sympy.polys.polyroots" -> "math" [];
	"sympy.polys.polyroots" -> "functools" [];
	"sympy.polys.matrices.normalforms" -> "collections" [];
	"sympy.ntheory.modular" -> "math" [];
	"sympy.polys.matrices.domainmatrix" -> "collections" [];
	"sympy.polys.matrices.domainmatrix" -> "functools" [];
	"sympy.polys.matrices.domainmatrix" -> "typing" [];
	"sympy.polys.matrices.dense" -> "__future__" [];
	"sympy.polys.matrices.dense" -> "operator" [];
	"sympy.polys.matrices.dense" -> "typing" [];
	"sympy.polys.matrices._typing" -> "typing" [];
	"sympy.polys.matrices.sdm" -> "operator" [];
	"sympy.polys.matrices.sdm" -> "collections" [];
	"sympy.polys.matrices.ddm" -> "itertools" [];
	"sympy.polys.matrices.lll" -> "__future__" [];
	"sympy.polys.matrices.lll" -> "math" [];
	"sympy.polys.numberfields.utilities" -> "mpmath" [];
	"sympy.codegen.ast" -> "__future__" [];
	"sympy.codegen.ast" -> "typing" [];
	"sympy.codegen.ast" -> "collections" [];
	"sympy.simplify.cse_main" -> "collections" [];
	"sympy.polys.rootoftools" -> "mpmath" [];
	"sympy.polys.rootoftools" -> "itertools" [];
	"sympy.tensor.array.expressions.from_matrix_to_array" -> "sympy" [];
	"sympy.tensor.array.expressions.from_indexed_to_array" -> "collections" [];
	"sympy.tensor.array.expressions.from_indexed_to_array" -> "sympy" [];
	"sympy.tensor.array.expressions.utils" -> "bisect" [];
	"sympy.tensor.array.expressions.utils" -> "collections" [];
	"sympy.tensor.array.expressions.from_array_to_matrix" -> "itertools" [];
	"sympy.tensor.array.expressions.from_array_to_matrix" -> "collections" [];
	"sympy.tensor.array.expressions.from_array_to_matrix" -> "typing" [];
	"sympy.tensor.array.expressions.from_array_to_matrix" -> "functools" [];
	"sympy.tensor.array.expressions.from_array_to_matrix" -> "sympy" [];
	"sympy.tensor.array.expressions.from_array_to_indexed" -> "operator" [];
	"sympy.tensor.array.expressions.from_array_to_indexed" -> "itertools" [];
	"sympy.tensor.array.expressions.from_array_to_indexed" -> "sympy" [];
	"sympy.tensor.array.expressions.arrayexpr_derivatives" -> "operator" [];
	"sympy.tensor.array.expressions.arrayexpr_derivatives" -> "functools" [];
	"sympy.tensor.array.expressions.array_expressions" -> "operator" [];
	"sympy.tensor.array.expressions.array_expressions" -> "collections" [];
	"sympy.tensor.array.expressions.array_expressions" -> "functools" [];
	"sympy.tensor.array.expressions.array_expressions" -> "itertools" [];
	"sympy.tensor.array.expressions.array_expressions" -> "typing" [];
	"sympy.tensor.array.expressions.array_expressions" -> "sympy" [];
	"sympy.tensor.array.ndim_array" -> "itertools" [];
	"sympy.tensor.array.array_derivatives" -> "__future__" [];
	"sympy.tensor.index_methods" -> "functools" [];
	"sympy.tensor.index_methods" -> "collections" [];
	"sympy.tensor.array.dense_ndim_array" -> "functools" [];
	"sympy.tensor.array.dense_ndim_array" -> "typing" [];
	"sympy.tensor.array.arrayop" -> "itertools" [];
	"sympy.tensor.array.sparse_ndim_array" -> "functools" [];
	"sympy.abc" -> "typing" [];
	"sympy.abc" -> "string" [];
	"sympy.parsing.sympy_parser" -> "tokenize" [];
	"sympy.parsing.sympy_parser" -> "keyword" [];
	"sympy.parsing.sympy_parser" -> "ast" [];
	"sympy.parsing.sympy_parser" -> "unicodedata" [];
	"sympy.parsing.sympy_parser" -> "io" [];
	"sympy.parsing.sympy_parser" -> "builtins" [];
	"sympy.parsing.sympy_parser" -> "types" [];
	"sympy.parsing.sympy_parser" -> "typing" [];
	"sympy.printing.codeprinter" -> "__future__" [];
	"sympy.printing.codeprinter" -> "typing" [];
	"sympy.printing.codeprinter" -> "functools" [];
	"sympy.printing.cxx" -> "itertools" [];
	"sympy.printing.fortran" -> "__future__" [];
	"sympy.printing.fortran" -> "typing" [];
	"sympy.printing.fortran" -> "collections" [];
	"sympy.printing.fortran" -> "itertools" [];
	"sympy.printing.fortran" -> "string" [];
	"sympy.printing.c" -> "__future__" [];
	"sympy.printing.c" -> "typing" [];
	"sympy.printing.c" -> "functools" [];
	"sympy.printing.c" -> "itertools" [];
	"sympy.polys.numberfields.subfield" -> "mpmath" [];
	"sympy.polys.numberfields.minpoly" -> "functools" [];
	"sympy.polys.ring_series" -> "math" [];
	"sympy.polys.constructor" -> "math" [];
	"sympy.polys.domains.integerring" -> "math" [];
	"sympy.polys.domains.finitefield" -> "operator" [];
	"sympy.polys.domains.finitefield" -> "flint" [];
	"sympy.polys.domains.domain" -> "__future__" [];
	"sympy.polys.domains.domain" -> "typing" [];
	"sympy.polys.polyoptions" -> "__future__" [];
	"sympy.polys.polyoptions" -> "re" [];
	"sympy.geometry.util" -> "collections" [];
	"sympy.geometry.util" -> "math" [];
	"sympy.geometry.util" -> "sympy" [];
	"sympy.geometry.plane" -> "random" [];
	"sympy.simplify.trigsimp" -> "collections" [];
	"sympy.simplify.trigsimp" -> "functools" [];
	"sympy.simplify.ratsimp" -> "itertools" [];
	"sympy.strategies.tree" -> "functools" [];
	"sympy.strategies.branch.core" -> "sys" [];
	"sympy.strategies.branch.traverse" -> "itertools" [];
	"sympy.strategies.core" -> "__future__" [];
	"sympy.strategies.core" -> "typing" [];
	"sympy.strategies.core" -> "sys" [];
	"sympy.geometry.line" -> "random" [];
	"sympy.geometry.point" -> "warnings" [];
	"sympy.core.evalf" -> "__future__" [];
	"sympy.core.evalf" -> "typing" [];
	"sympy.core.evalf" -> "math" [];
	"sympy.core.evalf" -> "mpmath" [];
	"sympy.plotting.pygletplot.plot_modes" -> "math" [];
	"sympy.plotting.pygletplot.plot_surface" -> "'pyglet.gl'" [];
	"sympy.plotting.pygletplot.plot_mode_base" -> "'pyglet.gl'" [];
	"sympy.plotting.pygletplot.plot_mode_base" -> "time" [];
	"sympy.plotting.pygletplot.plot_mode_base" -> "threading" [];
	"sympy.plotting.pygletplot.plot_mode_base" -> "warnings" [];
	"sympy.plotting.pygletplot.plot_curve" -> "'pyglet.gl'" [];
	"sympy.plotting.textplot" -> "math" [];
	"sympy.plotting.intervalmath.lib_interval" -> "functools" [];
	"sympy.utilities.lambdify" -> "__future__" [];
	"sympy.utilities.lambdify" -> "typing" [];
	"sympy.utilities.lambdify" -> "builtins" [];
	"sympy.utilities.lambdify" -> "inspect" [];
	"sympy.utilities.lambdify" -> "keyword" [];
	"sympy.utilities.lambdify" -> "textwrap" [];
	"sympy.utilities.lambdify" -> "linecache" [];
	"sympy.printing.tensorflow" -> "sympy" [];
	"sympy.printing.pycode" -> "collections" [];
	"sympy.printing.pycode" -> "itertools" [];
	"sympy.printing.pycode" -> "sys" [];
	"sympy.integrals.laplace" -> "sys" [];
	"sympy.integrals.laplace" -> "sympy" [];
	"sympy.polys.matrices.linsolve" -> "collections" [];
	"sympy.physics.units.systems.si" -> "__future__" [];
	"sympy.physics.units.systems.mksa" -> "__future__" [];
	"sympy.physics.units.util" -> "functools" [];
	"sympy.physics.units.util" -> "typing" [];
	"sympy.physics.units.util" -> "sympy" [];
	"sympy.physics.units.unitsystem" -> "typing" [];
	"sympy.physics.units.dimensions" -> "__future__" [];
	"sympy.physics.units.dimensions" -> "collections" [];
	"sympy.physics.units.dimensions" -> "functools" [];
	"sympy.physics.control.lti" -> "typing" [];
	"sympy.physics.control.lti" -> "sympy" [];
	"sympy.functions.special.beta_functions" -> "mpmath" [];
	"sympy.functions.combinatorial.numbers" -> "math" [];
	"sympy.functions.combinatorial.numbers" -> "collections" [];
	"sympy.functions.combinatorial.numbers" -> "typing" [];
	"sympy.functions.combinatorial.numbers" -> "mpmath" [];
	"sympy.utilities.memoization" -> "functools" [];
	"sympy.ntheory.partitions_" -> "math" [];
	"sympy.ntheory.partitions_" -> "itertools" [];
	"sympy.ntheory.residue_ntheory" -> "__future__" [];
	"sympy.ntheory.residue_ntheory" -> "itertools" [];
	"sympy.ntheory.residue_ntheory" -> "math" [];
	"sympy.ntheory.generate" -> "bisect" [];
	"sympy.ntheory.generate" -> "itertools" [];
	"sympy.ntheory.generate" -> "array" [];
	"sympy.vector.parametricregion" -> "functools" [];
	"sympy.vector.operators" -> "collections" [];
	"sympy.vector.dyadic" -> "__future__" [];
	"sympy.vector.vector" -> "__future__" [];
	"sympy.vector.vector" -> "itertools" [];
	"sympy.concrete.products" -> "typing" [];
	"sympy.vector.basisdependent" -> "__future__" [];
	"sympy.vector.basisdependent" -> "typing" [];
	"sympy.tensor.array.array_comprehension" -> "functools" [];
	"sympy.tensor.array.array_comprehension" -> "itertools" [];
	"sympy.printing.conventions" -> "re" [];
	"sympy.printing.printer" -> "__future__" [];
	"sympy.printing.printer" -> "sys" [];
	"sympy.printing.printer" -> "typing" [];
	"sympy.printing.printer" -> "inspect" [];
	"sympy.printing.printer" -> "contextlib" [];
	"sympy.printing.printer" -> "functools" [];
	"sympy.printing.str" -> "__future__" [];
	"sympy.printing.str" -> "typing" [];
	"sympy.printing.maple" -> "sympy" [];
	"sympy.printing.tableform" -> "types" [];
	"sympy.printing.gtk" -> "tempfile" [];
	"sympy.printing.gtk" -> "subprocess" [];
	"sympy.utilities.mathml" -> "pathlib" [];
	"sympy.utilities.mathml" -> "sys" [];
	"sympy.utilities.mathml" -> "lxml" [];
	"sympy.printing.rust" -> "__future__" [];
	"sympy.printing.rust" -> "typing" [];
	"sympy.printing.octave" -> "__future__" [];
	"sympy.printing.octave" -> "typing" [];
	"sympy.printing.octave" -> "re" [];
	"sympy.printing.mathematica" -> "__future__" [];
	"sympy.printing.mathematica" -> "typing" [];
	"sympy.printing.julia" -> "__future__" [];
	"sympy.printing.julia" -> "typing" [];
	"sympy.printing.julia" -> "re" [];
	"sympy.printing.jscode" -> "__future__" [];
	"sympy.printing.jscode" -> "typing" [];
	"sympy.printing.rcode" -> "__future__" [];
	"sympy.printing.rcode" -> "typing" [];
	"sympy.printing.glsl" -> "__future__" [];
	"sympy.printing.glsl" -> "functools" [];
	"sympy.printing.smtlib" -> "typing" [];
	"sympy.printing.smtlib" -> "sympy" [];
	"sympy.assumptions.relation.binrel" -> "typing" [];
	"sympy.assumptions.assume" -> "contextlib" [];
	"sympy.assumptions.assume" -> "inspect" [];
	"sympy.printing.python" -> "keyword" [];
	"sympy.printing.python" -> "sympy" [];
	"sympy.printing.mathml" -> "__future__" [];
	"sympy.printing.mathml" -> "typing" [];
	"sympy.printing.pretty.pretty_symbology" -> "sys" [];
	"sympy.printing.pretty.pretty_symbology" -> "warnings" [];
	"sympy.printing.pretty.pretty_symbology" -> "string" [];
	"sympy.printing.pretty.pretty_symbology" -> "unicodedata" [];
	"sympy.printing.pretty.pretty" -> "itertools" [];
	"sympy.printing.pretty.pretty" -> "pydoc" [];
	"sympy.printing.pretty.pretty" -> "locale" [];
	"sympy.combinatorics.coset_table" -> "itertools" [];
	"sympy.combinatorics.coset_table" -> "bisect" [];
	"sympy.combinatorics.free_groups" -> "__future__" [];
	"sympy.combinatorics.fp_groups" -> "itertools" [];
	"sympy.combinatorics.fp_groups" -> "random" [];
	"sympy.combinatorics.rewritingsystem" -> "collections" [];
	"sympy.combinatorics.homomorphisms" -> "itertools" [];
	"sympy.ntheory.primetest" -> "itertools" [];
	"sympy.ntheory.factor_" -> "collections" [];
	"sympy.ntheory.factor_" -> "math" [];
	"sympy.ntheory.ecm" -> "math" [];
	"sympy.ntheory.digits" -> "collections" [];
	"sympy.ntheory.qs" -> "math" [];
	"sympy.ntheory.qs" -> "copy" [];
	"sympy.ntheory.egyptian_fraction" -> "math" [];
	"sympy.ntheory.continued_fraction" -> "__future__" [];
	"sympy.ntheory.continued_fraction" -> "itertools" [];
	"sympy.printing.repr" -> "__future__" [];
	"sympy.printing.repr" -> "typing" [];
	"sympy.combinatorics.graycode" -> "random" [];
	"sympy.combinatorics.partitions" -> "collections" [];
	"sympy.combinatorics.subsets" -> "itertools" [];
	"sympy.combinatorics.prufer" -> "collections" [];
	"sympy.polys.polytools" -> "functools" [];
	"sympy.polys.polytools" -> "operator" [];
	"sympy.polys.polytools" -> "typing" [];
	"sympy.polys.polytools" -> "mpmath" [];
	"sympy.matrices.expressions.kronecker" -> "functools" [];
	"sympy.matrices.expressions.kronecker" -> "math" [];
	"sympy.matrices.expressions.hadamard" -> "collections" [];
	"sympy.matrices.expressions._shape" -> "typing" [];
	"sympy.assumptions.refine" -> "__future__" [];
	"sympy.assumptions.refine" -> "typing" [];
	"sympy.matrices.expressions.matexpr" -> "__future__" [];
	"sympy.matrices.expressions.matexpr" -> "functools" [];
	"sympy.matrices.expressions.matexpr" -> "numpy" [];
	"sympy.matrices.expressions.matadd" -> "functools" [];
	"sympy.matrices.expressions.matadd" -> "operator" [];
	"mpmath.matrices.matrices" -> "warnings" [];
	"mpmath.matrices.matrices" -> "doctest" [];
	"sympy.matrices.determinant" -> "types" [];
	"sympy.matrices.determinant" -> "itertools" [];
	"sympy.matrices.eigen" -> "types" [];
	"sympy.matrices.eigen" -> "collections" [];
	"sympy.matrices.eigen" -> "mpmath" [];
	"sympy.matrices.repmatrix" -> "collections" [];
	"sympy.matrices.repmatrix" -> "operator" [];
	"sympy.matrices.matrixbase" -> "collections" [];
	"sympy.matrices.matrixbase" -> "inspect" [];
	"sympy.matrices.matrixbase" -> "functools" [];
	"sympy.matrices.matrixbase" -> "mpmath" [];
	"sympy.matrices.matrixbase" -> "numpy" [];
	"sympy.matrices.reductions" -> "types" [];
	"sympy.matrices.decompositions" -> "copy" [];
	"sympy.utilities.decorator" -> "sys" [];
	"sympy.utilities.decorator" -> "types" [];
	"sympy.utilities.decorator" -> "inspect" [];
	"sympy.utilities.decorator" -> "functools" [];
	"sympy.utilities.decorator" -> "mpmath" [];
	"sympy.testing.runtests" -> "os" [];
	"sympy.testing.runtests" -> "sys" [];
	"sympy.testing.runtests" -> "platform" [];
	"sympy.testing.runtests" -> "inspect" [];
	"sympy.testing.runtests" -> "traceback" [];
	"sympy.testing.runtests" -> "pdb" [];
	"sympy.testing.runtests" -> "re" [];
	"sympy.testing.runtests" -> "linecache" [];
	"sympy.testing.runtests" -> "time" [];
	"sympy.testing.runtests" -> "fnmatch" [];
	"sympy.testing.runtests" -> "timeit" [];
	"sympy.testing.runtests" -> "doctest" [];
	"sympy.testing.runtests" -> "random" [];
	"sympy.testing.runtests" -> "subprocess" [];
	"sympy.testing.runtests" -> "shutil" [];
	"sympy.testing.runtests" -> "signal" [];
	"sympy.testing.runtests" -> "stat" [];
	"sympy.testing.runtests" -> "tempfile" [];
	"sympy.testing.runtests" -> "warnings" [];
	"sympy.testing.runtests" -> "contextlib" [];
	"sympy.testing.runtests" -> "all" [];
	"sympy.testing.runtests" -> "matplotlib" [];
	"sympy.testing.runtests" -> "collections" [];
	"sympy.testing.runtests" -> "ast" [];
	"sympy.testing.runtests" -> "io" [];
	"sympy.testing.runtests" -> "pyglet" [];
	"sympy.testing.runtests" -> "ctypes" [];
	"sympy.testing.runtests" -> "struct" [];
	"sympy.testing.runtests" -> "gmpy2" [];
	"sympy.testing.runtests_pytest" -> "functools" [];
	"sympy.testing.runtests_pytest" -> "os" [];
	"sympy.testing.runtests_pytest" -> "pathlib" [];
	"sympy.testing.runtests_pytest" -> "re" [];
	"sympy.testing.runtests_pytest" -> "fnmatch" [];
	"sympy.testing.runtests_pytest" -> "typing" [];
	"sympy.testing.runtests_pytest" -> "pytest" [];
	"sympy.interactive.printing" -> "io" [];
	"sympy.interactive.printing" -> "sys" [];
	"sympy.interactive.printing" -> "builtins" [];
	"sympy.interactive.printing" -> "IPython" [];
	"sympy.interactive.printing" -> "'IPython.core'" [];
	"sympy.interactive.printing" -> "'IPython.iplib'" [];
	"sympy.interactive.printing" -> "'IPython.terminal'" [];
	"sympy.interactive.printing" -> "'IPython.frontend'" [];
	"sympy.interactive.printing" -> "code" [];
	"sympy.interactive.traversal" -> "random" [];
	"sympy.interactive.session" -> "sympy" [];
	"sympy.interactive.session" -> "sys" [];
	"sympy.interactive.session" -> "os" [];
	"sympy.interactive.session" -> "tokenize" [];
	"sympy.interactive.session" -> "io" [];
	"sympy.interactive.session" -> "ast" [];
	"sympy.interactive.session" -> "re" [];
	"sympy.interactive.session" -> "IPython" [];
	"sympy.interactive.session" -> "'IPython.terminal'" [];
	"sympy.interactive.session" -> "'IPython.frontend'" [];
	"sympy.interactive.session" -> "'IPython.Shell'" [];
	"sympy.interactive.session" -> "code" [];
	"sympy.interactive.session" -> "rlcompleter" [];
	"sympy.interactive.session" -> "readline" [];
	"sympy.interactive.session" -> "atexit" [];
	"sympy.solvers.inequalities" -> "itertools" [];
	"sympy.solvers.pde" -> "functools" [];
	"sympy.solvers.pde" -> "itertools" [];
	"sympy.solvers.pde" -> "operator" [];
	"sympy.solvers.polysys" -> "itertools" [];
	"sympy.solvers.ode.lie_group" -> "itertools" [];
	"sympy.solvers.ode.single" -> "__future__" [];
	"sympy.solvers.ode.single" -> "typing" [];
	"sympy.solvers.ode.nonhomogeneous" -> "collections" [];
	"sympy.solvers.ode.riccati" -> "itertools" [];
	"sympy.core.multidimensional" -> "functools" [];
	"sympy.solvers.recurr" -> "collections" [];
	"sympy.solvers.diophantine.diophantine" -> "__future__" [];
	"sympy.calculus.euler" -> "itertools" [];
	"sympy.series.gruntz" -> "functools" [];
	"sympy.series.gruntz" -> "sympy" [];
	"sympy.integrals.transforms" -> "functools" [];
	"sympy.integrals.transforms" -> "itertools" [];
	"sympy.simplify.powsimp" -> "collections" [];
	"sympy.simplify.powsimp" -> "functools" [];
	"sympy.simplify.powsimp" -> "math" [];
	"sympy.utilities.timeutils" -> "timeit" [];
	"sympy.utilities.timeutils" -> "math" [];
	"sympy.utilities.timeutils" -> "os" [];
	"sympy.utilities.timeutils" -> "time" [];
	"sympy.functions.special.hyper" -> "collections" [];
	"sympy.functions.special.hyper" -> "sympy" [];
	"sympy.functions.special.hyper" -> "mpmath" [];
	"sympy.functions.special.gamma_functions" -> "math" [];
	"sympy.functions.special.gamma_functions" -> "mpmath" [];
	"sympy.functions.special.error_functions" -> "sympy" [];
	"sympy.functions.special.bessel" -> "functools" [];
	"sympy.functions.special.bessel" -> "mpmath" [];
	"sympy.functions.special.bessel" -> "math" [];
	"sympy.functions.special.bessel" -> "scipy" [];
	"sympy.functions.special.bessel" -> "'scipy.special'" [];
	"sympy.functions.combinatorial.factorials" -> "__future__" [];
	"sympy.functions.combinatorial.factorials" -> "functools" [];
	"sympy.functions.combinatorial.factorials" -> "math" [];
	"sympy.core.intfunc" -> "math" [];
	"sympy.core.intfunc" -> "sys" [];
	"sympy.core.intfunc" -> "functools" [];
	"sympy.integrals.heurisch" -> "__future__" [];
	"sympy.integrals.heurisch" -> "collections" [];
	"sympy.integrals.heurisch" -> "functools" [];
	"sympy.integrals.heurisch" -> "itertools" [];
	"sympy.simplify.fu" -> "collections" [];
	"sympy.simplify.fu" -> "sympy" [];
	"sympy.integrals.manualintegrate" -> "__future__" [];
	"sympy.integrals.manualintegrate" -> "typing" [];
	"sympy.integrals.manualintegrate" -> "abc" [];
	"sympy.integrals.manualintegrate" -> "dataclasses" [];
	"sympy.integrals.manualintegrate" -> "collections" [];
	"sympy.integrals.risch" -> "types" [];
	"sympy.integrals.risch" -> "functools" [];
	"sympy.integrals.rde" -> "operator" [];
	"sympy.integrals.rde" -> "functools" [];
	"sympy.integrals.prde" -> "itertools" [];
	"sympy.integrals.prde" -> "functools" [];
	"sympy.concrete.summations" -> "typing" [];
	"sympy.concrete.summations" -> "itertools" [];
	"sympy.solvers.solvers" -> "__future__" [];
	"sympy.solvers.solvers" -> "mpmath" [];
	"sympy.solvers.solvers" -> "types" [];
	"sympy.solvers.solvers" -> "collections" [];
	"sympy.solvers.solvers" -> "itertools" [];
	"sympy.solvers.solvers" -> "warnings" [];
	"sympy.solvers.solvers" -> "builtins" [];
	"sympy.utilities.exceptions" -> "warnings" [];
	"sympy.utilities.exceptions" -> "contextlib" [];
	"sympy.utilities.exceptions" -> "textwrap" [];
	"sympy.tensor.functions" -> "functools" [];
	"sympy.series.formal" -> "collections" [];
	"sympy.functions.special.spherical_harmonics" -> "mpmath" [];
	"sympy.functions.special.bsplines" -> "functools" [];
	"sympy.core.mul" -> "typing" [];
	"sympy.core.mul" -> "collections" [];
	"sympy.core.mul" -> "functools" [];
	"sympy.core.mul" -> "itertools" [];
	"sympy.core.mul" -> "operator" [];
	"sympy.functions.elementary.integers" -> "typing" [];
	"sympy.printing.pretty.stringpict" -> "shutil" [];
	"sympy.functions.elementary.trigonometric" -> "typing" [];
	"sympy.functions.elementary._trigonometric_special" -> "__future__" [];
	"sympy.functions.elementary._trigonometric_special" -> "typing" [];
	"sympy.functions.elementary._trigonometric_special" -> "functools" [];
	"sympy.functions.elementary.exponential" -> "itertools" [];
	"sympy.functions.elementary.exponential" -> "typing" [];
	"sympy.core.power" -> "__future__" [];
	"sympy.core.power" -> "typing" [];
	"sympy.core.power" -> "itertools" [];
	"sympy.core.logic" -> "__future__" [];
	"sympy.core.logic" -> "typing" [];
	"sympy.core.exprtools" -> "collections" [];
	"sympy.core.exprtools" -> "typing" [];
	"sympy.core.expr" -> "__future__" [];
	"sympy.core.expr" -> "typing" [];
	"sympy.core.expr" -> "functools" [];
	"sympy.core.expr" -> "re" [];
	"sympy.core.expr" -> "collections" [];
	"sympy.core.expr" -> "math" [];
	"sympy.sets.sets" -> "typing" [];
	"sympy.sets.sets" -> "functools" [];
	"sympy.sets.sets" -> "collections" [];
	"sympy.sets.sets" -> "inspect" [];
	"sympy.sets.sets" -> "mpmath" [];
	"sympy.solvers.solveset" -> "types" [];
	"sympy.functions.elementary.piecewise" -> "itertools" [];
	"sympy.simplify.simplify" -> "collections" [];
	"sympy.simplify.simplify" -> "mpmath" [];
	"sympy.assumptions.sathandlers" -> "collections" [];
	"sympy.assumptions.cnf" -> "itertools" [];
	"sympy.core.relational" -> "__future__" [];
	"sympy.logic.algorithms.minisat22_wrapper" -> "pysat" [];
	"sympy.logic.algorithms.pycosat_wrapper" -> "pycosat" [];
	"sympy.logic.algorithms.dpll2" -> "collections" [];
	"sympy.logic.algorithms.dpll2" -> "heapq" [];
	"sympy.core.symbol" -> "__future__" [];
	"sympy.core.symbol" -> "string" [];
	"sympy.core.symbol" -> "re" [];
	"sympy.core.symbol" -> "random" [];
	"sympy.core.symbol" -> "itertools" [];
	"sympy.core.symbol" -> "typing" [];
	"sympy.core.symbol" -> "inspect" [];
	"sympy.utilities.misc" -> "__future__" [];
	"sympy.utilities.misc" -> "operator" [];
	"sympy.utilities.misc" -> "sys" [];
	"sympy.utilities.misc" -> "os" [];
	"sympy.utilities.misc" -> "re" [];
	"sympy.utilities.misc" -> "struct" [];
	"sympy.utilities.misc" -> "textwrap" [];
	"sympy.utilities.misc" -> "sympy" [];
	"sympy.utilities.iterables" -> "collections" [];
	"sympy.utilities.iterables" -> "itertools" [];
	"sympy.utilities.iterables" -> "operator" [];
	"sympy.utilities.iterables" -> "io" [];
	"sympy.utilities.iterables" -> "sys" [];
	"sympy.utilities.iterables" -> "math" [];
	"sympy.utilities.iterables" -> "secrets" [];
	"sympy.utilities.iterables" -> "sympy" [];
	"sympy.core.sympify" -> "__future__" [];
	"sympy.core.sympify" -> "typing" [];
	"sympy.core.sympify" -> "inspect" [];
	"sympy.core.sympify" -> "string" [];
	"sympy.core.sympify" -> "numpy" [];
	"sympy.core.sorting" -> "collections" [];
	"sympy.core.core" -> "__future__" [];
	"sympy.core.operations" -> "__future__" [];
	"sympy.core.operations" -> "operator" [];
	"sympy.core.operations" -> "collections" [];
	"sympy.core.numbers" -> "__future__" [];
	"sympy.core.numbers" -> "numbers" [];
	"sympy.core.numbers" -> "decimal" [];
	"sympy.core.numbers" -> "fractions" [];
	"sympy.core.numbers" -> "math" [];
	"sympy.core.numbers" -> "mpmath" [];
	"sympy.core.kind" -> "collections" [];
	"sympy.core.function" -> "__future__" [];
	"sympy.core.function" -> "typing" [];
	"sympy.core.function" -> "mpmath" [];
	"sympy.core.function" -> "inspect" [];
	"sympy.core.function" -> "collections" [];
	"sympy.core.function" -> "'sage.all'" [];
	"sympy.core.function" -> "sympy" [];
	"sympy.core.decorators" -> "functools" [];
	"sympy.core.containers" -> "collections" [];
	"sympy.core.containers" -> "typing" [];
	"sympy.core.cache" -> "importlib" [];
	"sympy.core.cache" -> "typing" [];
	"sympy.core.cache" -> "functools" [];
	"sympy.core.cache" -> "os" [];
	"sympy.core.basic" -> "__future__" [];
	"sympy.core.basic" -> "collections" [];
	"sympy.core.basic" -> "itertools" [];
	"sympy.core.basic" -> "functools" [];
	"sympy.core.basic" -> "inspect" [];
	"sympy.core.basic" -> "'sage.interfaces'" [];
	"sympy.tensor.tensor" -> "__future__" [];
	"sympy.tensor.tensor" -> "typing" [];
	"sympy.tensor.tensor" -> "functools" [];
	"sympy.tensor.tensor" -> "math" [];
	"sympy.tensor.tensor" -> "abc" [];
	"sympy.tensor.tensor" -> "collections" [];
	"sympy.tensor.tensor" -> "operator" [];
	"sympy.tensor.tensor" -> "itertools" [];
	"sympy.core.add" -> "typing" [];
	"sympy.core.add" -> "collections" [];
	"sympy.core.add" -> "functools" [];
	"sympy.core.add" -> "operator" [];
	"torch.utils._sympy.reference" -> "math" [];
	"torch.utils._sympy.reference" -> "operator" [];
	"torch.utils._sympy.reference" -> "sympy" [];
	"torch.utils._sympy.reference" -> "torch" [];
	"torch.utils._sympy.numbers" -> "sympy" [];
	"torch._export.passes._node_metadata_hook" -> "contextlib" [];
	"torch._export.passes._node_metadata_hook" -> "torch" [];
	"torch.fx.experimental.sym_node" -> "builtins" [];
	"torch.fx.experimental.sym_node" -> "itertools" [];
	"torch.fx.experimental.sym_node" -> "logging" [];
	"torch.fx.experimental.sym_node" -> "math" [];
	"torch.fx.experimental.sym_node" -> "operator" [];
	"torch.fx.experimental.sym_node" -> "sys" [];
	"torch.fx.experimental.sym_node" -> "functools" [];
	"torch.fx.experimental.sym_node" -> "typing" [];
	"torch.fx.experimental.sym_node" -> "torch" [];
	"torch.fx.experimental.sym_node" -> "sympy" [];
	"torch.fx._utils" -> "sys" [];
	"torch.fx._utils" -> "typing" [];
	"torch.fx._utils" -> "torch" [];
	"torch.fx.passes.reinplace" -> "torch" [];
	"torch.fx.passes.reinplace" -> "_operator" [];
	"torch.fx.passes.reinplace" -> "enum" [];
	"torch.fx.passes.reinplace" -> "itertools" [];
	"torch.fx.passes.reinplace" -> "typing" [];
	"torch.fx.passes.reinplace" -> "collections" [];
	"torch.fx.passes.param_fetch" -> "typing" [];
	"torch.fx.passes.param_fetch" -> "torch" [];
	"torch.fx.passes.operator_support" -> "abc" [];
	"torch.fx.passes.operator_support" -> "typing" [];
	"torch.fx.passes.operator_support" -> "torch" [];
	"torch.fx.passes.net_min_base" -> "logging" [];
	"torch.fx.passes.net_min_base" -> "dataclasses" [];
	"torch.fx.passes.net_min_base" -> "typing" [];
	"torch.fx.passes.net_min_base" -> "torch" [];
	"torch.fx.passes.graph_manipulation" -> "typing" [];
	"torch.fx.passes.graph_manipulation" -> "torch" [];
	"torch.fx.passes.graph_drawer" -> "hashlib" [];
	"torch.fx.passes.graph_drawer" -> "itertools" [];
	"torch.fx.passes.graph_drawer" -> "typing" [];
	"torch.fx.passes.graph_drawer" -> "torch" [];
	"torch.fx.passes.graph_drawer" -> "pydot" [];
	"torch._subclasses.meta_utils" -> "__future__" [];
	"torch._subclasses.meta_utils" -> "contextlib" [];
	"torch._subclasses.meta_utils" -> "dataclasses" [];
	"torch._subclasses.meta_utils" -> "warnings" [];
	"torch._subclasses.meta_utils" -> "weakref" [];
	"torch._subclasses.meta_utils" -> "typing" [];
	"torch._subclasses.meta_utils" -> "typing_extensions" [];
	"torch._subclasses.meta_utils" -> "torch" [];
	"torch._subclasses.meta_utils" -> "'torch._C._autograd'" [];
	"torch._subclasses.meta_utils" -> "'torch._C._functorch'" [];
	"torch.utils._mode_utils" -> "torch" [];
	"torch.utils._mode_utils" -> "typing" [];
	"torch._export.pass_infra.proxy_value" -> "typing" [];
	"torch._export.pass_infra.proxy_value" -> "torch" [];
	"torch._export.pass_infra.node_metadata" -> "typing" [];
	"functorch.experimental.control_flow" -> "torch" [];
	"torch._functorch.eager_transforms" -> "contextlib" [];
	"torch._functorch.eager_transforms" -> "functools" [];
	"torch._functorch.eager_transforms" -> "typing" [];
	"torch._functorch.eager_transforms" -> "torch" [];
	"torch._functorch.eager_transforms" -> "'torch._C._functorch'" [];
	"torch._functorch.vmap" -> "contextlib" [];
	"torch._functorch.vmap" -> "functools" [];
	"torch._functorch.vmap" -> "itertools" [];
	"torch._functorch.vmap" -> "os" [];
	"torch._functorch.vmap" -> "threading" [];
	"torch._functorch.vmap" -> "typing" [];
	"torch._functorch.vmap" -> "torch" [];
	"torch._functorch.vmap" -> "'torch._C._functorch'" [];
	"torch._functorch.apis" -> "functools" [];
	"functorch" -> "torch" [];
	"torch._functorch.make_functional" -> "copy" [];
	"torch._functorch.make_functional" -> "typing" [];
	"torch._functorch.make_functional" -> "torch" [];
	"torch.nn.utils._named_member_accessor" -> "typing" [];
	"torch.nn.utils._named_member_accessor" -> "torch" [];
	"torch._functorch.deprecated" -> "textwrap" [];
	"torch._functorch.deprecated" -> "warnings" [];
	"torch._functorch.deprecated" -> "typing" [];
	"torch._higher_order_ops.map" -> "torch" [];
	"torch._higher_order_ops.cond" -> "contextlib" [];
	"torch._higher_order_ops.cond" -> "logging" [];
	"torch._higher_order_ops.cond" -> "torch" [];
	"torch._higher_order_ops.cond" -> "'torch._C._functorch'" [];
	"torch._export.error" -> "enum" [];
	"torch.fx.passes.split_module" -> "inspect" [];
	"torch.fx.passes.split_module" -> "typing" [];
	"torch.fx.passes.split_module" -> "collections" [];
	"torch.fx.passes.split_module" -> "logging" [];
	"torch.fx.passes.split_module" -> "torch" [];
	"torch.fx.passes.split_module" -> "sympy" [];
	"torch.utils._sympy.solve" -> "logging" [];
	"torch.utils._sympy.solve" -> "typing" [];
	"torch.utils._sympy.solve" -> "sympy" [];
	"torch._export.passes.add_runtime_assertions_for_constraints_pass" -> "math" [];
	"torch._export.passes.add_runtime_assertions_for_constraints_pass" -> "operator" [];
	"torch._export.passes.add_runtime_assertions_for_constraints_pass" -> "traceback" [];
	"torch._export.passes.add_runtime_assertions_for_constraints_pass" -> "functools" [];
	"torch._export.passes.add_runtime_assertions_for_constraints_pass" -> "typing" [];
	"torch._export.passes.add_runtime_assertions_for_constraints_pass" -> "sympy" [];
	"torch._export.passes.add_runtime_assertions_for_constraints_pass" -> "torch" [];
	"torch._export.passes.lift_constants_pass" -> "collections" [];
	"torch._export.passes.lift_constants_pass" -> "warnings" [];
	"torch._export.passes.lift_constants_pass" -> "typing" [];
	"torch._export.passes.lift_constants_pass" -> "torch" [];
	"torch._export.verifier" -> "inspect" [];
	"torch._export.verifier" -> "math" [];
	"torch._export.verifier" -> "operator" [];
	"torch._export.verifier" -> "typing" [];
	"torch._export.verifier" -> "torch" [];
	"torch._export.serde.serialize" -> "base64" [];
	"torch._export.serde.serialize" -> "copy" [];
	"torch._export.serde.serialize" -> "copyreg" [];
	"torch._export.serde.serialize" -> "dataclasses" [];
	"torch._export.serde.serialize" -> "heapq" [];
	"torch._export.serde.serialize" -> "inspect" [];
	"torch._export.serde.serialize" -> "io" [];
	"torch._export.serde.serialize" -> "json" [];
	"torch._export.serde.serialize" -> "logging" [];
	"torch._export.serde.serialize" -> "math" [];
	"torch._export.serde.serialize" -> "operator" [];
	"torch._export.serde.serialize" -> "re" [];
	"torch._export.serde.serialize" -> "typing" [];
	"torch._export.serde.serialize" -> "traceback" [];
	"torch._export.serde.serialize" -> "contextlib" [];
	"torch._export.serde.serialize" -> "enum" [];
	"torch._export.serde.serialize" -> "sympy" [];
	"torch._export.serde.serialize" -> "torch" [];
	"torch._export.serde.union" -> "functools" [];
	"torch._export.serde.union" -> "dataclasses" [];
	"torch._export.serde.union" -> "typing" [];
	"torch._export.serde.schema" -> "dataclasses" [];
	"torch._export.serde.schema" -> "enum" [];
	"torch._export.serde.schema" -> "typing" [];
	"torch.export._trace" -> "dataclasses" [];
	"torch.export._trace" -> "functools" [];
	"torch.export._trace" -> "inspect" [];
	"torch.export._trace" -> "logging" [];
	"torch.export._trace" -> "re" [];
	"torch.export._trace" -> "time" [];
	"torch.export._trace" -> "warnings" [];
	"torch.export._trace" -> "contextlib" [];
	"torch.export._trace" -> "typing" [];
	"torch.export._trace" -> "torch" [];
	"torch._export.passes.replace_set_grad_with_hop_pass" -> "torch" [];
	"torch._export.passes.replace_with_hop_pass_util" -> "contextlib" [];
	"torch._export.passes.replace_with_hop_pass_util" -> "copy" [];
	"torch._export.passes.replace_with_hop_pass_util" -> "operator" [];
	"torch._export.passes.replace_with_hop_pass_util" -> "typing" [];
	"torch._export.passes.replace_with_hop_pass_util" -> "torch" [];
	"torch._higher_order_ops.wrap" -> "inspect" [];
	"torch._higher_order_ops.wrap" -> "itertools" [];
	"torch._higher_order_ops.wrap" -> "logging" [];
	"torch._higher_order_ops.wrap" -> "typing" [];
	"torch.utils.checkpoint" -> "contextlib" [];
	"torch.utils.checkpoint" -> "platform" [];
	"torch.utils.checkpoint" -> "uuid" [];
	"torch.utils.checkpoint" -> "warnings" [];
	"torch.utils.checkpoint" -> "weakref" [];
	"torch.utils.checkpoint" -> "collections" [];
	"torch.utils.checkpoint" -> "typing" [];
	"torch.utils.checkpoint" -> "enum" [];
	"torch.utils.checkpoint" -> "torch" [];
	"torch.testing._internal.logging_tensor" -> "torch" [];
	"torch.testing._internal.logging_tensor" -> "typing" [];
	"torch.testing._internal.logging_tensor" -> "logging" [];
	"torch.testing._internal.logging_tensor" -> "contextlib" [];
	"torch.testing._internal.logging_tensor" -> "itertools" [];
	"torch.testing._internal.logging_tensor" -> "functools" [];
	"torch.testing._internal.logging_tensor" -> "'torch._C._profiler'" [];
	"torch._export.passes.replace_autocast_with_hop_pass" -> "typing" [];
	"torch._export.passes.replace_autocast_with_hop_pass" -> "torch" [];
	"torch.export._safeguard" -> "torch" [];
	"torch._export.passes.collect_tracepoints_pass" -> "operator" [];
	"torch._export.passes.collect_tracepoints_pass" -> "torch" [];
	"torch._export.db.examples" -> "dataclasses" [];
	"torch._export.db.examples" -> "glob" [];
	"torch._export.db.examples" -> "inspect" [];
	"torch._export.db.examples" -> "os.path" [];
	"torch._export.db.examples" -> "torch" [];
	"torch._export.db.case" -> "inspect" [];
	"torch._export.db.case" -> "re" [];
	"torch._export.db.case" -> "string" [];
	"torch._export.db.case" -> "dataclasses" [];
	"torch._export.db.case" -> "enum" [];
	"torch._export.db.case" -> "typing" [];
	"torch._export.db.case" -> "types" [];
	"torch._export.db.case" -> "torch" [];
	"torch.export.unflatten" -> "abc" [];
	"torch.export.unflatten" -> "copy" [];
	"torch.export.unflatten" -> "operator" [];
	"torch.export.unflatten" -> "collections" [];
	"torch.export.unflatten" -> "contextlib" [];
	"torch.export.unflatten" -> "enum" [];
	"torch.export.unflatten" -> "typing" [];
	"torch.export.unflatten" -> "torch" [];
	"torch.fx._pytree" -> "collections" [];
	"torch.fx._pytree" -> "typing" [];
	"torch.return_types" -> "inspect" [];
	"torch.export.exported_program" -> "contextlib" [];
	"torch.export.exported_program" -> "copy" [];
	"torch.export.exported_program" -> "dataclasses" [];
	"torch.export.exported_program" -> "functools" [];
	"torch.export.exported_program" -> "operator" [];
	"torch.export.exported_program" -> "types" [];
	"torch.export.exported_program" -> "warnings" [];
	"torch.export.exported_program" -> "collections" [];
	"torch.export.exported_program" -> "typing" [];
	"torch.export.exported_program" -> "sympy" [];
	"torch.export.exported_program" -> "torch" [];
	"torch.fx.immutable_collections" -> "typing" [];
	"torch.export.dynamic_shapes" -> "dataclasses" [];
	"torch.export.dynamic_shapes" -> "inspect" [];
	"torch.export.dynamic_shapes" -> "logging" [];
	"torch.export.dynamic_shapes" -> "sys" [];
	"torch.export.dynamic_shapes" -> "collections" [];
	"torch.export.dynamic_shapes" -> "enum" [];
	"torch.export.dynamic_shapes" -> "typing" [];
	"torch.export.dynamic_shapes" -> "torch" [];
	"torch.export.dynamic_shapes" -> "sympy" [];
	"torch.export.dynamic_shapes" -> "re" [];
	"torch.fx.passes.infra.pass_manager" -> "inspect" [];
	"torch.fx.passes.infra.pass_manager" -> "logging" [];
	"torch.fx.passes.infra.pass_manager" -> "queue" [];
	"torch.fx.passes.infra.pass_manager" -> "functools" [];
	"torch.fx.passes.infra.pass_manager" -> "typing" [];
	"torch.fx.passes.infra.pass_base" -> "abc" [];
	"torch.fx.passes.infra.pass_base" -> "collections" [];
	"torch.fx.passes.infra.pass_base" -> "typing" [];
	"torch.onnx._internal.exporter._reporting" -> "__future__" [];
	"torch.onnx._internal.exporter._reporting" -> "dataclasses" [];
	"torch.onnx._internal.exporter._reporting" -> "re" [];
	"torch.onnx._internal.exporter._reporting" -> "typing" [];
	"torch.onnx._internal.exporter._reporting" -> "os" [];
	"torch.onnx._internal.exporter._reporting" -> "onnxscript" [];
	"torch.onnx._internal.exporter._reporting" -> "torch" [];
	"torch.onnx._internal.exporter._verification" -> "__future__" [];
	"torch.onnx._internal.exporter._verification" -> "dataclasses" [];
	"torch.onnx._internal.exporter._verification" -> "math" [];
	"torch.onnx._internal.exporter._verification" -> "typing" [];
	"torch.onnx._internal.exporter._verification" -> "torch" [];
	"torch.onnx._internal.exporter._onnx_program" -> "__future__" [];
	"torch.onnx._internal.exporter._onnx_program" -> "copy" [];
	"torch.onnx._internal.exporter._onnx_program" -> "gc" [];
	"torch.onnx._internal.exporter._onnx_program" -> "logging" [];
	"torch.onnx._internal.exporter._onnx_program" -> "os" [];
	"torch.onnx._internal.exporter._onnx_program" -> "tempfile" [];
	"torch.onnx._internal.exporter._onnx_program" -> "textwrap" [];
	"torch.onnx._internal.exporter._onnx_program" -> "warnings" [];
	"torch.onnx._internal.exporter._onnx_program" -> "typing" [];
	"torch.onnx._internal.exporter._onnx_program" -> "torch" [];
	"torch.onnx._internal.exporter._onnx_program" -> "onnxruntime" [];
	"torch.onnx._internal.exporter._ir_passes" -> "__future__" [];
	"torch.onnx._internal.exporter._ir_passes" -> "logging" [];
	"torch.onnx._internal.exporter._ir_passes" -> "typing" [];
	"torch.onnx._internal.exporter._ir_passes" -> "onnxscript" [];
	"torch.onnx._internal.exporter._ir_passes" -> "'onnxscript.function_libs'" [];
	"torch.onnx._internal.exporter._fx_passes" -> "__future__" [];
	"torch.onnx._internal.exporter._fx_passes" -> "torch" [];
	"torch.onnx._internal.fx.passes.virtualization" -> "__future__" [];
	"torch.onnx._internal.fx.passes.virtualization" -> "typing" [];
	"torch.onnx._internal.fx.passes.virtualization" -> "torch" [];
	"torch.onnx._internal.fx._pass" -> "__future__" [];
	"torch.onnx._internal.fx._pass" -> "abc" [];
	"torch.onnx._internal.fx._pass" -> "contextlib" [];
	"torch.onnx._internal.fx._pass" -> "dataclasses" [];
	"torch.onnx._internal.fx._pass" -> "difflib" [];
	"torch.onnx._internal.fx._pass" -> "io" [];
	"torch.onnx._internal.fx._pass" -> "logging" [];
	"torch.onnx._internal.fx._pass" -> "sys" [];
	"torch.onnx._internal.fx._pass" -> "typing" [];
	"torch.onnx._internal.fx._pass" -> "torch" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "__future__" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "logging" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "operator" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "types" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "typing" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "torch" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "onnxscript" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "'onnxscript.function_libs'" [];
	"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "onnx" [];
	"torch.onnx._internal.fx.type_utils" -> "__future__" [];
	"torch.onnx._internal.fx.type_utils" -> "typing" [];
	"torch.onnx._internal.fx.type_utils" -> "numpy" [];
	"torch.onnx._internal.fx.type_utils" -> "onnx" [];
	"torch.onnx._internal.fx.type_utils" -> "torch" [];
	"torch.onnx._internal.fx.type_utils" -> "'onnx.defs'" [];
	"torch.onnx._internal.fx.registration" -> "__future__" [];
	"torch.onnx._internal.fx.registration" -> "dataclasses" [];
	"torch.onnx._internal.fx.registration" -> "typing" [];
	"torch.onnx._internal.fx.registration" -> "types" [];
	"torch.onnx._internal.fx.registration" -> "onnxscript" [];
	"torch.onnx._internal.fx.passes.type_promotion" -> "__future__" [];
	"torch.onnx._internal.fx.passes.type_promotion" -> "abc" [];
	"torch.onnx._internal.fx.passes.type_promotion" -> "dataclasses" [];
	"torch.onnx._internal.fx.passes.type_promotion" -> "inspect" [];
	"torch.onnx._internal.fx.passes.type_promotion" -> "logging" [];
	"torch.onnx._internal.fx.passes.type_promotion" -> "typing" [];
	"torch.onnx._internal.fx.passes.type_promotion" -> "torch" [];
	"torch.onnx._internal.fx.passes.type_promotion" -> "types" [];
	"torch.onnx._internal.fx.passes.readability" -> "__future__" [];
	"torch.onnx._internal.fx.passes.readability" -> "typing" [];
	"torch.onnx._internal.fx.passes.readability" -> "torch" [];
	"torch.onnx._internal.fx.passes.modularization" -> "__future__" [];
	"torch.onnx._internal.fx.passes.modularization" -> "abc" [];
	"torch.onnx._internal.fx.passes.modularization" -> "collections" [];
	"torch.onnx._internal.fx.passes.modularization" -> "copy" [];
	"torch.onnx._internal.fx.passes.modularization" -> "operator" [];
	"torch.onnx._internal.fx.passes.modularization" -> "typing" [];
	"torch.onnx._internal.fx.passes.modularization" -> "torch" [];
	"torch.onnx._internal.fx.passes.functionalization" -> "__future__" [];
	"torch.onnx._internal.fx.passes.functionalization" -> "contextlib" [];
	"torch.onnx._internal.fx.passes.functionalization" -> "typing" [];
	"torch.onnx._internal.fx.passes.functionalization" -> "torch" [];
	"torch._functorch.functional_call" -> "typing" [];
	"torch._functorch.functional_call" -> "torch" [];
	"torch.onnx._internal.fx.passes.decomp" -> "__future__" [];
	"torch.onnx._internal.fx.passes.decomp" -> "contextlib" [];
	"torch.onnx._internal.fx.passes.decomp" -> "typing" [];
	"torch.onnx._internal.fx.passes.decomp" -> "torch" [];
	"torch.onnx._internal.fx.passes._utils" -> "__future__" [];
	"torch.onnx._internal.fx.passes._utils" -> "collections" [];
	"torch.onnx._internal.fx.passes._utils" -> "re" [];
	"torch.onnx._internal.fx.passes._utils" -> "typing" [];
	"torch.onnx._internal.fx.diagnostics" -> "__future__" [];
	"torch.onnx._internal.fx.diagnostics" -> "dataclasses" [];
	"torch.onnx._internal.fx.diagnostics" -> "functools" [];
	"torch.onnx._internal.fx.diagnostics" -> "typing" [];
	"torch.onnx._internal.fx.diagnostics" -> "onnxscript" [];
	"torch.onnx._internal.fx.diagnostics" -> "'onnxscript.function_libs'" [];
	"torch.onnx._internal.fx.diagnostics" -> "torch" [];
	"torch.onnx._internal.fx.diagnostics" -> "logging" [];
	"torch.onnx._internal.diagnostics.infra.formatter" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.formatter" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.formatter" -> "json" [];
	"torch.onnx._internal.diagnostics.infra.formatter" -> "re" [];
	"torch.onnx._internal.diagnostics.infra.formatter" -> "traceback" [];
	"torch.onnx._internal.diagnostics.infra.formatter" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif.version" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._run" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._run" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._run" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._special_locations" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._special_locations" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._special_locations" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._result" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._result" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._result" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._suppression" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._suppression" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._suppression" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._fix" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._fix" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._fix" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._graph" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._graph" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._graph" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._node" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._node" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._node" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._edge" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._edge" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._edge" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._conversion" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._conversion" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._conversion" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._invocation" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._invocation" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._invocation" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._notification" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._notification" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._notification" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._exception" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._exception" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._exception" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._code_flow" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._code_flow" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._code_flow" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._web_response" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._web_response" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._web_response" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._web_request" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._web_request" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._web_request" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._stack" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._stack" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._stack" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._location" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._location" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._location" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._physical_location" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._physical_location" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._physical_location" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._logical_location" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._logical_location" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._logical_location" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._location_relationship" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._location_relationship" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._location_relationship" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._rectangle" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._rectangle" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._rectangle" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._replacement" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._replacement" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._replacement" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._region" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._region" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._region" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_location" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_location" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_location" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._message" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._message" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._message" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_content" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_content" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._artifact_content" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._address" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._address" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._address" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.sarif._property_bag" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.sarif._property_bag" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.sarif._property_bag" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.decorator" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.decorator" -> "functools" [];
	"torch.onnx._internal.diagnostics.infra.decorator" -> "logging" [];
	"torch.onnx._internal.diagnostics.infra.decorator" -> "traceback" [];
	"torch.onnx._internal.diagnostics.infra.decorator" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.utils" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.utils" -> "functools" [];
	"torch.onnx._internal.diagnostics.infra.utils" -> "inspect" [];
	"torch.onnx._internal.diagnostics.infra.utils" -> "traceback" [];
	"torch.onnx._internal.diagnostics.infra.utils" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra._infra" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra._infra" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra._infra" -> "enum" [];
	"torch.onnx._internal.diagnostics.infra._infra" -> "logging" [];
	"torch.onnx._internal.diagnostics.infra._infra" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.context" -> "__future__" [];
	"torch.onnx._internal.diagnostics.infra.context" -> "contextlib" [];
	"torch.onnx._internal.diagnostics.infra.context" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics.infra.context" -> "gzip" [];
	"torch.onnx._internal.diagnostics.infra.context" -> "logging" [];
	"torch.onnx._internal.diagnostics.infra.context" -> "typing" [];
	"torch.onnx._internal.diagnostics.infra.context" -> "typing_extensions" [];
	"torch.onnx._internal.diagnostics._rules" -> "dataclasses" [];
	"torch.onnx._internal.diagnostics._rules" -> "typing" [];
	"torch.onnx._internal.diagnostics._diagnostic" -> "__future__" [];
	"torch.onnx._internal.diagnostics._diagnostic" -> "contextlib" [];
	"torch.onnx._internal.diagnostics._diagnostic" -> "gzip" [];
	"torch.onnx._internal.diagnostics._diagnostic" -> "typing" [];
	"torch.onnx._internal.diagnostics._diagnostic" -> "torch" [];
	"torch.onnx._internal.fx.analysis.unsupported_nodes" -> "__future__" [];
	"torch.onnx._internal.fx.analysis.unsupported_nodes" -> "dataclasses" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "__future__" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "inspect" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "logging" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "operator" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "re" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "typing" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "onnxscript" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "'onnxscript.function_libs'" [];
	"torch.onnx._internal.fx.fx_onnx_interpreter" -> "torch" [];
	"torch.onnx._internal.fx.decomposition_skip" -> "__future__" [];
	"torch.onnx._internal.fx.decomposition_skip" -> "abc" [];
	"torch.onnx._internal.fx.decomposition_skip" -> "contextlib" [];
	"torch.onnx._internal.fx.decomposition_skip" -> "typing" [];
	"torch.onnx._internal.fx.decomposition_skip" -> "'onnxscript.function_libs'" [];
	"torch.onnx._internal.fx.decomposition_skip" -> "torch" [];
	"torch.onnx._internal.fx.fx_symbolic_graph_extractor" -> "__future__" [];
	"torch.onnx._internal.fx.fx_symbolic_graph_extractor" -> "functools" [];
	"torch.onnx._internal.fx.fx_symbolic_graph_extractor" -> "typing" [];
	"torch.onnx._internal.fx.fx_symbolic_graph_extractor" -> "torch" [];
	"torch.onnx._internal.io_adapter" -> "__future__" [];
	"torch.onnx._internal.io_adapter" -> "typing" [];
	"torch.onnx._internal.io_adapter" -> "torch" [];
	"torch.onnx._internal.io_adapter" -> "inspect" [];
	"torch.onnx._internal.fx.dynamo_graph_extractor" -> "__future__" [];
	"torch.onnx._internal.fx.dynamo_graph_extractor" -> "contextlib" [];
	"torch.onnx._internal.fx.dynamo_graph_extractor" -> "functools" [];
	"torch.onnx._internal.fx.dynamo_graph_extractor" -> "inspect" [];
	"torch.onnx._internal.fx.dynamo_graph_extractor" -> "typing" [];
	"torch.onnx._internal.fx.dynamo_graph_extractor" -> "transformers" [];
	"transformers.modeling_outputs" -> "warnings" [];
	"transformers.modeling_outputs" -> "dataclasses" [];
	"transformers.modeling_outputs" -> "typing" [];
	"transformers.modeling_outputs" -> "torch" [];
	"torch.onnx._internal.fx.decomposition_table" -> "__future__" [];
	"torch.onnx._internal.fx.decomposition_table" -> "typing" [];
	"torch.onnx._internal.fx.decomposition_table" -> "torch" [];
	"torch.onnx._internal.fx.serialization" -> "__future__" [];
	"torch.onnx._internal.fx.serialization" -> "io" [];
	"torch.onnx._internal.fx.serialization" -> "logging" [];
	"torch.onnx._internal.fx.serialization" -> "os" [];
	"torch.onnx._internal.fx.serialization" -> "typing" [];
	"torch.onnx._internal.fx.serialization" -> "torch" [];
	"torch.onnx._internal.fx.serialization" -> "onnx" [];
	"torch.onnx._internal.fx.serialization" -> "safetensors" [];
	"torch.onnx._internal.fx.patcher" -> "copy" [];
	"torch.onnx._internal.fx.patcher" -> "functools" [];
	"torch.onnx._internal.fx.patcher" -> "typing" [];
	"torch.onnx._internal.fx.patcher" -> "torch" [];
	"torch.onnx._internal.fx.patcher" -> "io" [];
	"torch.onnx._internal.fx.patcher" -> "safetensors" [];
	"torch.onnx._internal.fx.patcher" -> "transformers" [];
	"safetensors.torch" -> "os" [];
	"safetensors.torch" -> "sys" [];
	"safetensors.torch" -> "collections" [];
	"safetensors.torch" -> "typing" [];
	"safetensors.torch" -> "torch" [];
	"safetensors.torch" -> "ctypes" [];
	"safetensors.torch" -> "numpy" [];
	"torch.onnx._internal.exporter._decomp" -> "__future__" [];
	"torch.onnx._internal.exporter._decomp" -> "typing" [];
	"torch.onnx._internal.exporter._decomp" -> "torch" [];
	"torch.onnx._internal.exporter._capture_strategies" -> "__future__" [];
	"torch.onnx._internal.exporter._capture_strategies" -> "abc" [];
	"torch.onnx._internal.exporter._capture_strategies" -> "dataclasses" [];
	"torch.onnx._internal.exporter._capture_strategies" -> "datetime" [];
	"torch.onnx._internal.exporter._capture_strategies" -> "pathlib" [];
	"torch.onnx._internal.exporter._capture_strategies" -> "typing" [];
	"torch.onnx._internal.exporter._capture_strategies" -> "torch" [];
	"torch.onnx._internal.exporter._capture_strategies" -> "os" [];
	"torch.onnx._internal.exporter._building" -> "__future__" [];
	"torch.onnx._internal.exporter._building" -> "copy" [];
	"torch.onnx._internal.exporter._building" -> "inspect" [];
	"torch.onnx._internal.exporter._building" -> "logging" [];
	"torch.onnx._internal.exporter._building" -> "typing" [];
	"torch.onnx._internal.exporter._building" -> "onnxscript" [];
	"torch.onnx._internal.exporter._building" -> "'onnxscript.ir'" [];
	"torch.onnx._internal.exporter._building" -> "torch" [];
	"torch.onnx._internal.exporter._building" -> "onnx" [];
	"torch.onnx._internal.exporter._tensors" -> "__future__" [];
	"torch.onnx._internal.exporter._tensors" -> "onnxscript" [];
	"torch.onnx._internal.exporter._errors" -> "__future__" [];
	"torch.onnx._internal.exporter._analysis" -> "__future__" [];
	"torch.onnx._internal.exporter._analysis" -> "dataclasses" [];
	"torch.onnx._internal.exporter._analysis" -> "textwrap" [];
	"torch.onnx._internal.exporter._analysis" -> "traceback" [];
	"torch.onnx._internal.exporter._analysis" -> "collections" [];
	"torch.onnx._internal.exporter._analysis" -> "typing" [];
	"torch.onnx._internal.exporter._analysis" -> "torch" [];
	"torch.onnx._internal.exporter._dispatching" -> "__future__" [];
	"torch.onnx._internal.exporter._dispatching" -> "logging" [];
	"torch.onnx._internal.exporter._dispatching" -> "typing" [];
	"torch.onnx._internal.exporter._dispatching" -> "onnxscript" [];
	"torch.onnx._internal.exporter._dispatching" -> "torch" [];
	"torch.onnx._internal.exporter._registration" -> "__future__" [];
	"torch.onnx._internal.exporter._registration" -> "dataclasses" [];
	"torch.onnx._internal.exporter._registration" -> "logging" [];
	"torch.onnx._internal.exporter._registration" -> "math" [];
	"torch.onnx._internal.exporter._registration" -> "operator" [];
	"torch.onnx._internal.exporter._registration" -> "types" [];
	"torch.onnx._internal.exporter._registration" -> "typing" [];
	"torch.onnx._internal.exporter._registration" -> "typing_extensions" [];
	"torch.onnx._internal.exporter._registration" -> "torch" [];
	"torch.onnx._internal.exporter._registration" -> "onnxscript" [];
	"torch.onnx._internal.exporter._registration" -> "'torchvision.ops'" [];
	"torch.onnx._internal.exporter._schemas" -> "__future__" [];
	"torch.onnx._internal.exporter._schemas" -> "dataclasses" [];
	"torch.onnx._internal.exporter._schemas" -> "inspect" [];
	"torch.onnx._internal.exporter._schemas" -> "logging" [];
	"torch.onnx._internal.exporter._schemas" -> "types" [];
	"torch.onnx._internal.exporter._schemas" -> "typing" [];
	"torch.onnx._internal.exporter._schemas" -> "onnx" [];
	"torch.onnx._internal.exporter._schemas" -> "onnxscript" [];
	"torch.onnx._internal.onnx_proto_utils" -> "__future__" [];
	"torch.onnx._internal.onnx_proto_utils" -> "glob" [];
	"torch.onnx._internal.onnx_proto_utils" -> "io" [];
	"torch.onnx._internal.onnx_proto_utils" -> "os" [];
	"torch.onnx._internal.onnx_proto_utils" -> "shutil" [];
	"torch.onnx._internal.onnx_proto_utils" -> "zipfile" [];
	"torch.onnx._internal.onnx_proto_utils" -> "typing" [];
	"torch.onnx._internal.onnx_proto_utils" -> "torch" [];
	"torch.onnx._internal.onnx_proto_utils" -> "onnx" [];
	"torch.onnx._internal.jit_utils" -> "__future__" [];
	"torch.onnx._internal.jit_utils" -> "dataclasses" [];
	"torch.onnx._internal.jit_utils" -> "re" [];
	"torch.onnx._internal.jit_utils" -> "typing" [];
	"torch.onnx._internal.jit_utils" -> "torch" [];
	"torch.onnx._globals" -> "'torch._C._onnx'" [];
	"torch.onnx._internal.registration" -> "warnings" [];
	"torch.onnx._internal.registration" -> "typing" [];
	"torch.onnx._internal._exporter_legacy" -> "__future__" [];
	"torch.onnx._internal._exporter_legacy" -> "abc" [];
	"torch.onnx._internal._exporter_legacy" -> "contextlib" [];
	"torch.onnx._internal._exporter_legacy" -> "dataclasses" [];
	"torch.onnx._internal._exporter_legacy" -> "logging" [];
	"torch.onnx._internal._exporter_legacy" -> "os" [];
	"torch.onnx._internal._exporter_legacy" -> "tempfile" [];
	"torch.onnx._internal._exporter_legacy" -> "warnings" [];
	"torch.onnx._internal._exporter_legacy" -> "collections" [];
	"torch.onnx._internal._exporter_legacy" -> "typing" [];
	"torch.onnx._internal._exporter_legacy" -> "typing_extensions" [];
	"torch.onnx._internal._exporter_legacy" -> "torch" [];
	"torch.onnx._internal._exporter_legacy" -> "io" [];
	"torch.onnx._internal._exporter_legacy" -> "onnx" [];
	"torch.onnx._internal._exporter_legacy" -> "onnxruntime" [];
	"torch.onnx._internal._exporter_legacy" -> "onnxscript" [];
	"torch.onnx._internal._exporter_legacy" -> "'onnxscript._framework_apis'" [];
	"torch.onnx.symbolic_opset20" -> "functools" [];
	"torch.onnx.symbolic_opset20" -> "torch" [];
	"torch.onnx.symbolic_opset19" -> "typing" [];
	"torch.onnx.symbolic_opset18" -> "functools" [];
	"torch.onnx.symbolic_opset18" -> "typing" [];
	"torch.onnx.symbolic_opset18" -> "torch" [];
	"torch.onnx.symbolic_opset17" -> "functools" [];
	"torch.onnx.symbolic_opset17" -> "typing" [];
	"torch.onnx.symbolic_opset17" -> "torch" [];
	"torch.onnx.symbolic_opset16" -> "functools" [];
	"torch.onnx.symbolic_opset16" -> "torch" [];
	"torch.onnx.symbolic_opset15" -> "functools" [];
	"torch.onnx.symbolic_opset15" -> "torch" [];
	"torch.onnx.symbolic_opset14" -> "__future__" [];
	"torch.onnx.symbolic_opset14" -> "functools" [];
	"torch.onnx.symbolic_opset14" -> "torch" [];
	"torch.onnx.symbolic_opset13" -> "functools" [];
	"torch.onnx.symbolic_opset13" -> "torch" [];
	"torch.onnx.symbolic_opset13" -> "'torch._C._onnx'" [];
	"torch.onnx.symbolic_opset12" -> "__future__" [];
	"torch.onnx.symbolic_opset12" -> "functools" [];
	"torch.onnx.symbolic_opset12" -> "sys" [];
	"torch.onnx.symbolic_opset12" -> "torch" [];
	"torch.onnx.symbolic_opset11" -> "__future__" [];
	"torch.onnx.symbolic_opset11" -> "functools" [];
	"torch.onnx.symbolic_opset11" -> "sys" [];
	"torch.onnx.symbolic_opset11" -> "warnings" [];
	"torch.onnx.symbolic_opset11" -> "typing" [];
	"torch.onnx.symbolic_opset11" -> "torch" [];
	"torch.onnx.symbolic_opset10" -> "__future__" [];
	"torch.onnx.symbolic_opset10" -> "functools" [];
	"torch.onnx.symbolic_opset10" -> "sys" [];
	"torch.onnx.symbolic_opset10" -> "warnings" [];
	"torch.onnx.symbolic_opset10" -> "typing" [];
	"torch.onnx.symbolic_opset10" -> "torch" [];
	"torch.onnx.symbolic_opset10" -> "'torch._C._onnx'" [];
	"torch.onnx.symbolic_opset9" -> "__future__" [];
	"torch.onnx.symbolic_opset9" -> "builtins" [];
	"torch.onnx.symbolic_opset9" -> "functools" [];
	"torch.onnx.symbolic_opset9" -> "math" [];
	"torch.onnx.symbolic_opset9" -> "sys" [];
	"torch.onnx.symbolic_opset9" -> "warnings" [];
	"torch.onnx.symbolic_opset9" -> "typing" [];
	"torch.onnx.symbolic_opset9" -> "torch" [];
	"torch.onnx.symbolic_opset9" -> "'torch._C._onnx'" [];
	"torch.onnx.symbolic_opset8" -> "functools" [];
	"torch.onnx.symbolic_opset8" -> "warnings" [];
	"torch.onnx.symbolic_opset8" -> "torch" [];
	"torch.onnx.symbolic_opset7" -> "functools" [];
	"torch.onnx.symbolic_opset7" -> "warnings" [];
	"torch.onnx.symbolic_caffe2" -> "importlib" [];
	"torch.onnx.symbolic_caffe2" -> "inspect" [];
	"torch.onnx.symbolic_helper" -> "__future__" [];
	"torch.onnx.symbolic_helper" -> "functools" [];
	"torch.onnx.symbolic_helper" -> "inspect" [];
	"torch.onnx.symbolic_helper" -> "math" [];
	"torch.onnx.symbolic_helper" -> "sys" [];
	"torch.onnx.symbolic_helper" -> "typing" [];
	"torch.onnx.symbolic_helper" -> "warnings" [];
	"torch.onnx.symbolic_helper" -> "typing_extensions" [];
	"torch.onnx.symbolic_helper" -> "torch" [];
	"torch.onnx.symbolic_helper" -> "'torch._C._onnx'" [];
	"torch.onnx.utils" -> "__future__" [];
	"torch.onnx.utils" -> "contextlib" [];
	"torch.onnx.utils" -> "copy" [];
	"torch.onnx.utils" -> "inspect" [];
	"torch.onnx.utils" -> "re" [];
	"torch.onnx.utils" -> "typing" [];
	"torch.onnx.utils" -> "warnings" [];
	"torch.onnx.utils" -> "torch" [];
	"torch.onnx.utils" -> "'torch._C._onnx'" [];
	"torch.onnx._deprecation" -> "functools" [];
	"torch.onnx._deprecation" -> "textwrap" [];
	"torch.onnx._deprecation" -> "warnings" [];
	"torch.onnx._deprecation" -> "typing" [];
	"torch.onnx._deprecation" -> "typing_extensions" [];
	"torch.onnx._internal.onnxruntime" -> "dataclasses" [];
	"torch.onnx._internal.onnxruntime" -> "importlib" [];
	"torch.onnx._internal.onnxruntime" -> "logging" [];
	"torch.onnx._internal.onnxruntime" -> "os" [];
	"torch.onnx._internal.onnxruntime" -> "typing" [];
	"torch.onnx._internal.onnxruntime" -> "typing_extensions" [];
	"torch.onnx._internal.onnxruntime" -> "torch" [];
	"torch.onnx._internal.onnxruntime" -> "onnx" [];
	"torch.onnx._internal.onnxruntime" -> "onnxruntime" [];
	"torch.onnx._internal.onnxruntime" -> "'onnxruntime.capi'" [];
	"torch.onnx._internal.onnxruntime" -> "onnxscript" [];
	"torch.onnx._internal.onnxruntime" -> "'onnxscript.rewriter'" [];
	"torch.fx.passes.infra.partitioner" -> "collections" [];
	"torch.fx.passes.infra.partitioner" -> "itertools" [];
	"torch.fx.passes.infra.partitioner" -> "logging" [];
	"torch.fx.passes.infra.partitioner" -> "copy" [];
	"torch.fx.passes.infra.partitioner" -> "typing" [];
	"torch.fx.passes.fake_tensor_prop" -> "typing" [];
	"torch._prims.executor" -> "typing" [];
	"torch._prims.context" -> "functools" [];
	"torch._prims.context" -> "contextlib" [];
	"torch._prims.context" -> "typing" [];
	"torch._prims.context" -> "torch" [];
	"torch.onnx._type_utils" -> "__future__" [];
	"torch.onnx._type_utils" -> "enum" [];
	"torch.onnx._type_utils" -> "typing" [];
	"torch.onnx._type_utils" -> "torch" [];
	"torch.onnx.errors" -> "__future__" [];
	"torch.onnx.errors" -> "textwrap" [];
	"torch.onnx.errors" -> "typing" [];
	"torch.onnx.errors" -> "torch" [];
	"torch.onnx._exporter_states" -> "__future__" [];
	"torch.autograd.functional" -> "typing" [];
	"torch.autograd.functional" -> "torch" [];
	"torch.autograd.forward_ad" -> "os" [];
	"torch.autograd.forward_ad" -> "collections" [];
	"torch.autograd.forward_ad" -> "typing" [];
	"torch.autograd.forward_ad" -> "torch" [];
	"torch._decomp.decompositions_for_jvp" -> "inspect" [];
	"torch._decomp.decompositions_for_jvp" -> "typing" [];
	"torch._decomp.decompositions_for_jvp" -> "torch" [];
	"torch._vmap_internals" -> "functools" [];
	"torch._vmap_internals" -> "typing" [];
	"torch._vmap_internals" -> "typing_extensions" [];
	"torch.autograd.function" -> "functools" [];
	"torch.autograd.function" -> "inspect" [];
	"torch.autograd.function" -> "itertools" [];
	"torch.autograd.function" -> "warnings" [];
	"torch.autograd.function" -> "collections" [];
	"torch.autograd.function" -> "typing" [];
	"torch.autograd.function" -> "typing_extensions" [];
	"torch.autograd.function" -> "torch" [];
	"torch._functorch.autograd_function" -> "typing" [];
	"torch._functorch.autograd_function" -> "torch" [];
	"torch._functorch.autograd_function" -> "'torch._C._functorch'" [];
	"torch.cuda" -> "importlib" [];
	"torch.cuda" -> "os" [];
	"torch.cuda" -> "threading" [];
	"torch.cuda" -> "traceback" [];
	"torch.cuda" -> "warnings" [];
	"torch.cuda" -> "functools" [];
	"torch.cuda" -> "typing" [];
	"torch.cuda" -> "pynvml" [];
	"torch.cuda" -> "amdsmi" [];
	"torch.cuda" -> "ctypes" [];
	"torch.cuda.tunable" -> "typing" [];
	"torch.cuda.tunable" -> "torch" [];
	"torch.cuda.profiler" -> "contextlib" [];
	"torch.cuda.profiler" -> "tempfile" [];
	"torch.cuda.profiler" -> "torch" [];
	"torch.cuda.nvtx" -> "contextlib" [];
	"torch.cuda.jiterator" -> "re" [];
	"torch.cuda.jiterator" -> "typing" [];
	"torch.cuda.jiterator" -> "torch" [];
	"torch.cuda.amp.grad_scaler" -> "typing_extensions" [];
	"torch.cuda.amp.grad_scaler" -> "torch" [];
	"torch.amp.grad_scaler" -> "__future__" [];
	"torch.amp.grad_scaler" -> "inspect" [];
	"torch.amp.grad_scaler" -> "warnings" [];
	"torch.amp.grad_scaler" -> "collections" [];
	"torch.amp.grad_scaler" -> "enum" [];
	"torch.amp.grad_scaler" -> "typing" [];
	"torch.amp.grad_scaler" -> "torch" [];
	"torch.amp.autocast_mode" -> "collections" [];
	"torch.amp.autocast_mode" -> "functools" [];
	"torch.amp.autocast_mode" -> "warnings" [];
	"torch.amp.autocast_mode" -> "typing" [];
	"torch.amp.autocast_mode" -> "torch" [];
	"torch.amp.autocast_mode" -> "numpy" [];
	"torch.cuda.amp.common" -> "torch" [];
	"torch.cuda.amp.autocast_mode" -> "functools" [];
	"torch.cuda.amp.autocast_mode" -> "typing" [];
	"torch.cuda.amp.autocast_mode" -> "typing_extensions" [];
	"torch.cuda.amp.autocast_mode" -> "torch" [];
	"torch.sparse._triton_ops" -> "math" [];
	"torch.sparse._triton_ops" -> "os" [];
	"torch.sparse._triton_ops" -> "weakref" [];
	"torch.sparse._triton_ops" -> "functools" [];
	"torch.sparse._triton_ops" -> "typing" [];
	"torch.sparse._triton_ops" -> "torch" [];
	"torch.sparse._triton_ops" -> "itertools" [];
	"torch.sparse._triton_ops" -> "triton" [];
	"torch.sparse._triton_ops" -> "'triton.language'" [];
	"torch.sparse._triton_ops_meta" -> "inspect" [];
	"torch.sparse._triton_ops_meta" -> "itertools" [];
	"torch.sparse._triton_ops_meta" -> "re" [];
	"torch.sparse._triton_ops_meta" -> "warnings" [];
	"torch.sparse._triton_ops_meta" -> "typing" [];
	"torch.sparse._triton_ops_meta" -> "torch" [];
	"torch.sparse._triton_ops_meta" -> "triton" [];
	"torch.sparse" -> "typing" [];
	"torch.sparse.semi_structured" -> "warnings" [];
	"torch.sparse.semi_structured" -> "collections" [];
	"torch.sparse.semi_structured" -> "typing" [];
	"torch.sparse.semi_structured" -> "torch" [];
	"torch.sparse._semi_structured_ops" -> "contextlib" [];
	"torch.sparse._semi_structured_ops" -> "torch" [];
	"torch.sparse._semi_structured_conversions" -> "torch" [];
	"torch.cuda.nccl" -> "collections" [];
	"torch.cuda.nccl" -> "warnings" [];
	"torch.cuda.nccl" -> "typing" [];
	"torch.cuda.random" -> "typing" [];
	"torch.cuda.random" -> "torch" [];
	"torch.cuda.memory" -> "collections" [];
	"torch.cuda.memory" -> "contextlib" [];
	"torch.cuda.memory" -> "ctypes" [];
	"torch.cuda.memory" -> "pickle" [];
	"torch.cuda.memory" -> "sys" [];
	"torch.cuda.memory" -> "warnings" [];
	"torch.cuda.memory" -> "inspect" [];
	"torch.cuda.memory" -> "typing" [];
	"torch.cuda.memory" -> "typing_extensions" [];
	"torch.cuda.memory" -> "torch" [];
	"torch.cuda.memory" -> "pynvml" [];
	"torch.cuda.memory" -> "amdsmi" [];
	"torch.cuda._memory_viz" -> "pickle" [];
	"torch.cuda._memory_viz" -> "sys" [];
	"torch.cuda._memory_viz" -> "os" [];
	"torch.cuda._memory_viz" -> "io" [];
	"torch.cuda._memory_viz" -> "subprocess" [];
	"torch.cuda._memory_viz" -> "json" [];
	"torch.cuda._memory_viz" -> "functools" [];
	"torch.cuda._memory_viz" -> "typing" [];
	"torch.cuda._memory_viz" -> "itertools" [];
	"torch.cuda._memory_viz" -> "base64" [];
	"torch.cuda._memory_viz" -> "warnings" [];
	"torch.cuda._memory_viz" -> "operator" [];
	"torch.cuda._memory_viz" -> "torch" [];
	"torch.cuda._memory_viz" -> "'torch._C._profiler'" [];
	"torch.cuda._memory_viz" -> "os.path" [];
	"torch.cuda._memory_viz" -> "argparse" [];
	"torch.profiler._memory_profiler" -> "collections" [];
	"torch.profiler._memory_profiler" -> "dataclasses" [];
	"torch.profiler._memory_profiler" -> "enum" [];
	"torch.profiler._memory_profiler" -> "itertools" [];
	"torch.profiler._memory_profiler" -> "logging" [];
	"torch.profiler._memory_profiler" -> "typing" [];
	"torch.profiler._memory_profiler" -> "typing_extensions" [];
	"torch.profiler._memory_profiler" -> "torch" [];
	"torch.profiler._memory_profiler" -> "'torch._C._autograd'" [];
	"torch.profiler._memory_profiler" -> "'torch._C._profiler'" [];
	"torch.profiler._memory_profiler" -> "json" [];
	"torch.profiler._memory_profiler" -> "base64" [];
	"torch.profiler._memory_profiler" -> "os" [];
	"torch.profiler._memory_profiler" -> "tempfile" [];
	"torch.profiler._memory_profiler" -> "'matplotlib.pyplot'" [];
	"torch.profiler._memory_profiler" -> "numpy" [];
	"torch.profiler._utils" -> "functools" [];
	"torch.profiler._utils" -> "operator" [];
	"torch.profiler._utils" -> "re" [];
	"torch.profiler._utils" -> "collections" [];
	"torch.profiler._utils" -> "dataclasses" [];
	"torch.profiler._utils" -> "typing" [];
	"torch.profiler._utils" -> "torch" [];
	"torch.profiler" -> "os" [];
	"torch.profiler" -> "'torch._C._autograd'" [];
	"torch.profiler" -> "'torch._C._profiler'" [];
	"torch.profiler.itt" -> "contextlib" [];
	"torch.profiler.profiler" -> "gzip" [];
	"torch.profiler.profiler" -> "json" [];
	"torch.profiler.profiler" -> "os" [];
	"torch.profiler.profiler" -> "shutil" [];
	"torch.profiler.profiler" -> "tempfile" [];
	"torch.profiler.profiler" -> "abc" [];
	"torch.profiler.profiler" -> "enum" [];
	"torch.profiler.profiler" -> "functools" [];
	"torch.profiler.profiler" -> "typing" [];
	"torch.profiler.profiler" -> "typing_extensions" [];
	"torch.profiler.profiler" -> "warnings" [];
	"torch.profiler.profiler" -> "torch" [];
	"torch.profiler.profiler" -> "'torch._C._profiler'" [];
	"torch.profiler.profiler" -> "socket" [];
	"torch.profiler.profiler" -> "time" [];
	"torch.version" -> "typing" [];
	"torch.cuda.streams" -> "ctypes" [];
	"torch.cuda.streams" -> "torch" [];
	"torch.cuda.graphs" -> "gc" [];
	"torch.cuda.graphs" -> "typing" [];
	"torch.cuda.graphs" -> "torch" [];
	"torch.cuda._utils" -> "typing" [];
	"torch.cuda._utils" -> "torch" [];
	"torch.cuda.gds" -> "os" [];
	"torch.cuda.gds" -> "sys" [];
	"torch.cuda.gds" -> "typing" [];
	"torch.cuda.gds" -> "torch" [];
	"torch.distributed.rpc.options" -> "typing" [];
	"torch.distributed.rpc.options" -> "torch" [];
	"torch.distributed.rpc.options" -> "'torch._C._distributed_rpc'" [];
	"torch.distributed.rpc.constants" -> "datetime" [];
	"torch.distributed.rpc.constants" -> "typing" [];
	"torch.distributed.rpc.constants" -> "'torch._C._distributed_rpc'" [];
	"torch.distributed.rpc.functions" -> "functools" [];
	"torch.distributed.rpc.backend_registry" -> "collections" [];
	"torch.distributed.rpc.backend_registry" -> "enum" [];
	"torch.distributed.rpc.backend_registry" -> "typing" [];
	"torch.distributed.rpc.backend_registry" -> "torch" [];
	"torch.distributed.rpc._utils" -> "logging" [];
	"torch.distributed.rpc._utils" -> "contextlib" [];
	"torch.distributed.rpc._utils" -> "typing" [];
	"torch.distributed.rpc.api" -> "collections" [];
	"torch.distributed.rpc.api" -> "contextlib" [];
	"torch.distributed.rpc.api" -> "functools" [];
	"torch.distributed.rpc.api" -> "inspect" [];
	"torch.distributed.rpc.api" -> "logging" [];
	"torch.distributed.rpc.api" -> "threading" [];
	"torch.distributed.rpc.api" -> "typing" [];
	"torch.distributed.rpc.api" -> "torch" [];
	"torch.distributed.rpc.api" -> "'torch._C._distributed_rpc'" [];
	"torch.distributed.rpc.internal" -> "collections" [];
	"torch.distributed.rpc.internal" -> "copyreg" [];
	"torch.distributed.rpc.internal" -> "io" [];
	"torch.distributed.rpc.internal" -> "pickle" [];
	"torch.distributed.rpc.internal" -> "sys" [];
	"torch.distributed.rpc.internal" -> "threading" [];
	"torch.distributed.rpc.internal" -> "traceback" [];
	"torch.distributed.rpc.internal" -> "enum" [];
	"torch.distributed.rpc.internal" -> "torch" [];
	"torch.distributed.rpc.internal" -> "'torch._C._distributed_rpc'" [];
	"torch.distributed.autograd" -> "torch" [];
	"torch.distributed.autograd" -> "'torch._C._distributed_autograd'" [];
	"torch.nested" -> "typing" [];
	"torch.multiprocessing" -> "multiprocessing" [];
	"torch.multiprocessing" -> "sys" [];
	"torch.multiprocessing.spawn" -> "logging" [];
	"torch.multiprocessing.spawn" -> "multiprocessing" [];
	"torch.multiprocessing.spawn" -> "os" [];
	"torch.multiprocessing.spawn" -> "pickle" [];
	"torch.multiprocessing.spawn" -> "signal" [];
	"torch.multiprocessing.spawn" -> "sys" [];
	"torch.multiprocessing.spawn" -> "tempfile" [];
	"torch.multiprocessing.spawn" -> "time" [];
	"torch.multiprocessing.spawn" -> "warnings" [];
	"torch.multiprocessing.spawn" -> "typing" [];
	"torch.multiprocessing.spawn" -> "traceback" [];
	"torch._namedtensor_internals" -> "collections" [];
	"torch._inductor.cudagraph_utils" -> "__future__" [];
	"torch._inductor.cudagraph_utils" -> "dataclasses" [];
	"torch._inductor.cudagraph_utils" -> "enum" [];
	"torch._inductor.cudagraph_utils" -> "typing" [];
	"torch._inductor.cudagraph_utils" -> "torch" [];
	"torch._inductor.compile_fx" -> "contextlib" [];
	"torch._inductor.compile_fx" -> "functools" [];
	"torch._inductor.compile_fx" -> "io" [];
	"torch._inductor.compile_fx" -> "itertools" [];
	"torch._inductor.compile_fx" -> "logging" [];
	"torch._inductor.compile_fx" -> "os" [];
	"torch._inductor.compile_fx" -> "sys" [];
	"torch._inductor.compile_fx" -> "time" [];
	"torch._inductor.compile_fx" -> "warnings" [];
	"torch._inductor.compile_fx" -> "typing" [];
	"torch._inductor.compile_fx" -> "unittest" [];
	"torch._inductor.compile_fx" -> "'torch._inductor.fb'" [];
	"torch._inductor.freezing" -> "__future__" [];
	"torch._inductor.freezing" -> "itertools" [];
	"torch._inductor.freezing" -> "logging" [];
	"torch._inductor.freezing" -> "weakref" [];
	"torch._inductor.freezing" -> "typing" [];
	"torch._inductor.freezing" -> "torch" [];
	"torch._inductor.fx_passes.freezing_patterns" -> "functools" [];
	"torch._inductor.fx_passes.freezing_patterns" -> "torch" [];
	"torch._inductor.fx_passes.binary_folding" -> "functools" [];
	"torch._inductor.fx_passes.binary_folding" -> "itertools" [];
	"torch._inductor.fx_passes.binary_folding" -> "torch" [];
	"torch._inductor.fx_passes.mkldnn_fusion" -> "functools" [];
	"torch._inductor.fx_passes.mkldnn_fusion" -> "operator" [];
	"torch._inductor.fx_passes.mkldnn_fusion" -> "typing" [];
	"torch._inductor.fx_passes.mkldnn_fusion" -> "torch" [];
	"torch._inductor.fx_passes.quantization" -> "copy" [];
	"torch._inductor.fx_passes.quantization" -> "functools" [];
	"torch._inductor.fx_passes.quantization" -> "itertools" [];
	"torch._inductor.fx_passes.quantization" -> "math" [];
	"torch._inductor.fx_passes.quantization" -> "operator" [];
	"torch._inductor.fx_passes.quantization" -> "typing" [];
	"torch._inductor.fx_passes.quantization" -> "torch" [];
	"torch._inductor.lowering" -> "functools" [];
	"torch._inductor.lowering" -> "itertools" [];
	"torch._inductor.lowering" -> "logging" [];
	"torch._inductor.lowering" -> "math" [];
	"torch._inductor.lowering" -> "operator" [];
	"torch._inductor.lowering" -> "os" [];
	"torch._inductor.lowering" -> "warnings" [];
	"torch._inductor.lowering" -> "collections" [];
	"torch._inductor.lowering" -> "typing" [];
	"torch._inductor.lowering" -> "sympy" [];
	"torch._inductor.lowering" -> "torch" [];
	"torch._inductor.jagged_lowerings" -> "typing" [];
	"torch._inductor.jagged_lowerings" -> "sympy" [];
	"torch._inductor.jagged_lowerings" -> "torch" [];
	"torch._inductor.mkldnn_lowerings" -> "functools" [];
	"torch._inductor.mkldnn_lowerings" -> "typing" [];
	"torch._inductor.mkldnn_lowerings" -> "torch" [];
	"torch._inductor.mkldnn_ir" -> "typing" [];
	"torch._inductor.mkldnn_ir" -> "sympy" [];
	"torch._inductor.mkldnn_ir" -> "torch" [];
	"torch._inductor.select_algorithm" -> "builtins" [];
	"torch._inductor.select_algorithm" -> "contextlib" [];
	"torch._inductor.select_algorithm" -> "functools" [];
	"torch._inductor.select_algorithm" -> "inspect" [];
	"torch._inductor.select_algorithm" -> "itertools" [];
	"torch._inductor.select_algorithm" -> "json" [];
	"torch._inductor.select_algorithm" -> "logging" [];
	"torch._inductor.select_algorithm" -> "math" [];
	"torch._inductor.select_algorithm" -> "operator" [];
	"torch._inductor.select_algorithm" -> "os" [];
	"torch._inductor.select_algorithm" -> "sys" [];
	"torch._inductor.select_algorithm" -> "textwrap" [];
	"torch._inductor.select_algorithm" -> "time" [];
	"torch._inductor.select_algorithm" -> "collections" [];
	"torch._inductor.select_algorithm" -> "io" [];
	"torch._inductor.select_algorithm" -> "typing" [];
	"torch._inductor.select_algorithm" -> "sympy" [];
	"torch._inductor.select_algorithm" -> "filelock" [];
	"torch._inductor.select_algorithm" -> "torch" [];
	"torch._inductor.select_algorithm" -> "jinja2" [];
	"torch._inductor.select_algorithm" -> "'triton.runtime'" [];
	"torch._inductor.codegen.cuda.cuda_kernel" -> "logging" [];
	"torch._inductor.codegen.cuda.cuda_kernel" -> "typing" [];
	"torch._inductor.codegen.cuda.cuda_template" -> "functools" [];
	"torch._inductor.codegen.cuda.cuda_template" -> "itertools" [];
	"torch._inductor.codegen.cuda.cuda_template" -> "logging" [];
	"torch._inductor.codegen.cuda.cuda_template" -> "typing" [];
	"torch._inductor.codegen.cuda.cuda_template" -> "sympy" [];
	"torch._inductor.codegen.cuda.cuda_template" -> "torch" [];
	"jinja2.ext" -> "pprint" [];
	"jinja2.ext" -> "re" [];
	"jinja2.ext" -> "typing" [];
	"jinja2.ext" -> "markupsafe" [];
	"jinja2.ext" -> "typing_extensions" [];
	"jinja2.ext" -> "gettext" [];
	"jinja2.parser" -> "typing" [];
	"jinja2.parser" -> "typing_extensions" [];
	"jinja2.lexer" -> "re" [];
	"jinja2.lexer" -> "typing" [];
	"jinja2.lexer" -> "ast" [];
	"jinja2.lexer" -> "collections" [];
	"jinja2.lexer" -> "sys" [];
	"jinja2.lexer" -> "typing_extensions" [];
	"jinja2._identifier" -> "re" [];
	"jinja2.defaults" -> "typing" [];
	"jinja2.defaults" -> "typing_extensions" [];
	"jinja2.tests" -> "operator" [];
	"jinja2.tests" -> "typing" [];
	"jinja2.tests" -> "collections" [];
	"jinja2.tests" -> "numbers" [];
	"jinja2.filters" -> "math" [];
	"jinja2.filters" -> "random" [];
	"jinja2.filters" -> "re" [];
	"jinja2.filters" -> "typing" [];
	"jinja2.filters" -> "collections" [];
	"jinja2.filters" -> "itertools" [];
	"jinja2.filters" -> "markupsafe" [];
	"jinja2.filters" -> "typing_extensions" [];
	"jinja2.filters" -> "textwrap" [];
	"jinja2.sandbox" -> "operator" [];
	"jinja2.sandbox" -> "types" [];
	"jinja2.sandbox" -> "typing" [];
	"jinja2.sandbox" -> "collections" [];
	"jinja2.sandbox" -> "string" [];
	"jinja2.sandbox" -> "_string" [];
	"jinja2.sandbox" -> "markupsafe" [];
	"jinja2.async_utils" -> "inspect" [];
	"jinja2.async_utils" -> "typing" [];
	"jinja2.async_utils" -> "functools" [];
	"markupsafe" -> "__future__" [];
	"markupsafe" -> "string" [];
	"markupsafe" -> "typing" [];
	"markupsafe" -> "typing_extensions" [];
	"markupsafe" -> "html" [];
	"markupsafe" -> "warnings" [];
	"jinja2.utils" -> "enum" [];
	"jinja2.utils" -> "json" [];
	"jinja2.utils" -> "os" [];
	"jinja2.utils" -> "re" [];
	"jinja2.utils" -> "typing" [];
	"jinja2.utils" -> "collections" [];
	"jinja2.utils" -> "random" [];
	"jinja2.utils" -> "threading" [];
	"jinja2.utils" -> "types" [];
	"jinja2.utils" -> "markupsafe" [];
	"jinja2.utils" -> "typing_extensions" [];
	"jinja2.utils" -> "pprint" [];
	"jinja2.runtime" -> "functools" [];
	"jinja2.runtime" -> "sys" [];
	"jinja2.runtime" -> "typing" [];
	"jinja2.runtime" -> "collections" [];
	"jinja2.runtime" -> "itertools" [];
	"jinja2.runtime" -> "markupsafe" [];
	"jinja2.runtime" -> "logging" [];
	"jinja2.runtime" -> "typing_extensions" [];
	"jinja2.loaders" -> "os" [];
	"jinja2.loaders" -> "posixpath" [];
	"jinja2.loaders" -> "sys" [];
	"jinja2.loaders" -> "typing" [];
	"jinja2.loaders" -> "weakref" [];
	"jinja2.loaders" -> "zipimport" [];
	"jinja2.loaders" -> "collections" [];
	"jinja2.loaders" -> "hashlib" [];
	"jinja2.loaders" -> "importlib" [];
	"jinja2.loaders" -> "types" [];
	"jinja2.exceptions" -> "typing" [];
	"jinja2.environment" -> "os" [];
	"jinja2.environment" -> "typing" [];
	"jinja2.environment" -> "weakref" [];
	"jinja2.environment" -> "collections" [];
	"jinja2.environment" -> "functools" [];
	"jinja2.environment" -> "types" [];
	"jinja2.environment" -> "markupsafe" [];
	"jinja2.environment" -> "typing_extensions" [];
	"jinja2.environment" -> "zipfile" [];
	"jinja2.environment" -> "asyncio" [];
	"jinja2.debug" -> "sys" [];
	"jinja2.debug" -> "typing" [];
	"jinja2.debug" -> "types" [];
	"jinja2.compiler" -> "typing" [];
	"jinja2.compiler" -> "contextlib" [];
	"jinja2.compiler" -> "functools" [];
	"jinja2.compiler" -> "io" [];
	"jinja2.compiler" -> "itertools" [];
	"jinja2.compiler" -> "keyword" [];
	"jinja2.compiler" -> "markupsafe" [];
	"jinja2.compiler" -> "typing_extensions" [];
	"jinja2.visitor" -> "typing" [];
	"jinja2.visitor" -> "typing_extensions" [];
	"jinja2.optimizer" -> "typing" [];
	"jinja2.idtracking" -> "typing" [];
	"jinja2.bccache" -> "errno" [];
	"jinja2.bccache" -> "fnmatch" [];
	"jinja2.bccache" -> "marshal" [];
	"jinja2.bccache" -> "os" [];
	"jinja2.bccache" -> "pickle" [];
	"jinja2.bccache" -> "stat" [];
	"jinja2.bccache" -> "sys" [];
	"jinja2.bccache" -> "tempfile" [];
	"jinja2.bccache" -> "typing" [];
	"jinja2.bccache" -> "hashlib" [];
	"jinja2.bccache" -> "io" [];
	"jinja2.bccache" -> "types" [];
	"jinja2.bccache" -> "typing_extensions" [];
	"jinja2.nodes" -> "inspect" [];
	"jinja2.nodes" -> "operator" [];
	"jinja2.nodes" -> "typing" [];
	"jinja2.nodes" -> "collections" [];
	"jinja2.nodes" -> "markupsafe" [];
	"jinja2.nodes" -> "typing_extensions" [];
	"torch._inductor.exc" -> "__future__" [];
	"torch._inductor.exc" -> "os" [];
	"torch._inductor.exc" -> "tempfile" [];
	"torch._inductor.exc" -> "textwrap" [];
	"torch._inductor.exc" -> "functools" [];
	"torch._inductor.autotune_process" -> "__future__" [];
	"torch._inductor.autotune_process" -> "contextlib" [];
	"torch._inductor.autotune_process" -> "ctypes" [];
	"torch._inductor.autotune_process" -> "dataclasses" [];
	"torch._inductor.autotune_process" -> "functools" [];
	"torch._inductor.autotune_process" -> "logging" [];
	"torch._inductor.autotune_process" -> "os" [];
	"torch._inductor.autotune_process" -> "queue" [];
	"torch._inductor.autotune_process" -> "time" [];
	"torch._inductor.autotune_process" -> "warnings" [];
	"torch._inductor.autotune_process" -> "typing" [];
	"torch._inductor.autotune_process" -> "torch" [];
	"torch._inductor.autotune_process" -> "types" [];
	"torch._inductor.autotune_process" -> "atexit" [];
	"torch._inductor.autotune_process" -> "inspect" [];
	"torch._dynamo.testing" -> "contextlib" [];
	"torch._dynamo.testing" -> "dis" [];
	"torch._dynamo.testing" -> "functools" [];
	"torch._dynamo.testing" -> "logging" [];
	"torch._dynamo.testing" -> "os.path" [];
	"torch._dynamo.testing" -> "random" [];
	"torch._dynamo.testing" -> "re" [];
	"torch._dynamo.testing" -> "sys" [];
	"torch._dynamo.testing" -> "types" [];
	"torch._dynamo.testing" -> "unittest" [];
	"torch._dynamo.testing" -> "typing" [];
	"torch._dynamo.testing" -> "torch" [];
	"torch._dynamo.testing" -> "numpy" [];
	"torch._dynamo.testing" -> "'torch_xla.core'" [];
	"filelock" -> "__future__" [];
	"filelock" -> "sys" [];
	"filelock" -> "warnings" [];
	"filelock" -> "typing" [];
	"filelock.version" -> "typing" [];
	"filelock.asyncio" -> "__future__" [];
	"filelock.asyncio" -> "asyncio" [];
	"filelock.asyncio" -> "contextlib" [];
	"filelock.asyncio" -> "logging" [];
	"filelock.asyncio" -> "os" [];
	"filelock.asyncio" -> "time" [];
	"filelock.asyncio" -> "dataclasses" [];
	"filelock.asyncio" -> "threading" [];
	"filelock.asyncio" -> "typing" [];
	"filelock.asyncio" -> "sys" [];
	"filelock.asyncio" -> "concurrent" [];
	"filelock.asyncio" -> "types" [];
	"filelock.asyncio" -> "typing_extensions" [];
	"filelock._windows" -> "__future__" [];
	"filelock._windows" -> "os" [];
	"filelock._windows" -> "sys" [];
	"filelock._windows" -> "contextlib" [];
	"filelock._windows" -> "errno" [];
	"filelock._windows" -> "pathlib" [];
	"filelock._windows" -> "typing" [];
	"filelock._windows" -> "msvcrt" [];
	"filelock._util" -> "__future__" [];
	"filelock._util" -> "os" [];
	"filelock._util" -> "stat" [];
	"filelock._util" -> "sys" [];
	"filelock._util" -> "errno" [];
	"filelock._util" -> "pathlib" [];
	"filelock._unix" -> "__future__" [];
	"filelock._unix" -> "os" [];
	"filelock._unix" -> "sys" [];
	"filelock._unix" -> "contextlib" [];
	"filelock._unix" -> "errno" [];
	"filelock._unix" -> "pathlib" [];
	"filelock._unix" -> "typing" [];
	"filelock._unix" -> "fcntl" [];
	"filelock._soft" -> "__future__" [];
	"filelock._soft" -> "os" [];
	"filelock._soft" -> "sys" [];
	"filelock._soft" -> "contextlib" [];
	"filelock._soft" -> "errno" [];
	"filelock._soft" -> "pathlib" [];
	"filelock._error" -> "__future__" [];
	"filelock._error" -> "typing" [];
	"filelock._api" -> "__future__" [];
	"filelock._api" -> "contextlib" [];
	"filelock._api" -> "inspect" [];
	"filelock._api" -> "logging" [];
	"filelock._api" -> "os" [];
	"filelock._api" -> "time" [];
	"filelock._api" -> "warnings" [];
	"filelock._api" -> "abc" [];
	"filelock._api" -> "dataclasses" [];
	"filelock._api" -> "threading" [];
	"filelock._api" -> "typing" [];
	"filelock._api" -> "weakref" [];
	"filelock._api" -> "sys" [];
	"filelock._api" -> "types" [];
	"filelock._api" -> "typing_extensions" [];
	"torch._inductor.codegen.cpp_utils" -> "contextlib" [];
	"torch._inductor.codegen.cpp_utils" -> "copy" [];
	"torch._inductor.codegen.cpp_utils" -> "functools" [];
	"torch._inductor.codegen.cpp_utils" -> "math" [];
	"torch._inductor.codegen.cpp_utils" -> "sys" [];
	"torch._inductor.codegen.cpp_utils" -> "collections" [];
	"torch._inductor.codegen.cpp_utils" -> "typing" [];
	"torch._inductor.codegen.cpp_utils" -> "sympy" [];
	"torch._inductor.codegen.cpp_utils" -> "torch" [];
	"torch._inductor.codegen.cpp_gemm_template" -> "contextlib" [];
	"torch._inductor.codegen.cpp_gemm_template" -> "logging" [];
	"torch._inductor.codegen.cpp_gemm_template" -> "math" [];
	"torch._inductor.codegen.cpp_gemm_template" -> "functools" [];
	"torch._inductor.codegen.cpp_gemm_template" -> "typing" [];
	"torch._inductor.codegen.cpp_gemm_template" -> "torch" [];
	"torch._inductor.codegen.cpp_template_kernel" -> "itertools" [];
	"torch._inductor.codegen.cpp_template_kernel" -> "typing" [];
	"torch._inductor.codegen.cpp_template_kernel" -> "sympy" [];
	"torch._inductor.codegen.cpp_template_kernel" -> "torch" [];
	"torch._inductor.codegen.cpp_wrapper_cpu" -> "functools" [];
	"torch._inductor.codegen.cpp_wrapper_cpu" -> "math" [];
	"torch._inductor.codegen.cpp_wrapper_cpu" -> "os" [];
	"torch._inductor.codegen.cpp_wrapper_cpu" -> "sys" [];
	"torch._inductor.codegen.cpp_wrapper_cpu" -> "itertools" [];
	"torch._inductor.codegen.cpp_wrapper_cpu" -> "typing" [];
	"torch._inductor.codegen.cpp_wrapper_cpu" -> "sympy" [];
	"torch._inductor.codegen.cpp_wrapper_cpu" -> "torch" [];
	"torch._inductor.cpp_builder" -> "copy" [];
	"torch._inductor.cpp_builder" -> "errno" [];
	"torch._inductor.cpp_builder" -> "functools" [];
	"torch._inductor.cpp_builder" -> "json" [];
	"torch._inductor.cpp_builder" -> "logging" [];
	"torch._inductor.cpp_builder" -> "os" [];
	"torch._inductor.cpp_builder" -> "platform" [];
	"torch._inductor.cpp_builder" -> "re" [];
	"torch._inductor.cpp_builder" -> "shlex" [];
	"torch._inductor.cpp_builder" -> "shutil" [];
	"torch._inductor.cpp_builder" -> "subprocess" [];
	"torch._inductor.cpp_builder" -> "sys" [];
	"torch._inductor.cpp_builder" -> "sysconfig" [];
	"torch._inductor.cpp_builder" -> "warnings" [];
	"torch._inductor.cpp_builder" -> "ctypes" [];
	"torch._inductor.cpp_builder" -> "pathlib" [];
	"torch._inductor.cpp_builder" -> "typing" [];
	"torch._inductor.cpp_builder" -> "torch" [];
	"torch._inductor.cpp_builder" -> "'triton.fb'" [];
	"torch._inductor.cpp_builder" -> "'torch._inductor.fb'" [];
	"torch._inductor.cpp_builder" -> "filelock" [];
	"torch.utils.cpp_extension" -> "copy" [];
	"torch.utils.cpp_extension" -> "glob" [];
	"torch.utils.cpp_extension" -> "importlib" [];
	"torch.utils.cpp_extension" -> "os" [];
	"torch.utils.cpp_extension" -> "re" [];
	"torch.utils.cpp_extension" -> "shlex" [];
	"torch.utils.cpp_extension" -> "shutil" [];
	"torch.utils.cpp_extension" -> "setuptools" [];
	"torch.utils.cpp_extension" -> "subprocess" [];
	"torch.utils.cpp_extension" -> "sys" [];
	"torch.utils.cpp_extension" -> "sysconfig" [];
	"torch.utils.cpp_extension" -> "warnings" [];
	"torch.utils.cpp_extension" -> "collections" [];
	"torch.utils.cpp_extension" -> "pathlib" [];
	"torch.utils.cpp_extension" -> "errno" [];
	"torch.utils.cpp_extension" -> "torch" [];
	"torch.utils.cpp_extension" -> "typing" [];
	"setuptools.command.build_ext" -> "__future__" [];
	"setuptools.command.build_ext" -> "itertools" [];
	"setuptools.command.build_ext" -> "os" [];
	"setuptools.command.build_ext" -> "sys" [];
	"setuptools.command.build_ext" -> "pathlib" [];
	"setuptools.command.build_ext" -> "typing" [];
	"setuptools.command.build_ext" -> "distutils" [];
	"setuptools.command.build_ext" -> "Cython" [];
	"setuptools.command.build_ext" -> "dl" [];
	"torch.utils.hipify.hipify_python" -> "argparse" [];
	"torch.utils.hipify.hipify_python" -> "fnmatch" [];
	"torch.utils.hipify.hipify_python" -> "re" [];
	"torch.utils.hipify.hipify_python" -> "shutil" [];
	"torch.utils.hipify.hipify_python" -> "sys" [];
	"torch.utils.hipify.hipify_python" -> "os" [];
	"torch.utils.hipify.hipify_python" -> "typing" [];
	"torch.utils.hipify.hipify_python" -> "enum" [];
	"torch.utils.hipify.hipify_python" -> "pathlib" [];
	"torch.utils.hipify.cuda_to_hip_mappings" -> "collections" [];
	"torch.utils._cpp_extension_versioner" -> "collections" [];
	"torch.utils.file_baton" -> "os" [];
	"torch.utils.file_baton" -> "time" [];
	"torch._appdirs" -> "os" [];
	"torch._appdirs" -> "sys" [];
	"torch._appdirs" -> "platform" [];
	"torch._appdirs" -> "winreg" [];
	"torch._appdirs" -> "win32api" [];
	"torch._appdirs" -> "ctypes" [];
	"torch._appdirs" -> "array" [];
	"torch._appdirs" -> "com" [];
	"torch._appdirs" -> "'com.sun'" [];
	"win32com" -> "__future__" [];
	"win32com" -> "os" [];
	"win32com" -> "sys" [];
	"win32com" -> "pythoncom" [];
	"win32com" -> "win32api" [];
	"win32com" -> "'win32com.gen_py'" [];
	"win32com" -> "types" [];
	"win32com.server.util" -> "pythoncom" [];
	"win32com.server.util" -> "winerror" [];
	"win32com.server.dispatcher" -> "__future__" [];
	"win32com.server.dispatcher" -> "traceback" [];
	"win32com.server.dispatcher" -> "pythoncom" [];
	"win32com.server.dispatcher" -> "win32api" [];
	"win32com.server.dispatcher" -> "win32com" [];
	"win32com.server.dispatcher" -> "win32traceutil" [];
	"win32com.server.dispatcher" -> "win32trace" [];
	"win32traceutil" -> "win32trace" [];
	"win32traceutil" -> "sys" [];
	"win32traceutil" -> "win32api" [];
	"win32com.util" -> "pythoncom" [];
	"win32com.util" -> "win32api" [];
	"win32com.util" -> "win32con" [];
	"win32com.server.exception" -> "sys" [];
	"win32com.server.exception" -> "pythoncom" [];
	"win32com.server.policy" -> "sys" [];
	"win32com.server.policy" -> "types" [];
	"win32com.server.policy" -> "pythoncom" [];
	"win32com.server.policy" -> "pywintypes" [];
	"win32com.server.policy" -> "win32api" [];
	"win32com.server.policy" -> "win32con" [];
	"win32com.server.policy" -> "winerror" [];
	"win32com.server.policy" -> "win32com" [];
	"win32com.client" -> "sys" [];
	"win32com.client" -> "pythoncom" [];
	"win32com.client" -> "pywintypes" [];
	"win32com.client" -> "winerror" [];
	"win32com.client.makepy" -> "importlib" [];
	"win32com.client.makepy" -> "os" [];
	"win32com.client.makepy" -> "sys" [];
	"win32com.client.makepy" -> "pythoncom" [];
	"win32com.client.makepy" -> "pywin" [];
	"win32com.client.makepy" -> "win32ui" [];
	"win32com.client.makepy" -> "getopt" [];
	"pywin.dialogs.status" -> "threading" [];
	"pywin.dialogs.status" -> "time" [];
	"pywin.dialogs.status" -> "win32api" [];
	"pywin.dialogs.status" -> "win32con" [];
	"pywin.dialogs.status" -> "win32ui" [];
	"pywin.mfc.thread" -> "win32ui" [];
	"pywin.mfc.object" -> "win32ui" [];
	"pywin.mfc.dialog" -> "win32con" [];
	"pywin.mfc.dialog" -> "win32ui" [];
	"pywin.mfc.window" -> "win32con" [];
	"pywin.mfc.window" -> "win32ui" [];
	"win32com.client.selecttlb" -> "pythoncom" [];
	"win32com.client.selecttlb" -> "win32api" [];
	"win32com.client.selecttlb" -> "win32con" [];
	"pywin.dialogs.list" -> "commctrl" [];
	"pywin.dialogs.list" -> "win32api" [];
	"pywin.dialogs.list" -> "win32con" [];
	"pywin.dialogs.list" -> "win32ui" [];
	"win32com.client.genpy" -> "os" [];
	"win32com.client.genpy" -> "sys" [];
	"win32com.client.genpy" -> "time" [];
	"win32com.client.genpy" -> "pythoncom" [];
	"win32com.client.genpy" -> "win32com" [];
	"win32com.client.gencache" -> "__future__" [];
	"win32com.client.gencache" -> "glob" [];
	"win32com.client.gencache" -> "os" [];
	"win32com.client.gencache" -> "sys" [];
	"win32com.client.gencache" -> "importlib" [];
	"win32com.client.gencache" -> "types" [];
	"win32com.client.gencache" -> "typing" [];
	"win32com.client.gencache" -> "pythoncom" [];
	"win32com.client.gencache" -> "pywintypes" [];
	"win32com.client.gencache" -> "win32com" [];
	"win32com.client.gencache" -> "pickle" [];
	"win32com.client.gencache" -> "io" [];
	"win32com.client.gencache" -> "shutil" [];
	"win32com.client.gencache" -> "zipfile" [];
	"win32com.client.gencache" -> "getopt" [];
	"win32com.client.dynamic" -> "traceback" [];
	"win32com.client.dynamic" -> "types" [];
	"win32com.client.dynamic" -> "pythoncom" [];
	"win32com.client.dynamic" -> "winerror" [];
	"win32com.client.dynamic" -> "pywintypes" [];
	"win32com.client.build" -> "datetime" [];
	"win32com.client.build" -> "string" [];
	"win32com.client.build" -> "keyword" [];
	"win32com.client.build" -> "pythoncom" [];
	"win32com.client.build" -> "winerror" [];
	"win32com.client.build" -> "pywintypes" [];
	"pywintypes" -> "os" [];
	"pywintypes" -> "sys" [];
	"pywintypes" -> "_win32sysloader" [];
	"pywintypes" -> "pywin32_system32" [];
	"win32com.universal" -> "pythoncom" [];
	"win32com.client.util" -> "pythoncom" [];
	"pythoncom" -> "pywintypes" [];
	"torch.torch_version" -> "typing" [];
	"torch._vendor.packaging.version" -> "itertools" [];
	"torch._vendor.packaging.version" -> "re" [];
	"torch._vendor.packaging.version" -> "typing" [];
	"torch._inductor.cpu_vec_isa" -> "dataclasses" [];
	"torch._inductor.cpu_vec_isa" -> "functools" [];
	"torch._inductor.cpu_vec_isa" -> "os" [];
	"torch._inductor.cpu_vec_isa" -> "platform" [];
	"torch._inductor.cpu_vec_isa" -> "re" [];
	"torch._inductor.cpu_vec_isa" -> "subprocess" [];
	"torch._inductor.cpu_vec_isa" -> "sys" [];
	"torch._inductor.cpu_vec_isa" -> "typing" [];
	"torch._inductor.cpu_vec_isa" -> "torch" [];
	"torch._inductor.cpu_vec_isa" -> "filelock" [];
	"torch._inductor.codegen.cpp_template" -> "ctypes" [];
	"torch._inductor.codegen.cpp_template" -> "functools" [];
	"torch._inductor.codegen.cpp_template" -> "itertools" [];
	"torch._inductor.codegen.cpp_template" -> "logging" [];
	"torch._inductor.codegen.cpp_template" -> "sys" [];
	"torch._inductor.codegen.cpp_template" -> "typing" [];
	"torch._inductor.codegen.cpp_template" -> "sympy" [];
	"torch._inductor.codegen.cpp_micro_gemm" -> "dataclasses" [];
	"torch._inductor.codegen.cpp_micro_gemm" -> "sys" [];
	"torch._inductor.codegen.cpp_micro_gemm" -> "enum" [];
	"torch._inductor.codegen.cpp_micro_gemm" -> "typing" [];
	"torch._inductor.codegen.cpp_micro_gemm" -> "sympy" [];
	"torch._inductor.codegen.cpp_micro_gemm" -> "torch" [];
	"torch._inductor.kernel.mm_common" -> "functools" [];
	"torch._inductor.kernel.mm_common" -> "itertools" [];
	"torch._inductor.kernel.mm_common" -> "logging" [];
	"torch._inductor.kernel.mm_common" -> "typing" [];
	"torch._inductor.kernel.mm_common" -> "sympy" [];
	"torch._inductor.kernel.mm_common" -> "torch" [];
	"torch._inductor.kernel.mm_common" -> "triton" [];
	"torch._inductor.quantized_lowerings" -> "logging" [];
	"torch._inductor.quantized_lowerings" -> "torch" [];
	"torch._inductor.kernel.unpack_mixed_mm" -> "logging" [];
	"torch._inductor.kernel.unpack_mixed_mm" -> "typing" [];
	"torch._inductor.kernel.mm_plus_mm" -> "functools" [];
	"torch._inductor.kernel.mm_plus_mm" -> "torch" [];
	"torch._inductor.kernel.mm_plus_mm" -> "triton" [];
	"torch._inductor.kernel.mm" -> "functools" [];
	"torch._inductor.kernel.mm" -> "logging" [];
	"torch._inductor.kernel.mm" -> "typing" [];
	"torch._inductor.kernel.mm" -> "torch" [];
	"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "copy" [];
	"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "logging" [];
	"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "random" [];
	"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "typing" [];
	"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "sympy" [];
	"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "torch" [];
	"torch._inductor.codegen.rocm.rocm_kernel" -> "logging" [];
	"torch._inductor.codegen.rocm.rocm_kernel" -> "typing" [];
	"torch._inductor.codegen.rocm.rocm_template" -> "functools" [];
	"torch._inductor.codegen.rocm.rocm_template" -> "itertools" [];
	"torch._inductor.codegen.rocm.rocm_template" -> "logging" [];
	"torch._inductor.codegen.rocm.rocm_template" -> "typing" [];
	"torch._inductor.codegen.rocm.rocm_benchmark_request" -> "__future__" [];
	"torch._inductor.codegen.rocm.rocm_benchmark_request" -> "functools" [];
	"torch._inductor.codegen.rocm.rocm_benchmark_request" -> "logging" [];
	"torch._inductor.codegen.rocm.rocm_benchmark_request" -> "ctypes" [];
	"torch._inductor.codegen.rocm.rocm_benchmark_request" -> "typing" [];
	"torch._inductor.codegen.rocm.rocm_benchmark_request" -> "torch" [];
	"torch._inductor.codegen.rocm.ck_template" -> "torch" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "copy" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "enum" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "logging" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "re" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "abc" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "typing" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "'cutlass_library.library'" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "'cutlass_library.gemm_operation'" [];
	"torch._inductor.autoheuristic.autoheuristic_utils" -> "functools" [];
	"torch._inductor.autoheuristic.autoheuristic_utils" -> "typing" [];
	"torch._inductor.autoheuristic.autoheuristic_utils" -> "torch" [];
	"torch._inductor.autoheuristic.autoheuristic" -> "json" [];
	"torch._inductor.autoheuristic.autoheuristic" -> "os" [];
	"torch._inductor.autoheuristic.autoheuristic" -> "functools" [];
	"torch._inductor.autoheuristic.autoheuristic" -> "typing" [];
	"torch._inductor.autoheuristic.autoheuristic" -> "torch" [];
	"torch._inductor.autoheuristic.learned_heuristic_controller" -> "importlib" [];
	"torch._inductor.autoheuristic.learned_heuristic_controller" -> "inspect" [];
	"torch._inductor.autoheuristic.learned_heuristic_controller" -> "pkgutil" [];
	"torch._inductor.autoheuristic.learned_heuristic_controller" -> "collections" [];
	"torch._inductor.autoheuristic.learned_heuristic_controller" -> "typing" [];
	"torch._inductor.autoheuristic.learnedheuristic_interface" -> "typing" [];
	"torch._inductor.subgraph_lowering" -> "functools" [];
	"torch._inductor.subgraph_lowering" -> "operator" [];
	"torch._inductor.subgraph_lowering" -> "dataclasses" [];
	"torch._inductor.subgraph_lowering" -> "typing" [];
	"torch._inductor.subgraph_lowering" -> "typing_extensions" [];
	"torch._inductor.subgraph_lowering" -> "torch" [];
	"torch._inductor.ops_handler" -> "itertools" [];
	"torch._inductor.ops_handler" -> "typing" [];
	"torch._inductor.ops_handler" -> "typing_extensions" [];
	"torch._inductor.ops_handler" -> "sympy" [];
	"torch._inductor.ops_handler" -> "torch" [];
	"torch._higher_order_ops.auto_functionalize" -> "warnings" [];
	"torch._higher_order_ops.auto_functionalize" -> "dataclasses" [];
	"torch._higher_order_ops.auto_functionalize" -> "typing" [];
	"torch._higher_order_ops.auto_functionalize" -> "torch" [];
	"torch._inductor.test_operators" -> "torch" [];
	"torch._higher_order_ops.associative_scan" -> "functools" [];
	"torch._higher_order_ops.associative_scan" -> "itertools" [];
	"torch._higher_order_ops.associative_scan" -> "typing" [];
	"torch._higher_order_ops.associative_scan" -> "torch" [];
	"torch._inductor.fx_passes.decompose_mem_bound_mm" -> "logging" [];
	"torch._inductor.fx_passes.decompose_mem_bound_mm" -> "typing" [];
	"torch._inductor.fx_passes.decompose_mem_bound_mm" -> "torch" [];
	"torch._inductor.fx_passes.split_cat" -> "itertools" [];
	"torch._inductor.fx_passes.split_cat" -> "logging" [];
	"torch._inductor.fx_passes.split_cat" -> "operator" [];
	"torch._inductor.fx_passes.split_cat" -> "typing" [];
	"torch._inductor.fx_passes.split_cat" -> "typing_extensions" [];
	"torch._inductor.fx_passes.split_cat" -> "torch" [];
	"torch._inductor.fx_passes.group_batch_fusion" -> "collections" [];
	"torch._inductor.fx_passes.group_batch_fusion" -> "logging" [];
	"torch._inductor.fx_passes.group_batch_fusion" -> "operator" [];
	"torch._inductor.fx_passes.group_batch_fusion" -> "typing" [];
	"torch._inductor.fx_passes.group_batch_fusion" -> "torch" [];
	"torch._inductor.fx_passes.group_batch_fusion" -> "deeplearning" [];
	"torch.fx.passes.graph_transform_observer" -> "os" [];
	"torch.fx.passes.graph_transform_observer" -> "typing" [];
	"torch._inductor.fx_passes.efficient_conv_bn_eval" -> "torch" [];
	"torch._inductor.pattern_matcher" -> "__future__" [];
	"torch._inductor.pattern_matcher" -> "contextlib" [];
	"torch._inductor.pattern_matcher" -> "dataclasses" [];
	"torch._inductor.pattern_matcher" -> "functools" [];
	"torch._inductor.pattern_matcher" -> "importlib" [];
	"torch._inductor.pattern_matcher" -> "inspect" [];
	"torch._inductor.pattern_matcher" -> "itertools" [];
	"torch._inductor.pattern_matcher" -> "logging" [];
	"torch._inductor.pattern_matcher" -> "operator" [];
	"torch._inductor.pattern_matcher" -> "os" [];
	"torch._inductor.pattern_matcher" -> "re" [];
	"torch._inductor.pattern_matcher" -> "textwrap" [];
	"torch._inductor.pattern_matcher" -> "typing" [];
	"torch._inductor.pattern_matcher" -> "abc" [];
	"torch._inductor.pattern_matcher" -> "collections" [];
	"torch._inductor.pattern_matcher" -> "pathlib" [];
	"torch._inductor.pattern_matcher" -> "typing_extensions" [];
	"torch._inductor.pattern_matcher" -> "torch" [];
	"torch._functorch.compile_utils" -> "typing" [];
	"torch._functorch.compile_utils" -> "torch" [];
	"torch._inductor.constant_folding" -> "collections" [];
	"torch._inductor.constant_folding" -> "typing" [];
	"torch._inductor.constant_folding" -> "torch" [];
	"torch._inductor.fx_passes.pre_grad" -> "copy" [];
	"torch._inductor.fx_passes.pre_grad" -> "itertools" [];
	"torch._inductor.fx_passes.pre_grad" -> "logging" [];
	"torch._inductor.fx_passes.pre_grad" -> "typing" [];
	"torch._inductor.fx_passes.pre_grad" -> "torch" [];
	"torch._inductor.fx_passes.numeric_utils" -> "gc" [];
	"torch._inductor.fx_passes.numeric_utils" -> "logging" [];
	"torch._inductor.fx_passes.numeric_utils" -> "os" [];
	"torch._inductor.fx_passes.numeric_utils" -> "random" [];
	"torch._inductor.fx_passes.numeric_utils" -> "traceback" [];
	"torch._inductor.fx_passes.numeric_utils" -> "numpy" [];
	"torch._inductor.fx_passes.numeric_utils" -> "torch" [];
	"torch._inductor.fx_passes.misc_patterns" -> "functools" [];
	"torch._inductor.fx_passes.misc_patterns" -> "typing" [];
	"torch._inductor.fx_passes.misc_patterns" -> "torch" [];
	"torch._inductor.fx_utils" -> "operator" [];
	"torch._inductor.fx_utils" -> "collections" [];
	"torch._inductor.fx_utils" -> "typing" [];
	"torch._inductor.fx_utils" -> "sympy" [];
	"torch._inductor.fx_utils" -> "torch" [];
	"torch.fx.experimental.optimization" -> "typing" [];
	"torch.fx.experimental.optimization" -> "torch" [];
	"torch.fx.experimental.optimization" -> "copy" [];
	"torch.fx.experimental.optimization" -> "collections" [];
	"torch.fx.experimental.optimization" -> "operator" [];
	"torch.fx.experimental.optimization" -> "time" [];
	"torch.fx.experimental.optimization" -> "logging" [];
	"torch.fx.experimental.optimization" -> "enum" [];
	"torch.utils.mkldnn" -> "torch" [];
	"torch._inductor.fx_passes.post_grad" -> "functools" [];
	"torch._inductor.fx_passes.post_grad" -> "itertools" [];
	"torch._inductor.fx_passes.post_grad" -> "logging" [];
	"torch._inductor.fx_passes.post_grad" -> "operator" [];
	"torch._inductor.fx_passes.post_grad" -> "collections" [];
	"torch._inductor.fx_passes.post_grad" -> "typing" [];
	"torch._inductor.fx_passes.post_grad" -> "torch" [];
	"torch._inductor.fx_passes.post_grad" -> "sympy" [];
	"torch._inductor.fx_passes.reinplace" -> "itertools" [];
	"torch._inductor.fx_passes.reinplace" -> "logging" [];
	"torch._inductor.fx_passes.reinplace" -> "operator" [];
	"torch._inductor.fx_passes.reinplace" -> "collections" [];
	"torch._inductor.fx_passes.reinplace" -> "dataclasses" [];
	"torch._inductor.fx_passes.reinplace" -> "typing" [];
	"torch._inductor.fx_passes.reinplace" -> "torch" [];
	"torch._inductor.fx_passes.reinplace" -> "'triton.runtime'" [];
	"torch._inductor.fx_passes.micro_pipeline_tp" -> "operator" [];
	"torch._inductor.fx_passes.micro_pipeline_tp" -> "collections" [];
	"torch._inductor.fx_passes.micro_pipeline_tp" -> "dataclasses" [];
	"torch._inductor.fx_passes.micro_pipeline_tp" -> "typing" [];
	"torch._inductor.fx_passes.micro_pipeline_tp" -> "torch" [];
	"torch.distributed._symmetric_memory" -> "socket" [];
	"torch.distributed._symmetric_memory" -> "uuid" [];
	"torch.distributed._symmetric_memory" -> "contextlib" [];
	"torch.distributed._symmetric_memory" -> "datetime" [];
	"torch.distributed._symmetric_memory" -> "functools" [];
	"torch.distributed._symmetric_memory" -> "typing" [];
	"torch.distributed._symmetric_memory" -> "torch" [];
	"torch.distributed._symmetric_memory" -> "'torch._C._distributed_c10d'" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "collections" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "inspect" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "logging" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "math" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "operator" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "dataclasses" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "functools" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "typing" [];
	"torch._inductor.fx_passes.ddp_fusion" -> "torch" [];
	"torch._inductor.fx_passes.b2b_gemm" -> "functools" [];
	"torch._inductor.fx_passes.b2b_gemm" -> "collections" [];
	"torch._inductor.fx_passes.b2b_gemm" -> "typing" [];
	"torch._inductor.fx_passes.b2b_gemm" -> "torch" [];
	"torch._inductor.fx_passes.joint_graph" -> "itertools" [];
	"torch._inductor.fx_passes.joint_graph" -> "logging" [];
	"torch._inductor.fx_passes.joint_graph" -> "typing" [];
	"torch._inductor.fx_passes.joint_graph" -> "collections" [];
	"torch._inductor.fx_passes.joint_graph" -> "torch" [];
	"torch._inductor.fx_passes.pad_mm" -> "functools" [];
	"torch._inductor.fx_passes.pad_mm" -> "itertools" [];
	"torch._inductor.fx_passes.pad_mm" -> "operator" [];
	"torch._inductor.fx_passes.pad_mm" -> "typing" [];
	"torch._inductor.fx_passes.pad_mm" -> "torch" [];
	"torch._inductor.fx_passes.fuse_attention" -> "functools" [];
	"torch._inductor.fx_passes.fuse_attention" -> "inspect" [];
	"torch._inductor.fx_passes.fuse_attention" -> "logging" [];
	"torch._inductor.fx_passes.fuse_attention" -> "math" [];
	"torch._inductor.fx_passes.fuse_attention" -> "torch" [];
	"torch._inductor.fx_passes.replace_random" -> "collections" [];
	"torch._inductor.fx_passes.replace_random" -> "logging" [];
	"torch._inductor.fx_passes.replace_random" -> "torch" [];
	"torch._inductor.fx_passes.dedupe_symint_uses" -> "dataclasses" [];
	"torch._inductor.fx_passes.dedupe_symint_uses" -> "typing" [];
	"torch._inductor.fx_passes.dedupe_symint_uses" -> "torch" [];
	"torch.monitor" -> "'torch._C._monitor'" [];
	"torch.monitor" -> "typing" [];
	"torch.utils.tensorboard" -> "tensorboard" [];
	"torch.utils.tensorboard" -> "'tensorboard.summary'" [];
	"torch.utils.tensorboard.writer" -> "os" [];
	"torch.utils.tensorboard.writer" -> "time" [];
	"torch.utils.tensorboard.writer" -> "typing" [];
	"torch.utils.tensorboard.writer" -> "torch" [];
	"torch.utils.tensorboard.writer" -> "'matplotlib.figure'" [];
	"torch.utils.tensorboard.writer" -> "'tensorboard.compat'" [];
	"torch.utils.tensorboard.writer" -> "'tensorboard.plugins'" [];
	"torch.utils.tensorboard.writer" -> "'tensorboard.summary'" [];
	"torch.utils.tensorboard.writer" -> "socket" [];
	"torch.utils.tensorboard.writer" -> "datetime" [];
	"torch.utils.tensorboard.writer" -> "'google.protobuf'" [];
	"torch.utils.tensorboard.summary" -> "json" [];
	"torch.utils.tensorboard.summary" -> "logging" [];
	"torch.utils.tensorboard.summary" -> "os" [];
	"torch.utils.tensorboard.summary" -> "struct" [];
	"torch.utils.tensorboard.summary" -> "typing" [];
	"torch.utils.tensorboard.summary" -> "torch" [];
	"torch.utils.tensorboard.summary" -> "numpy" [];
	"torch.utils.tensorboard.summary" -> "'google.protobuf'" [];
	"torch.utils.tensorboard.summary" -> "'tensorboard.compat'" [];
	"torch.utils.tensorboard.summary" -> "'tensorboard.plugins'" [];
	"torch.utils.tensorboard.summary" -> "PIL" [];
	"torch.utils.tensorboard.summary" -> "io" [];
	"torch.utils.tensorboard.summary" -> "moviepy" [];
	"torch.utils.tensorboard.summary" -> "tempfile" [];
	"torch.utils.tensorboard.summary" -> "wave" [];
	"torch.utils.tensorboard._utils" -> "numpy" [];
	"torch.utils.tensorboard._utils" -> "'matplotlib.pyplot'" [];
	"torch.utils.tensorboard._utils" -> "'matplotlib.backends'" [];
	"torch.utils.tensorboard._pytorch_graph" -> "collections" [];
	"torch.utils.tensorboard._pytorch_graph" -> "contextlib" [];
	"torch.utils.tensorboard._pytorch_graph" -> "typing" [];
	"torch.utils.tensorboard._pytorch_graph" -> "'tensorboard.compat'" [];
	"torch.utils.tensorboard._pytorch_graph" -> "torch" [];
	"torch.utils.tensorboard._proto_graph" -> "typing" [];
	"torch.utils.tensorboard._proto_graph" -> "'tensorboard.compat'" [];
	"torch.utils.tensorboard._onnx_graph" -> "'tensorboard.compat'" [];
	"torch.utils.tensorboard._onnx_graph" -> "onnx" [];
	"torch.utils.tensorboard._onnx_graph" -> "itertools" [];
	"torch.utils.tensorboard._embedding" -> "math" [];
	"torch.utils.tensorboard._embedding" -> "numpy" [];
	"torch.utils.tensorboard._embedding" -> "'tensorboard.compat'" [];
	"torch.utils.tensorboard._embedding" -> "'tensorboard.plugins'" [];
	"torch.utils.tensorboard._embedding" -> "PIL" [];
	"torch.utils.tensorboard._embedding" -> "io" [];
	"torch.utils.tensorboard._convert_np" -> "numpy" [];
	"torch.utils.tensorboard._convert_np" -> "torch" [];
	"torch._dynamo.repro.after_aot" -> "argparse" [];
	"torch._dynamo.repro.after_aot" -> "copy" [];
	"torch._dynamo.repro.after_aot" -> "functools" [];
	"torch._dynamo.repro.after_aot" -> "io" [];
	"torch._dynamo.repro.after_aot" -> "logging" [];
	"torch._dynamo.repro.after_aot" -> "os" [];
	"torch._dynamo.repro.after_aot" -> "shutil" [];
	"torch._dynamo.repro.after_aot" -> "subprocess" [];
	"torch._dynamo.repro.after_aot" -> "sys" [];
	"torch._dynamo.repro.after_aot" -> "textwrap" [];
	"torch._dynamo.repro.after_aot" -> "uuid" [];
	"torch._dynamo.repro.after_aot" -> "importlib" [];
	"torch._dynamo.repro.after_aot" -> "tempfile" [];
	"torch._dynamo.repro.after_aot" -> "typing" [];
	"torch._dynamo.repro.after_aot" -> "torch" [];
	"torch._inductor.hooks" -> "contextlib" [];
	"torch._inductor.hooks" -> "typing" [];
	"torch._inductor.hooks" -> "torch" [];
	"torch._dynamo.debug_utils" -> "atexit" [];
	"torch._dynamo.debug_utils" -> "copy" [];
	"torch._dynamo.debug_utils" -> "cProfile" [];
	"torch._dynamo.debug_utils" -> "functools" [];
	"torch._dynamo.debug_utils" -> "getpass" [];
	"torch._dynamo.debug_utils" -> "inspect" [];
	"torch._dynamo.debug_utils" -> "itertools" [];
	"torch._dynamo.debug_utils" -> "logging" [];
	"torch._dynamo.debug_utils" -> "os" [];
	"torch._dynamo.debug_utils" -> "re" [];
	"torch._dynamo.debug_utils" -> "subprocess" [];
	"torch._dynamo.debug_utils" -> "sys" [];
	"torch._dynamo.debug_utils" -> "tempfile" [];
	"torch._dynamo.debug_utils" -> "textwrap" [];
	"torch._dynamo.debug_utils" -> "collections" [];
	"torch._dynamo.debug_utils" -> "importlib" [];
	"torch._dynamo.debug_utils" -> "typing" [];
	"torch._dynamo.debug_utils" -> "torch" [];
	"torch._dynamo.debug_utils" -> "'libfb.py'" [];
	"torch._tensor_str" -> "contextlib" [];
	"torch._tensor_str" -> "dataclasses" [];
	"torch._tensor_str" -> "math" [];
	"torch._tensor_str" -> "textwrap" [];
	"torch._tensor_str" -> "typing" [];
	"torch.utils._content_store" -> "ctypes" [];
	"torch.utils._content_store" -> "functools" [];
	"torch.utils._content_store" -> "hashlib" [];
	"torch.utils._content_store" -> "os.path" [];
	"torch.utils._content_store" -> "struct" [];
	"torch.utils._content_store" -> "collections" [];
	"torch.utils._content_store" -> "typing" [];
	"torch.utils._content_store" -> "torch" [];
	"torch._dynamo.mutation_guard" -> "functools" [];
	"torch._dynamo.mutation_guard" -> "weakref" [];
	"torch.distributed.tensor._api" -> "inspect" [];
	"torch.distributed.tensor._api" -> "warnings" [];
	"torch.distributed.tensor._api" -> "typing" [];
	"torch.distributed.tensor._api" -> "torch" [];
	"torch.distributed.tensor._api" -> "'torch_xla.distributed'" [];
	"torch.distributed.checkpoint.planner_helpers" -> "io" [];
	"torch.distributed.checkpoint.planner_helpers" -> "typing" [];
	"torch.distributed.checkpoint.planner_helpers" -> "torch" [];
	"torch.distributed.checkpoint.storage" -> "abc" [];
	"torch.distributed.checkpoint.storage" -> "os" [];
	"torch.distributed.checkpoint.storage" -> "dataclasses" [];
	"torch.distributed.checkpoint.storage" -> "typing" [];
	"torch.distributed.checkpoint.state_dict_saver" -> "inspect" [];
	"torch.distributed.checkpoint.state_dict_saver" -> "os" [];
	"torch.distributed.checkpoint.state_dict_saver" -> "warnings" [];
	"torch.distributed.checkpoint.state_dict_saver" -> "typing" [];
	"torch.distributed.checkpoint.state_dict_saver" -> "typing_extensions" [];
	"torch.distributed.checkpoint.state_dict_saver" -> "torch" [];
	"torch.distributed.checkpoint.utils" -> "cProfile" [];
	"torch.distributed.checkpoint.utils" -> "inspect" [];
	"torch.distributed.checkpoint.utils" -> "io" [];
	"torch.distributed.checkpoint.utils" -> "itertools" [];
	"torch.distributed.checkpoint.utils" -> "os" [];
	"torch.distributed.checkpoint.utils" -> "warnings" [];
	"torch.distributed.checkpoint.utils" -> "contextlib" [];
	"torch.distributed.checkpoint.utils" -> "functools" [];
	"torch.distributed.checkpoint.utils" -> "pstats" [];
	"torch.distributed.checkpoint.utils" -> "typing" [];
	"torch.distributed.checkpoint.utils" -> "torch" [];
	"torch.distributed._shard.sharded_tensor.shard" -> "dataclasses" [];
	"torch.distributed._shard.sharded_tensor.shard" -> "typing" [];
	"torch.distributed._shard.sharded_tensor.shard" -> "torch" [];
	"torch.distributed.checkpoint.stateful" -> "typing" [];
	"torch.distributed.checkpoint.stateful" -> "typing_extensions" [];
	"torch.distributed.checkpoint.staging" -> "typing" [];
	"torch.distributed.checkpoint.staging" -> "typing_extensions" [];
	"torch.distributed.checkpoint.logger" -> "functools" [];
	"torch.distributed.checkpoint.logger" -> "time" [];
	"torch.distributed.checkpoint.logger" -> "typing" [];
	"torch.distributed.checkpoint.logger" -> "typing_extensions" [];
	"torch.distributed.checkpoint.logger" -> "uuid" [];
	"torch.distributed.checkpoint.logging_handlers" -> "logging" [];
	"torch.distributed.checkpoint.logging_handlers" -> "typing" [];
	"torch.distributed.checkpoint._storage_utils" -> "os" [];
	"torch.distributed.checkpoint._storage_utils" -> "typing" [];
	"torch.distributed.checkpoint._fsspec_filesystem" -> "io" [];
	"torch.distributed.checkpoint._fsspec_filesystem" -> "os" [];
	"torch.distributed.checkpoint._fsspec_filesystem" -> "contextlib" [];
	"torch.distributed.checkpoint._fsspec_filesystem" -> "pathlib" [];
	"torch.distributed.checkpoint._fsspec_filesystem" -> "typing" [];
	"torch.distributed.checkpoint._fsspec_filesystem" -> "fsspec" [];
	"fsspec.core" -> "__future__" [];
	"fsspec.core" -> "io" [];
	"fsspec.core" -> "logging" [];
	"fsspec.core" -> "os" [];
	"fsspec.core" -> "re" [];
	"fsspec.core" -> "glob" [];
	"fsspec.core" -> "pathlib" [];
	"fsspec.utils" -> "__future__" [];
	"fsspec.utils" -> "contextlib" [];
	"fsspec.utils" -> "logging" [];
	"fsspec.utils" -> "math" [];
	"fsspec.utils" -> "os" [];
	"fsspec.utils" -> "pathlib" [];
	"fsspec.utils" -> "re" [];
	"fsspec.utils" -> "sys" [];
	"fsspec.utils" -> "tempfile" [];
	"fsspec.utils" -> "functools" [];
	"fsspec.utils" -> "hashlib" [];
	"fsspec.utils" -> "typing" [];
	"fsspec.utils" -> "typing_extensions" [];
	"fsspec.utils" -> "importlib" [];
	"fsspec.spec" -> "__future__" [];
	"fsspec.spec" -> "io" [];
	"fsspec.spec" -> "json" [];
	"fsspec.spec" -> "logging" [];
	"fsspec.spec" -> "os" [];
	"fsspec.spec" -> "threading" [];
	"fsspec.spec" -> "warnings" [];
	"fsspec.spec" -> "weakref" [];
	"fsspec.spec" -> "errno" [];
	"fsspec.spec" -> "glob" [];
	"fsspec.spec" -> "hashlib" [];
	"fsspec.spec" -> "typing" [];
	"fsspec.spec" -> "re" [];
	"fsspec.mapping" -> "array" [];
	"fsspec.mapping" -> "logging" [];
	"fsspec.mapping" -> "posixpath" [];
	"fsspec.mapping" -> "warnings" [];
	"fsspec.mapping" -> "functools" [];
	"fsspec.implementations.dirfs" -> "fsspec" [];
	"fsspec.json" -> "json" [];
	"fsspec.json" -> "contextlib" [];
	"fsspec.json" -> "pathlib" [];
	"fsspec.json" -> "typing" [];
	"fsspec.implementations.local" -> "datetime" [];
	"fsspec.implementations.local" -> "io" [];
	"fsspec.implementations.local" -> "logging" [];
	"fsspec.implementations.local" -> "os" [];
	"fsspec.implementations.local" -> "os.path" [];
	"fsspec.implementations.local" -> "shutil" [];
	"fsspec.implementations.local" -> "stat" [];
	"fsspec.implementations.local" -> "tempfile" [];
	"fsspec.implementations.local" -> "fsspec" [];
	"fsspec.asyn" -> "asyncio" [];
	"fsspec.asyn" -> "functools" [];
	"fsspec.asyn" -> "inspect" [];
	"fsspec.asyn" -> "io" [];
	"fsspec.asyn" -> "numbers" [];
	"fsspec.asyn" -> "os" [];
	"fsspec.asyn" -> "re" [];
	"fsspec.asyn" -> "threading" [];
	"fsspec.asyn" -> "contextlib" [];
	"fsspec.asyn" -> "glob" [];
	"fsspec.asyn" -> "typing" [];
	"fsspec.asyn" -> "resource" [];
	"fsspec.asyn" -> "traceback" [];
	"fsspec.exceptions" -> "asyncio" [];
	"fsspec.transaction" -> "collections" [];
	"fsspec.transaction" -> "distributed" [];
	"fsspec.dircache" -> "time" [];
	"fsspec.dircache" -> "functools" [];
	"fsspec.callbacks" -> "functools" [];
	"fsspec.callbacks" -> "tqdm" [];
	"fsspec.registry" -> "__future__" [];
	"fsspec.registry" -> "importlib" [];
	"fsspec.registry" -> "types" [];
	"fsspec.registry" -> "warnings" [];
	"fsspec.config" -> "__future__" [];
	"fsspec.config" -> "configparser" [];
	"fsspec.config" -> "json" [];
	"fsspec.config" -> "os" [];
	"fsspec.config" -> "warnings" [];
	"fsspec.config" -> "typing" [];
	"fsspec.compression" -> "zipfile" [];
	"fsspec.compression" -> "bz2" [];
	"fsspec.compression" -> "isal" [];
	"fsspec.compression" -> "gzip" [];
	"fsspec.compression" -> "lzma" [];
	"fsspec.compression" -> "lzmaffi" [];
	"fsspec.compression" -> "snappy" [];
	"fsspec.compression" -> "lz4" [];
	"fsspec.compression" -> "zstandard" [];
	"fsspec.caching" -> "__future__" [];
	"fsspec.caching" -> "collections" [];
	"fsspec.caching" -> "functools" [];
	"fsspec.caching" -> "logging" [];
	"fsspec.caching" -> "math" [];
	"fsspec.caching" -> "os" [];
	"fsspec.caching" -> "threading" [];
	"fsspec.caching" -> "warnings" [];
	"fsspec.caching" -> "typing" [];
	"fsspec.caching" -> "mmap" [];
	"fsspec.caching" -> "typing_extensions" [];
	"fsspec.caching" -> "tempfile" [];
	"fsspec._version" -> "typing" [];
	"torch.distributed._state_dict_utils" -> "copy" [];
	"torch.distributed._state_dict_utils" -> "io" [];
	"torch.distributed._state_dict_utils" -> "math" [];
	"torch.distributed._state_dict_utils" -> "weakref" [];
	"torch.distributed._state_dict_utils" -> "typing" [];
	"torch.distributed._state_dict_utils" -> "torch" [];
	"torch.distributed.checkpoint.state_dict_loader" -> "os" [];
	"torch.distributed.checkpoint.state_dict_loader" -> "warnings" [];
	"torch.distributed.checkpoint.state_dict_loader" -> "typing" [];
	"torch.distributed.checkpoint.state_dict_loader" -> "typing_extensions" [];
	"torch.distributed.checkpoint.state_dict_loader" -> "torch" [];
	"torch.distributed.checkpoint.optimizer" -> "dataclasses" [];
	"torch.distributed.checkpoint.optimizer" -> "typing" [];
	"torch.distributed.checkpoint.optimizer" -> "torch" [];
	"torch.distributed.fsdp._shard_utils" -> "copy" [];
	"torch.distributed.fsdp._shard_utils" -> "itertools" [];
	"torch.distributed.fsdp._shard_utils" -> "math" [];
	"torch.distributed.fsdp._shard_utils" -> "typing" [];
	"torch.distributed.fsdp._shard_utils" -> "torch" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "contextlib" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "copy" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "functools" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "math" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "traceback" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "warnings" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "enum" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "typing" [];
	"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch" [];
	"torch.distributed.fsdp.wrap" -> "contextlib" [];
	"torch.distributed.fsdp.wrap" -> "copy" [];
	"torch.distributed.fsdp.wrap" -> "abc" [];
	"torch.distributed.fsdp.wrap" -> "typing" [];
	"torch.distributed.fsdp._unshard_param_utils" -> "contextlib" [];
	"torch.distributed.fsdp._unshard_param_utils" -> "warnings" [];
	"torch.distributed.fsdp._unshard_param_utils" -> "typing" [];
	"torch.distributed.fsdp._unshard_param_utils" -> "torch" [];
	"torch.distributed.fsdp._state_dict_utils" -> "contextlib" [];
	"torch.distributed.fsdp._state_dict_utils" -> "logging" [];
	"torch.distributed.fsdp._state_dict_utils" -> "math" [];
	"torch.distributed.fsdp._state_dict_utils" -> "warnings" [];
	"torch.distributed.fsdp._state_dict_utils" -> "typing" [];
	"torch.distributed.fsdp._state_dict_utils" -> "torch" [];
	"torch.distributed.fsdp._fsdp_extensions" -> "abc" [];
	"torch.distributed.fsdp._fsdp_extensions" -> "typing" [];
	"torch.distributed.fsdp._fsdp_extensions" -> "torch" [];
	"torch.distributed.fsdp._debug_utils" -> "logging" [];
	"torch.distributed.fsdp._debug_utils" -> "time" [];
	"torch.distributed.fsdp._debug_utils" -> "collections" [];
	"torch.distributed.fsdp._debug_utils" -> "contextlib" [];
	"torch.distributed.fsdp._debug_utils" -> "enum" [];
	"torch.distributed.fsdp._debug_utils" -> "typing" [];
	"torch.distributed.fsdp._debug_utils" -> "torch" [];
	"torch.distributed.fsdp._optim_utils" -> "copy" [];
	"torch.distributed.fsdp._optim_utils" -> "functools" [];
	"torch.distributed.fsdp._optim_utils" -> "logging" [];
	"torch.distributed.fsdp._optim_utils" -> "warnings" [];
	"torch.distributed.fsdp._optim_utils" -> "contextlib" [];
	"torch.distributed.fsdp._optim_utils" -> "dataclasses" [];
	"torch.distributed.fsdp._optim_utils" -> "typing" [];
	"torch.distributed.fsdp._optim_utils" -> "torch" [];
	"torch.distributed.utils" -> "dataclasses" [];
	"torch.distributed.utils" -> "traceback" [];
	"torch.distributed.utils" -> "typing" [];
	"torch.distributed.utils" -> "torch" [];
	"torch.nn.parallel.scatter_gather" -> "typing" [];
	"torch.nn.parallel.scatter_gather" -> "typing_extensions" [];
	"torch.nn.parallel.scatter_gather" -> "torch" [];
	"torch.nn.parallel._functions" -> "warnings" [];
	"torch.nn.parallel._functions" -> "typing" [];
	"torch.nn.parallel._functions" -> "torch" [];
	"torch.nn.parallel.comm" -> "warnings" [];
	"torch.nn.parallel.comm" -> "typing" [];
	"torch.nn.parallel.comm" -> "torch" [];
	"torch.distributed.fsdp.api" -> "dataclasses" [];
	"torch.distributed.fsdp.api" -> "enum" [];
	"torch.distributed.fsdp.api" -> "typing" [];
	"torch.distributed.fsdp.api" -> "torch" [];
	"torch.nn.modules.batchnorm" -> "typing" [];
	"torch.nn.modules.batchnorm" -> "torch" [];
	"torch.nn.modules.lazy" -> "itertools" [];
	"torch.nn.modules.lazy" -> "typing" [];
	"torch.nn.modules.lazy" -> "torch" [];
	"torch.nn.modules._functions" -> "torch" [];
	"torch.distributed.fsdp._wrap_utils" -> "collections" [];
	"torch.distributed.fsdp._wrap_utils" -> "functools" [];
	"torch.distributed.fsdp._wrap_utils" -> "inspect" [];
	"torch.distributed.fsdp._wrap_utils" -> "warnings" [];
	"torch.distributed.fsdp._wrap_utils" -> "typing" [];
	"torch.distributed.fsdp._runtime_utils" -> "functools" [];
	"torch.distributed.fsdp._runtime_utils" -> "logging" [];
	"torch.distributed.fsdp._runtime_utils" -> "enum" [];
	"torch.distributed.fsdp._runtime_utils" -> "typing" [];
	"torch.distributed.fsdp._runtime_utils" -> "torch" [];
	"torch.distributed.fsdp._init_utils" -> "collections" [];
	"torch.distributed.fsdp._init_utils" -> "itertools" [];
	"torch.distributed.fsdp._init_utils" -> "os" [];
	"torch.distributed.fsdp._init_utils" -> "warnings" [];
	"torch.distributed.fsdp._init_utils" -> "typing" [];
	"torch.distributed.fsdp._init_utils" -> "torch" [];
	"torch.distributed.fsdp._init_utils" -> "torchdistx" [];
	"torch.distributed.tensor.parallel.fsdp" -> "copy" [];
	"torch.distributed.tensor.parallel.fsdp" -> "typing" [];
	"torch.distributed.tensor.parallel.fsdp" -> "torch" [];
	"torch.distributed.tensor.parallel.style" -> "abc" [];
	"torch.distributed.tensor.parallel.style" -> "functools" [];
	"torch.distributed.tensor.parallel.style" -> "typing" [];
	"torch.distributed.tensor.parallel.style" -> "torch" [];
	"torch.distributed.tensor.parallel.loss" -> "contextlib" [];
	"torch.distributed.tensor.parallel.loss" -> "typing" [];
	"torch.distributed.tensor.parallel.loss" -> "torch" [];
	"torch.distributed.tensor._ops._math_ops" -> "math" [];
	"torch.distributed.tensor._ops._math_ops" -> "dataclasses" [];
	"torch.distributed.tensor._ops._math_ops" -> "enum" [];
	"torch.distributed.tensor._ops._math_ops" -> "typing" [];
	"torch.distributed.tensor._ops._math_ops" -> "torch" [];
	"torch.distributed.tensor._ops.utils" -> "functools" [];
	"torch.distributed.tensor._ops.utils" -> "itertools" [];
	"torch.distributed.tensor._ops.utils" -> "operator" [];
	"torch.distributed.tensor._ops.utils" -> "typing" [];
	"torch.distributed.tensor._ops.utils" -> "torch" [];
	"torch.distributed.tensor._op_schema" -> "dataclasses" [];
	"torch.distributed.tensor._op_schema" -> "functools" [];
	"torch.distributed.tensor._op_schema" -> "typing" [];
	"torch.distributed.tensor._op_schema" -> "torch" [];
	"torch.distributed.tensor._ops._embedding_ops" -> "dataclasses" [];
	"torch.distributed.tensor._ops._embedding_ops" -> "typing" [];
	"torch.distributed.tensor._ops._embedding_ops" -> "torch" [];
	"torch.distributed.tensor.parallel.api" -> "fnmatch" [];
	"torch.distributed.tensor.parallel.api" -> "typing" [];
	"torch.distributed.tensor.parallel.api" -> "torch" [];
	"torch.distributed.tensor.parallel._utils" -> "warnings" [];
	"torch.distributed.tensor.parallel._utils" -> "typing" [];
	"torch.distributed.tensor.parallel._data_parallel_utils" -> "functools" [];
	"torch.distributed.tensor.parallel._data_parallel_utils" -> "typing" [];
	"torch.distributed.tensor.parallel._data_parallel_utils" -> "torch" [];
	"torch.distributed.fsdp._limiter_utils" -> "collections" [];
	"torch.distributed.fsdp._limiter_utils" -> "typing" [];
	"torch.distributed.fsdp._limiter_utils" -> "torch" [];
	"torch.distributed.algorithms._comm_hooks.default_hooks" -> "functools" [];
	"torch.distributed.algorithms._comm_hooks.default_hooks" -> "typing" [];
	"torch.distributed.algorithms._comm_hooks.default_hooks" -> "torch" [];
	"torch.distributed.fsdp._exec_order_utils" -> "itertools" [];
	"torch.distributed.fsdp._exec_order_utils" -> "warnings" [];
	"torch.distributed.fsdp._exec_order_utils" -> "enum" [];
	"torch.distributed.fsdp._exec_order_utils" -> "typing" [];
	"torch.distributed.fsdp._exec_order_utils" -> "torch" [];
	"torch.distributed.fsdp._dynamo_utils" -> "typing" [];
	"torch.distributed.fsdp._common_utils" -> "logging" [];
	"torch.distributed.fsdp._common_utils" -> "traceback" [];
	"torch.distributed.fsdp._common_utils" -> "warnings" [];
	"torch.distributed.fsdp._common_utils" -> "weakref" [];
	"torch.distributed.fsdp._common_utils" -> "enum" [];
	"torch.distributed.fsdp._common_utils" -> "functools" [];
	"torch.distributed.fsdp._common_utils" -> "typing" [];
	"torch.distributed.fsdp._common_utils" -> "torch" [];
	"torch.distributed._composable_state" -> "typing" [];
	"torch.distributed.algorithms.join" -> "warnings" [];
	"torch.distributed.algorithms.join" -> "abc" [];
	"torch.distributed.algorithms.join" -> "types" [];
	"torch.distributed.algorithms.join" -> "typing" [];
	"torch.distributed.algorithms.join" -> "torch" [];
	"torch.distributed.algorithms._checkpoint.checkpoint_wrapper" -> "warnings" [];
	"torch.distributed.algorithms._checkpoint.checkpoint_wrapper" -> "abc" [];
	"torch.distributed.algorithms._checkpoint.checkpoint_wrapper" -> "enum" [];
	"torch.distributed.algorithms._checkpoint.checkpoint_wrapper" -> "functools" [];
	"torch.distributed.algorithms._checkpoint.checkpoint_wrapper" -> "typing" [];
	"torch.distributed.algorithms._checkpoint.checkpoint_wrapper" -> "torch" [];
	"torch.distributed.fsdp._traversal_utils" -> "collections" [];
	"torch.distributed.fsdp._traversal_utils" -> "typing" [];
	"torch.distributed._composable.contract" -> "uuid" [];
	"torch.distributed._composable.contract" -> "collections" [];
	"torch.distributed._composable.contract" -> "functools" [];
	"torch.distributed._composable.contract" -> "typing" [];
	"torch.distributed._composable.contract" -> "torch" [];
	"torch.distributed._composable.replicate" -> "weakref" [];
	"torch.distributed._composable.replicate" -> "typing" [];
	"torch.distributed._composable.replicate" -> "torch" [];
	"torch.distributed.tensor.parallel.ddp" -> "typing" [];
	"torch.distributed._composable.fully_shard" -> "typing" [];
	"torch.distributed._composable.fully_shard" -> "typing_extensions" [];
	"torch.distributed._composable.fully_shard" -> "torch" [];
	"torch.distributed._composable.checkpoint_activation" -> "contextlib" [];
	"torch.distributed._composable.checkpoint_activation" -> "typing" [];
	"torch.distributed._composable.checkpoint_activation" -> "torch" [];
	"torch.distributed.fsdp._flat_param" -> "contextlib" [];
	"torch.distributed.fsdp._flat_param" -> "functools" [];
	"torch.distributed.fsdp._flat_param" -> "logging" [];
	"torch.distributed.fsdp._flat_param" -> "os" [];
	"torch.distributed.fsdp._flat_param" -> "warnings" [];
	"torch.distributed.fsdp._flat_param" -> "enum" [];
	"torch.distributed.fsdp._flat_param" -> "itertools" [];
	"torch.distributed.fsdp._flat_param" -> "typing" [];
	"torch.distributed.fsdp._flat_param" -> "torch" [];
	"torch.testing._internal.distributed.fake_pg" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed._shard.sharding_spec.api" -> "functools" [];
	"torch.distributed._shard.sharding_spec.api" -> "operator" [];
	"torch.distributed._shard.sharding_spec.api" -> "abc" [];
	"torch.distributed._shard.sharding_spec.api" -> "dataclasses" [];
	"torch.distributed._shard.sharding_spec.api" -> "typing" [];
	"torch.distributed._shard.sharding_spec.api" -> "torch" [];
	"torch.distributed._shard.sharding_spec._internals" -> "typing" [];
	"torch.distributed._shard.op_registry_utils" -> "functools" [];
	"torch.distributed._shard.op_registry_utils" -> "inspect" [];
	"torch.distributed._shard.common_op_utils" -> "typing" [];
	"torch.distributed._shard.common_op_utils" -> "torch" [];
	"torch.distributed._shard.api" -> "contextlib" [];
	"torch.distributed._shard.api" -> "typing" [];
	"torch.distributed._shard.api" -> "torch" [];
	"torch.distributed._shard.sharding_plan.api" -> "abc" [];
	"torch.distributed._shard.sharding_plan.api" -> "dataclasses" [];
	"torch.distributed._shard.sharding_plan.api" -> "typing" [];
	"torch.distributed._shard.sharder" -> "abc" [];
	"torch.distributed.checkpoint._nested_dict" -> "typing" [];
	"torch.distributed.checkpoint._traverse" -> "typing" [];
	"torch.distributed.checkpoint._traverse" -> "torch" [];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec" -> "dataclasses" [];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec" -> "typing" [];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec" -> "torch" [];
	"torch.distributed._shard.sharded_tensor.utils" -> "copy" [];
	"torch.distributed._shard.sharded_tensor.utils" -> "typing" [];
	"torch.distributed._shard.sharded_tensor.utils" -> "torch" [];
	"torch.distributed._shard._utils" -> "typing" [];
	"torch.distributed._shard._utils" -> "torch" [];
	"torch.distributed._shard.sharded_tensor.metadata" -> "dataclasses" [];
	"torch.distributed._shard.sharded_tensor.metadata" -> "enum" [];
	"torch.distributed._shard.sharded_tensor.metadata" -> "typing" [];
	"torch.distributed._shard.sharded_tensor.metadata" -> "torch" [];
	"torch.distributed._shard.sharded_tensor.api" -> "__future__" [];
	"torch.distributed._shard.sharded_tensor.api" -> "copy" [];
	"torch.distributed._shard.sharded_tensor.api" -> "operator" [];
	"torch.distributed._shard.sharded_tensor.api" -> "threading" [];
	"torch.distributed._shard.sharded_tensor.api" -> "warnings" [];
	"torch.distributed._shard.sharded_tensor.api" -> "weakref" [];
	"torch.distributed._shard.sharded_tensor.api" -> "dataclasses" [];
	"torch.distributed._shard.sharded_tensor.api" -> "functools" [];
	"torch.distributed._shard.sharded_tensor.api" -> "typing" [];
	"torch.distributed._shard.sharded_tensor.api" -> "typing_extensions" [];
	"torch.distributed._shard.sharded_tensor.api" -> "torch" [];
	"torch.distributed._shard.sharded_tensor.reshard" -> "copy" [];
	"torch.distributed._shard.sharded_tensor.reshard" -> "typing" [];
	"torch.distributed._shard.sharded_tensor.reshard" -> "torch" [];
	"torch.distributed._shard.sharded_tensor.reshard" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed.nn.functional" -> "torch" [];
	"torch.distributed.nn" -> "torch" [];
	"torch.distributed.nn.api.remote_module" -> "collections" [];
	"torch.distributed.nn.api.remote_module" -> "io" [];
	"torch.distributed.nn.api.remote_module" -> "sys" [];
	"torch.distributed.nn.api.remote_module" -> "types" [];
	"torch.distributed.nn.api.remote_module" -> "typing" [];
	"torch.distributed.nn.api.remote_module" -> "torch" [];
	"torch.distributed.nn.jit.instantiator" -> "importlib" [];
	"torch.distributed.nn.jit.instantiator" -> "logging" [];
	"torch.distributed.nn.jit.instantiator" -> "os" [];
	"torch.distributed.nn.jit.instantiator" -> "sys" [];
	"torch.distributed.nn.jit.instantiator" -> "tempfile" [];
	"torch.distributed.nn.jit.instantiator" -> "typing" [];
	"torch.distributed.nn.jit.instantiator" -> "torch" [];
	"torch.distributed.checkpoint.filesystem" -> "collections" [];
	"torch.distributed.checkpoint.filesystem" -> "dataclasses" [];
	"torch.distributed.checkpoint.filesystem" -> "io" [];
	"torch.distributed.checkpoint.filesystem" -> "operator" [];
	"torch.distributed.checkpoint.filesystem" -> "os" [];
	"torch.distributed.checkpoint.filesystem" -> "pickle" [];
	"torch.distributed.checkpoint.filesystem" -> "queue" [];
	"torch.distributed.checkpoint.filesystem" -> "threading" [];
	"torch.distributed.checkpoint.filesystem" -> "uuid" [];
	"torch.distributed.checkpoint.filesystem" -> "warnings" [];
	"torch.distributed.checkpoint.filesystem" -> "abc" [];
	"torch.distributed.checkpoint.filesystem" -> "contextlib" [];
	"torch.distributed.checkpoint.filesystem" -> "pathlib" [];
	"torch.distributed.checkpoint.filesystem" -> "typing" [];
	"torch.distributed.checkpoint.filesystem" -> "torch" [];
	"torch.distributed.checkpoint.default_planner" -> "dataclasses" [];
	"torch.distributed.checkpoint.default_planner" -> "io" [];
	"torch.distributed.checkpoint.default_planner" -> "logging" [];
	"torch.distributed.checkpoint.default_planner" -> "operator" [];
	"torch.distributed.checkpoint.default_planner" -> "collections" [];
	"torch.distributed.checkpoint.default_planner" -> "functools" [];
	"torch.distributed.checkpoint.default_planner" -> "typing" [];
	"torch.distributed.checkpoint.default_planner" -> "torch" [];
	"torch.distributed.checkpoint._sharded_tensor_utils" -> "copy" [];
	"torch.distributed.checkpoint._sharded_tensor_utils" -> "typing" [];
	"torch.distributed.checkpoint._dedup_save_plans" -> "dataclasses" [];
	"torch.distributed.checkpoint._dedup_save_plans" -> "collections" [];
	"torch.distributed.checkpoint._dedup_save_plans" -> "typing" [];
	"torch.distributed.checkpoint._version" -> "typing" [];
	"torch.distributed.checkpoint.api" -> "traceback" [];
	"torch.distributed.checkpoint.api" -> "typing" [];
	"torch.distributed.checkpoint.resharding" -> "typing" [];
	"torch.distributed.checkpoint.planner" -> "abc" [];
	"torch.distributed.checkpoint.planner" -> "io" [];
	"torch.distributed.checkpoint.planner" -> "operator" [];
	"torch.distributed.checkpoint.planner" -> "dataclasses" [];
	"torch.distributed.checkpoint.planner" -> "enum" [];
	"torch.distributed.checkpoint.planner" -> "functools" [];
	"torch.distributed.checkpoint.planner" -> "typing" [];
	"torch.distributed.checkpoint.planner" -> "torch" [];
	"torch.distributed.checkpoint.metadata" -> "os" [];
	"torch.distributed.checkpoint.metadata" -> "dataclasses" [];
	"torch.distributed.checkpoint.metadata" -> "enum" [];
	"torch.distributed.checkpoint.metadata" -> "typing" [];
	"torch.distributed.checkpoint.metadata" -> "torch" [];
	"torch.distributed._shard.sharded_tensor" -> "functools" [];
	"torch.distributed._shard.sharded_tensor" -> "typing" [];
	"torch.distributed._shard.sharded_tensor" -> "torch" [];
	"torch.distributed._shard.sharded_tensor._ops.init" -> "torch" [];
	"torch.distributed._shard.sharded_tensor._ops.binary_cmp" -> "torch" [];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag" -> "typing" [];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag" -> "torch" [];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops._common" -> "torch" [];
	"torch.distributed._shard.sharded_tensor._ops._common" -> "functools" [];
	"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding" -> "torch" [];
	"torch.distributed._shard.sharded_tensor._ops.tensor_ops" -> "copy" [];
	"torch.distributed._shard.sharded_tensor._ops.tensor_ops" -> "torch" [];
	"torch.distributed._shard.sharded_tensor._ops.misc_ops" -> "torch" [];
	"torch.distributed._shard.metadata" -> "dataclasses" [];
	"torch.distributed._shard.metadata" -> "functools" [];
	"torch.distributed._shard.metadata" -> "typing" [];
	"torch.distributed.tensor._utils" -> "typing" [];
	"torch.distributed.tensor._utils" -> "torch" [];
	"torch.distributed.tensor._redistribute" -> "logging" [];
	"torch.distributed.tensor._redistribute" -> "functools" [];
	"torch.distributed.tensor._redistribute" -> "typing" [];
	"torch.distributed.tensor._redistribute" -> "torch" [];
	"torch.distributed.tensor._random" -> "contextlib" [];
	"torch.distributed.tensor._random" -> "warnings" [];
	"torch.distributed.tensor._random" -> "typing" [];
	"torch.distributed.tensor._random" -> "torch" [];
	"torch.distributed.tensor._dispatch" -> "contextlib" [];
	"torch.distributed.tensor._dispatch" -> "functools" [];
	"torch.distributed.tensor._dispatch" -> "logging" [];
	"torch.distributed.tensor._dispatch" -> "operator" [];
	"torch.distributed.tensor._dispatch" -> "warnings" [];
	"torch.distributed.tensor._dispatch" -> "typing" [];
	"torch.distributed.tensor._dispatch" -> "torch" [];
	"torch.distributed.tensor._tp_conv" -> "typing" [];
	"torch.distributed.tensor._tp_conv" -> "torch" [];
	"torch.distributed.tensor._sharding_prop" -> "threading" [];
	"torch.distributed.tensor._sharding_prop" -> "functools" [];
	"torch.distributed.tensor._sharding_prop" -> "itertools" [];
	"torch.distributed.tensor._sharding_prop" -> "typing" [];
	"torch.distributed.tensor._sharding_prop" -> "torch" [];
	"torch.distributed.tensor._ops._view_ops" -> "dataclasses" [];
	"torch.distributed.tensor._ops._view_ops" -> "typing" [];
	"torch.distributed.tensor._ops._view_ops" -> "torch" [];
	"torch.distributed.tensor._ops._tensor_ops" -> "typing" [];
	"torch.distributed.tensor._ops._tensor_ops" -> "torch" [];
	"torch.distributed.tensor._ops._common_rules" -> "typing" [];
	"torch.distributed.tensor._ops._common_rules" -> "torch" [];
	"torch.distributed.tensor._ops._random_ops" -> "torch" [];
	"torch.distributed.tensor._ops._pointwise_ops" -> "typing" [];
	"torch.distributed.tensor._ops._pointwise_ops" -> "torch" [];
	"torch.distributed.tensor._ops._matrix_ops" -> "typing" [];
	"torch.distributed.tensor._ops._matrix_ops" -> "torch" [];
	"torch.distributed.tensor._ops._einsum_strategy" -> "itertools" [];
	"torch.distributed.tensor._ops._einsum_strategy" -> "dataclasses" [];
	"torch.distributed.tensor._ops._einsum_strategy" -> "typing" [];
	"torch.distributed.tensor._ops._experimental_ops" -> "torch" [];
	"torch.distributed.tensor._ops._conv_ops" -> "typing" [];
	"torch.distributed.tensor._ops._conv_ops" -> "torch" [];
	"torch.distributed._composable.fsdp._fsdp_param_group" -> "contextlib" [];
	"torch.distributed._composable.fsdp._fsdp_param_group" -> "logging" [];
	"torch.distributed._composable.fsdp._fsdp_param_group" -> "typing" [];
	"torch.distributed._composable.fsdp._fsdp_param_group" -> "torch" [];
	"torch.distributed._composable.fsdp._fsdp_param" -> "itertools" [];
	"torch.distributed._composable.fsdp._fsdp_param" -> "dataclasses" [];
	"torch.distributed._composable.fsdp._fsdp_param" -> "enum" [];
	"torch.distributed._composable.fsdp._fsdp_param" -> "typing" [];
	"torch.distributed._composable.fsdp._fsdp_param" -> "torch" [];
	"torch.distributed._composable.fsdp._fsdp_common" -> "math" [];
	"torch.distributed._composable.fsdp._fsdp_common" -> "traceback" [];
	"torch.distributed._composable.fsdp._fsdp_common" -> "dataclasses" [];
	"torch.distributed._composable.fsdp._fsdp_common" -> "enum" [];
	"torch.distributed._composable.fsdp._fsdp_common" -> "typing" [];
	"torch.distributed._composable.fsdp._fsdp_common" -> "torch" [];
	"torch.distributed._composable.fsdp._fsdp_collectives" -> "typing" [];
	"torch.distributed._composable.fsdp._fsdp_collectives" -> "torch" [];
	"torch.distributed._composable.fsdp._fsdp_api" -> "dataclasses" [];
	"torch.distributed._composable.fsdp._fsdp_api" -> "typing" [];
	"torch.distributed._composable.fsdp._fsdp_api" -> "torch" [];
	"torch.distributed._composable.fsdp.fully_shard" -> "functools" [];
	"torch.distributed._composable.fsdp.fully_shard" -> "typing" [];
	"torch.distributed._composable.fsdp.fully_shard" -> "torch" [];
	"torch.distributed._composable.fsdp._fsdp_state" -> "functools" [];
	"torch.distributed._composable.fsdp._fsdp_state" -> "logging" [];
	"torch.distributed._composable.fsdp._fsdp_state" -> "typing" [];
	"torch.distributed._composable.fsdp._fsdp_state" -> "torch" [];
	"torch.distributed._composable.fsdp._fsdp_init" -> "itertools" [];
	"torch.distributed._composable.fsdp._fsdp_init" -> "typing" [];
	"torch.distributed._composable.fsdp._fsdp_init" -> "torch" [];
	"torch._dynamo.device_interface" -> "inspect" [];
	"torch._dynamo.device_interface" -> "typing" [];
	"torch._dynamo.device_interface" -> "torch" [];
	"torch._dynamo.create_parameter_op" -> "threading" [];
	"torch._dynamo.create_parameter_op" -> "contextlib" [];
	"torch._dynamo.create_parameter_op" -> "torch" [];
	"torch._dynamo.codegen" -> "collections" [];
	"torch._dynamo.codegen" -> "dataclasses" [];
	"torch._dynamo.codegen" -> "re" [];
	"torch._dynamo.codegen" -> "sys" [];
	"torch._dynamo.codegen" -> "types" [];
	"torch._dynamo.codegen" -> "typing" [];
	"torch._dynamo.side_effects" -> "functools" [];
	"torch._dynamo.side_effects" -> "inspect" [];
	"torch._dynamo.side_effects" -> "warnings" [];
	"torch._dynamo.side_effects" -> "typing" [];
	"torch._dynamo.polyfills" -> "typing" [];
	"torch._dynamo.polyfills" -> "torch" [];
	"torch._dynamo.polyfills" -> "itertools" [];
	"torch._dynamo.polyfills" -> "math" [];
	"torch._dynamo.polyfills.loader" -> "importlib" [];
	"torch._dynamo.polyfills.loader" -> "typing" [];
	"torch._dynamo.polyfills.loader" -> "types" [];
	"torch._dynamo.polyfills.os" -> "__future__" [];
	"torch._dynamo.polyfills.os" -> "os" [];
	"torch._dynamo.polyfills.os" -> "typing" [];
	"torch._dynamo.decorators" -> "functools" [];
	"torch._dynamo.decorators" -> "inspect" [];
	"torch._dynamo.decorators" -> "dataclasses" [];
	"torch._dynamo.decorators" -> "typing" [];
	"torch._dynamo.decorators" -> "torch" [];
	"torch._dynamo.decorators" -> "types" [];
	"torch._dynamo.decorators" -> "'torch._C._dynamo'" [];
	"torch._dynamo.decorators" -> "einops" [];
	"torch._dynamo.decorators" -> "'einops._torch_specific'" [];
	"torch._dynamo.comptime" -> "builtins" [];
	"torch._dynamo.comptime" -> "dis" [];
	"torch._dynamo.comptime" -> "time" [];
	"torch._dynamo.comptime" -> "traceback" [];
	"torch._dynamo.comptime" -> "typing" [];
	"torch._dynamo.comptime" -> "torch" [];
	"torch._dynamo.polyfills.itertools" -> "__future__" [];
	"torch._dynamo.polyfills.itertools" -> "itertools" [];
	"torch._dynamo.polyfills.itertools" -> "typing" [];
	"torch._dynamo.polyfills.builtins" -> "__future__" [];
	"torch._dynamo.polyfills.builtins" -> "builtins" [];
	"torch._dynamo.polyfills.builtins" -> "typing" [];
	"torch._streambase" -> "abc" [];
	"torch.onnx.operators" -> "torch" [];
	"torch._dynamo.variables.sdpa" -> "inspect" [];
	"torch._dynamo.variables.sdpa" -> "typing" [];
	"torch._dynamo.variables.optimizer" -> "weakref" [];
	"torch._dynamo.variables.optimizer" -> "typing" [];
	"torch._dynamo.variables.optimizer" -> "torch" [];
	"torch._dynamo.variables.nn_module" -> "functools" [];
	"torch._dynamo.variables.nn_module" -> "inspect" [];
	"torch._dynamo.variables.nn_module" -> "itertools" [];
	"torch._dynamo.variables.nn_module" -> "types" [];
	"torch._dynamo.variables.nn_module" -> "contextlib" [];
	"torch._dynamo.variables.nn_module" -> "typing" [];
	"torch._dynamo.variables.misc" -> "collections" [];
	"torch._dynamo.variables.misc" -> "dataclasses" [];
	"torch._dynamo.variables.misc" -> "functools" [];
	"torch._dynamo.variables.misc" -> "inspect" [];
	"torch._dynamo.variables.misc" -> "itertools" [];
	"torch._dynamo.variables.misc" -> "random" [];
	"torch._dynamo.variables.misc" -> "re" [];
	"torch._dynamo.variables.misc" -> "sys" [];
	"torch._dynamo.variables.misc" -> "types" [];
	"torch._dynamo.variables.misc" -> "typing" [];
	"torch._dynamo.variables.misc" -> "numpy" [];
	"torch._numpy" -> "math" [];
	"torch._numpy._ndarray" -> "__future__" [];
	"torch._numpy._ndarray" -> "builtins" [];
	"torch._numpy._ndarray" -> "math" [];
	"torch._numpy._ndarray" -> "operator" [];
	"torch._numpy._ndarray" -> "typing" [];
	"torch._numpy._ndarray" -> "torch" [];
	"torch._numpy._normalizations" -> "__future__" [];
	"torch._numpy._normalizations" -> "functools" [];
	"torch._numpy._normalizations" -> "inspect" [];
	"torch._numpy._normalizations" -> "operator" [];
	"torch._numpy._normalizations" -> "typing" [];
	"torch._numpy._normalizations" -> "torch" [];
	"torch._numpy._getlimits" -> "torch" [];
	"torch._numpy.random" -> "__future__" [];
	"torch._numpy.random" -> "functools" [];
	"torch._numpy.random" -> "math" [];
	"torch._numpy.random" -> "typing" [];
	"torch._numpy.random" -> "torch" [];
	"torch._numpy.random" -> "numpy" [];
	"torch._numpy.linalg" -> "__future__" [];
	"torch._numpy.linalg" -> "functools" [];
	"torch._numpy.linalg" -> "math" [];
	"torch._numpy.linalg" -> "typing" [];
	"torch._numpy.linalg" -> "torch" [];
	"torch._numpy.fft" -> "__future__" [];
	"torch._numpy.fft" -> "functools" [];
	"torch._numpy.fft" -> "torch" [];
	"torch._numpy._ufuncs" -> "__future__" [];
	"torch._numpy._ufuncs" -> "typing" [];
	"torch._numpy._ufuncs" -> "torch" [];
	"torch._numpy._unary_ufuncs_impl" -> "torch" [];
	"torch._numpy._binary_ufuncs_impl" -> "torch" [];
	"torch._numpy._funcs" -> "inspect" [];
	"torch._numpy._funcs" -> "itertools" [];
	"torch._numpy._reductions_impl" -> "__future__" [];
	"torch._numpy._reductions_impl" -> "functools" [];
	"torch._numpy._reductions_impl" -> "typing" [];
	"torch._numpy._reductions_impl" -> "torch" [];
	"torch._numpy._funcs_impl" -> "__future__" [];
	"torch._numpy._funcs_impl" -> "builtins" [];
	"torch._numpy._funcs_impl" -> "itertools" [];
	"torch._numpy._funcs_impl" -> "operator" [];
	"torch._numpy._funcs_impl" -> "typing" [];
	"torch._numpy._funcs_impl" -> "torch" [];
	"torch._numpy._util" -> "operator" [];
	"torch._numpy._util" -> "torch" [];
	"torch._numpy._dtypes" -> "builtins" [];
	"torch._numpy._dtypes" -> "torch" [];
	"torch._numpy._dtypes_impl" -> "collections" [];
	"torch._numpy._dtypes_impl" -> "torch" [];
	"torch._numpy._casting_dicts" -> "torch" [];
	"torch._dynamo.variables.iter" -> "itertools" [];
	"torch._dynamo.variables.iter" -> "operator" [];
	"torch._dynamo.variables.iter" -> "sys" [];
	"torch._dynamo.variables.iter" -> "typing" [];
	"torch._dynamo.variables.higher_order_ops" -> "contextlib" [];
	"torch._dynamo.variables.higher_order_ops" -> "functools" [];
	"torch._dynamo.variables.higher_order_ops" -> "inspect" [];
	"torch._dynamo.variables.higher_order_ops" -> "itertools" [];
	"torch._dynamo.variables.higher_order_ops" -> "logging" [];
	"torch._dynamo.variables.higher_order_ops" -> "types" [];
	"torch._dynamo.variables.higher_order_ops" -> "typing" [];
	"torch._higher_order_ops.flex_attention" -> "math" [];
	"torch._higher_order_ops.flex_attention" -> "typing" [];
	"torch._higher_order_ops.flex_attention" -> "torch" [];
	"torch.nn.attention.flex_attention" -> "functools" [];
	"torch.nn.attention.flex_attention" -> "inspect" [];
	"torch.nn.attention.flex_attention" -> "itertools" [];
	"torch.nn.attention.flex_attention" -> "math" [];
	"torch.nn.attention.flex_attention" -> "operator" [];
	"torch.nn.attention.flex_attention" -> "contextlib" [];
	"torch.nn.attention.flex_attention" -> "enum" [];
	"torch.nn.attention.flex_attention" -> "typing" [];
	"torch.nn.attention.flex_attention" -> "torch" [];
	"torch.nn.attention._utils" -> "math" [];
	"torch.nn.attention._utils" -> "typing" [];
	"torch.nn.attention._utils" -> "torch" [];
	"torch._dynamo.variables.functions" -> "collections" [];
	"torch._dynamo.variables.functions" -> "functools" [];
	"torch._dynamo.variables.functions" -> "inspect" [];
	"torch._dynamo.variables.functions" -> "itertools" [];
	"torch._dynamo.variables.functions" -> "types" [];
	"torch._dynamo.variables.functions" -> "typing" [];
	"torch._dynamo.variables.functions" -> "torch" [];
	"torch._dynamo.variables.distributed" -> "functools" [];
	"torch._dynamo.variables.distributed" -> "inspect" [];
	"torch._dynamo.variables.distributed" -> "typing" [];
	"torch._dynamo.variables.distributed" -> "torch" [];
	"torch._dynamo.variables.distributed" -> "'torch._C._distributed_c10d'" [];
	"torch._dynamo._trace_wrapped_higher_order_op" -> "torch" [];
	"torch._dynamo.variables.builtin" -> "contextlib" [];
	"torch._dynamo.variables.builtin" -> "functools" [];
	"torch._dynamo.variables.builtin" -> "inspect" [];
	"torch._dynamo.variables.builtin" -> "itertools" [];
	"torch._dynamo.variables.builtin" -> "logging" [];
	"torch._dynamo.variables.builtin" -> "math" [];
	"torch._dynamo.variables.builtin" -> "operator" [];
	"torch._dynamo.variables.builtin" -> "types" [];
	"torch._dynamo.variables.builtin" -> "collections" [];
	"torch._dynamo.variables.builtin" -> "typing" [];
	"torch._dynamo.variables.builtin" -> "torch" [];
	"torch._dynamo.variables.builtin" -> "numpy" [];
	"torch._dynamo.variables.lazy" -> "collections" [];
	"torch._dynamo.variables.lazy" -> "functools" [];
	"torch._dynamo.variables.lazy" -> "typing" [];
	"torch._dynamo.variables.dicts" -> "collections" [];
	"torch._dynamo.variables.dicts" -> "dataclasses" [];
	"torch._dynamo.variables.dicts" -> "functools" [];
	"torch._dynamo.variables.dicts" -> "inspect" [];
	"torch._dynamo.variables.dicts" -> "sys" [];
	"torch._dynamo.variables.dicts" -> "typing" [];
	"torch._dynamo.variables.dicts" -> "transformers" [];
	"torch._dynamo.variables.user_defined" -> "collections" [];
	"torch._dynamo.variables.user_defined" -> "contextlib" [];
	"torch._dynamo.variables.user_defined" -> "dataclasses" [];
	"torch._dynamo.variables.user_defined" -> "enum" [];
	"torch._dynamo.variables.user_defined" -> "functools" [];
	"torch._dynamo.variables.user_defined" -> "inspect" [];
	"torch._dynamo.variables.user_defined" -> "itertools" [];
	"torch._dynamo.variables.user_defined" -> "random" [];
	"torch._dynamo.variables.user_defined" -> "sys" [];
	"torch._dynamo.variables.user_defined" -> "types" [];
	"torch._dynamo.variables.user_defined" -> "warnings" [];
	"torch._dynamo.variables.user_defined" -> "typing" [];
	"torch._dynamo.variables.user_defined" -> "numpy" [];
	"torch._dynamo.variables.user_defined" -> "_pytest" [];
	"torch._dynamo.variables.user_defined" -> "'_pytest.recwarn'" [];
	"torch._dynamo.variables.user_defined" -> "_collections" [];
	"torch._dynamo.variables.user_defined" -> "torchrec" [];
	"torch.testing._internal.jit_utils" -> "torch" [];
	"torch.testing._internal.jit_utils" -> "zipfile" [];
	"torch.testing._internal.jit_utils" -> "functools" [];
	"torch.testing._internal.jit_utils" -> "contextlib" [];
	"torch.testing._internal.jit_utils" -> "io" [];
	"torch.testing._internal.jit_utils" -> "collections" [];
	"torch.testing._internal.jit_utils" -> "inspect" [];
	"torch.testing._internal.jit_utils" -> "math" [];
	"torch.testing._internal.jit_utils" -> "os" [];
	"torch.testing._internal.jit_utils" -> "pickle" [];
	"torch.testing._internal.jit_utils" -> "sys" [];
	"torch.testing._internal.jit_utils" -> "tempfile" [];
	"torch.testing._internal.jit_utils" -> "textwrap" [];
	"torch.testing._internal.jit_utils" -> "typing" [];
	"torch.testing._internal.common_jit" -> "torch" [];
	"torch.testing._internal.common_jit" -> "itertools" [];
	"torch.testing._internal.common_jit" -> "typing" [];
	"torch.testing._internal.common_jit" -> "io" [];
	"torch.jit.quantized" -> "torch" [];
	"torch.jit._logging" -> "torch" [];
	"torch._dynamo.variables.tensor" -> "functools" [];
	"torch._dynamo.variables.tensor" -> "inspect" [];
	"torch._dynamo.variables.tensor" -> "logging" [];
	"torch._dynamo.variables.tensor" -> "operator" [];
	"torch._dynamo.variables.tensor" -> "textwrap" [];
	"torch._dynamo.variables.tensor" -> "traceback" [];
	"torch._dynamo.variables.tensor" -> "types" [];
	"torch._dynamo.variables.tensor" -> "unittest" [];
	"torch._dynamo.variables.tensor" -> "typing" [];
	"torch._dynamo.variables.tensor" -> "sympy" [];
	"torch._dynamo.variables.tensor" -> "numpy" [];
	"torch.random" -> "contextlib" [];
	"torch.random" -> "warnings" [];
	"torch.random" -> "typing" [];
	"torch.xpu" -> "threading" [];
	"torch.xpu" -> "traceback" [];
	"torch.xpu" -> "functools" [];
	"torch.xpu" -> "typing" [];
	"torch.xpu.random" -> "typing" [];
	"torch.xpu.random" -> "torch" [];
	"torch.xpu.memory" -> "collections" [];
	"torch.xpu.memory" -> "typing" [];
	"torch.xpu.memory" -> "torch" [];
	"torch.xpu.streams" -> "ctypes" [];
	"torch.xpu.streams" -> "torch" [];
	"torch.xpu._utils" -> "typing" [];
	"torch.xpu._utils" -> "torch" [];
	"torch.mps" -> "typing" [];
	"torch.mps.event" -> "torch" [];
	"torch.mps.profiler" -> "contextlib" [];
	"torch.mps.profiler" -> "torch" [];
	"torch._dynamo.variables.lists" -> "collections" [];
	"torch._dynamo.variables.lists" -> "functools" [];
	"torch._dynamo.variables.lists" -> "inspect" [];
	"torch._dynamo.variables.lists" -> "operator" [];
	"torch._dynamo.variables.lists" -> "types" [];
	"torch._dynamo.variables.lists" -> "typing" [];
	"torch._dynamo.variables.lists" -> "torch" [];
	"torch._dynamo.variables.ctx_manager" -> "dataclasses" [];
	"torch._dynamo.variables.ctx_manager" -> "inspect" [];
	"torch._dynamo.variables.ctx_manager" -> "sys" [];
	"torch._dynamo.variables.ctx_manager" -> "warnings" [];
	"torch._dynamo.variables.ctx_manager" -> "typing" [];
	"torch._dynamo.variables.constant" -> "operator" [];
	"torch._dynamo.variables.constant" -> "typing" [];
	"torch._dynamo.variables.constant" -> "torch" [];
	"torch._dynamo.variables.base" -> "collections" [];
	"torch._dynamo.variables.base" -> "enum" [];
	"torch._dynamo.variables.base" -> "typing" [];
	"torch._dynamo.current_scope_id" -> "contextlib" [];
	"torch._dynamo.current_scope_id" -> "threading" [];
	"torch.utils._device" -> "typing" [];
	"torch.utils._device" -> "torch" [];
	"torch.utils._device" -> "functools" [];
	"torch.utils._contextlib" -> "functools" [];
	"torch.utils._contextlib" -> "inspect" [];
	"torch.utils._contextlib" -> "warnings" [];
	"torch.utils._contextlib" -> "sys" [];
	"torch.utils._contextlib" -> "typing" [];
	"torch._functorch.partitioners" -> "copy" [];
	"torch._functorch.partitioners" -> "functools" [];
	"torch._functorch.partitioners" -> "heapq" [];
	"torch._functorch.partitioners" -> "itertools" [];
	"torch._functorch.partitioners" -> "logging" [];
	"torch._functorch.partitioners" -> "math" [];
	"torch._functorch.partitioners" -> "operator" [];
	"torch._functorch.partitioners" -> "os" [];
	"torch._functorch.partitioners" -> "collections" [];
	"torch._functorch.partitioners" -> "dataclasses" [];
	"torch._functorch.partitioners" -> "typing" [];
	"torch._functorch.partitioners" -> "torch" [];
	"torch._functorch.partitioners" -> "sympy" [];
	"torch._functorch.partitioners" -> "networkx" [];
	"torch._functorch.partitioners" -> "pydot" [];
	"torch._functorch.partitioners" -> "numpy" [];
	"torch._functorch.partitioners" -> "'scipy.optimize'" [];
	"torch._functorch.partitioners" -> "'matplotlib.pyplot'" [];
	"networkx.drawing.nx_pydot" -> "locale" [];
	"networkx.drawing.nx_pydot" -> "networkx" [];
	"networkx.drawing.nx_pydot" -> "pydot" [];
	"networkx.drawing.nx_agraph" -> "os" [];
	"networkx.drawing.nx_agraph" -> "tempfile" [];
	"networkx.drawing.nx_agraph" -> "networkx" [];
	"networkx.drawing.nx_agraph" -> "pygraphviz" [];
	"networkx.drawing.nx_agraph" -> "PIL" [];
	"networkx.drawing.nx_pylab" -> "collections" [];
	"networkx.drawing.nx_pylab" -> "itertools" [];
	"networkx.drawing.nx_pylab" -> "numbers" [];
	"networkx.drawing.nx_pylab" -> "networkx" [];
	"networkx.drawing.nx_pylab" -> "'matplotlib.pyplot'" [];
	"networkx.drawing.nx_pylab" -> "inspect" [];
	"networkx.drawing.nx_pylab" -> "matplotlib" [];
	"networkx.drawing.nx_pylab" -> "'matplotlib.collections'" [];
	"networkx.drawing.nx_pylab" -> "numpy" [];
	"networkx.drawing.nx_pylab" -> "'matplotlib.path'" [];
	"networkx.drawing.nx_pylab" -> "'matplotlib.patches'" [];
	"networkx.drawing.nx_pylab" -> "warnings" [];
	"networkx.drawing.nx_pylab" -> "'matplotlib.colors'" [];
	"networkx.drawing.nx_pylab" -> "'matplotlib.cm'" [];
	"networkx.drawing.nx_latex" -> "numbers" [];
	"networkx.drawing.nx_latex" -> "os" [];
	"networkx.drawing.nx_latex" -> "networkx" [];
	"networkx.drawing.layout" -> "networkx" [];
	"networkx.drawing.layout" -> "numpy" [];
	"networkx.drawing.layout" -> "scipy" [];
	"networkx.drawing.layout" -> "warnings" [];
	"networkx.linalg.bethehessianmatrix" -> "networkx" [];
	"networkx.linalg.bethehessianmatrix" -> "scipy" [];
	"networkx.linalg.modularitymatrix" -> "networkx" [];
	"networkx.linalg.modularitymatrix" -> "numpy" [];
	"networkx.linalg.algebraicconnectivity" -> "functools" [];
	"networkx.linalg.algebraicconnectivity" -> "networkx" [];
	"networkx.linalg.algebraicconnectivity" -> "numpy" [];
	"networkx.linalg.algebraicconnectivity" -> "scipy" [];
	"networkx.linalg.laplacianmatrix" -> "networkx" [];
	"networkx.linalg.laplacianmatrix" -> "scipy" [];
	"networkx.linalg.laplacianmatrix" -> "numpy" [];
	"networkx.linalg.laplacianmatrix" -> "warnings" [];
	"networkx.linalg.graphmatrix" -> "networkx" [];
	"networkx.linalg.graphmatrix" -> "scipy" [];
	"networkx.linalg.spectrum" -> "networkx" [];
	"networkx.linalg.spectrum" -> "scipy" [];
	"networkx.linalg.attrmatrix" -> "networkx" [];
	"networkx.linalg.attrmatrix" -> "numpy" [];
	"networkx.linalg.attrmatrix" -> "scipy" [];
	"networkx.algorithms.tree.recognition" -> "networkx" [];
	"networkx.algorithms.tree.operations" -> "functools" [];
	"networkx.algorithms.tree.operations" -> "itertools" [];
	"networkx.algorithms.tree.operations" -> "networkx" [];
	"networkx.algorithms.tree.mst" -> "dataclasses" [];
	"networkx.algorithms.tree.mst" -> "enum" [];
	"networkx.algorithms.tree.mst" -> "heapq" [];
	"networkx.algorithms.tree.mst" -> "itertools" [];
	"networkx.algorithms.tree.mst" -> "math" [];
	"networkx.algorithms.tree.mst" -> "operator" [];
	"networkx.algorithms.tree.mst" -> "queue" [];
	"networkx.algorithms.tree.mst" -> "networkx" [];
	"networkx.algorithms.tree.mst" -> "numpy" [];
	"networkx.algorithms.tree.decomposition" -> "itertools" [];
	"networkx.algorithms.tree.decomposition" -> "networkx" [];
	"networkx.algorithms.tree.coding" -> "collections" [];
	"networkx.algorithms.tree.coding" -> "itertools" [];
	"networkx.algorithms.tree.coding" -> "networkx" [];
	"networkx.algorithms.tree.branchings" -> "string" [];
	"networkx.algorithms.tree.branchings" -> "dataclasses" [];
	"networkx.algorithms.tree.branchings" -> "operator" [];
	"networkx.algorithms.tree.branchings" -> "queue" [];
	"networkx.algorithms.tree.branchings" -> "networkx" [];
	"networkx.algorithms.isomorphism.vf2pp" -> "collections" [];
	"networkx.algorithms.isomorphism.vf2pp" -> "networkx" [];
	"networkx.algorithms.tournament" -> "itertools" [];
	"networkx.algorithms.tournament" -> "networkx" [];
	"networkx.algorithms.isomorphism.tree_isomorphism" -> "networkx" [];
	"networkx.utils.decorators" -> "bz2" [];
	"networkx.utils.decorators" -> "collections" [];
	"networkx.utils.decorators" -> "gzip" [];
	"networkx.utils.decorators" -> "inspect" [];
	"networkx.utils.decorators" -> "itertools" [];
	"networkx.utils.decorators" -> "re" [];
	"networkx.utils.decorators" -> "warnings" [];
	"networkx.utils.decorators" -> "contextlib" [];
	"networkx.utils.decorators" -> "functools" [];
	"networkx.utils.decorators" -> "os.path" [];
	"networkx.utils.decorators" -> "pathlib" [];
	"networkx.utils.decorators" -> "networkx" [];
	"networkx.algorithms.isomorphism.ismags" -> "itertools" [];
	"networkx.algorithms.isomorphism.ismags" -> "collections" [];
	"networkx.algorithms.isomorphism.ismags" -> "functools" [];
	"networkx.algorithms.isomorphism.temporalisomorphvf2" -> "networkx" [];
	"networkx.algorithms.isomorphism.matchhelpers" -> "math" [];
	"networkx.algorithms.isomorphism.matchhelpers" -> "types" [];
	"networkx.algorithms.isomorphism.matchhelpers" -> "itertools" [];
	"networkx.algorithms.isomorphism.isomorphvf2" -> "sys" [];
	"networkx.algorithms.isomorphism.isomorph" -> "networkx" [];
	"networkx.algorithms.flow.utils" -> "collections" [];
	"networkx.algorithms.flow.utils" -> "networkx" [];
	"networkx.algorithms.flow.networksimplex" -> "itertools" [];
	"networkx.algorithms.flow.networksimplex" -> "math" [];
	"networkx.algorithms.flow.networksimplex" -> "networkx" [];
	"networkx.algorithms.flow.capacityscaling" -> "itertools" [];
	"networkx.algorithms.flow.capacityscaling" -> "math" [];
	"networkx.algorithms.flow.capacityscaling" -> "networkx" [];
	"networkx.algorithms.flow.shortestaugmentingpath" -> "collections" [];
	"networkx.algorithms.flow.shortestaugmentingpath" -> "networkx" [];
	"networkx.algorithms.flow.preflowpush" -> "collections" [];
	"networkx.algorithms.flow.preflowpush" -> "itertools" [];
	"networkx.algorithms.flow.preflowpush" -> "networkx" [];
	"networkx.algorithms.flow.gomory_hu" -> "networkx" [];
	"networkx.algorithms.flow.edmondskarp" -> "networkx" [];
	"networkx.algorithms.flow.dinitz_alg" -> "collections" [];
	"networkx.algorithms.flow.dinitz_alg" -> "networkx" [];
	"networkx.algorithms.flow.boykovkolmogorov" -> "collections" [];
	"networkx.algorithms.flow.boykovkolmogorov" -> "operator" [];
	"networkx.algorithms.flow.boykovkolmogorov" -> "networkx" [];
	"networkx.algorithms.flow.mincost" -> "networkx" [];
	"networkx.algorithms.flow.maxflow" -> "networkx" [];
	"networkx.algorithms.community.louvain" -> "itertools" [];
	"networkx.algorithms.community.louvain" -> "collections" [];
	"networkx.algorithms.community.louvain" -> "networkx" [];
	"networkx.algorithms.community.community_utils" -> "networkx" [];
	"networkx.algorithms.community.quality" -> "itertools" [];
	"networkx.algorithms.community.quality" -> "networkx" [];
	"networkx.algorithms.community.modularity_max" -> "collections" [];
	"networkx.algorithms.community.modularity_max" -> "networkx" [];
	"networkx.utils.mapped_queue" -> "heapq" [];
	"networkx.algorithms.community.lukes" -> "copy" [];
	"networkx.algorithms.community.lukes" -> "functools" [];
	"networkx.algorithms.community.lukes" -> "random" [];
	"networkx.algorithms.community.lukes" -> "networkx" [];
	"networkx.algorithms.community.label_propagation" -> "collections" [];
	"networkx.algorithms.community.label_propagation" -> "networkx" [];
	"networkx.algorithms.community.kernighan_lin" -> "itertools" [];
	"networkx.algorithms.community.kernighan_lin" -> "networkx" [];
	"networkx.algorithms.community.kclique" -> "collections" [];
	"networkx.algorithms.community.kclique" -> "networkx" [];
	"networkx.algorithms.community.divisive" -> "functools" [];
	"networkx.algorithms.community.divisive" -> "networkx" [];
	"networkx.algorithms.community.centrality" -> "networkx" [];
	"networkx.algorithms.community.asyn_fluid" -> "collections" [];
	"networkx.algorithms.community.asyn_fluid" -> "networkx" [];
	"networkx.algorithms.connectivity.utils" -> "networkx" [];
	"networkx.algorithms.connectivity.stoerwagner" -> "itertools" [];
	"networkx.algorithms.connectivity.stoerwagner" -> "networkx" [];
	"networkx.algorithms.connectivity.kcutsets" -> "copy" [];
	"networkx.algorithms.connectivity.kcutsets" -> "collections" [];
	"networkx.algorithms.connectivity.kcutsets" -> "itertools" [];
	"networkx.algorithms.connectivity.kcutsets" -> "operator" [];
	"networkx.algorithms.connectivity.kcutsets" -> "networkx" [];
	"networkx.algorithms.connectivity.kcomponents" -> "collections" [];
	"networkx.algorithms.connectivity.kcomponents" -> "itertools" [];
	"networkx.algorithms.connectivity.kcomponents" -> "operator" [];
	"networkx.algorithms.connectivity.kcomponents" -> "networkx" [];
	"networkx.algorithms.connectivity.disjoint_paths" -> "networkx" [];
	"networkx.algorithms.connectivity.disjoint_paths" -> "itertools" [];
	"networkx.algorithms.connectivity.edge_kcomponents" -> "itertools" [];
	"networkx.algorithms.connectivity.edge_kcomponents" -> "functools" [];
	"networkx.algorithms.connectivity.edge_kcomponents" -> "networkx" [];
	"networkx.algorithms.connectivity.edge_augmentation" -> "itertools" [];
	"networkx.algorithms.connectivity.edge_augmentation" -> "math" [];
	"networkx.algorithms.connectivity.edge_augmentation" -> "collections" [];
	"networkx.algorithms.connectivity.edge_augmentation" -> "networkx" [];
	"networkx.algorithms.connectivity.cuts" -> "itertools" [];
	"networkx.algorithms.connectivity.cuts" -> "networkx" [];
	"networkx.algorithms.connectivity.connectivity" -> "itertools" [];
	"networkx.algorithms.connectivity.connectivity" -> "operator" [];
	"networkx.algorithms.connectivity.connectivity" -> "networkx" [];
	"networkx.algorithms.node_classification" -> "networkx" [];
	"networkx.algorithms.node_classification" -> "numpy" [];
	"networkx.algorithms.node_classification" -> "scipy" [];
	"networkx.algorithms.bipartite.extendability" -> "networkx" [];
	"networkx.algorithms.bipartite.generators" -> "math" [];
	"networkx.algorithms.bipartite.generators" -> "numbers" [];
	"networkx.algorithms.bipartite.generators" -> "functools" [];
	"networkx.algorithms.bipartite.generators" -> "networkx" [];
	"networkx.algorithms.bipartite.spectral" -> "networkx" [];
	"networkx.algorithms.bipartite.spectral" -> "scipy" [];
	"networkx.algorithms.bipartite.redundancy" -> "itertools" [];
	"networkx.algorithms.bipartite.redundancy" -> "networkx" [];
	"networkx.algorithms.bipartite.projection" -> "networkx" [];
	"networkx.algorithms.bipartite.matrix" -> "itertools" [];
	"networkx.algorithms.bipartite.matrix" -> "networkx" [];
	"networkx.algorithms.bipartite.matrix" -> "scipy" [];
	"networkx.algorithms.bipartite.matching" -> "collections" [];
	"networkx.algorithms.bipartite.matching" -> "itertools" [];
	"networkx.algorithms.bipartite.matching" -> "networkx" [];
	"networkx.algorithms.bipartite.matching" -> "numpy" [];
	"networkx.algorithms.bipartite.matching" -> "scipy" [];
	"networkx.algorithms.bipartite.edgelist" -> "networkx" [];
	"networkx.algorithms.bipartite.edgelist" -> "ast" [];
	"networkx.algorithms.bipartite.covering" -> "networkx" [];
	"networkx.algorithms.bipartite.cluster" -> "itertools" [];
	"networkx.algorithms.bipartite.cluster" -> "networkx" [];
	"networkx.algorithms.bipartite.centrality" -> "networkx" [];
	"networkx.algorithms.bipartite.basic" -> "networkx" [];
	"networkx.algorithms.bipartite.basic" -> "itertools" [];
	"networkx.algorithms.approximation.maxcut" -> "networkx" [];
	"networkx.algorithms.approximation.vertex_cover" -> "networkx" [];
	"networkx.algorithms.approximation.treewidth" -> "itertools" [];
	"networkx.algorithms.approximation.treewidth" -> "sys" [];
	"networkx.algorithms.approximation.treewidth" -> "heapq" [];
	"networkx.algorithms.approximation.treewidth" -> "networkx" [];
	"networkx.algorithms.approximation.traveling_salesman" -> "math" [];
	"networkx.algorithms.approximation.traveling_salesman" -> "networkx" [];
	"networkx.algorithms.approximation.traveling_salesman" -> "numpy" [];
	"networkx.algorithms.approximation.traveling_salesman" -> "scipy" [];
	"networkx.algorithms.approximation.steinertree" -> "itertools" [];
	"networkx.algorithms.approximation.steinertree" -> "networkx" [];
	"networkx.algorithms.approximation.matching" -> "networkx" [];
	"networkx.algorithms.approximation.kcomponents" -> "itertools" [];
	"networkx.algorithms.approximation.kcomponents" -> "collections" [];
	"networkx.algorithms.approximation.kcomponents" -> "functools" [];
	"networkx.algorithms.approximation.kcomponents" -> "networkx" [];
	"networkx.algorithms.approximation.dominating_set" -> "networkx" [];
	"networkx.algorithms.approximation.distance_measures" -> "networkx" [];
	"networkx.algorithms.approximation.connectivity" -> "itertools" [];
	"networkx.algorithms.approximation.connectivity" -> "operator" [];
	"networkx.algorithms.approximation.connectivity" -> "networkx" [];
	"networkx.algorithms.approximation.clique" -> "networkx" [];
	"networkx.algorithms.approximation.ramsey" -> "networkx" [];
	"networkx.algorithms.approximation.clustering_coefficient" -> "networkx" [];
	"networkx.algorithms.wiener" -> "itertools" [];
	"networkx.algorithms.wiener" -> "networkx" [];
	"networkx.algorithms.walks" -> "networkx" [];
	"networkx.algorithms.walks" -> "numpy" [];
	"networkx.algorithms.voronoi" -> "networkx" [];
	"networkx.algorithms.vitality" -> "functools" [];
	"networkx.algorithms.vitality" -> "networkx" [];
	"networkx.algorithms.triads" -> "collections" [];
	"networkx.algorithms.triads" -> "itertools" [];
	"networkx.algorithms.triads" -> "networkx" [];
	"networkx.algorithms.triads" -> "warnings" [];
	"networkx.algorithms.traversal.edgebfs" -> "collections" [];
	"networkx.algorithms.traversal.edgebfs" -> "networkx" [];
	"networkx.algorithms.traversal.edgedfs" -> "networkx" [];
	"networkx.algorithms.traversal.depth_first_search" -> "collections" [];
	"networkx.algorithms.traversal.depth_first_search" -> "networkx" [];
	"networkx.algorithms.traversal.breadth_first_search" -> "collections" [];
	"networkx.algorithms.traversal.breadth_first_search" -> "networkx" [];
	"networkx.algorithms.traversal.beamsearch" -> "networkx" [];
	"networkx.algorithms.time_dependent" -> "networkx" [];
	"networkx.algorithms.swap" -> "math" [];
	"networkx.algorithms.swap" -> "networkx" [];
	"networkx.algorithms.summarization" -> "collections" [];
	"networkx.algorithms.summarization" -> "networkx" [];
	"networkx.algorithms.sparsifiers" -> "math" [];
	"networkx.algorithms.sparsifiers" -> "networkx" [];
	"networkx.algorithms.structuralholes" -> "networkx" [];
	"networkx.algorithms.smetric" -> "networkx" [];
	"networkx.algorithms.smallworld" -> "networkx" [];
	"networkx.algorithms.smallworld" -> "numpy" [];
	"networkx.algorithms.simple_paths" -> "heapq" [];
	"networkx.algorithms.simple_paths" -> "itertools" [];
	"networkx.algorithms.simple_paths" -> "networkx" [];
	"networkx.algorithms.shortest_paths.weighted" -> "collections" [];
	"networkx.algorithms.shortest_paths.weighted" -> "heapq" [];
	"networkx.algorithms.shortest_paths.weighted" -> "itertools" [];
	"networkx.algorithms.shortest_paths.weighted" -> "networkx" [];
	"networkx.algorithms.shortest_paths.generic" -> "warnings" [];
	"networkx.algorithms.shortest_paths.generic" -> "networkx" [];
	"networkx.algorithms.graph_hashing" -> "collections" [];
	"networkx.algorithms.graph_hashing" -> "hashlib" [];
	"networkx.algorithms.graph_hashing" -> "networkx" [];
	"networkx.algorithms.similarity" -> "math" [];
	"networkx.algorithms.similarity" -> "time" [];
	"networkx.algorithms.similarity" -> "warnings" [];
	"networkx.algorithms.similarity" -> "dataclasses" [];
	"networkx.algorithms.similarity" -> "itertools" [];
	"networkx.algorithms.similarity" -> "networkx" [];
	"networkx.algorithms.similarity" -> "numpy" [];
	"networkx.algorithms.similarity" -> "scipy" [];
	"networkx.algorithms.shortest_paths.dense" -> "networkx" [];
	"networkx.algorithms.shortest_paths.dense" -> "numpy" [];
	"networkx.algorithms.shortest_paths.dense" -> "collections" [];
	"networkx.algorithms.shortest_paths.astar" -> "heapq" [];
	"networkx.algorithms.shortest_paths.astar" -> "itertools" [];
	"networkx.algorithms.shortest_paths.astar" -> "networkx" [];
	"networkx.algorithms.shortest_paths.unweighted" -> "warnings" [];
	"networkx.algorithms.shortest_paths.unweighted" -> "networkx" [];
	"networkx.algorithms.richclub" -> "itertools" [];
	"networkx.algorithms.richclub" -> "networkx" [];
	"networkx.algorithms.regular" -> "networkx" [];
	"networkx.algorithms.reciprocity" -> "networkx" [];
	"networkx.algorithms.polynomials" -> "collections" [];
	"networkx.algorithms.polynomials" -> "networkx" [];
	"networkx.algorithms.polynomials" -> "sympy" [];
	"networkx.algorithms.planar_drawing" -> "collections" [];
	"networkx.algorithms.planar_drawing" -> "networkx" [];
	"networkx.algorithms.planarity" -> "collections" [];
	"networkx.algorithms.planarity" -> "networkx" [];
	"networkx.algorithms.operators.unary" -> "networkx" [];
	"networkx.algorithms.operators.product" -> "itertools" [];
	"networkx.algorithms.operators.product" -> "networkx" [];
	"networkx.algorithms.operators.binary" -> "networkx" [];
	"networkx.algorithms.operators.all" -> "itertools" [];
	"networkx.algorithms.operators.all" -> "networkx" [];
	"networkx.algorithms.non_randomness" -> "math" [];
	"networkx.algorithms.non_randomness" -> "networkx" [];
	"networkx.algorithms.non_randomness" -> "numpy" [];
	"networkx.algorithms.moral" -> "itertools" [];
	"networkx.algorithms.moral" -> "networkx" [];
	"networkx.algorithms.mis" -> "networkx" [];
	"networkx.algorithms.minors.contraction" -> "itertools" [];
	"networkx.algorithms.minors.contraction" -> "networkx" [];
	"networkx.algorithms.matching" -> "collections" [];
	"networkx.algorithms.matching" -> "itertools" [];
	"networkx.algorithms.matching" -> "networkx" [];
	"networkx.algorithms.isolate" -> "networkx" [];
	"networkx.algorithms.lowest_common_ancestors" -> "collections" [];
	"networkx.algorithms.lowest_common_ancestors" -> "itertools" [];
	"networkx.algorithms.lowest_common_ancestors" -> "networkx" [];
	"networkx.algorithms.link_prediction" -> "math" [];
	"networkx.algorithms.link_prediction" -> "networkx" [];
	"networkx.algorithms.link_analysis.pagerank_alg" -> "warnings" [];
	"networkx.algorithms.link_analysis.pagerank_alg" -> "networkx" [];
	"networkx.algorithms.link_analysis.pagerank_alg" -> "numpy" [];
	"networkx.algorithms.link_analysis.pagerank_alg" -> "scipy" [];
	"networkx.algorithms.link_analysis.hits_alg" -> "networkx" [];
	"networkx.algorithms.link_analysis.hits_alg" -> "numpy" [];
	"networkx.algorithms.link_analysis.hits_alg" -> "scipy" [];
	"networkx.algorithms.hybrid" -> "copy" [];
	"networkx.algorithms.hybrid" -> "networkx" [];
	"networkx.algorithms.hierarchy" -> "networkx" [];
	"networkx.algorithms.graphical" -> "heapq" [];
	"networkx.algorithms.graphical" -> "networkx" [];
	"networkx.algorithms.euler" -> "itertools" [];
	"networkx.algorithms.euler" -> "networkx" [];
	"networkx.algorithms.efficiency_measures" -> "networkx" [];
	"networkx.algorithms.dominating" -> "itertools" [];
	"networkx.algorithms.dominating" -> "networkx" [];
	"networkx.algorithms.dominance" -> "functools" [];
	"networkx.algorithms.dominance" -> "networkx" [];
	"networkx.algorithms.distance_regular" -> "networkx" [];
	"networkx.algorithms.distance_measures" -> "math" [];
	"networkx.algorithms.distance_measures" -> "networkx" [];
	"networkx.algorithms.distance_measures" -> "numpy" [];
	"networkx.algorithms.distance_measures" -> "scipy" [];
	"networkx.algorithms.dag" -> "heapq" [];
	"networkx.algorithms.dag" -> "collections" [];
	"networkx.algorithms.dag" -> "functools" [];
	"networkx.algorithms.dag" -> "itertools" [];
	"networkx.algorithms.dag" -> "math" [];
	"networkx.algorithms.dag" -> "networkx" [];
	"networkx.algorithms.dag" -> "warnings" [];
	"networkx.algorithms.d_separation" -> "collections" [];
	"networkx.algorithms.d_separation" -> "itertools" [];
	"networkx.algorithms.d_separation" -> "networkx" [];
	"networkx.algorithms.d_separation" -> "warnings" [];
	"networkx.algorithms.cuts" -> "itertools" [];
	"networkx.algorithms.cuts" -> "networkx" [];
	"networkx.algorithms.cycles" -> "collections" [];
	"networkx.algorithms.cycles" -> "itertools" [];
	"networkx.algorithms.cycles" -> "math" [];
	"networkx.algorithms.cycles" -> "networkx" [];
	"networkx.algorithms.covering" -> "functools" [];
	"networkx.algorithms.covering" -> "itertools" [];
	"networkx.algorithms.covering" -> "networkx" [];
	"networkx.algorithms.core" -> "networkx" [];
	"networkx.algorithms.core" -> "warnings" [];
	"networkx.algorithms.coloring.equitable_coloring" -> "collections" [];
	"networkx.algorithms.coloring.equitable_coloring" -> "networkx" [];
	"networkx.algorithms.coloring.greedy_coloring" -> "itertools" [];
	"networkx.algorithms.coloring.greedy_coloring" -> "collections" [];
	"networkx.algorithms.coloring.greedy_coloring" -> "networkx" [];
	"networkx.algorithms.components.semiconnected" -> "networkx" [];
	"networkx.algorithms.components.biconnected" -> "itertools" [];
	"networkx.algorithms.components.biconnected" -> "networkx" [];
	"networkx.algorithms.components.attracting" -> "networkx" [];
	"networkx.algorithms.components.weakly_connected" -> "networkx" [];
	"networkx.algorithms.components.strongly_connected" -> "networkx" [];
	"networkx.algorithms.components.connected" -> "networkx" [];
	"networkx.algorithms.communicability_alg" -> "networkx" [];
	"networkx.algorithms.communicability_alg" -> "numpy" [];
	"networkx.algorithms.communicability_alg" -> "scipy" [];
	"networkx.algorithms.clique" -> "collections" [];
	"networkx.algorithms.clique" -> "itertools" [];
	"networkx.algorithms.clique" -> "networkx" [];
	"networkx.algorithms.cluster" -> "collections" [];
	"networkx.algorithms.cluster" -> "itertools" [];
	"networkx.algorithms.cluster" -> "networkx" [];
	"networkx.algorithms.cluster" -> "numpy" [];
	"networkx.algorithms.chordal" -> "sys" [];
	"networkx.algorithms.chordal" -> "networkx" [];
	"networkx.algorithms.centrality.laplacian" -> "networkx" [];
	"networkx.algorithms.centrality.laplacian" -> "numpy" [];
	"networkx.algorithms.centrality.laplacian" -> "scipy" [];
	"networkx.algorithms.centrality.voterank_alg" -> "networkx" [];
	"networkx.algorithms.centrality.trophic" -> "networkx" [];
	"networkx.algorithms.centrality.trophic" -> "numpy" [];
	"networkx.algorithms.centrality.subgraph_alg" -> "networkx" [];
	"networkx.algorithms.centrality.subgraph_alg" -> "scipy" [];
	"networkx.algorithms.centrality.subgraph_alg" -> "numpy" [];
	"networkx.algorithms.centrality.second_order" -> "networkx" [];
	"networkx.algorithms.centrality.second_order" -> "numpy" [];
	"networkx.algorithms.centrality.reaching" -> "networkx" [];
	"networkx.algorithms.centrality.percolation" -> "networkx" [];
	"networkx.algorithms.centrality.load" -> "operator" [];
	"networkx.algorithms.centrality.load" -> "networkx" [];
	"networkx.algorithms.centrality.katz" -> "math" [];
	"networkx.algorithms.centrality.katz" -> "networkx" [];
	"networkx.algorithms.centrality.katz" -> "numpy" [];
	"networkx.algorithms.centrality.harmonic" -> "functools" [];
	"networkx.algorithms.centrality.harmonic" -> "networkx" [];
	"networkx.algorithms.centrality.group" -> "copy" [];
	"networkx.algorithms.centrality.group" -> "networkx" [];
	"networkx.algorithms.centrality.group" -> "numpy" [];
	"networkx.algorithms.centrality.group" -> "pandas" [];
	"networkx.algorithms.centrality.eigenvector" -> "math" [];
	"networkx.algorithms.centrality.eigenvector" -> "networkx" [];
	"networkx.algorithms.centrality.eigenvector" -> "numpy" [];
	"networkx.algorithms.centrality.eigenvector" -> "scipy" [];
	"networkx.algorithms.centrality.dispersion" -> "itertools" [];
	"networkx.algorithms.centrality.dispersion" -> "networkx" [];
	"networkx.algorithms.centrality.degree_alg" -> "networkx" [];
	"networkx.algorithms.centrality.current_flow_closeness" -> "networkx" [];
	"networkx.algorithms.centrality.flow_matrix" -> "networkx" [];
	"networkx.algorithms.centrality.flow_matrix" -> "numpy" [];
	"networkx.algorithms.centrality.flow_matrix" -> "scipy" [];
	"networkx.algorithms.centrality.current_flow_betweenness_subset" -> "networkx" [];
	"networkx.algorithms.centrality.current_flow_betweenness_subset" -> "numpy" [];
	"networkx.algorithms.centrality.current_flow_betweenness" -> "networkx" [];
	"networkx.algorithms.centrality.current_flow_betweenness" -> "numpy" [];
	"networkx.algorithms.centrality.closeness" -> "functools" [];
	"networkx.algorithms.centrality.closeness" -> "networkx" [];
	"networkx.algorithms.centrality.betweenness_subset" -> "networkx" [];
	"networkx.algorithms.centrality.betweenness" -> "collections" [];
	"networkx.algorithms.centrality.betweenness" -> "heapq" [];
	"networkx.algorithms.centrality.betweenness" -> "itertools" [];
	"networkx.algorithms.centrality.betweenness" -> "networkx" [];
	"networkx.algorithms.chains" -> "networkx" [];
	"networkx.algorithms.bridges" -> "itertools" [];
	"networkx.algorithms.bridges" -> "networkx" [];
	"networkx.algorithms.broadcasting" -> "networkx" [];
	"networkx.algorithms.boundary" -> "itertools" [];
	"networkx.algorithms.boundary" -> "networkx" [];
	"networkx.algorithms.asteroidal" -> "networkx" [];
	"networkx.algorithms.assortativity.pairs" -> "networkx" [];
	"networkx.algorithms.assortativity.neighbor_degree" -> "networkx" [];
	"networkx.algorithms.assortativity.mixing" -> "networkx" [];
	"networkx.algorithms.assortativity.correlation" -> "networkx" [];
	"networkx.algorithms.assortativity.correlation" -> "scipy" [];
	"networkx.algorithms.assortativity.correlation" -> "numpy" [];
	"networkx.algorithms.assortativity.connectivity" -> "collections" [];
	"networkx.algorithms.assortativity.connectivity" -> "networkx" [];
	"networkx.readwrite.text" -> "sys" [];
	"networkx.readwrite.text" -> "warnings" [];
	"networkx.readwrite.text" -> "collections" [];
	"networkx.readwrite.text" -> "networkx" [];
	"networkx.readwrite.text" -> "typing" [];
	"networkx.readwrite.text" -> "itertools" [];
	"networkx.readwrite.json_graph.cytoscape" -> "networkx" [];
	"networkx.readwrite.json_graph.tree" -> "itertools" [];
	"networkx.readwrite.json_graph.tree" -> "networkx" [];
	"networkx.readwrite.json_graph.adjacency" -> "networkx" [];
	"networkx.readwrite.json_graph.node_link" -> "warnings" [];
	"networkx.readwrite.json_graph.node_link" -> "itertools" [];
	"networkx.readwrite.json_graph.node_link" -> "networkx" [];
	"networkx.readwrite.gexf" -> "itertools" [];
	"networkx.readwrite.gexf" -> "time" [];
	"networkx.readwrite.gexf" -> "networkx" [];
	"networkx.readwrite.gexf" -> "numpy" [];
	"networkx.readwrite.graphml" -> "warnings" [];
	"networkx.readwrite.graphml" -> "collections" [];
	"networkx.readwrite.graphml" -> "networkx" [];
	"networkx.readwrite.graphml" -> "'lxml.etree'" [];
	"networkx.readwrite.graphml" -> "numpy" [];
	"networkx.readwrite.gml" -> "re" [];
	"networkx.readwrite.gml" -> "warnings" [];
	"networkx.readwrite.gml" -> "ast" [];
	"networkx.readwrite.gml" -> "collections" [];
	"networkx.readwrite.gml" -> "enum" [];
	"networkx.readwrite.gml" -> "io" [];
	"networkx.readwrite.gml" -> "typing" [];
	"networkx.readwrite.gml" -> "networkx" [];
	"networkx.readwrite.graph6" -> "itertools" [];
	"networkx.readwrite.graph6" -> "networkx" [];
	"networkx.readwrite.sparse6" -> "networkx" [];
	"networkx.readwrite.leda" -> "networkx" [];
	"networkx.readwrite.pajek" -> "warnings" [];
	"networkx.readwrite.pajek" -> "networkx" [];
	"networkx.readwrite.pajek" -> "shlex" [];
	"networkx.readwrite.edgelist" -> "networkx" [];
	"networkx.readwrite.edgelist" -> "ast" [];
	"networkx.readwrite.multiline_adjlist" -> "networkx" [];
	"networkx.readwrite.multiline_adjlist" -> "sys" [];
	"networkx.readwrite.multiline_adjlist" -> "time" [];
	"networkx.readwrite.multiline_adjlist" -> "ast" [];
	"networkx.readwrite.adjlist" -> "networkx" [];
	"networkx.readwrite.adjlist" -> "sys" [];
	"networkx.readwrite.adjlist" -> "time" [];
	"networkx.generators.triads" -> "networkx" [];
	"networkx.generators.trees" -> "warnings" [];
	"networkx.generators.trees" -> "collections" [];
	"networkx.generators.trees" -> "math" [];
	"networkx.generators.trees" -> "networkx" [];
	"networkx.generators.time_series" -> "itertools" [];
	"networkx.generators.time_series" -> "networkx" [];
	"networkx.generators.sudoku" -> "networkx" [];
	"networkx.generators.stochastic" -> "networkx" [];
	"networkx.generators.spectral_graph_forge" -> "networkx" [];
	"networkx.generators.spectral_graph_forge" -> "numpy" [];
	"networkx.generators.spectral_graph_forge" -> "scipy" [];
	"networkx.generators.social" -> "networkx" [];
	"networkx.generators.small" -> "functools" [];
	"networkx.generators.small" -> "networkx" [];
	"networkx.generators.random_graphs" -> "itertools" [];
	"networkx.generators.random_graphs" -> "math" [];
	"networkx.generators.random_graphs" -> "collections" [];
	"networkx.generators.random_graphs" -> "networkx" [];
	"networkx.generators.random_graphs" -> "scipy" [];
	"networkx.utils.misc" -> "random" [];
	"networkx.utils.misc" -> "sys" [];
	"networkx.utils.misc" -> "uuid" [];
	"networkx.utils.misc" -> "warnings" [];
	"networkx.utils.misc" -> "collections" [];
	"networkx.utils.misc" -> "itertools" [];
	"networkx.utils.misc" -> "networkx" [];
	"networkx.utils.misc" -> "numpy" [];
	"networkx.generators.random_clustered" -> "networkx" [];
	"networkx.generators.nonisomorphic_trees" -> "networkx" [];
	"networkx.generators.nonisomorphic_trees" -> "warnings" [];
	"networkx.generators.mycielski" -> "networkx" [];
	"networkx.generators.line" -> "collections" [];
	"networkx.generators.line" -> "functools" [];
	"networkx.generators.line" -> "itertools" [];
	"networkx.generators.line" -> "networkx" [];
	"networkx.generators.lattice" -> "itertools" [];
	"networkx.generators.lattice" -> "math" [];
	"networkx.generators.lattice" -> "networkx" [];
	"networkx.generators.joint_degree_seq" -> "networkx" [];
	"networkx.generators.interval_graph" -> "networkx" [];
	"networkx.generators.intersection" -> "networkx" [];
	"networkx.generators.internet_as_graphs" -> "networkx" [];
	"networkx.generators.internet_as_graphs" -> "math" [];
	"networkx.generators.harary_graph" -> "networkx" [];
	"networkx.generators.geometric" -> "math" [];
	"networkx.generators.geometric" -> "bisect" [];
	"networkx.generators.geometric" -> "itertools" [];
	"networkx.generators.geometric" -> "networkx" [];
	"networkx.generators.geometric" -> "scipy" [];
	"networkx.generators.expanders" -> "itertools" [];
	"networkx.generators.expanders" -> "networkx" [];
	"networkx.generators.expanders" -> "numpy" [];
	"networkx.generators.expanders" -> "'scipy.sparse'" [];
	"networkx.generators.ego" -> "networkx" [];
	"networkx.generators.duplication" -> "networkx" [];
	"networkx.generators.directed" -> "numbers" [];
	"networkx.generators.directed" -> "collections" [];
	"networkx.generators.directed" -> "networkx" [];
	"networkx.generators.degree_seq" -> "heapq" [];
	"networkx.generators.degree_seq" -> "math" [];
	"networkx.generators.degree_seq" -> "itertools" [];
	"networkx.generators.degree_seq" -> "operator" [];
	"networkx.generators.degree_seq" -> "networkx" [];
	"networkx.generators.community" -> "itertools" [];
	"networkx.generators.community" -> "math" [];
	"networkx.generators.community" -> "networkx" [];
	"networkx.generators.community" -> "'scipy.special'" [];
	"networkx.generators.cographs" -> "networkx" [];
	"networkx.generators.classic" -> "itertools" [];
	"networkx.generators.classic" -> "numbers" [];
	"networkx.generators.classic" -> "networkx" [];
	"networkx.generators.atlas" -> "gzip" [];
	"networkx.generators.atlas" -> "os" [];
	"networkx.generators.atlas" -> "os.path" [];
	"networkx.generators.atlas" -> "itertools" [];
	"networkx.generators.atlas" -> "networkx" [];
	"networkx.convert_matrix" -> "itertools" [];
	"networkx.convert_matrix" -> "collections" [];
	"networkx.convert_matrix" -> "pandas" [];
	"networkx.convert_matrix" -> "scipy" [];
	"networkx.convert_matrix" -> "numpy" [];
	"networkx.classes.reportviews" -> "abc" [];
	"networkx.classes.reportviews" -> "networkx" [];
	"networkx.classes.graphviews" -> "networkx" [];
	"networkx.classes.function" -> "collections" [];
	"networkx.classes.function" -> "itertools" [];
	"networkx.classes.function" -> "networkx" [];
	"networkx.classes.multidigraph" -> "copy" [];
	"networkx.classes.multidigraph" -> "functools" [];
	"networkx.classes.multidigraph" -> "networkx" [];
	"networkx.classes.multigraph" -> "copy" [];
	"networkx.classes.multigraph" -> "functools" [];
	"networkx.classes.multigraph" -> "networkx" [];
	"networkx.classes.digraph" -> "copy" [];
	"networkx.classes.digraph" -> "functools" [];
	"networkx.classes.digraph" -> "networkx" [];
	"networkx.classes.graph" -> "copy" [];
	"networkx.classes.graph" -> "functools" [];
	"networkx.classes.graph" -> "networkx" [];
	"networkx.convert" -> "warnings" [];
	"networkx.convert" -> "pandas" [];
	"networkx.convert" -> "numpy" [];
	"networkx.convert" -> "scipy" [];
	"networkx.utils.backends" -> "inspect" [];
	"networkx.utils.backends" -> "itertools" [];
	"networkx.utils.backends" -> "logging" [];
	"networkx.utils.backends" -> "os" [];
	"networkx.utils.backends" -> "warnings" [];
	"networkx.utils.backends" -> "functools" [];
	"networkx.utils.backends" -> "networkx" [];
	"networkx.utils.backends" -> "pytest" [];
	"networkx.utils.backends" -> "copy" [];
	"networkx.utils.backends" -> "io" [];
	"networkx.utils.backends" -> "random" [];
	"networkx.utils.backends" -> "numpy" [];
	"networkx.utils.backends" -> "'scipy.sparse'" [];
	"networkx.utils.configs" -> "collections" [];
	"networkx.utils.configs" -> "os" [];
	"networkx.utils.configs" -> "typing" [];
	"networkx.utils.configs" -> "warnings" [];
	"networkx.utils.configs" -> "dataclasses" [];
	"networkx.utils.heaps" -> "heapq" [];
	"networkx.utils.heaps" -> "itertools" [];
	"networkx.utils.heaps" -> "networkx" [];
	"networkx.utils.rcm" -> "collections" [];
	"networkx.utils.rcm" -> "operator" [];
	"networkx.utils.rcm" -> "networkx" [];
	"networkx.utils.random_sequence" -> "networkx" [];
	"networkx.utils.random_sequence" -> "bisect" [];
	"networkx.lazy_imports" -> "importlib" [];
	"networkx.lazy_imports" -> "inspect" [];
	"networkx.lazy_imports" -> "os" [];
	"networkx.lazy_imports" -> "sys" [];
	"networkx.lazy_imports" -> "types" [];
	"torch._functorch._aot_autograd.traced_function_transforms" -> "warnings" [];
	"torch._functorch._aot_autograd.traced_function_transforms" -> "contextlib" [];
	"torch._functorch._aot_autograd.traced_function_transforms" -> "functools" [];
	"torch._functorch._aot_autograd.traced_function_transforms" -> "typing" [];
	"torch._functorch._aot_autograd.traced_function_transforms" -> "torch" [];
	"torch._functorch._aot_autograd.subclass_utils" -> "typing" [];
	"torch._functorch._aot_autograd.subclass_utils" -> "torch" [];
	"torch._functorch._aot_autograd.schemas" -> "collections" [];
	"torch._functorch._aot_autograd.schemas" -> "dataclasses" [];
	"torch._functorch._aot_autograd.schemas" -> "functools" [];
	"torch._functorch._aot_autograd.schemas" -> "enum" [];
	"torch._functorch._aot_autograd.schemas" -> "typing" [];
	"torch._functorch._aot_autograd.schemas" -> "torch" [];
	"torch._functorch._aot_autograd.runtime_wrappers" -> "builtins" [];
	"torch._functorch._aot_autograd.runtime_wrappers" -> "collections" [];
	"torch._functorch._aot_autograd.runtime_wrappers" -> "pprint" [];
	"torch._functorch._aot_autograd.runtime_wrappers" -> "contextlib" [];
	"torch._functorch._aot_autograd.runtime_wrappers" -> "dataclasses" [];
	"torch._functorch._aot_autograd.runtime_wrappers" -> "functools" [];
	"torch._functorch._aot_autograd.runtime_wrappers" -> "typing" [];
	"torch._functorch._aot_autograd.runtime_wrappers" -> "torch" [];
	"torch._functorch._aot_autograd.logging_utils" -> "collections" [];
	"torch._functorch._aot_autograd.logging_utils" -> "contextlib" [];
	"torch._functorch._aot_autograd.logging_utils" -> "typing" [];
	"torch._functorch._aot_autograd.logging_utils" -> "torch" [];
	"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "itertools" [];
	"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "logging" [];
	"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "traceback" [];
	"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "contextlib" [];
	"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "typing" [];
	"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "torch" [];
	"torch._functorch._aot_autograd.dispatch_and_compile_graph" -> "dataclasses" [];
	"torch._functorch._aot_autograd.dispatch_and_compile_graph" -> "typing" [];
	"torch._functorch._aot_autograd.dispatch_and_compile_graph" -> "torch" [];
	"torch._functorch._aot_autograd.input_output_analysis" -> "itertools" [];
	"torch._functorch._aot_autograd.input_output_analysis" -> "typing" [];
	"torch._functorch._aot_autograd.input_output_analysis" -> "torch" [];
	"torch._functorch._aot_autograd.functional_utils" -> "__future__" [];
	"torch._functorch._aot_autograd.functional_utils" -> "typing" [];
	"torch._functorch._aot_autograd.functional_utils" -> "torch" [];
	"torch._functorch._aot_autograd.collect_metadata_analysis" -> "collections" [];
	"torch._functorch._aot_autograd.collect_metadata_analysis" -> "contextlib" [];
	"torch._functorch._aot_autograd.collect_metadata_analysis" -> "logging" [];
	"torch._functorch._aot_autograd.collect_metadata_analysis" -> "functools" [];
	"torch._functorch._aot_autograd.collect_metadata_analysis" -> "typing" [];
	"torch._functorch._aot_autograd.collect_metadata_analysis" -> "torch" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "__future__" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "json" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "logging" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "os" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "pickle" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "shutil" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "time" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "dataclasses" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "typing" [];
	"torch._functorch._aot_autograd.autograd_cache" -> "torch" [];
	"torch._subclasses.fake_utils" -> "functools" [];
	"torch._subclasses.fake_utils" -> "warnings" [];
	"torch._subclasses.fake_utils" -> "typing" [];
	"torch._subclasses.fake_utils" -> "torch" [];
	"torch._dynamo.compiled_autograd" -> "contextlib" [];
	"torch._dynamo.compiled_autograd" -> "functools" [];
	"torch._dynamo.compiled_autograd" -> "typing" [];
	"torch._dynamo.compiled_autograd" -> "torch" [];
	"torch._decomp.decompositions_for_rng" -> "functools" [];
	"torch._decomp.decompositions_for_rng" -> "collections" [];
	"torch._decomp.decompositions_for_rng" -> "typing" [];
	"torch._decomp.decompositions_for_rng" -> "torch" [];
	"torch.utils.dlpack" -> "typing" [];
	"torch.utils.dlpack" -> "torch" [];
	"torch.utils.dlpack" -> "enum" [];
	"torch._dynamo.logging" -> "itertools" [];
	"torch._dynamo.logging" -> "logging" [];
	"torch._dynamo.logging" -> "triton" [];
	"torch._functorch.compilers" -> "copy" [];
	"torch._functorch.compilers" -> "logging" [];
	"torch._functorch.compilers" -> "os" [];
	"torch._functorch.compilers" -> "pickle" [];
	"torch._functorch.compilers" -> "random" [];
	"torch._functorch.compilers" -> "contextlib" [];
	"torch._functorch.compilers" -> "functools" [];
	"torch._functorch.compilers" -> "typing" [];
	"torch._functorch.compilers" -> "sympy" [];
	"torch._functorch.compilers" -> "torch" [];
	"torch._functorch.compilers" -> "foo" [];
	"torch._functorch.config" -> "os" [];
	"torch._functorch.config" -> "sys" [];
	"torch._functorch.config" -> "typing" [];
	"torch._functorch.config" -> "'torch.utils._config_typing'" [];
	"torch._functorch.fx_minifier" -> "copy" [];
	"torch._functorch.fx_minifier" -> "math" [];
	"torch._functorch.fx_minifier" -> "os" [];
	"torch._functorch.fx_minifier" -> "sys" [];
	"torch._functorch.fx_minifier" -> "dataclasses" [];
	"torch._functorch.fx_minifier" -> "functools" [];
	"torch._functorch.fx_minifier" -> "typing" [];
	"torch._functorch.fx_minifier" -> "torch" [];
	"torch._functorch.fx_minifier" -> "'torch_xla.stablehlo'" [];
	"torch.fx.experimental.validator" -> "functools" [];
	"torch.fx.experimental.validator" -> "logging" [];
	"torch.fx.experimental.validator" -> "math" [];
	"torch.fx.experimental.validator" -> "operator" [];
	"torch.fx.experimental.validator" -> "sympy" [];
	"torch.fx.experimental.validator" -> "builtins" [];
	"torch.fx.experimental.validator" -> "dataclasses" [];
	"torch.fx.experimental.validator" -> "typing" [];
	"torch.fx.experimental.validator" -> "torch" [];
	"torch.fx.experimental.validator" -> "z3" [];
	"torch.fx.experimental.recording" -> "functools" [];
	"torch.fx.experimental.recording" -> "inspect" [];
	"torch.fx.experimental.recording" -> "itertools" [];
	"torch.fx.experimental.recording" -> "logging" [];
	"torch.fx.experimental.recording" -> "dataclasses" [];
	"torch.fx.experimental.recording" -> "typing" [];
	"torch.fx.experimental.recording" -> "torch" [];
	"torch._dynamo.output_graph" -> "collections" [];
	"torch._dynamo.output_graph" -> "contextlib" [];
	"torch._dynamo.output_graph" -> "copy" [];
	"torch._dynamo.output_graph" -> "dataclasses" [];
	"torch._dynamo.output_graph" -> "functools" [];
	"torch._dynamo.output_graph" -> "itertools" [];
	"torch._dynamo.output_graph" -> "json" [];
	"torch._dynamo.output_graph" -> "logging" [];
	"torch._dynamo.output_graph" -> "operator" [];
	"torch._dynamo.output_graph" -> "re" [];
	"torch._dynamo.output_graph" -> "sys" [];
	"torch._dynamo.output_graph" -> "traceback" [];
	"torch._dynamo.output_graph" -> "weakref" [];
	"torch._dynamo.output_graph" -> "typing" [];
	"torch._dynamo.output_graph" -> "sympy" [];
	"torch._dynamo.output_graph" -> "torch" [];
	"torch._dynamo.code_context" -> "types" [];
	"torch._dynamo.variables.builder" -> "abc" [];
	"torch._dynamo.variables.builder" -> "collections" [];
	"torch._dynamo.variables.builder" -> "contextlib" [];
	"torch._dynamo.variables.builder" -> "dataclasses" [];
	"torch._dynamo.variables.builder" -> "enum" [];
	"torch._dynamo.variables.builder" -> "functools" [];
	"torch._dynamo.variables.builder" -> "inspect" [];
	"torch._dynamo.variables.builder" -> "itertools" [];
	"torch._dynamo.variables.builder" -> "logging" [];
	"torch._dynamo.variables.builder" -> "math" [];
	"torch._dynamo.variables.builder" -> "operator" [];
	"torch._dynamo.variables.builder" -> "random" [];
	"torch._dynamo.variables.builder" -> "re" [];
	"torch._dynamo.variables.builder" -> "sys" [];
	"torch._dynamo.variables.builder" -> "types" [];
	"torch._dynamo.variables.builder" -> "warnings" [];
	"torch._dynamo.variables.builder" -> "weakref" [];
	"torch._dynamo.variables.builder" -> "typing" [];
	"torch._dynamo.variables.builder" -> "torch" [];
	"torch._dynamo.variables.builder" -> "numpy" [];
	"torch._dynamo.variables.builder" -> "'triton.runtime'" [];
	"torch._dynamo.variables.script_object" -> "functools" [];
	"torch._dynamo.variables.script_object" -> "typing" [];
	"torch._dynamo.variables.script_object" -> "torch" [];
	"torch._dynamo.types" -> "dataclasses" [];
	"torch._dynamo.types" -> "sys" [];
	"torch._dynamo.types" -> "types" [];
	"torch._dynamo.types" -> "typing" [];
	"torch._dynamo.types" -> "'torch._C._dynamo'" [];
	"torch._dynamo.repro.after_dynamo" -> "argparse" [];
	"torch._dynamo.repro.after_dynamo" -> "copy" [];
	"torch._dynamo.repro.after_dynamo" -> "functools" [];
	"torch._dynamo.repro.after_dynamo" -> "logging" [];
	"torch._dynamo.repro.after_dynamo" -> "os" [];
	"torch._dynamo.repro.after_dynamo" -> "shutil" [];
	"torch._dynamo.repro.after_dynamo" -> "sys" [];
	"torch._dynamo.repro.after_dynamo" -> "textwrap" [];
	"torch._dynamo.repro.after_dynamo" -> "importlib" [];
	"torch._dynamo.repro.after_dynamo" -> "typing" [];
	"torch._dynamo.repro.after_dynamo" -> "torch" [];
	"torch._dynamo.repro.after_dynamo" -> "difflib" [];
	"torch._dynamo.backends.registry" -> "functools" [];
	"torch._dynamo.backends.registry" -> "logging" [];
	"torch._dynamo.backends.registry" -> "sys" [];
	"torch._dynamo.backends.registry" -> "typing" [];
	"torch._dynamo.backends.registry" -> "torch" [];
	"torch._dynamo.symbolic_convert" -> "collections" [];
	"torch._dynamo.symbolic_convert" -> "contextlib" [];
	"torch._dynamo.symbolic_convert" -> "copy" [];
	"torch._dynamo.symbolic_convert" -> "dataclasses" [];
	"torch._dynamo.symbolic_convert" -> "dis" [];
	"torch._dynamo.symbolic_convert" -> "functools" [];
	"torch._dynamo.symbolic_convert" -> "importlib" [];
	"torch._dynamo.symbolic_convert" -> "inspect" [];
	"torch._dynamo.symbolic_convert" -> "itertools" [];
	"torch._dynamo.symbolic_convert" -> "linecache" [];
	"torch._dynamo.symbolic_convert" -> "logging" [];
	"torch._dynamo.symbolic_convert" -> "operator" [];
	"torch._dynamo.symbolic_convert" -> "re" [];
	"torch._dynamo.symbolic_convert" -> "sys" [];
	"torch._dynamo.symbolic_convert" -> "threading" [];
	"torch._dynamo.symbolic_convert" -> "traceback" [];
	"torch._dynamo.symbolic_convert" -> "types" [];
	"torch._dynamo.symbolic_convert" -> "typing" [];
	"torch._dynamo.symbolic_convert" -> "weakref" [];
	"torch._dynamo.symbolic_convert" -> "torch" [];
	"torch._dynamo.resume_execution" -> "copy" [];
	"torch._dynamo.resume_execution" -> "dataclasses" [];
	"torch._dynamo.resume_execution" -> "sys" [];
	"torch._dynamo.resume_execution" -> "types" [];
	"torch._dynamo.resume_execution" -> "typing" [];
	"torch._dynamo.funcname_cache" -> "tokenize" [];
	"torch._dynamo.funcname_cache" -> "typing" [];
	"torch._dynamo.replay_record" -> "dataclasses" [];
	"torch._dynamo.replay_record" -> "types" [];
	"torch._dynamo.replay_record" -> "typing" [];
	"torch._dynamo.hooks" -> "dataclasses" [];
	"torch._dynamo.hooks" -> "typing" [];
	"torch._dynamo.guards" -> "__future__" [];
	"torch._dynamo.guards" -> "ast" [];
	"torch._dynamo.guards" -> "builtins" [];
	"torch._dynamo.guards" -> "collections" [];
	"torch._dynamo.guards" -> "dataclasses" [];
	"torch._dynamo.guards" -> "enum" [];
	"torch._dynamo.guards" -> "functools" [];
	"torch._dynamo.guards" -> "importlib" [];
	"torch._dynamo.guards" -> "inspect" [];
	"torch._dynamo.guards" -> "itertools" [];
	"torch._dynamo.guards" -> "logging" [];
	"torch._dynamo.guards" -> "math" [];
	"torch._dynamo.guards" -> "os" [];
	"torch._dynamo.guards" -> "re" [];
	"torch._dynamo.guards" -> "sys" [];
	"torch._dynamo.guards" -> "textwrap" [];
	"torch._dynamo.guards" -> "types" [];
	"torch._dynamo.guards" -> "weakref" [];
	"torch._dynamo.guards" -> "contextlib" [];
	"torch._dynamo.guards" -> "copy" [];
	"torch._dynamo.guards" -> "typing" [];
	"torch._dynamo.guards" -> "torch" [];
	"torch._dynamo.guards" -> "'torch._C._dynamo'" [];
	"torch._dynamo.guards" -> "numpy" [];
	"torch._dynamo.guards" -> "sympy" [];
	"torch._dynamo.guards" -> "astunparse" [];
	"torch._dynamo.eval_frame" -> "__future__" [];
	"torch._dynamo.eval_frame" -> "contextlib" [];
	"torch._dynamo.eval_frame" -> "functools" [];
	"torch._dynamo.eval_frame" -> "inspect" [];
	"torch._dynamo.eval_frame" -> "logging" [];
	"torch._dynamo.eval_frame" -> "os" [];
	"torch._dynamo.eval_frame" -> "sys" [];
	"torch._dynamo.eval_frame" -> "textwrap" [];
	"torch._dynamo.eval_frame" -> "traceback" [];
	"torch._dynamo.eval_frame" -> "types" [];
	"torch._dynamo.eval_frame" -> "warnings" [];
	"torch._dynamo.eval_frame" -> "weakref" [];
	"torch._dynamo.eval_frame" -> "enum" [];
	"torch._dynamo.eval_frame" -> "os.path" [];
	"torch._dynamo.eval_frame" -> "typing" [];
	"torch._dynamo.eval_frame" -> "sympy" [];
	"torch._dynamo.eval_frame" -> "torch" [];
	"torch._dynamo.eval_frame" -> "'torch._C._dynamo'" [];
	"torch._dynamo.cache_size" -> "logging" [];
	"torch._dynamo.cache_size" -> "types" [];
	"torch._dynamo.cache_size" -> "weakref" [];
	"torch._dynamo.cache_size" -> "dataclasses" [];
	"torch._dynamo.cache_size" -> "typing" [];
	"torch._dynamo.bytecode_transformation" -> "copy" [];
	"torch._dynamo.bytecode_transformation" -> "dataclasses" [];
	"torch._dynamo.bytecode_transformation" -> "dis" [];
	"torch._dynamo.bytecode_transformation" -> "itertools" [];
	"torch._dynamo.bytecode_transformation" -> "sys" [];
	"torch._dynamo.bytecode_transformation" -> "types" [];
	"torch._dynamo.bytecode_transformation" -> "typing" [];
	"torch._dynamo.bytecode_transformation" -> "torch" [];
	"torch._dynamo.bytecode_analysis" -> "bisect" [];
	"torch._dynamo.bytecode_analysis" -> "dataclasses" [];
	"torch._dynamo.bytecode_analysis" -> "dis" [];
	"torch._dynamo.bytecode_analysis" -> "sys" [];
	"torch._dynamo.bytecode_analysis" -> "typing" [];
	"torch._dynamo.trace_rules" -> "_collections_abc" [];
	"torch._dynamo.trace_rules" -> "_weakrefset" [];
	"torch._dynamo.trace_rules" -> "abc" [];
	"torch._dynamo.trace_rules" -> "builtins" [];
	"torch._dynamo.trace_rules" -> "collections" [];
	"torch._dynamo.trace_rules" -> "contextlib" [];
	"torch._dynamo.trace_rules" -> "copy" [];
	"torch._dynamo.trace_rules" -> "copyreg" [];
	"torch._dynamo.trace_rules" -> "dataclasses" [];
	"torch._dynamo.trace_rules" -> "enum" [];
	"torch._dynamo.trace_rules" -> "functools" [];
	"torch._dynamo.trace_rules" -> "importlib" [];
	"torch._dynamo.trace_rules" -> "inspect" [];
	"torch._dynamo.trace_rules" -> "linecache" [];
	"torch._dynamo.trace_rules" -> "logging" [];
	"torch._dynamo.trace_rules" -> "multiprocessing" [];
	"torch._dynamo.trace_rules" -> "operator" [];
	"torch._dynamo.trace_rules" -> "os" [];
	"torch._dynamo.trace_rules" -> "posixpath" [];
	"torch._dynamo.trace_rules" -> "random" [];
	"torch._dynamo.trace_rules" -> "re" [];
	"torch._dynamo.trace_rules" -> "selectors" [];
	"torch._dynamo.trace_rules" -> "signal" [];
	"torch._dynamo.trace_rules" -> "sys" [];
	"torch._dynamo.trace_rules" -> "tempfile" [];
	"torch._dynamo.trace_rules" -> "threading" [];
	"torch._dynamo.trace_rules" -> "tokenize" [];
	"torch._dynamo.trace_rules" -> "traceback" [];
	"torch._dynamo.trace_rules" -> "types" [];
	"torch._dynamo.trace_rules" -> "typing" [];
	"torch._dynamo.trace_rules" -> "unittest" [];
	"torch._dynamo.trace_rules" -> "weakref" [];
	"torch._dynamo.trace_rules" -> "pathlib" [];
	"torch._dynamo.trace_rules" -> "torch" [];
	"torch._dynamo.trace_rules" -> "numpy" [];
	"torch._dynamo.exc" -> "os" [];
	"torch._dynamo.exc" -> "textwrap" [];
	"torch._dynamo.exc" -> "enum" [];
	"torch._dynamo.exc" -> "traceback" [];
	"torch._dynamo.exc" -> "typing" [];
	"torch._dynamo.exc" -> "logging" [];
	"torch._dynamo.config" -> "getpass" [];
	"torch._dynamo.config" -> "inspect" [];
	"torch._dynamo.config" -> "os" [];
	"torch._dynamo.config" -> "re" [];
	"torch._dynamo.config" -> "sys" [];
	"torch._dynamo.config" -> "tempfile" [];
	"torch._dynamo.config" -> "os.path" [];
	"torch._dynamo.config" -> "typing" [];
	"torch._dynamo.config" -> "torch" [];
	"torch._dynamo.config" -> "'torch.utils._config_typing'" [];
	"torch.utils._traceback" -> "types" [];
	"torch.utils._traceback" -> "typing" [];
	"torch.utils._traceback" -> "tempfile" [];
	"torch.utils._traceback" -> "traceback" [];
	"torch.utils._traceback" -> "contextlib" [];
	"torch.utils._traceback" -> "inspect" [];
	"torch.utils._traceback" -> "os.path" [];
	"torch.utils._traceback" -> "'torch._C._profiler'" [];
	"torch.nn.parallel.distributed" -> "copy" [];
	"torch.nn.parallel.distributed" -> "functools" [];
	"torch.nn.parallel.distributed" -> "inspect" [];
	"torch.nn.parallel.distributed" -> "itertools" [];
	"torch.nn.parallel.distributed" -> "logging" [];
	"torch.nn.parallel.distributed" -> "os" [];
	"torch.nn.parallel.distributed" -> "sys" [];
	"torch.nn.parallel.distributed" -> "warnings" [];
	"torch.nn.parallel.distributed" -> "weakref" [];
	"torch.nn.parallel.distributed" -> "collections" [];
	"torch.nn.parallel.distributed" -> "contextlib" [];
	"torch.nn.parallel.distributed" -> "dataclasses" [];
	"torch.nn.parallel.distributed" -> "enum" [];
	"torch.nn.parallel.distributed" -> "typing" [];
	"torch.nn.parallel.distributed" -> "torch" [];
	"torch.distributed.algorithms._optimizer_overlap.optimizer_overlap" -> "inspect" [];
	"torch.distributed.algorithms._optimizer_overlap.optimizer_overlap" -> "abc" [];
	"torch.distributed.algorithms._optimizer_overlap.optimizer_overlap" -> "typing" [];
	"torch.distributed.optim" -> "warnings" [];
	"torch.distributed.optim" -> "torch" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "collections" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "copy" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "enum" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "inspect" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "io" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "logging" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "itertools" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "typing" [];
	"torch.distributed.optim.zero_redundancy_optimizer" -> "torch" [];
	"torch.distributed.optim.post_localSGD_optimizer" -> "warnings" [];
	"torch.distributed.optim.post_localSGD_optimizer" -> "torch" [];
	"torch.distributed.algorithms.model_averaging.averagers" -> "warnings" [];
	"torch.distributed.algorithms.model_averaging.averagers" -> "abc" [];
	"torch.distributed.algorithms.model_averaging.averagers" -> "typing" [];
	"torch.distributed.algorithms.model_averaging.averagers" -> "torch" [];
	"torch.distributed.algorithms.model_averaging.utils" -> "itertools" [];
	"torch.distributed.algorithms.model_averaging.utils" -> "typing" [];
	"torch.distributed.algorithms.model_averaging.utils" -> "torch" [];
	"torch.distributed.optim.optimizer" -> "logging" [];
	"torch.distributed.optim.optimizer" -> "collections" [];
	"torch.distributed.optim.optimizer" -> "threading" [];
	"torch.distributed.optim.optimizer" -> "typing" [];
	"torch.distributed.optim.optimizer" -> "torch" [];
	"torch.distributed.optim.utils" -> "typing" [];
	"torch.distributed.optim.utils" -> "torch" [];
	"torch.distributed.optim.named_optimizer" -> "logging" [];
	"torch.distributed.optim.named_optimizer" -> "warnings" [];
	"torch.distributed.optim.named_optimizer" -> "copy" [];
	"torch.distributed.optim.named_optimizer" -> "typing" [];
	"torch.distributed.optim.named_optimizer" -> "torch" [];
	"torch.distributed.optim.functional_sgd" -> "typing" [];
	"torch.distributed.optim.functional_sgd" -> "torch" [];
	"torch.distributed.optim.functional_rprop" -> "typing" [];
	"torch.distributed.optim.functional_rprop" -> "torch" [];
	"torch.distributed.optim.functional_rmsprop" -> "typing" [];
	"torch.distributed.optim.functional_rmsprop" -> "torch" [];
	"torch.distributed.optim.functional_adamw" -> "typing" [];
	"torch.distributed.optim.functional_adamw" -> "torch" [];
	"torch.distributed.optim.functional_adamax" -> "typing" [];
	"torch.distributed.optim.functional_adamax" -> "torch" [];
	"torch.distributed.optim.functional_adam" -> "typing" [];
	"torch.distributed.optim.functional_adam" -> "torch" [];
	"torch.distributed.optim.functional_adagrad" -> "typing" [];
	"torch.distributed.optim.functional_adagrad" -> "torch" [];
	"torch.distributed.optim.functional_adadelta" -> "typing" [];
	"torch.distributed.optim.functional_adadelta" -> "torch" [];
	"torch.distributed.optim.apply_optimizer_in_backward" -> "typing" [];
	"torch.distributed.optim.apply_optimizer_in_backward" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks.default_hooks" -> "typing" [];
	"torch.distributed.algorithms.ddp_comm_hooks.default_hooks" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks" -> "enum" [];
	"torch.distributed.algorithms.ddp_comm_hooks" -> "functools" [];
	"torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" -> "logging" [];
	"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" -> "math" [];
	"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" -> "collections" [];
	"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" -> "typing" [];
	"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" -> "numpy" [];
	"torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks" -> "typing" [];
	"torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks" -> "dataclasses" [];
	"torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks" -> "functools" [];
	"torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks" -> "typing" [];
	"torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks" -> "dataclasses" [];
	"torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks" -> "typing" [];
	"torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks" -> "torch" [];
	"torch._logging.structured" -> "traceback" [];
	"torch._logging.structured" -> "typing" [];
	"torch._logging._internal" -> "functools" [];
	"torch._logging._internal" -> "hashlib" [];
	"torch._logging._internal" -> "itertools" [];
	"torch._logging._internal" -> "json" [];
	"torch._logging._internal" -> "logging" [];
	"torch._logging._internal" -> "os" [];
	"torch._logging._internal" -> "os.path" [];
	"torch._logging._internal" -> "pathlib" [];
	"torch._logging._internal" -> "re" [];
	"torch._logging._internal" -> "sys" [];
	"torch._logging._internal" -> "tempfile" [];
	"torch._logging._internal" -> "dataclasses" [];
	"torch._logging._internal" -> "importlib" [];
	"torch._logging._internal" -> "typing" [];
	"torch._logging._internal" -> "weakref" [];
	"torch._guards" -> "__future__" [];
	"torch._guards" -> "contextlib" [];
	"torch._guards" -> "dataclasses" [];
	"torch._guards" -> "enum" [];
	"torch._guards" -> "functools" [];
	"torch._guards" -> "logging" [];
	"torch._guards" -> "threading" [];
	"torch._guards" -> "traceback" [];
	"torch._guards" -> "weakref" [];
	"torch._guards" -> "abc" [];
	"torch._guards" -> "typing" [];
	"torch._guards" -> "'torch._C._dynamo'" [];
	"torch._guards" -> "sympy" [];
	"torch._dynamo.distributed" -> "typing" [];
	"pstats" -> "sys" [];
	"pstats" -> "os" [];
	"pstats" -> "time" [];
	"pstats" -> "marshal" [];
	"pstats" -> "re" [];
	"pstats" -> "enum" [];
	"pstats" -> "functools" [];
	"pstats" -> "dataclasses" [];
	"pstats" -> "typing" [];
	"pstats" -> "cmd" [];
	"pstats" -> "readline" [];
	"cProfile" -> "_lsprof" [];
	"cProfile" -> "io" [];
	"cProfile" -> "profile" [];
	"cProfile" -> "pstats" [];
	"cProfile" -> "marshal" [];
	"cProfile" -> "os" [];
	"cProfile" -> "sys" [];
	"cProfile" -> "runpy" [];
	"cProfile" -> "optparse" [];
	"profile" -> "io" [];
	"profile" -> "sys" [];
	"profile" -> "time" [];
	"profile" -> "marshal" [];
	"profile" -> "pstats" [];
	"profile" -> "os" [];
	"profile" -> "optparse" [];
	"profile" -> "runpy" [];
	"torch._inductor.debug" -> "collections" [];
	"torch._inductor.debug" -> "contextlib" [];
	"torch._inductor.debug" -> "dataclasses" [];
	"torch._inductor.debug" -> "functools" [];
	"torch._inductor.debug" -> "itertools" [];
	"torch._inductor.debug" -> "logging" [];
	"torch._inductor.debug" -> "os" [];
	"torch._inductor.debug" -> "os.path" [];
	"torch._inductor.debug" -> "pickle" [];
	"torch._inductor.debug" -> "pstats" [];
	"torch._inductor.debug" -> "shutil" [];
	"torch._inductor.debug" -> "subprocess" [];
	"torch._inductor.debug" -> "typing" [];
	"torch._inductor.debug" -> "torch" [];
	"torch._inductor.debug" -> "filelock" [];
	"torch._inductor.debug" -> "tarfile" [];
	"torch._inductor.debug" -> "json" [];
	"torch.utils.flop_counter" -> "torch" [];
	"torch.utils.flop_counter" -> "typing" [];
	"torch.utils.flop_counter" -> "collections" [];
	"torch.utils.flop_counter" -> "math" [];
	"torch.utils.flop_counter" -> "functools" [];
	"torch.utils.flop_counter" -> "warnings" [];
	"torch.utils.flop_counter" -> "tabulate" [];
	"torch.utils.module_tracker" -> "logging" [];
	"torch.utils.module_tracker" -> "weakref" [];
	"torch.utils.module_tracker" -> "typing" [];
	"torch.utils.module_tracker" -> "torch" [];
	"torch._inductor.sizevars" -> "functools" [];
	"torch._inductor.sizevars" -> "itertools" [];
	"torch._inductor.sizevars" -> "logging" [];
	"torch._inductor.sizevars" -> "typing" [];
	"torch._inductor.sizevars" -> "sympy" [];
	"torch._inductor.loop_body" -> "__future__" [];
	"torch._inductor.loop_body" -> "functools" [];
	"torch._inductor.loop_body" -> "itertools" [];
	"torch._inductor.loop_body" -> "re" [];
	"torch._inductor.loop_body" -> "enum" [];
	"torch._inductor.loop_body" -> "typing" [];
	"torch._inductor.loop_body" -> "sympy" [];
	"torch._inductor.index_propagation" -> "itertools" [];
	"torch._inductor.index_propagation" -> "dataclasses" [];
	"torch._inductor.index_propagation" -> "typing" [];
	"torch._inductor.index_propagation" -> "typing_extensions" [];
	"torch._inductor.index_propagation" -> "sympy" [];
	"torch._inductor.index_propagation" -> "torch" [];
	"torch._inductor.bounds" -> "logging" [];
	"torch._inductor.bounds" -> "operator" [];
	"torch._inductor.bounds" -> "functools" [];
	"torch._inductor.bounds" -> "typing" [];
	"torch._inductor.bounds" -> "sympy" [];
	"torch._inductor.bounds" -> "torch" [];
	"torch._inductor.comm_analysis" -> "functools" [];
	"torch._inductor.comm_analysis" -> "math" [];
	"torch._inductor.comm_analysis" -> "enum" [];
	"torch._inductor.comm_analysis" -> "sympy" [];
	"torch._inductor.comm_analysis" -> "torch" [];
	"torch._inductor.dependencies" -> "abc" [];
	"torch._inductor.dependencies" -> "dataclasses" [];
	"torch._inductor.dependencies" -> "itertools" [];
	"torch._inductor.dependencies" -> "logging" [];
	"torch._inductor.dependencies" -> "re" [];
	"torch._inductor.dependencies" -> "typing" [];
	"torch._inductor.dependencies" -> "sympy" [];
	"torch._inductor.dependencies" -> "torch" [];
	"torch._inductor.comms" -> "__future__" [];
	"torch._inductor.comms" -> "heapq" [];
	"torch._inductor.comms" -> "operator" [];
	"torch._inductor.comms" -> "sys" [];
	"torch._inductor.comms" -> "collections" [];
	"torch._inductor.comms" -> "typing" [];
	"torch._inductor.comms" -> "torch" [];
	"torch._inductor.codegen.simd" -> "__future__" [];
	"torch._inductor.codegen.simd" -> "collections" [];
	"torch._inductor.codegen.simd" -> "contextlib" [];
	"torch._inductor.codegen.simd" -> "dataclasses" [];
	"torch._inductor.codegen.simd" -> "functools" [];
	"torch._inductor.codegen.simd" -> "itertools" [];
	"torch._inductor.codegen.simd" -> "logging" [];
	"torch._inductor.codegen.simd" -> "math" [];
	"torch._inductor.codegen.simd" -> "operator" [];
	"torch._inductor.codegen.simd" -> "typing" [];
	"torch._inductor.codegen.simd" -> "sympy" [];
	"torch._inductor.codegen.simd" -> "torch" [];
	"torch._inductor.codegen.triton_combo_kernel" -> "itertools" [];
	"torch._inductor.codegen.triton_combo_kernel" -> "logging" [];
	"torch._inductor.codegen.triton_combo_kernel" -> "textwrap" [];
	"torch._inductor.codegen.triton_combo_kernel" -> "collections" [];
	"torch._inductor.codegen.triton_combo_kernel" -> "dataclasses" [];
	"torch._inductor.codegen.triton_combo_kernel" -> "typing" [];
	"torch._inductor.codegen.triton_combo_kernel" -> "sympy" [];
	"torch._inductor.codegen.triton_split_scan" -> "functools" [];
	"torch._inductor.codegen.triton_split_scan" -> "typing" [];
	"torch._inductor.codegen.triton_split_scan" -> "'triton.language'" [];
	"torch._inductor.optimize_indexing" -> "math" [];
	"torch._inductor.optimize_indexing" -> "sympy" [];
	"torch._inductor.optimize_indexing" -> "torch" [];
	"torch._inductor.wrapper_benchmark" -> "dataclasses" [];
	"torch._inductor.wrapper_benchmark" -> "tempfile" [];
	"torch._inductor.wrapper_benchmark" -> "collections" [];
	"torch._inductor.wrapper_benchmark" -> "torch" [];
	"torch._inductor.wrapper_benchmark" -> "tabulate" [];
	"torch._inductor.wrapper_benchmark" -> "argparse" [];
	"torch._inductor.runtime.benchmarking" -> "time" [];
	"torch._inductor.runtime.benchmarking" -> "functools" [];
	"torch._inductor.runtime.benchmarking" -> "itertools" [];
	"torch._inductor.runtime.benchmarking" -> "statistics" [];
	"torch._inductor.runtime.benchmarking" -> "typing" [];
	"torch._inductor.runtime.benchmarking" -> "typing_extensions" [];
	"torch._inductor.runtime.benchmarking" -> "torch" [];
	"torch._inductor.runtime.benchmarking" -> "'triton.testing'" [];
	"torch._inductor.metrics" -> "__future__" [];
	"torch._inductor.metrics" -> "csv" [];
	"torch._inductor.metrics" -> "dataclasses" [];
	"torch._inductor.metrics" -> "inspect" [];
	"torch._inductor.metrics" -> "os" [];
	"torch._inductor.metrics" -> "re" [];
	"torch._inductor.metrics" -> "functools" [];
	"torch._inductor.metrics" -> "typing" [];
	"torch.utils._sympy.value_ranges" -> "__future__" [];
	"torch.utils._sympy.value_ranges" -> "dataclasses" [];
	"torch.utils._sympy.value_ranges" -> "itertools" [];
	"torch.utils._sympy.value_ranges" -> "logging" [];
	"torch.utils._sympy.value_ranges" -> "math" [];
	"torch.utils._sympy.value_ranges" -> "operator" [];
	"torch.utils._sympy.value_ranges" -> "typing" [];
	"torch.utils._sympy.value_ranges" -> "typing_extensions" [];
	"torch.utils._sympy.value_ranges" -> "sympy" [];
	"torch.utils._sympy.value_ranges" -> "torch" [];
	"torch.utils._sympy.functions" -> "functools" [];
	"torch.utils._sympy.functions" -> "math" [];
	"torch.utils._sympy.functions" -> "operator" [];
	"torch.utils._sympy.functions" -> "sys" [];
	"torch.utils._sympy.functions" -> "sympy" [];
	"torch.utils._ordered_set" -> "__future__" [];
	"torch.utils._ordered_set" -> "typing" [];
	"torch.utils._triton" -> "functools" [];
	"torch.utils._triton" -> "hashlib" [];
	"torch.utils._triton" -> "'triton.compiler'" [];
	"torch.utils._triton" -> "'triton.runtime'" [];
	"torch.utils._triton" -> "triton" [];
	"torch._inductor.codegen.memory_planning" -> "__future__" [];
	"torch._inductor.codegen.memory_planning" -> "collections" [];
	"torch._inductor.codegen.memory_planning" -> "dataclasses" [];
	"torch._inductor.codegen.memory_planning" -> "itertools" [];
	"torch._inductor.codegen.memory_planning" -> "pprint" [];
	"torch._inductor.codegen.memory_planning" -> "typing" [];
	"torch._inductor.codegen.memory_planning" -> "sympy" [];
	"torch._inductor.codegen.memory_planning" -> "torch" [];
	"torch._inductor.codegen.cpp" -> "contextlib" [];
	"torch._inductor.codegen.cpp" -> "dataclasses" [];
	"torch._inductor.codegen.cpp" -> "functools" [];
	"torch._inductor.codegen.cpp" -> "itertools" [];
	"torch._inductor.codegen.cpp" -> "math" [];
	"torch._inductor.codegen.cpp" -> "re" [];
	"torch._inductor.codegen.cpp" -> "sys" [];
	"torch._inductor.codegen.cpp" -> "warnings" [];
	"torch._inductor.codegen.cpp" -> "copy" [];
	"torch._inductor.codegen.cpp" -> "enum" [];
	"torch._inductor.codegen.cpp" -> "typing" [];
	"torch._inductor.codegen.cpp" -> "sympy" [];
	"torch._inductor.codegen.cpp" -> "torch" [];
	"torch._inductor.graph" -> "functools" [];
	"torch._inductor.graph" -> "itertools" [];
	"torch._inductor.graph" -> "logging" [];
	"torch._inductor.graph" -> "operator" [];
	"torch._inductor.graph" -> "os" [];
	"torch._inductor.graph" -> "re" [];
	"torch._inductor.graph" -> "sys" [];
	"torch._inductor.graph" -> "time" [];
	"torch._inductor.graph" -> "collections" [];
	"torch._inductor.graph" -> "contextlib" [];
	"torch._inductor.graph" -> "types" [];
	"torch._inductor.graph" -> "typing" [];
	"torch._inductor.graph" -> "sympy" [];
	"torch._inductor.graph" -> "torch" [];
	"torch._inductor.graph" -> "'torch._inductor.fb'" [];
	"torch._inductor.extern_node_serializer" -> "json" [];
	"torch._inductor.extern_node_serializer" -> "typing" [];
	"torch._export.serde.aoti_schema" -> "dataclasses" [];
	"torch._export.serde.aoti_schema" -> "typing" [];
	"torch._inductor.codegen.triton_utils" -> "typing" [];
	"torch._inductor.codegen.triton_utils" -> "sympy" [];
	"torch._inductor.codegen.triton_utils" -> "torch" [];
	"torch._inductor.codegen.common" -> "contextlib" [];
	"torch._inductor.codegen.common" -> "dataclasses" [];
	"torch._inductor.codegen.common" -> "functools" [];
	"torch._inductor.codegen.common" -> "itertools" [];
	"torch._inductor.codegen.common" -> "logging" [];
	"torch._inductor.codegen.common" -> "math" [];
	"torch._inductor.codegen.common" -> "operator" [];
	"torch._inductor.codegen.common" -> "re" [];
	"torch._inductor.codegen.common" -> "enum" [];
	"torch._inductor.codegen.common" -> "typing" [];
	"torch._inductor.codegen.common" -> "sympy" [];
	"torch._inductor.codegen.common" -> "torch" [];
	"torch._inductor.codegen.common" -> "jinja2" [];
	"torch._inductor.codegen.halide" -> "__future__" [];
	"torch._inductor.codegen.halide" -> "dataclasses" [];
	"torch._inductor.codegen.halide" -> "functools" [];
	"torch._inductor.codegen.halide" -> "itertools" [];
	"torch._inductor.codegen.halide" -> "logging" [];
	"torch._inductor.codegen.halide" -> "re" [];
	"torch._inductor.codegen.halide" -> "collections" [];
	"torch._inductor.codegen.halide" -> "math" [];
	"torch._inductor.codegen.halide" -> "typing" [];
	"torch._inductor.codegen.halide" -> "sympy" [];
	"torch._inductor.codegen.halide" -> "torch" [];
	"torch._inductor.codegen.cpp_wrapper_cuda" -> "functools" [];
	"torch._inductor.codegen.cpp_wrapper_cuda" -> "os" [];
	"torch._inductor.codegen.cpp_wrapper_cuda" -> "itertools" [];
	"torch._inductor.codegen.cpp_wrapper_cuda" -> "typing" [];
	"torch._inductor.codegen.cpp_wrapper_cuda" -> "sympy" [];
	"torch._inductor.codegen.cpp_wrapper_cuda" -> "torch" [];
	"torch._inductor.codegen.codegen_device_driver" -> "torch" [];
	"torch._inductor.codegen.aoti_hipify_utils" -> "re" [];
	"torch._inductor.codegen.aoti_hipify_utils" -> "torch" [];
	"torch._inductor.virtualized" -> "__future__" [];
	"torch._inductor.virtualized" -> "contextlib" [];
	"torch._inductor.virtualized" -> "threading" [];
	"torch._inductor.virtualized" -> "typing" [];
	"torch._inductor.virtualized" -> "torch" [];
	"torch._inductor.utils" -> "__future__" [];
	"torch._inductor.utils" -> "collections" [];
	"torch._inductor.utils" -> "contextlib" [];
	"torch._inductor.utils" -> "dataclasses" [];
	"torch._inductor.utils" -> "enum" [];
	"torch._inductor.utils" -> "functools" [];
	"torch._inductor.utils" -> "inspect" [];
	"torch._inductor.utils" -> "io" [];
	"torch._inductor.utils" -> "itertools" [];
	"torch._inductor.utils" -> "logging" [];
	"torch._inductor.utils" -> "math" [];
	"torch._inductor.utils" -> "operator" [];
	"torch._inductor.utils" -> "os" [];
	"torch._inductor.utils" -> "platform" [];
	"torch._inductor.utils" -> "shutil" [];
	"torch._inductor.utils" -> "sys" [];
	"torch._inductor.utils" -> "tempfile" [];
	"torch._inductor.utils" -> "textwrap" [];
	"torch._inductor.utils" -> "time" [];
	"torch._inductor.utils" -> "unittest" [];
	"torch._inductor.utils" -> "datetime" [];
	"torch._inductor.utils" -> "typing" [];
	"torch._inductor.utils" -> "typing_extensions" [];
	"torch._inductor.utils" -> "sympy" [];
	"torch._inductor.utils" -> "torch" [];
	"torch._inductor.utils" -> "'torchvision.ops'" [];
	"torch._inductor.utils" -> "ck4inductor" [];
	"torch._inductor.utils" -> "'ck4inductor.universal_gemm'" [];
	"torch._inductor.utils" -> "'triton.testing'" [];
	"torch._inductor.utils" -> "'triton.runtime'" [];
	"torch._inductor.runtime.hints" -> "collections" [];
	"torch._inductor.runtime.hints" -> "typing" [];
	"torch._inductor.runtime.hints" -> "dataclasses" [];
	"torch._inductor.runtime.hints" -> "enum" [];
	"torch._inductor.runtime.hints" -> "'triton.compiler'" [];
	"torch._inductor.runtime.hints" -> "torch" [];
	"torch._inductor.runtime.triton_heuristics" -> "__future__" [];
	"torch._inductor.runtime.triton_heuristics" -> "builtins" [];
	"torch._inductor.runtime.triton_heuristics" -> "copy" [];
	"torch._inductor.runtime.triton_heuristics" -> "functools" [];
	"torch._inductor.runtime.triton_heuristics" -> "hashlib" [];
	"torch._inductor.runtime.triton_heuristics" -> "inspect" [];
	"torch._inductor.runtime.triton_heuristics" -> "logging" [];
	"torch._inductor.runtime.triton_heuristics" -> "math" [];
	"torch._inductor.runtime.triton_heuristics" -> "operator" [];
	"torch._inductor.runtime.triton_heuristics" -> "os" [];
	"torch._inductor.runtime.triton_heuristics" -> "os.path" [];
	"torch._inductor.runtime.triton_heuristics" -> "re" [];
	"torch._inductor.runtime.triton_heuristics" -> "sys" [];
	"torch._inductor.runtime.triton_heuristics" -> "threading" [];
	"torch._inductor.runtime.triton_heuristics" -> "time" [];
	"torch._inductor.runtime.triton_heuristics" -> "typing" [];
	"torch._inductor.runtime.triton_heuristics" -> "torch" [];
	"torch._inductor.runtime.triton_heuristics" -> "triton" [];
	"torch._inductor.runtime.triton_heuristics" -> "'triton.compiler'" [];
	"torch._inductor.runtime.triton_heuristics" -> "'triton.runtime'" [];
	"torch._inductor.runtime.triton_heuristics" -> "'triton.backends'" [];
	"torch._inductor.runtime.triton_heuristics" -> "gc" [];
	"torch._inductor.runtime.coordinate_descent_tuner" -> "copy" [];
	"torch._inductor.runtime.coordinate_descent_tuner" -> "itertools" [];
	"torch._inductor.runtime.coordinate_descent_tuner" -> "logging" [];
	"torch._inductor.runtime.coordinate_descent_tuner" -> "typing" [];
	"torch._inductor.runtime.coordinate_descent_tuner" -> "triton" [];
	"torch._inductor.runtime.autotune_cache" -> "__future__" [];
	"torch._inductor.runtime.autotune_cache" -> "dataclasses" [];
	"torch._inductor.runtime.autotune_cache" -> "hashlib" [];
	"torch._inductor.runtime.autotune_cache" -> "logging" [];
	"torch._inductor.runtime.autotune_cache" -> "os" [];
	"torch._inductor.runtime.autotune_cache" -> "os.path" [];
	"torch._inductor.runtime.autotune_cache" -> "typing" [];
	"torch._inductor.runtime.autotune_cache" -> "typing_extensions" [];
	"torch._inductor.runtime.autotune_cache" -> "torch" [];
	"torch._inductor.runtime.autotune_cache" -> "triton" [];
	"torch._inductor.runtime.autotune_cache" -> "'torch._inductor.fb'" [];
	"torch._inductor.remote_cache" -> "__future__" [];
	"torch._inductor.remote_cache" -> "json" [];
	"torch._inductor.remote_cache" -> "os" [];
	"torch._inductor.remote_cache" -> "typing" [];
	"torch._inductor.remote_cache" -> "abc" [];
	"torch._inductor.remote_cache" -> "typing_extensions" [];
	"torch._inductor.remote_cache" -> "redis" [];
	"torch._inductor.remote_cache" -> "rfe" [];
	"torch._inductor.codecache" -> "__future__" [];
	"torch._inductor.codecache" -> "base64" [];
	"torch._inductor.codecache" -> "copyreg" [];
	"torch._inductor.codecache" -> "dataclasses" [];
	"torch._inductor.codecache" -> "functools" [];
	"torch._inductor.codecache" -> "hashlib" [];
	"torch._inductor.codecache" -> "importlib" [];
	"torch._inductor.codecache" -> "io" [];
	"torch._inductor.codecache" -> "json" [];
	"torch._inductor.codecache" -> "logging" [];
	"torch._inductor.codecache" -> "os" [];
	"torch._inductor.codecache" -> "pickle" [];
	"torch._inductor.codecache" -> "pkgutil" [];
	"torch._inductor.codecache" -> "re" [];
	"torch._inductor.codecache" -> "shlex" [];
	"torch._inductor.codecache" -> "shutil" [];
	"torch._inductor.codecache" -> "struct" [];
	"torch._inductor.codecache" -> "subprocess" [];
	"torch._inductor.codecache" -> "sys" [];
	"torch._inductor.codecache" -> "sysconfig" [];
	"torch._inductor.codecache" -> "tempfile" [];
	"torch._inductor.codecache" -> "textwrap" [];
	"torch._inductor.codecache" -> "threading" [];
	"torch._inductor.codecache" -> "warnings" [];
	"torch._inductor.codecache" -> "bisect" [];
	"torch._inductor.codecache" -> "copy" [];
	"torch._inductor.codecache" -> "ctypes" [];
	"torch._inductor.codecache" -> "datetime" [];
	"torch._inductor.codecache" -> "pathlib" [];
	"torch._inductor.codecache" -> "time" [];
	"torch._inductor.codecache" -> "types" [];
	"torch._inductor.codecache" -> "typing" [];
	"torch._inductor.codecache" -> "typing_extensions" [];
	"torch._inductor.codecache" -> "torch" [];
	"torch._inductor.codecache" -> "'triton.fb'" [];
	"torch._inductor.codecache" -> "'torch._inductor.fb'" [];
	"torch._inductor.codecache" -> "'triton.compiler'" [];
	"torch._inductor.codecache" -> "'libfb.py'" [];
	"torch._inductor.codecache" -> "filelock" [];
	"torch._inductor.codecache" -> "resource" [];
	"torch._inductor.codecache" -> "halide" [];
	"torch._inductor.package.package" -> "glob" [];
	"torch._inductor.package.package" -> "json" [];
	"torch._inductor.package.package" -> "os" [];
	"torch._inductor.package.package" -> "shlex" [];
	"torch._inductor.package.package" -> "subprocess" [];
	"torch._inductor.package.package" -> "tempfile" [];
	"torch._inductor.package.package" -> "zipfile" [];
	"torch._inductor.package.package" -> "pathlib" [];
	"torch._inductor.package.package" -> "typing" [];
	"torch._inductor.package.package" -> "torch" [];
	"torch._inductor.runtime.compile_tasks" -> "__future__" [];
	"torch._inductor.runtime.compile_tasks" -> "functools" [];
	"torch._inductor.runtime.compile_tasks" -> "os" [];
	"torch._inductor.runtime.compile_tasks" -> "sys" [];
	"torch._inductor.runtime.compile_tasks" -> "warnings" [];
	"torch._inductor.runtime.compile_tasks" -> "types" [];
	"torch._inductor.runtime.compile_tasks" -> "typing" [];
	"torch._inductor.codegen.rocm.compile_command" -> "logging" [];
	"torch._inductor.codegen.rocm.compile_command" -> "os" [];
	"torch._inductor.codegen.rocm.compile_command" -> "typing" [];
	"torch._inductor.config" -> "os" [];
	"torch._inductor.config" -> "sys" [];
	"torch._inductor.config" -> "typing" [];
	"torch._inductor.config" -> "torch" [];
	"torch._inductor.config" -> "libfb" [];
	"torch._inductor.config" -> "'torch.utils._config_typing'" [];
	"torch._inductor.async_compile" -> "__future__" [];
	"torch._inductor.async_compile" -> "functools" [];
	"torch._inductor.async_compile" -> "logging" [];
	"torch._inductor.async_compile" -> "multiprocessing" [];
	"torch._inductor.async_compile" -> "os" [];
	"torch._inductor.async_compile" -> "sys" [];
	"torch._inductor.async_compile" -> "time" [];
	"torch._inductor.async_compile" -> "typing" [];
	"torch._inductor.async_compile" -> "torch" [];
	"torch._inductor.async_compile" -> "'triton.compiler'" [];
	"torch._inductor.compile_worker.watchdog" -> "os" [];
	"torch._inductor.compile_worker.watchdog" -> "signal" [];
	"torch._inductor.compile_worker.watchdog" -> "threading" [];
	"torch._inductor.compile_worker.watchdog" -> "time" [];
	"torch._inductor.compile_worker.watchdog" -> "typing" [];
	"torch._inductor.compile_worker.subproc_pool" -> "functools" [];
	"torch._inductor.compile_worker.subproc_pool" -> "itertools" [];
	"torch._inductor.compile_worker.subproc_pool" -> "logging" [];
	"torch._inductor.compile_worker.subproc_pool" -> "multiprocessing" [];
	"torch._inductor.compile_worker.subproc_pool" -> "os" [];
	"torch._inductor.compile_worker.subproc_pool" -> "pickle" [];
	"torch._inductor.compile_worker.subproc_pool" -> "struct" [];
	"torch._inductor.compile_worker.subproc_pool" -> "subprocess" [];
	"torch._inductor.compile_worker.subproc_pool" -> "sys" [];
	"torch._inductor.compile_worker.subproc_pool" -> "threading" [];
	"torch._inductor.compile_worker.subproc_pool" -> "traceback" [];
	"torch._inductor.compile_worker.subproc_pool" -> "typing" [];
	"torch._inductor.compile_worker.subproc_pool" -> "'libfb.py'" [];
	"torch._inductor" -> "typing" [];
	"torch.utils._sympy.symbol" -> "enum" [];
	"torch.utils._sympy.symbol" -> "typing" [];
	"torch.utils._sympy.symbol" -> "sympy" [];
	"torch.utils._sympy.singleton_int" -> "sympy" [];
	"torch._inductor.runtime.runtime_utils" -> "__future__" [];
	"torch._inductor.runtime.runtime_utils" -> "contextlib" [];
	"torch._inductor.runtime.runtime_utils" -> "functools" [];
	"torch._inductor.runtime.runtime_utils" -> "getpass" [];
	"torch._inductor.runtime.runtime_utils" -> "operator" [];
	"torch._inductor.runtime.runtime_utils" -> "os" [];
	"torch._inductor.runtime.runtime_utils" -> "re" [];
	"torch._inductor.runtime.runtime_utils" -> "tempfile" [];
	"torch._inductor.runtime.runtime_utils" -> "torch" [];
	"torch._inductor.runtime.runtime_utils" -> "colorama" [];
	"torch._inductor.codegen.multi_kernel" -> "logging" [];
	"torch._inductor.codegen.multi_kernel" -> "os" [];
	"torch._inductor.codegen.multi_kernel" -> "pathlib" [];
	"torch._inductor.codegen.multi_kernel" -> "typing" [];
	"torch._inductor.codegen.debug_utils" -> "__future__" [];
	"torch._inductor.codegen.debug_utils" -> "functools" [];
	"torch._inductor.codegen.debug_utils" -> "logging" [];
	"torch._inductor.codegen.debug_utils" -> "enum" [];
	"torch._inductor.codegen.debug_utils" -> "typing" [];
	"torch._inductor.codegen.debug_utils" -> "torch" [];
	"torch._dynamo.utils" -> "__future__" [];
	"torch._dynamo.utils" -> "atexit" [];
	"torch._dynamo.utils" -> "collections" [];
	"torch._dynamo.utils" -> "contextlib" [];
	"torch._dynamo.utils" -> "copy" [];
	"torch._dynamo.utils" -> "dataclasses" [];
	"torch._dynamo.utils" -> "datetime" [];
	"torch._dynamo.utils" -> "dis" [];
	"torch._dynamo.utils" -> "enum" [];
	"torch._dynamo.utils" -> "functools" [];
	"torch._dynamo.utils" -> "gc" [];
	"torch._dynamo.utils" -> "importlib" [];
	"torch._dynamo.utils" -> "inspect" [];
	"torch._dynamo.utils" -> "itertools" [];
	"torch._dynamo.utils" -> "linecache" [];
	"torch._dynamo.utils" -> "logging" [];
	"torch._dynamo.utils" -> "math" [];
	"torch._dynamo.utils" -> "operator" [];
	"torch._dynamo.utils" -> "os" [];
	"torch._dynamo.utils" -> "re" [];
	"torch._dynamo.utils" -> "sys" [];
	"torch._dynamo.utils" -> "threading" [];
	"torch._dynamo.utils" -> "time" [];
	"torch._dynamo.utils" -> "types" [];
	"torch._dynamo.utils" -> "typing" [];
	"torch._dynamo.utils" -> "uuid" [];
	"torch._dynamo.utils" -> "warnings" [];
	"torch._dynamo.utils" -> "weakref" [];
	"torch._dynamo.utils" -> "typing_extensions" [];
	"torch._dynamo.utils" -> "torch" [];
	"torch._dynamo.utils" -> "numpy" [];
	"torch._dynamo.utils" -> "tabulate" [];
	"torch._dynamo.utils" -> "triton" [];
	"torch._dynamo.utils" -> "traceback" [];
	"torch._dynamo.utils" -> "ast" [];
	"torch._inductor.ir" -> "__future__" [];
	"torch._inductor.ir" -> "contextlib" [];
	"torch._inductor.ir" -> "dataclasses" [];
	"torch._inductor.ir" -> "functools" [];
	"torch._inductor.ir" -> "itertools" [];
	"torch._inductor.ir" -> "logging" [];
	"torch._inductor.ir" -> "textwrap" [];
	"torch._inductor.ir" -> "traceback" [];
	"torch._inductor.ir" -> "typing" [];
	"torch._inductor.ir" -> "typing_extensions" [];
	"torch._inductor.ir" -> "sympy" [];
	"torch._inductor.ir" -> "'triton.runtime'" [];
	"sympy" -> "sys" [];
	"sympy" -> "mpmath" [];
	"sympy" -> "warnings" [];
	"sympy" -> "os" [];
	"torch._library.infer_schema" -> "inspect" [];
	"torch._library.infer_schema" -> "typing" [];
	"torch._library.infer_schema" -> "torch" [];
	"torch._library.custom_ops" -> "inspect" [];
	"torch._library.custom_ops" -> "logging" [];
	"torch._library.custom_ops" -> "weakref" [];
	"torch._library.custom_ops" -> "contextlib" [];
	"torch._library.custom_ops" -> "typing" [];
	"torch._library.custom_ops" -> "torch" [];
	"torch._library.simple_registry" -> "typing" [];
	"torch._library.fake_impl" -> "contextlib" [];
	"torch._library.fake_impl" -> "functools" [];
	"torch._library.fake_impl" -> "typing" [];
	"torch._library.fake_impl" -> "typing_extensions" [];
	"torch._library.fake_impl" -> "torch" [];
	"torch._library.autograd" -> "dataclasses" [];
	"torch._library.autograd" -> "typing" [];
	"torch._library.autograd" -> "torch" [];
	"torch._library.utils" -> "dataclasses" [];
	"torch._library.utils" -> "inspect" [];
	"torch._library.utils" -> "sys" [];
	"torch._library.utils" -> "typing" [];
	"torch._library.utils" -> "torch" [];
	"torchgen.gen_schema_utils" -> "typing" [];
	"torchgen.gen_schema_utils" -> "torch" [];
	"torch._higher_order_ops.utils" -> "functools" [];
	"torch._higher_order_ops.utils" -> "contextlib" [];
	"torch._higher_order_ops.utils" -> "dataclasses" [];
	"torch._higher_order_ops.utils" -> "typing" [];
	"torch._higher_order_ops.utils" -> "torch" [];
	"torch._functorch._aot_autograd.utils" -> "dataclasses" [];
	"torch._functorch._aot_autograd.utils" -> "operator" [];
	"torch._functorch._aot_autograd.utils" -> "warnings" [];
	"torch._functorch._aot_autograd.utils" -> "contextlib" [];
	"torch._functorch._aot_autograd.utils" -> "functools" [];
	"torch._functorch._aot_autograd.utils" -> "typing" [];
	"torch._functorch._aot_autograd.utils" -> "torch" [];
	"torch._higher_order_ops.while_loop" -> "typing" [];
	"torch._higher_order_ops.while_loop" -> "torch" [];
	"torch._higher_order_ops.hints_wrap" -> "torch" [];
	"torch._dispatch.python" -> "itertools" [];
	"torch._dispatch.python" -> "contextlib" [];
	"torch._dispatch.python" -> "typing" [];
	"torch._dispatch.python" -> "torch" [];
	"torch.fx.experimental.proxy_tensor" -> "__future__" [];
	"torch.fx.experimental.proxy_tensor" -> "functools" [];
	"torch.fx.experimental.proxy_tensor" -> "inspect" [];
	"torch.fx.experimental.proxy_tensor" -> "logging" [];
	"torch.fx.experimental.proxy_tensor" -> "operator" [];
	"torch.fx.experimental.proxy_tensor" -> "traceback" [];
	"torch.fx.experimental.proxy_tensor" -> "typing" [];
	"torch.fx.experimental.proxy_tensor" -> "typing_extensions" [];
	"torch.fx.experimental.proxy_tensor" -> "warnings" [];
	"torch.fx.experimental.proxy_tensor" -> "weakref" [];
	"torch.fx.experimental.proxy_tensor" -> "collections" [];
	"torch.fx.experimental.proxy_tensor" -> "contextlib" [];
	"torch.fx.experimental.proxy_tensor" -> "dataclasses" [];
	"torch.fx.experimental.proxy_tensor" -> "torch" [];
	"torch.fx.experimental.proxy_tensor" -> "types" [];
	"torch.fx.experimental.proxy_tensor" -> "sympy" [];
	"torch.utils._thunk" -> "typing" [];
	"torch.utils._stats" -> "collections" [];
	"torch.utils._stats" -> "functools" [];
	"torch.utils._stats" -> "typing" [];
	"torch._subclasses.fake_impls" -> "functools" [];
	"torch._subclasses.fake_impls" -> "itertools" [];
	"torch._subclasses.fake_impls" -> "math" [];
	"torch._subclasses.fake_impls" -> "sys" [];
	"torch._subclasses.fake_impls" -> "typing" [];
	"torch._subclasses.fake_impls" -> "torch" [];
	"torch._subclasses.schema_check_mode" -> "collections" [];
	"torch._subclasses.schema_check_mode" -> "copy" [];
	"torch._subclasses.schema_check_mode" -> "itertools" [];
	"torch._subclasses.schema_check_mode" -> "torch" [];
	"torch._subclasses.functional_tensor" -> "contextlib" [];
	"torch._subclasses.functional_tensor" -> "warnings" [];
	"torch._subclasses.functional_tensor" -> "weakref" [];
	"torch._subclasses.functional_tensor" -> "abc" [];
	"torch._subclasses.functional_tensor" -> "typing" [];
	"torch._subclasses.functional_tensor" -> "torch" [];
	"torch.utils._python_dispatch" -> "contextlib" [];
	"torch.utils._python_dispatch" -> "warnings" [];
	"torch.utils._python_dispatch" -> "dataclasses" [];
	"torch.utils._python_dispatch" -> "typing" [];
	"torch.utils._python_dispatch" -> "typing_extensions" [];
	"torch.utils._python_dispatch" -> "collections" [];
	"torch.utils._python_dispatch" -> "torch" [];
	"torch.utils._python_dispatch" -> "torchgen" [];
	"torch.utils._python_dispatch" -> "re" [];
	"torch._functorch.pyfunctorch" -> "contextlib" [];
	"torch._functorch.pyfunctorch" -> "abc" [];
	"torch._functorch.pyfunctorch" -> "typing" [];
	"torch._functorch.pyfunctorch" -> "torch" [];
	"torch._functorch.pyfunctorch" -> "'torch._C._functorch'" [];
	"torch._refs.linalg" -> "functools" [];
	"torch._refs.linalg" -> "typing" [];
	"torch._refs.linalg" -> "torch" [];
	"torch._refs.linalg" -> "operator" [];
	"torch._refs.fft" -> "math" [];
	"torch._refs.fft" -> "typing" [];
	"torch._refs.fft" -> "torch" [];
	"torch._refs._conversions" -> "torch" [];
	"torch._decomp" -> "inspect" [];
	"torch._decomp" -> "collections" [];
	"torch._decomp" -> "functools" [];
	"torch._decomp" -> "itertools" [];
	"torch._decomp" -> "typing" [];
	"torch._decomp" -> "typing_extensions" [];
	"torch.fx.experimental.symbolic_shapes" -> "builtins" [];
	"torch.fx.experimental.symbolic_shapes" -> "collections" [];
	"torch.fx.experimental.symbolic_shapes" -> "functools" [];
	"torch.fx.experimental.symbolic_shapes" -> "inspect" [];
	"torch.fx.experimental.symbolic_shapes" -> "itertools" [];
	"torch.fx.experimental.symbolic_shapes" -> "logging" [];
	"torch.fx.experimental.symbolic_shapes" -> "math" [];
	"torch.fx.experimental.symbolic_shapes" -> "operator" [];
	"torch.fx.experimental.symbolic_shapes" -> "os" [];
	"torch.fx.experimental.symbolic_shapes" -> "re" [];
	"torch.fx.experimental.symbolic_shapes" -> "sys" [];
	"torch.fx.experimental.symbolic_shapes" -> "threading" [];
	"torch.fx.experimental.symbolic_shapes" -> "traceback" [];
	"torch.fx.experimental.symbolic_shapes" -> "contextlib" [];
	"torch.fx.experimental.symbolic_shapes" -> "dataclasses" [];
	"torch.fx.experimental.symbolic_shapes" -> "enum" [];
	"torch.fx.experimental.symbolic_shapes" -> "atexit" [];
	"torch.fx.experimental.symbolic_shapes" -> "typing" [];
	"torch.fx.experimental.symbolic_shapes" -> "typing_extensions" [];
	"torch.fx.experimental.symbolic_shapes" -> "torch" [];
	"torch.fx.experimental.symbolic_shapes" -> "sympy" [];
	"torch.fx.experimental.symbolic_shapes" -> "copy" [];
	"torch._subclasses.fake_tensor" -> "__future__" [];
	"torch._subclasses.fake_tensor" -> "atexit" [];
	"torch._subclasses.fake_tensor" -> "contextlib" [];
	"torch._subclasses.fake_tensor" -> "dataclasses" [];
	"torch._subclasses.fake_tensor" -> "functools" [];
	"torch._subclasses.fake_tensor" -> "logging" [];
	"torch._subclasses.fake_tensor" -> "math" [];
	"torch._subclasses.fake_tensor" -> "os" [];
	"torch._subclasses.fake_tensor" -> "traceback" [];
	"torch._subclasses.fake_tensor" -> "typing" [];
	"torch._subclasses.fake_tensor" -> "weakref" [];
	"torch._subclasses.fake_tensor" -> "collections" [];
	"torch._subclasses.fake_tensor" -> "typing_extensions" [];
	"torch._subclasses.fake_tensor" -> "torch" [];
	"torch._subclasses.fake_tensor" -> "'torch._C._functorch'" [];
	"torch._subclasses.fake_tensor" -> "types" [];
	"torch._subclasses.fake_tensor" -> "sympy" [];
	"torch._subclasses._fake_tensor_utils" -> "__future__" [];
	"torch._subclasses._fake_tensor_utils" -> "dataclasses" [];
	"torch._subclasses._fake_tensor_utils" -> "typing" [];
	"torch._subclasses._fake_tensor_utils" -> "torch" [];
	"torch._subclasses._fake_tensor_utils" -> "sympy" [];
	"torch.utils._backport_slots" -> "__future__" [];
	"torch.utils._backport_slots" -> "dataclasses" [];
	"torch.utils._backport_slots" -> "itertools" [];
	"torch.utils._backport_slots" -> "typing" [];
	"torch.utils._backport_slots" -> "_typeshed" [];
	"torch._prims_common.wrappers" -> "inspect" [];
	"torch._prims_common.wrappers" -> "warnings" [];
	"torch._prims_common.wrappers" -> "functools" [];
	"torch._prims_common.wrappers" -> "typing" [];
	"torch._prims_common.wrappers" -> "typing_extensions" [];
	"torch._prims_common.wrappers" -> "torch" [];
	"torch._prims_common" -> "__future__" [];
	"torch._prims_common" -> "operator" [];
	"torch._prims_common" -> "warnings" [];
	"torch._prims_common" -> "contextlib" [];
	"torch._prims_common" -> "enum" [];
	"torch._prims_common" -> "functools" [];
	"torch._prims_common" -> "typing" [];
	"torch._prims_common" -> "typing_extensions" [];
	"torch._prims_common" -> "sympy" [];
	"torch._prims" -> "operator" [];
	"torch._prims" -> "enum" [];
	"torch._prims" -> "functools" [];
	"torch._prims" -> "typing" [];
	"torch._prims.rng_prims" -> "typing" [];
	"torch._prims.rng_prims" -> "torch" [];
	"torch._prims.debug_prims" -> "contextlib" [];
	"torch._prims.debug_prims" -> "typing" [];
	"torch._prims.debug_prims" -> "torch" [];
	"torch._decomp.decompositions" -> "functools" [];
	"torch._decomp.decompositions" -> "itertools" [];
	"torch._decomp.decompositions" -> "numbers" [];
	"torch._decomp.decompositions" -> "operator" [];
	"torch._decomp.decompositions" -> "sys" [];
	"torch._decomp.decompositions" -> "enum" [];
	"torch._decomp.decompositions" -> "typing" [];
	"torch._decomp.decompositions" -> "torch" [];
	"torch.library" -> "contextlib" [];
	"torch.library" -> "functools" [];
	"torch.library" -> "inspect" [];
	"torch.library" -> "re" [];
	"torch.library" -> "sys" [];
	"torch.library" -> "traceback" [];
	"torch.library" -> "weakref" [];
	"torch.library" -> "typing" [];
	"torch.library" -> "typing_extensions" [];
	"torch.testing._internal.optests.generate_tests" -> "datetime" [];
	"torch.testing._internal.optests.generate_tests" -> "difflib" [];
	"torch.testing._internal.optests.generate_tests" -> "functools" [];
	"torch.testing._internal.optests.generate_tests" -> "inspect" [];
	"torch.testing._internal.optests.generate_tests" -> "json" [];
	"torch.testing._internal.optests.generate_tests" -> "os" [];
	"torch.testing._internal.optests.generate_tests" -> "re" [];
	"torch.testing._internal.optests.generate_tests" -> "tempfile" [];
	"torch.testing._internal.optests.generate_tests" -> "threading" [];
	"torch.testing._internal.optests.generate_tests" -> "unittest" [];
	"torch.testing._internal.optests.generate_tests" -> "typing" [];
	"torch.testing._internal.optests.generate_tests" -> "torch" [];
	"torch.testing._internal.optests.generate_tests" -> "pytest" [];
	"torch.testing._internal.optests.autograd_registration" -> "contextlib" [];
	"torch.testing._internal.optests.autograd_registration" -> "torch" [];
	"torch.testing._internal.optests.aot_autograd" -> "torch" [];
	"torch.testing._internal.optests.aot_autograd" -> "re" [];
	"torch.testing._internal.optests.make_fx" -> "torch" [];
	"torch.backends.mkldnn" -> "sys" [];
	"torch.backends.mkldnn" -> "contextlib" [];
	"torch.backends.mkldnn" -> "typing" [];
	"torch.backends.mkldnn" -> "torch" [];
	"torch.backends.mkl" -> "torch" [];
	"torch.backends.mha" -> "torch" [];
	"torch.backends.cusparselt" -> "typing" [];
	"torch.backends.cusparselt" -> "torch" [];
	"torch.backends.cudnn" -> "os" [];
	"torch.backends.cudnn" -> "sys" [];
	"torch.backends.cudnn" -> "warnings" [];
	"torch.backends.cudnn" -> "contextlib" [];
	"torch.backends.cudnn" -> "typing" [];
	"torch.backends.cudnn" -> "torch" [];
	"torch.backends.cuda" -> "contextlib" [];
	"torch.backends.cuda" -> "typing" [];
	"torch.backends.cuda" -> "typing_extensions" [];
	"torch.backends.cuda" -> "torch" [];
	"torch.backends.opt_einsum" -> "sys" [];
	"torch.backends.opt_einsum" -> "warnings" [];
	"torch.backends.opt_einsum" -> "contextlib" [];
	"torch.backends.opt_einsum" -> "functools" [];
	"torch.backends.opt_einsum" -> "typing" [];
	"torch.backends.opt_einsum" -> "opt_einsum" [];
	"torch.backends.cpu" -> "torch" [];
	"torch.utils._pytree" -> "dataclasses" [];
	"torch.utils._pytree" -> "functools" [];
	"torch.utils._pytree" -> "importlib" [];
	"torch.utils._pytree" -> "json" [];
	"torch.utils._pytree" -> "sys" [];
	"torch.utils._pytree" -> "threading" [];
	"torch.utils._pytree" -> "types" [];
	"torch.utils._pytree" -> "warnings" [];
	"torch.utils._pytree" -> "collections" [];
	"torch.utils._pytree" -> "typing" [];
	"torch.utils._pytree" -> "typing_extensions" [];
	"torch.utils._cxx_pytree" -> "functools" [];
	"torch.utils._cxx_pytree" -> "sys" [];
	"torch.utils._cxx_pytree" -> "types" [];
	"torch.utils._cxx_pytree" -> "typing" [];
	"torch.utils._cxx_pytree" -> "typing_extensions" [];
	"torch.utils._cxx_pytree" -> "optree" [];
	"torch.autograd.grad_mode" -> "typing" [];
	"torch.autograd.grad_mode" -> "torch" [];
	"torch.nn.utils.stateless" -> "typing" [];
	"torch.nn.utils.stateless" -> "typing_extensions" [];
	"torch.nn.utils.stateless" -> "torch" [];
	"torch.nn.utils.rnn" -> "warnings" [];
	"torch.nn.utils.rnn" -> "typing" [];
	"torch.nn.utils.rnn" -> "typing_extensions" [];
	"torch.nn.utils.rnn" -> "torch" [];
	"torch.nn.utils.parametrizations" -> "enum" [];
	"torch.nn.utils.parametrizations" -> "typing" [];
	"torch.nn.utils.parametrizations" -> "torch" [];
	"torch.nn.utils.parametrize" -> "collections" [];
	"torch.nn.utils.parametrize" -> "copyreg" [];
	"torch.nn.utils.parametrize" -> "contextlib" [];
	"torch.nn.utils.parametrize" -> "copy" [];
	"torch.nn.utils.parametrize" -> "typing" [];
	"torch.nn.utils.parametrize" -> "torch" [];
	"torch.nn.modules.container" -> "operator" [];
	"torch.nn.modules.container" -> "collections" [];
	"torch.nn.modules.container" -> "itertools" [];
	"torch.nn.modules.container" -> "typing" [];
	"torch.nn.modules.container" -> "typing_extensions" [];
	"torch.nn.modules.container" -> "torch" [];
	"torch.nn.parallel" -> "typing_extensions" [];
	"torch.nn.parallel.replicate" -> "collections" [];
	"torch.nn.parallel.replicate" -> "typing" [];
	"torch.nn.parallel.replicate" -> "torch" [];
	"torch.nn.parallel.parallel_apply" -> "threading" [];
	"torch.nn.parallel.parallel_apply" -> "typing" [];
	"torch.nn.parallel.parallel_apply" -> "torch" [];
	"torch.nn.parallel.data_parallel" -> "operator" [];
	"torch.nn.parallel.data_parallel" -> "warnings" [];
	"torch.nn.parallel.data_parallel" -> "itertools" [];
	"torch.nn.parallel.data_parallel" -> "typing" [];
	"torch.nn.parallel.data_parallel" -> "torch" [];
	"torch.nn.functional" -> "importlib" [];
	"torch.nn.functional" -> "math" [];
	"torch.nn.functional" -> "warnings" [];
	"torch.nn.functional" -> "typing" [];
	"torch.nn.functional" -> "torch" [];
	"torch.nn.functional" -> "numpy" [];
	"torch._torch_docs" -> "re" [];
	"torch._torch_docs" -> "typing" [];
	"torch.nn.attention" -> "contextlib" [];
	"torch.nn.attention" -> "typing" [];
	"torch.nn.attention" -> "warnings" [];
	"torch.nn.modules.upsampling" -> "typing" [];
	"torch.nn.modules.upsampling" -> "torch" [];
	"torch.nn.modules.transformer" -> "copy" [];
	"torch.nn.modules.transformer" -> "warnings" [];
	"torch.nn.modules.transformer" -> "typing" [];
	"torch.nn.modules.transformer" -> "torch" [];
	"torch.nn.modules.sparse" -> "typing" [];
	"torch.nn.modules.sparse" -> "torch" [];
	"torch.nn.modules.rnn" -> "math" [];
	"torch.nn.modules.rnn" -> "numbers" [];
	"torch.nn.modules.rnn" -> "warnings" [];
	"torch.nn.modules.rnn" -> "weakref" [];
	"torch.nn.modules.rnn" -> "typing" [];
	"torch.nn.modules.rnn" -> "typing_extensions" [];
	"torch.nn.modules.rnn" -> "torch" [];
	"torch.nn.modules.pixelshuffle" -> "torch" [];
	"torch.nn.modules.padding" -> "typing" [];
	"torch.nn.modules.padding" -> "torch" [];
	"torch.nn.modules.normalization" -> "numbers" [];
	"torch.nn.modules.normalization" -> "typing" [];
	"torch.nn.modules.normalization" -> "torch" [];
	"torch.nn.modules.loss" -> "typing" [];
	"torch.nn.modules.loss" -> "typing_extensions" [];
	"torch.nn.modules.loss" -> "torch" [];
	"torch.nn.modules.instancenorm" -> "warnings" [];
	"torch.nn.modules.instancenorm" -> "torch" [];
	"torch.nn.modules.fold" -> "torch" [];
	"torch.nn.modules.flatten" -> "typing" [];
	"torch.nn.modules.flatten" -> "torch" [];
	"torch.nn.modules.dropout" -> "torch" [];
	"torch.nn.modules.distance" -> "torch" [];
	"torch.nn.modules.conv" -> "math" [];
	"torch.nn.modules.conv" -> "typing" [];
	"torch.nn.modules.conv" -> "typing_extensions" [];
	"torch.nn.modules.conv" -> "torch" [];
	"torch.nn.modules.channelshuffle" -> "torch" [];
	"torch.nn.modules.adaptive" -> "collections" [];
	"torch.nn.modules.adaptive" -> "typing" [];
	"torch.nn.modules.adaptive" -> "torch" [];
	"torch.nn.modules.activation" -> "warnings" [];
	"torch.nn.modules.activation" -> "typing" [];
	"torch.nn.modules.activation" -> "torch" [];
	"torch.nn.modules.linear" -> "math" [];
	"torch.nn.modules.linear" -> "typing" [];
	"torch.nn.modules.linear" -> "torch" [];
	"torch.nn.init" -> "math" [];
	"torch.nn.init" -> "warnings" [];
	"torch.nn.init" -> "typing" [];
	"torch.nn.init" -> "torch" [];
	"torch.nn.grad" -> "torch" [];
	"torch.nn._reduction" -> "warnings" [];
	"torch.nn._reduction" -> "typing" [];
	"torch.nn.parameter" -> "collections" [];
	"torch.nn.parameter" -> "torch" [];
	"torch.types" -> "builtins" [];
	"torch.types" -> "typing" [];
	"torch.types" -> "typing_extensions" [];
	"torch.storage" -> "__future__" [];
	"torch.storage" -> "collections" [];
	"torch.storage" -> "copy" [];
	"torch.storage" -> "functools" [];
	"torch.storage" -> "io" [];
	"torch.storage" -> "threading" [];
	"torch.storage" -> "warnings" [];
	"torch.storage" -> "typing" [];
	"torch.storage" -> "typing_extensions" [];
	"torch.storage" -> "numpy" [];
	"torch._utils" -> "copyreg" [];
	"torch._utils" -> "functools" [];
	"torch._utils" -> "logging" [];
	"torch._utils" -> "sys" [];
	"torch._utils" -> "traceback" [];
	"torch._utils" -> "warnings" [];
	"torch._utils" -> "collections" [];
	"torch._utils" -> "typing" [];
	"torch._utils" -> "typing_extensions" [];
	"torch._sources" -> "ast" [];
	"torch._sources" -> "functools" [];
	"torch._sources" -> "inspect" [];
	"torch._sources" -> "textwrap" [];
	"torch._sources" -> "typing" [];
	"torch._sources" -> "'torch._C._jit_tree_views'" [];
	"torch._weights_only_unpickler" -> "functools" [];
	"torch._weights_only_unpickler" -> "warnings" [];
	"torch._weights_only_unpickler" -> "_codecs" [];
	"torch._weights_only_unpickler" -> "collections" [];
	"torch._weights_only_unpickler" -> "pickle" [];
	"torch._weights_only_unpickler" -> "struct" [];
	"torch._weights_only_unpickler" -> "sys" [];
	"torch._weights_only_unpickler" -> "typing" [];
	"torch.fx.traceback" -> "traceback" [];
	"torch.fx.traceback" -> "contextlib" [];
	"torch.fx.traceback" -> "typing" [];
	"torch.fx._compatibility" -> "typing" [];
	"torch.fx._compatibility" -> "textwrap" [];
	"torch.fx._lazy_graph_module" -> "contextlib" [];
	"torch.fx.proxy" -> "enum" [];
	"torch.fx.proxy" -> "dis" [];
	"torch.fx.proxy" -> "copy" [];
	"torch.fx.proxy" -> "sys" [];
	"torch.fx.proxy" -> "torch" [];
	"torch.fx.proxy" -> "inspect" [];
	"torch.fx.proxy" -> "operator" [];
	"torch.fx.proxy" -> "collections" [];
	"torch.fx.proxy" -> "logging" [];
	"torch.fx.proxy" -> "dataclasses" [];
	"torch.fx.proxy" -> "typing" [];
	"torch.fx.proxy" -> "bisect" [];
	"torch.fx.node" -> "typing" [];
	"torch.fx.node" -> "torch" [];
	"torch.fx.node" -> "builtins" [];
	"torch.fx.node" -> "types" [];
	"torch.fx.node" -> "inspect" [];
	"torch.fx.node" -> "warnings" [];
	"torch.fx.graph" -> "collections" [];
	"torch.fx.graph" -> "os" [];
	"torch.fx.graph" -> "contextlib" [];
	"torch.fx.graph" -> "typing" [];
	"torch.fx.graph" -> "dataclasses" [];
	"torch.fx.graph" -> "copy" [];
	"torch.fx.graph" -> "enum" [];
	"torch.fx.graph" -> "torch" [];
	"torch.fx.graph" -> "keyword" [];
	"torch.fx.graph" -> "re" [];
	"torch.fx.graph" -> "builtins" [];
	"torch.fx.graph" -> "math" [];
	"torch.fx.graph" -> "warnings" [];
	"torch.fx.graph" -> "inspect" [];
	"torch.fx.graph" -> "tabulate" [];
	"torch.fx._symbolic_trace" -> "builtins" [];
	"torch.fx._symbolic_trace" -> "copy" [];
	"torch.fx._symbolic_trace" -> "contextlib" [];
	"torch.fx._symbolic_trace" -> "functools" [];
	"torch.fx._symbolic_trace" -> "inspect" [];
	"torch.fx._symbolic_trace" -> "math" [];
	"torch.fx._symbolic_trace" -> "os" [];
	"torch.fx._symbolic_trace" -> "warnings" [];
	"torch.fx._symbolic_trace" -> "collections" [];
	"torch.fx._symbolic_trace" -> "itertools" [];
	"torch.fx._symbolic_trace" -> "types" [];
	"torch.fx._symbolic_trace" -> "typing" [];
	"torch.fx._symbolic_trace" -> "torch" [];
	"torch.fx.graph_module" -> "contextlib" [];
	"torch.fx.graph_module" -> "copy" [];
	"torch.fx.graph_module" -> "itertools" [];
	"torch.fx.graph_module" -> "linecache" [];
	"torch.fx.graph_module" -> "os" [];
	"torch.fx.graph_module" -> "sys" [];
	"torch.fx.graph_module" -> "traceback" [];
	"torch.fx.graph_module" -> "warnings" [];
	"torch.fx.graph_module" -> "pathlib" [];
	"torch.fx.graph_module" -> "typing" [];
	"torch.fx.graph_module" -> "torch" [];
	"torch.fx.subgraph_rewriter" -> "copy" [];
	"torch.fx.subgraph_rewriter" -> "dataclasses" [];
	"torch.fx.subgraph_rewriter" -> "typing" [];
	"torch.fx.subgraph_rewriter" -> "torch" [];
	"torch.fx.passes.utils.matcher_with_name_node_map_utils" -> "typing" [];
	"transformers.utils.hub" -> "json" [];
	"transformers.utils.hub" -> "os" [];
	"transformers.utils.hub" -> "re" [];
	"transformers.utils.hub" -> "shutil" [];
	"transformers.utils.hub" -> "sys" [];
	"transformers.utils.hub" -> "tempfile" [];
	"transformers.utils.hub" -> "traceback" [];
	"transformers.utils.hub" -> "warnings" [];
	"transformers.utils.hub" -> "concurrent" [];
	"transformers.utils.hub" -> "pathlib" [];
	"transformers.utils.hub" -> "typing" [];
	"transformers.utils.hub" -> "uuid" [];
	"transformers.utils.hub" -> "huggingface_hub" [];
	"transformers.utils.hub" -> "requests" [];
	"transformers.utils.generic" -> "inspect" [];
	"transformers.utils.generic" -> "tempfile" [];
	"transformers.utils.generic" -> "warnings" [];
	"transformers.utils.generic" -> "collections" [];
	"transformers.utils.generic" -> "contextlib" [];
	"transformers.utils.generic" -> "dataclasses" [];
	"transformers.utils.generic" -> "enum" [];
	"transformers.utils.generic" -> "functools" [];
	"transformers.utils.generic" -> "typing" [];
	"transformers.utils.generic" -> "numpy" [];
	"transformers.utils.generic" -> "packaging" [];
	"transformers.utils.generic" -> "'jax.core'" [];
	"transformers.utils.generic" -> "torch" [];
	"transformers.utils.generic" -> "tensorflow" [];
	"transformers.utils.generic" -> "'jax.numpy'" [];
	"transformers.utils.generic" -> "'mlx.core'" [];
	"huggingface_hub.utils._deprecation" -> "warnings" [];
	"huggingface_hub.utils._deprecation" -> "functools" [];
	"huggingface_hub.utils._deprecation" -> "inspect" [];
	"huggingface_hub.utils._deprecation" -> "typing" [];
	"huggingface_hub.utils._validators" -> "inspect" [];
	"huggingface_hub.utils._validators" -> "re" [];
	"huggingface_hub.utils._validators" -> "warnings" [];
	"huggingface_hub.utils._validators" -> "functools" [];
	"huggingface_hub.utils._validators" -> "itertools" [];
	"huggingface_hub.utils._validators" -> "typing" [];
	"huggingface_hub.utils._typing" -> "sys" [];
	"huggingface_hub.utils._typing" -> "typing" [];
	"huggingface_hub.utils._typing" -> "types" [];
	"huggingface_hub.utils._telemetry" -> "queue" [];
	"huggingface_hub.utils._telemetry" -> "threading" [];
	"huggingface_hub.utils._telemetry" -> "typing" [];
	"huggingface_hub.utils._telemetry" -> "huggingface_hub" [];
	"huggingface_hub.utils._subprocess" -> "os" [];
	"huggingface_hub.utils._subprocess" -> "subprocess" [];
	"huggingface_hub.utils._subprocess" -> "sys" [];
	"huggingface_hub.utils._subprocess" -> "contextlib" [];
	"huggingface_hub.utils._subprocess" -> "io" [];
	"huggingface_hub.utils._subprocess" -> "pathlib" [];
	"huggingface_hub.utils._subprocess" -> "typing" [];
	"huggingface_hub.utils._safetensors" -> "functools" [];
	"huggingface_hub.utils._safetensors" -> "operator" [];
	"huggingface_hub.utils._safetensors" -> "collections" [];
	"huggingface_hub.utils._safetensors" -> "dataclasses" [];
	"huggingface_hub.utils._safetensors" -> "typing" [];
	"huggingface_hub.utils._runtime" -> "os" [];
	"huggingface_hub.utils._runtime" -> "platform" [];
	"huggingface_hub.utils._runtime" -> "sys" [];
	"huggingface_hub.utils._runtime" -> "warnings" [];
	"huggingface_hub.utils._runtime" -> "typing" [];
	"huggingface_hub.utils._runtime" -> "huggingface_hub" [];
	"huggingface_hub.utils._runtime" -> "pydantic" [];
	"huggingface_hub.utils._paths" -> "fnmatch" [];
	"huggingface_hub.utils._paths" -> "pathlib" [];
	"huggingface_hub.utils._paths" -> "typing" [];
	"huggingface_hub.utils._pagination" -> "typing" [];
	"huggingface_hub.utils._pagination" -> "requests" [];
	"huggingface_hub.utils._http" -> "io" [];
	"huggingface_hub.utils._http" -> "os" [];
	"huggingface_hub.utils._http" -> "re" [];
	"huggingface_hub.utils._http" -> "threading" [];
	"huggingface_hub.utils._http" -> "time" [];
	"huggingface_hub.utils._http" -> "uuid" [];
	"huggingface_hub.utils._http" -> "functools" [];
	"huggingface_hub.utils._http" -> "http" [];
	"huggingface_hub.utils._http" -> "typing" [];
	"huggingface_hub.utils._http" -> "requests" [];
	"huggingface_hub.utils._http" -> "huggingface_hub" [];
	"huggingface_hub.utils._lfs" -> "io" [];
	"huggingface_hub.utils._lfs" -> "os" [];
	"huggingface_hub.utils._lfs" -> "contextlib" [];
	"huggingface_hub.utils._lfs" -> "typing" [];
	"huggingface_hub.utils._hf_folder" -> "warnings" [];
	"huggingface_hub.utils._hf_folder" -> "pathlib" [];
	"huggingface_hub.utils._hf_folder" -> "typing" [];
	"huggingface_hub.utils._hf_folder" -> "huggingface_hub" [];
	"huggingface_hub.utils._headers" -> "typing" [];
	"huggingface_hub.utils._headers" -> "huggingface_hub" [];
	"huggingface_hub.utils._git_credential" -> "re" [];
	"huggingface_hub.utils._git_credential" -> "subprocess" [];
	"huggingface_hub.utils._git_credential" -> "typing" [];
	"huggingface_hub.utils._fixes" -> "requests" [];
	"huggingface_hub.utils._fixes" -> "simplejson" [];
	"huggingface_hub.utils._fixes" -> "json" [];
	"huggingface_hub.utils._fixes" -> "contextlib" [];
	"huggingface_hub.utils._fixes" -> "os" [];
	"huggingface_hub.utils._fixes" -> "shutil" [];
	"huggingface_hub.utils._fixes" -> "stat" [];
	"huggingface_hub.utils._fixes" -> "tempfile" [];
	"huggingface_hub.utils._fixes" -> "functools" [];
	"huggingface_hub.utils._fixes" -> "pathlib" [];
	"huggingface_hub.utils._fixes" -> "typing" [];
	"huggingface_hub.utils._fixes" -> "yaml" [];
	"huggingface_hub.utils._fixes" -> "filelock" [];
	"huggingface_hub.utils._fixes" -> "huggingface_hub" [];
	"huggingface_hub.utils._experimental" -> "warnings" [];
	"huggingface_hub.utils._experimental" -> "functools" [];
	"huggingface_hub.utils._experimental" -> "typing" [];
	"huggingface_hub.utils._experimental" -> "huggingface_hub" [];
	"huggingface_hub.utils._datetime" -> "datetime" [];
	"huggingface_hub.utils._chunk_utils" -> "itertools" [];
	"huggingface_hub.utils._chunk_utils" -> "typing" [];
	"huggingface_hub.utils._cache_manager" -> "os" [];
	"huggingface_hub.utils._cache_manager" -> "shutil" [];
	"huggingface_hub.utils._cache_manager" -> "time" [];
	"huggingface_hub.utils._cache_manager" -> "collections" [];
	"huggingface_hub.utils._cache_manager" -> "dataclasses" [];
	"huggingface_hub.utils._cache_manager" -> "pathlib" [];
	"huggingface_hub.utils._cache_manager" -> "typing" [];
	"huggingface_hub.commands._cli_utils" -> "os" [];
	"huggingface_hub.commands._cli_utils" -> "typing" [];
	"huggingface_hub.commands" -> "abc" [];
	"huggingface_hub.commands" -> "argparse" [];
	"huggingface_hub.utils.logging" -> "logging" [];
	"huggingface_hub.utils.logging" -> "os" [];
	"huggingface_hub.utils.logging" -> "typing" [];
	"huggingface_hub.utils._cache_assets" -> "pathlib" [];
	"huggingface_hub.utils._cache_assets" -> "typing" [];
	"huggingface_hub.utils._auth" -> "configparser" [];
	"huggingface_hub.utils._auth" -> "logging" [];
	"huggingface_hub.utils._auth" -> "os" [];
	"huggingface_hub.utils._auth" -> "warnings" [];
	"huggingface_hub.utils._auth" -> "pathlib" [];
	"huggingface_hub.utils._auth" -> "threading" [];
	"huggingface_hub.utils._auth" -> "typing" [];
	"huggingface_hub.utils._auth" -> "huggingface_hub" [];
	"huggingface_hub.utils._auth" -> "google" [];
	"huggingface_hub.utils._auth" -> "'google.colab'" [];
	"huggingface_hub.utils.tqdm" -> "io" [];
	"huggingface_hub.utils.tqdm" -> "warnings" [];
	"huggingface_hub.utils.tqdm" -> "contextlib" [];
	"huggingface_hub.utils.tqdm" -> "pathlib" [];
	"huggingface_hub.utils.tqdm" -> "typing" [];
	"tqdm.auto" -> "warnings" [];
	"tqdm.asyncio" -> "asyncio" [];
	"tqdm.asyncio" -> "sys" [];
	"tqdm.autonotebook" -> "sys" [];
	"tqdm.autonotebook" -> "warnings" [];
	"huggingface_hub.errors" -> "pathlib" [];
	"huggingface_hub.errors" -> "typing" [];
	"huggingface_hub.errors" -> "requests" [];
	"huggingface_hub.file_download" -> "contextlib" [];
	"huggingface_hub.file_download" -> "copy" [];
	"huggingface_hub.file_download" -> "errno" [];
	"huggingface_hub.file_download" -> "inspect" [];
	"huggingface_hub.file_download" -> "os" [];
	"huggingface_hub.file_download" -> "re" [];
	"huggingface_hub.file_download" -> "shutil" [];
	"huggingface_hub.file_download" -> "stat" [];
	"huggingface_hub.file_download" -> "time" [];
	"huggingface_hub.file_download" -> "uuid" [];
	"huggingface_hub.file_download" -> "warnings" [];
	"huggingface_hub.file_download" -> "dataclasses" [];
	"huggingface_hub.file_download" -> "pathlib" [];
	"huggingface_hub.file_download" -> "typing" [];
	"huggingface_hub.file_download" -> "requests" [];
	"huggingface_hub.file_download" -> "hf_transfer" [];
	"huggingface_hub.utils.sha" -> "typing" [];
	"huggingface_hub.utils.insecure_hashlib" -> "functools" [];
	"huggingface_hub.utils.insecure_hashlib" -> "hashlib" [];
	"huggingface_hub.utils.insecure_hashlib" -> "sys" [];
	"huggingface_hub._local_folder" -> "logging" [];
	"huggingface_hub._local_folder" -> "os" [];
	"huggingface_hub._local_folder" -> "time" [];
	"huggingface_hub._local_folder" -> "dataclasses" [];
	"huggingface_hub._local_folder" -> "functools" [];
	"huggingface_hub._local_folder" -> "pathlib" [];
	"huggingface_hub._local_folder" -> "typing" [];
	"huggingface_hub.constants" -> "os" [];
	"huggingface_hub.constants" -> "re" [];
	"huggingface_hub.constants" -> "typing" [];
	"huggingface_hub" -> "importlib" [];
	"huggingface_hub" -> "os" [];
	"huggingface_hub" -> "sys" [];
	"huggingface_hub" -> "typing" [];
	"huggingface_hub.serialization._torch" -> "importlib" [];
	"huggingface_hub.serialization._torch" -> "json" [];
	"huggingface_hub.serialization._torch" -> "os" [];
	"huggingface_hub.serialization._torch" -> "re" [];
	"huggingface_hub.serialization._torch" -> "collections" [];
	"huggingface_hub.serialization._torch" -> "functools" [];
	"huggingface_hub.serialization._torch" -> "pathlib" [];
	"huggingface_hub.serialization._torch" -> "typing" [];
	"huggingface_hub.serialization._torch" -> "huggingface_hub" [];
	"huggingface_hub.serialization._torch" -> "torch" [];
	"huggingface_hub.serialization._torch" -> "torch_xla" [];
	"huggingface_hub.serialization._torch" -> "'torch_xla.core'" [];
	"huggingface_hub.serialization._tensorflow" -> "math" [];
	"huggingface_hub.serialization._tensorflow" -> "re" [];
	"huggingface_hub.serialization._tensorflow" -> "typing" [];
	"huggingface_hub.serialization._tensorflow" -> "huggingface_hub" [];
	"huggingface_hub.serialization._tensorflow" -> "tensorflow" [];
	"huggingface_hub.serialization._base" -> "dataclasses" [];
	"huggingface_hub.serialization._base" -> "typing" [];
	"huggingface_hub.serialization._base" -> "huggingface_hub" [];
	"huggingface_hub.repository" -> "atexit" [];
	"huggingface_hub.repository" -> "os" [];
	"huggingface_hub.repository" -> "re" [];
	"huggingface_hub.repository" -> "subprocess" [];
	"huggingface_hub.repository" -> "threading" [];
	"huggingface_hub.repository" -> "time" [];
	"huggingface_hub.repository" -> "contextlib" [];
	"huggingface_hub.repository" -> "pathlib" [];
	"huggingface_hub.repository" -> "typing" [];
	"huggingface_hub.lfs" -> "inspect" [];
	"huggingface_hub.lfs" -> "io" [];
	"huggingface_hub.lfs" -> "re" [];
	"huggingface_hub.lfs" -> "warnings" [];
	"huggingface_hub.lfs" -> "dataclasses" [];
	"huggingface_hub.lfs" -> "math" [];
	"huggingface_hub.lfs" -> "os.path" [];
	"huggingface_hub.lfs" -> "pathlib" [];
	"huggingface_hub.lfs" -> "typing" [];
	"huggingface_hub.lfs" -> "hf_transfer" [];
	"huggingface_hub._commit_api" -> "base64" [];
	"huggingface_hub._commit_api" -> "io" [];
	"huggingface_hub._commit_api" -> "os" [];
	"huggingface_hub._commit_api" -> "warnings" [];
	"huggingface_hub._commit_api" -> "collections" [];
	"huggingface_hub._commit_api" -> "contextlib" [];
	"huggingface_hub._commit_api" -> "dataclasses" [];
	"huggingface_hub._commit_api" -> "itertools" [];
	"huggingface_hub._commit_api" -> "pathlib" [];
	"huggingface_hub._commit_api" -> "typing" [];
	"tqdm.contrib.concurrent" -> "contextlib" [];
	"tqdm.contrib.concurrent" -> "operator" [];
	"tqdm.contrib.concurrent" -> "os" [];
	"tqdm.contrib.concurrent" -> "warnings" [];
	"tqdm.contrib" -> "warnings" [];
	"tqdm.contrib" -> "numpy" [];
	"huggingface_hub.repocard_data" -> "copy" [];
	"huggingface_hub.repocard_data" -> "collections" [];
	"huggingface_hub.repocard_data" -> "dataclasses" [];
	"huggingface_hub.repocard_data" -> "typing" [];
	"huggingface_hub.repocard" -> "os" [];
	"huggingface_hub.repocard" -> "re" [];
	"huggingface_hub.repocard" -> "pathlib" [];
	"huggingface_hub.repocard" -> "typing" [];
	"huggingface_hub.repocard" -> "requests" [];
	"huggingface_hub.repocard" -> "yaml" [];
	"huggingface_hub.repocard" -> "jinja2" [];
	"huggingface_hub.keras_mixin" -> "json" [];
	"huggingface_hub.keras_mixin" -> "os" [];
	"huggingface_hub.keras_mixin" -> "warnings" [];
	"huggingface_hub.keras_mixin" -> "functools" [];
	"huggingface_hub.keras_mixin" -> "pathlib" [];
	"huggingface_hub.keras_mixin" -> "shutil" [];
	"huggingface_hub.keras_mixin" -> "typing" [];
	"huggingface_hub.keras_mixin" -> "tf_keras" [];
	"huggingface_hub.keras_mixin" -> "tensorflow" [];
	"huggingface_hub.inference_api" -> "io" [];
	"huggingface_hub.inference_api" -> "typing" [];
	"huggingface_hub.inference_api" -> "PIL" [];
	"huggingface_hub.inference._generated.types.zero_shot_object_detection" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.zero_shot_object_detection" -> "typing" [];
	"huggingface_hub.inference._generated.types.zero_shot_image_classification" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.zero_shot_image_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.zero_shot_classification" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.zero_shot_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.visual_question_answering" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.visual_question_answering" -> "typing" [];
	"huggingface_hub.inference._generated.types.video_classification" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.video_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.translation" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.translation" -> "typing" [];
	"huggingface_hub.inference._generated.types.token_classification" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.token_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_to_speech" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.text_to_speech" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_to_image" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.text_to_image" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_to_audio" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.text_to_audio" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_generation" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.text_generation" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_classification" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.text_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.text2text_generation" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.text2text_generation" -> "typing" [];
	"huggingface_hub.inference._generated.types.table_question_answering" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.table_question_answering" -> "typing" [];
	"huggingface_hub.inference._generated.types.summarization" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.summarization" -> "typing" [];
	"huggingface_hub.inference._generated.types.sentence_similarity" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.sentence_similarity" -> "typing" [];
	"huggingface_hub.inference._generated.types.question_answering" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.question_answering" -> "typing" [];
	"huggingface_hub.inference._generated.types.object_detection" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.object_detection" -> "typing" [];
	"huggingface_hub.inference._generated.types.image_to_text" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.image_to_text" -> "typing" [];
	"huggingface_hub.inference._generated.types.image_to_image" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.image_to_image" -> "typing" [];
	"huggingface_hub.inference._generated.types.image_segmentation" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.image_segmentation" -> "typing" [];
	"huggingface_hub.inference._generated.types.image_classification" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.image_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.fill_mask" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.fill_mask" -> "typing" [];
	"huggingface_hub.inference._generated.types.feature_extraction" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.feature_extraction" -> "typing" [];
	"huggingface_hub.inference._generated.types.document_question_answering" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.document_question_answering" -> "typing" [];
	"huggingface_hub.inference._generated.types.depth_estimation" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.depth_estimation" -> "typing" [];
	"huggingface_hub.inference._generated.types.chat_completion" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.chat_completion" -> "typing" [];
	"huggingface_hub.inference._generated.types.base" -> "inspect" [];
	"huggingface_hub.inference._generated.types.base" -> "json" [];
	"huggingface_hub.inference._generated.types.base" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.base" -> "typing" [];
	"huggingface_hub.inference._generated.types.automatic_speech_recognition" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.automatic_speech_recognition" -> "typing" [];
	"huggingface_hub.inference._generated.types.audio_to_audio" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.audio_to_audio" -> "typing" [];
	"huggingface_hub.inference._generated.types.audio_classification" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.audio_classification" -> "typing" [];
	"huggingface_hub.inference._generated._async_client" -> "asyncio" [];
	"huggingface_hub.inference._generated._async_client" -> "base64" [];
	"huggingface_hub.inference._generated._async_client" -> "logging" [];
	"huggingface_hub.inference._generated._async_client" -> "re" [];
	"huggingface_hub.inference._generated._async_client" -> "time" [];
	"huggingface_hub.inference._generated._async_client" -> "warnings" [];
	"huggingface_hub.inference._generated._async_client" -> "typing" [];
	"huggingface_hub.inference._generated._async_client" -> "numpy" [];
	"huggingface_hub.inference._generated._async_client" -> "aiohttp" [];
	"huggingface_hub.inference._generated._async_client" -> "'PIL.Image'" [];
	"huggingface_hub.inference._common" -> "base64" [];
	"huggingface_hub.inference._common" -> "io" [];
	"huggingface_hub.inference._common" -> "json" [];
	"huggingface_hub.inference._common" -> "logging" [];
	"huggingface_hub.inference._common" -> "contextlib" [];
	"huggingface_hub.inference._common" -> "dataclasses" [];
	"huggingface_hub.inference._common" -> "pathlib" [];
	"huggingface_hub.inference._common" -> "typing" [];
	"huggingface_hub.inference._common" -> "requests" [];
	"huggingface_hub.inference._common" -> "aiohttp" [];
	"huggingface_hub.inference._common" -> "'PIL.Image'" [];
	"huggingface_hub.inference._common" -> "numpy" [];
	"huggingface_hub.inference._common" -> "PIL" [];
	"huggingface_hub.inference._client" -> "base64" [];
	"huggingface_hub.inference._client" -> "logging" [];
	"huggingface_hub.inference._client" -> "re" [];
	"huggingface_hub.inference._client" -> "time" [];
	"huggingface_hub.inference._client" -> "warnings" [];
	"huggingface_hub.inference._client" -> "typing" [];
	"huggingface_hub.inference._client" -> "requests" [];
	"huggingface_hub.inference._client" -> "numpy" [];
	"huggingface_hub.inference._client" -> "'PIL.Image'" [];
	"huggingface_hub.hub_mixin" -> "inspect" [];
	"huggingface_hub.hub_mixin" -> "json" [];
	"huggingface_hub.hub_mixin" -> "os" [];
	"huggingface_hub.hub_mixin" -> "warnings" [];
	"huggingface_hub.hub_mixin" -> "dataclasses" [];
	"huggingface_hub.hub_mixin" -> "pathlib" [];
	"huggingface_hub.hub_mixin" -> "typing" [];
	"huggingface_hub.hub_mixin" -> "_typeshed" [];
	"huggingface_hub.hub_mixin" -> "torch" [];
	"huggingface_hub.hub_mixin" -> "safetensors" [];
	"huggingface_hub.hf_file_system" -> "inspect" [];
	"huggingface_hub.hf_file_system" -> "os" [];
	"huggingface_hub.hf_file_system" -> "re" [];
	"huggingface_hub.hf_file_system" -> "tempfile" [];
	"huggingface_hub.hf_file_system" -> "collections" [];
	"huggingface_hub.hf_file_system" -> "dataclasses" [];
	"huggingface_hub.hf_file_system" -> "datetime" [];
	"huggingface_hub.hf_file_system" -> "itertools" [];
	"huggingface_hub.hf_file_system" -> "pathlib" [];
	"huggingface_hub.hf_file_system" -> "typing" [];
	"huggingface_hub.hf_file_system" -> "fsspec" [];
	"huggingface_hub.hf_file_system" -> "requests" [];
	"huggingface_hub.hf_api" -> "__future__" [];
	"huggingface_hub.hf_api" -> "inspect" [];
	"huggingface_hub.hf_api" -> "json" [];
	"huggingface_hub.hf_api" -> "re" [];
	"huggingface_hub.hf_api" -> "struct" [];
	"huggingface_hub.hf_api" -> "warnings" [];
	"huggingface_hub.hf_api" -> "collections" [];
	"huggingface_hub.hf_api" -> "dataclasses" [];
	"huggingface_hub.hf_api" -> "datetime" [];
	"huggingface_hub.hf_api" -> "functools" [];
	"huggingface_hub.hf_api" -> "itertools" [];
	"huggingface_hub.hf_api" -> "pathlib" [];
	"huggingface_hub.hf_api" -> "typing" [];
	"huggingface_hub.hf_api" -> "requests" [];
	"huggingface_hub.utils.endpoint_helpers" -> "math" [];
	"huggingface_hub.utils.endpoint_helpers" -> "re" [];
	"huggingface_hub.utils.endpoint_helpers" -> "typing" [];
	"huggingface_hub._upload_large_folder" -> "enum" [];
	"huggingface_hub._upload_large_folder" -> "logging" [];
	"huggingface_hub._upload_large_folder" -> "os" [];
	"huggingface_hub._upload_large_folder" -> "queue" [];
	"huggingface_hub._upload_large_folder" -> "shutil" [];
	"huggingface_hub._upload_large_folder" -> "sys" [];
	"huggingface_hub._upload_large_folder" -> "threading" [];
	"huggingface_hub._upload_large_folder" -> "time" [];
	"huggingface_hub._upload_large_folder" -> "traceback" [];
	"huggingface_hub._upload_large_folder" -> "datetime" [];
	"huggingface_hub._upload_large_folder" -> "pathlib" [];
	"huggingface_hub._upload_large_folder" -> "typing" [];
	"huggingface_hub.fastai_utils" -> "json" [];
	"huggingface_hub.fastai_utils" -> "os" [];
	"huggingface_hub.fastai_utils" -> "pathlib" [];
	"huggingface_hub.fastai_utils" -> "pickle" [];
	"huggingface_hub.fastai_utils" -> "typing" [];
	"huggingface_hub.fastai_utils" -> "packaging" [];
	"huggingface_hub.fastai_utils" -> "toml" [];
	"huggingface_hub.fastai_utils" -> "fastai" [];
	"huggingface_hub.community" -> "dataclasses" [];
	"huggingface_hub.community" -> "datetime" [];
	"huggingface_hub.community" -> "typing" [];
	"huggingface_hub._webhooks_server" -> "atexit" [];
	"huggingface_hub._webhooks_server" -> "inspect" [];
	"huggingface_hub._webhooks_server" -> "os" [];
	"huggingface_hub._webhooks_server" -> "functools" [];
	"huggingface_hub._webhooks_server" -> "typing" [];
	"huggingface_hub._webhooks_server" -> "gradio" [];
	"huggingface_hub._webhooks_server" -> "fastapi" [];
	"huggingface_hub._webhooks_server" -> "'fastapi.responses'" [];
	"huggingface_hub._webhooks_payload" -> "typing" [];
	"huggingface_hub._webhooks_payload" -> "pydantic" [];
	"huggingface_hub._tensorboard_logger" -> "pathlib" [];
	"huggingface_hub._tensorboard_logger" -> "typing" [];
	"huggingface_hub._tensorboard_logger" -> "tensorboardX" [];
	"huggingface_hub._space_api" -> "dataclasses" [];
	"huggingface_hub._space_api" -> "datetime" [];
	"huggingface_hub._space_api" -> "enum" [];
	"huggingface_hub._space_api" -> "typing" [];
	"huggingface_hub._snapshot_download" -> "os" [];
	"huggingface_hub._snapshot_download" -> "pathlib" [];
	"huggingface_hub._snapshot_download" -> "typing" [];
	"huggingface_hub._snapshot_download" -> "requests" [];
	"huggingface_hub._multi_commits" -> "re" [];
	"huggingface_hub._multi_commits" -> "dataclasses" [];
	"huggingface_hub._multi_commits" -> "typing" [];
	"huggingface_hub._login" -> "os" [];
	"huggingface_hub._login" -> "subprocess" [];
	"huggingface_hub._login" -> "functools" [];
	"huggingface_hub._login" -> "getpass" [];
	"huggingface_hub._login" -> "pathlib" [];
	"huggingface_hub._login" -> "typing" [];
	"huggingface_hub._login" -> "'ipywidgets.widgets'" [];
	"huggingface_hub._login" -> "'IPython.display'" [];
	"huggingface_hub.commands.delete_cache" -> "os" [];
	"huggingface_hub.commands.delete_cache" -> "argparse" [];
	"huggingface_hub.commands.delete_cache" -> "functools" [];
	"huggingface_hub.commands.delete_cache" -> "tempfile" [];
	"huggingface_hub.commands.delete_cache" -> "typing" [];
	"huggingface_hub.commands.delete_cache" -> "InquirerPy" [];
	"huggingface_hub.commands.delete_cache" -> "'InquirerPy.base'" [];
	"huggingface_hub.commands.delete_cache" -> "'InquirerPy.separator'" [];
	"huggingface_hub._inference_endpoints" -> "time" [];
	"huggingface_hub._inference_endpoints" -> "dataclasses" [];
	"huggingface_hub._inference_endpoints" -> "datetime" [];
	"huggingface_hub._inference_endpoints" -> "enum" [];
	"huggingface_hub._inference_endpoints" -> "typing" [];
	"huggingface_hub._commit_scheduler" -> "atexit" [];
	"huggingface_hub._commit_scheduler" -> "logging" [];
	"huggingface_hub._commit_scheduler" -> "os" [];
	"huggingface_hub._commit_scheduler" -> "time" [];
	"huggingface_hub._commit_scheduler" -> "dataclasses" [];
	"huggingface_hub._commit_scheduler" -> "io" [];
	"huggingface_hub._commit_scheduler" -> "pathlib" [];
	"huggingface_hub._commit_scheduler" -> "threading" [];
	"huggingface_hub._commit_scheduler" -> "typing" [];
	"transformers.modeling_flax_pytorch_utils" -> "os" [];
	"transformers.modeling_flax_pytorch_utils" -> "pickle" [];
	"transformers.modeling_flax_pytorch_utils" -> "typing" [];
	"transformers.modeling_flax_pytorch_utils" -> "jax" [];
	"transformers.modeling_flax_pytorch_utils" -> "'jax.numpy'" [];
	"transformers.modeling_flax_pytorch_utils" -> "numpy" [];
	"transformers.modeling_flax_pytorch_utils" -> "'flax.serialization'" [];
	"transformers.modeling_flax_pytorch_utils" -> "'flax.traverse_util'" [];
	"transformers.modeling_flax_pytorch_utils" -> "torch" [];
	"transformers.modeling_flax_pytorch_utils" -> "safetensors" [];
	"transformers.dynamic_module_utils" -> "filecmp" [];
	"transformers.dynamic_module_utils" -> "hashlib" [];
	"transformers.dynamic_module_utils" -> "importlib" [];
	"transformers.dynamic_module_utils" -> "os" [];
	"transformers.dynamic_module_utils" -> "re" [];
	"transformers.dynamic_module_utils" -> "shutil" [];
	"transformers.dynamic_module_utils" -> "signal" [];
	"transformers.dynamic_module_utils" -> "sys" [];
	"transformers.dynamic_module_utils" -> "threading" [];
	"transformers.dynamic_module_utils" -> "typing" [];
	"transformers.dynamic_module_utils" -> "warnings" [];
	"transformers.dynamic_module_utils" -> "pathlib" [];
	"transformers.dynamic_module_utils" -> "types" [];
	"transformers.dynamic_module_utils" -> "huggingface_hub" [];
	"filecmp" -> "os" [];
	"filecmp" -> "stat" [];
	"filecmp" -> "itertools" [];
	"filecmp" -> "types" [];
	"filecmp" -> "sys" [];
	"filecmp" -> "getopt" [];
	"transformers.optimization_tf" -> "re" [];
	"transformers.optimization_tf" -> "typing" [];
	"transformers.optimization_tf" -> "tensorflow" [];
	"transformers.optimization_tf" -> "'tf_keras.optimizers'" [];
	"transformers.optimization_tf" -> "'tensorflow.keras'" [];
	"transformers.modeling_tf_utils" -> "__future__" [];
	"transformers.modeling_tf_utils" -> "functools" [];
	"transformers.modeling_tf_utils" -> "gc" [];
	"transformers.modeling_tf_utils" -> "inspect" [];
	"transformers.modeling_tf_utils" -> "json" [];
	"transformers.modeling_tf_utils" -> "os" [];
	"transformers.modeling_tf_utils" -> "pickle" [];
	"transformers.modeling_tf_utils" -> "re" [];
	"transformers.modeling_tf_utils" -> "warnings" [];
	"transformers.modeling_tf_utils" -> "pathlib" [];
	"transformers.modeling_tf_utils" -> "typing" [];
	"transformers.modeling_tf_utils" -> "h5py" [];
	"transformers.modeling_tf_utils" -> "numpy" [];
	"transformers.modeling_tf_utils" -> "tensorflow" [];
	"transformers.modeling_tf_utils" -> "safetensors" [];
	"transformers.modeling_tf_utils" -> "tf_keras" [];
	"transformers.modeling_tf_utils" -> "keras" [];
	"transformers.modeling_tf_utils" -> "datasets" [];
	"safetensors.tensorflow" -> "os" [];
	"safetensors.tensorflow" -> "typing" [];
	"safetensors.tensorflow" -> "numpy" [];
	"safetensors.tensorflow" -> "tensorflow" [];
	"transformers.tf_utils" -> "typing" [];
	"transformers.tf_utils" -> "numpy" [];
	"transformers.tf_utils" -> "tensorflow" [];
	"transformers.activations_tf" -> "math" [];
	"transformers.activations_tf" -> "tensorflow" [];
	"transformers.activations_tf" -> "tf_keras" [];
	"transformers.activations_tf" -> "keras" [];
	"transformers.keras_callbacks" -> "logging" [];
	"transformers.keras_callbacks" -> "os" [];
	"transformers.keras_callbacks" -> "pathlib" [];
	"transformers.keras_callbacks" -> "time" [];
	"transformers.keras_callbacks" -> "typing" [];
	"transformers.keras_callbacks" -> "numpy" [];
	"transformers.keras_callbacks" -> "tensorflow" [];
	"transformers.keras_callbacks" -> "huggingface_hub" [];
	"transformers.benchmark.benchmark_tf" -> "random" [];
	"transformers.benchmark.benchmark_tf" -> "timeit" [];
	"transformers.benchmark.benchmark_tf" -> "functools" [];
	"transformers.benchmark.benchmark_tf" -> "typing" [];
	"transformers.benchmark.benchmark_tf" -> "tensorflow" [];
	"transformers.benchmark.benchmark_tf" -> "'tensorflow.python'" [];
	"transformers.benchmark.benchmark_tf" -> "'py3nvml.py3nvml'" [];
	"transformers.benchmark.benchmark_utils" -> "copy" [];
	"transformers.benchmark.benchmark_utils" -> "csv" [];
	"transformers.benchmark.benchmark_utils" -> "linecache" [];
	"transformers.benchmark.benchmark_utils" -> "os" [];
	"transformers.benchmark.benchmark_utils" -> "platform" [];
	"transformers.benchmark.benchmark_utils" -> "sys" [];
	"transformers.benchmark.benchmark_utils" -> "warnings" [];
	"transformers.benchmark.benchmark_utils" -> "abc" [];
	"transformers.benchmark.benchmark_utils" -> "collections" [];
	"transformers.benchmark.benchmark_utils" -> "datetime" [];
	"transformers.benchmark.benchmark_utils" -> "multiprocessing" [];
	"transformers.benchmark.benchmark_utils" -> "typing" [];
	"transformers.benchmark.benchmark_utils" -> "transformers" [];
	"transformers.benchmark.benchmark_utils" -> "'tensorflow.python'" [];
	"transformers.benchmark.benchmark_utils" -> "psutil" [];
	"transformers.benchmark.benchmark_utils" -> "py3nvml" [];
	"transformers.benchmark.benchmark_utils" -> "signal" [];
	"transformers.benchmark.benchmark_args_utils" -> "dataclasses" [];
	"transformers.benchmark.benchmark_args_utils" -> "json" [];
	"transformers.benchmark.benchmark_args_utils" -> "warnings" [];
	"transformers.benchmark.benchmark_args_utils" -> "time" [];
	"transformers.benchmark.benchmark_args_utils" -> "typing" [];
	"transformers.models.auto.modeling_tf_auto" -> "warnings" [];
	"transformers.models.auto.modeling_tf_auto" -> "collections" [];
	"transformers.models.auto.configuration_auto" -> "importlib" [];
	"transformers.models.auto.configuration_auto" -> "os" [];
	"transformers.models.auto.configuration_auto" -> "re" [];
	"transformers.models.auto.configuration_auto" -> "warnings" [];
	"transformers.models.auto.configuration_auto" -> "collections" [];
	"transformers.models.auto.configuration_auto" -> "typing" [];
	"transformers.models.auto.auto_factory" -> "copy" [];
	"transformers.models.auto.auto_factory" -> "importlib" [];
	"transformers.models.auto.auto_factory" -> "json" [];
	"transformers.models.auto.auto_factory" -> "warnings" [];
	"transformers.models.auto.auto_factory" -> "collections" [];
	"transformers.benchmark.benchmark_args_tf" -> "dataclasses" [];
	"transformers.benchmark.benchmark_args_tf" -> "typing" [];
	"transformers.benchmark.benchmark_args_tf" -> "tensorflow" [];
	"transformers.trainer_seq2seq" -> "contextlib" [];
	"transformers.trainer_seq2seq" -> "warnings" [];
	"transformers.trainer_seq2seq" -> "copy" [];
	"transformers.trainer_seq2seq" -> "pathlib" [];
	"transformers.trainer_seq2seq" -> "typing" [];
	"transformers.trainer_seq2seq" -> "torch" [];
	"transformers.trainer_seq2seq" -> "datasets" [];
	"transformers.utils.deprecation" -> "inspect" [];
	"transformers.utils.deprecation" -> "warnings" [];
	"transformers.utils.deprecation" -> "functools" [];
	"transformers.utils.deprecation" -> "typing" [];
	"transformers.utils.deprecation" -> "transformers" [];
	"transformers.integrations.fsdp" -> "__future__" [];
	"transformers.integrations.fsdp" -> "typing" [];
	"transformers.integrations.fsdp" -> "torch" [];
	"transformers.integrations.deepspeed" -> "copy" [];
	"transformers.integrations.deepspeed" -> "weakref" [];
	"transformers.integrations.deepspeed" -> "functools" [];
	"transformers.integrations.deepspeed" -> "torch" [];
	"transformers.integrations.deepspeed" -> "'accelerate.utils'" [];
	"transformers.integrations.deepspeed" -> "builtins" [];
	"transformers.integrations.deepspeed" -> "deepspeed" [];
	"transformers.integrations.deepspeed" -> "glob" [];
	"transformers.generation.configuration_utils" -> "copy" [];
	"transformers.generation.configuration_utils" -> "json" [];
	"transformers.generation.configuration_utils" -> "os" [];
	"transformers.generation.configuration_utils" -> "warnings" [];
	"transformers.generation.configuration_utils" -> "abc" [];
	"transformers.generation.configuration_utils" -> "dataclasses" [];
	"transformers.generation.configuration_utils" -> "typing" [];
	"transformers.generation.configuration_utils" -> "transformers" [];
	"transformers.generation.logits_process" -> "inspect" [];
	"transformers.generation.logits_process" -> "math" [];
	"transformers.generation.logits_process" -> "typing" [];
	"transformers.generation.logits_process" -> "numpy" [];
	"transformers.generation.logits_process" -> "torch" [];
	"transformers.trainer_pt_utils" -> "copy" [];
	"transformers.trainer_pt_utils" -> "datetime" [];
	"transformers.trainer_pt_utils" -> "io" [];
	"transformers.trainer_pt_utils" -> "json" [];
	"transformers.trainer_pt_utils" -> "math" [];
	"transformers.trainer_pt_utils" -> "os" [];
	"transformers.trainer_pt_utils" -> "sys" [];
	"transformers.trainer_pt_utils" -> "warnings" [];
	"transformers.trainer_pt_utils" -> "contextlib" [];
	"transformers.trainer_pt_utils" -> "dataclasses" [];
	"transformers.trainer_pt_utils" -> "itertools" [];
	"transformers.trainer_pt_utils" -> "logging" [];
	"transformers.trainer_pt_utils" -> "typing" [];
	"transformers.trainer_pt_utils" -> "numpy" [];
	"transformers.trainer_pt_utils" -> "torch" [];
	"transformers.trainer_pt_utils" -> "'torch_xla.core'" [];
	"transformers.trainer_pt_utils" -> "smdistributed" [];
	"transformers.trainer" -> "contextlib" [];
	"transformers.trainer" -> "copy" [];
	"transformers.trainer" -> "functools" [];
	"transformers.trainer" -> "glob" [];
	"transformers.trainer" -> "inspect" [];
	"transformers.trainer" -> "json" [];
	"transformers.trainer" -> "math" [];
	"transformers.trainer" -> "os" [];
	"transformers.trainer" -> "random" [];
	"transformers.trainer" -> "re" [];
	"transformers.trainer" -> "shutil" [];
	"transformers.trainer" -> "sys" [];
	"transformers.trainer" -> "tempfile" [];
	"transformers.trainer" -> "time" [];
	"transformers.trainer" -> "warnings" [];
	"transformers.trainer" -> "pathlib" [];
	"transformers.trainer" -> "typing" [];
	"transformers.trainer" -> "numpy" [];
	"transformers.trainer" -> "torch" [];
	"transformers.trainer" -> "huggingface_hub" [];
	"transformers.trainer" -> "packaging" [];
	"transformers.trainer" -> "apex" [];
	"transformers.trainer" -> "datasets" [];
	"transformers.trainer" -> "'torch_xla.core'" [];
	"transformers.trainer" -> "'torch_xla.debug'" [];
	"transformers.trainer" -> "torch_xla" [];
	"transformers.trainer" -> "'torch_xla.distributed'" [];
	"transformers.trainer" -> "'torch_xla.runtime'" [];
	"transformers.trainer" -> "'smdistributed.modelparallel'" [];
	"transformers.trainer" -> "peft" [];
	"transformers.trainer" -> "accelerate" [];
	"transformers.trainer" -> "'accelerate.state'" [];
	"transformers.trainer" -> "'accelerate.utils'" [];
	"transformers.trainer" -> "'accelerate.data_loader'" [];
	"transformers.trainer" -> "optuna" [];
	"transformers.trainer" -> "liger_kernel" [];
	"transformers.trainer" -> "bitsandbytes" [];
	"transformers.trainer" -> "'torch_xla.amp'" [];
	"transformers.trainer" -> "'torch_npu.optim'" [];
	"transformers.trainer" -> "'apex.optimizers'" [];
	"transformers.trainer" -> "'bitsandbytes.optim'" [];
	"transformers.trainer" -> "'torchdistx.optimizers'" [];
	"transformers.trainer" -> "galore_torch" [];
	"transformers.trainer" -> "lomo_optim" [];
	"transformers.trainer" -> "grokadamw" [];
	"transformers.trainer" -> "'torchao.prototype'" [];
	"transformers.trainer" -> "schedulefree" [];
	"transformers.trainer" -> "'ray.train'" [];
	"transformers.trainer" -> "intel_extension_for_pytorch" [];
	"transformers.trainer" -> "'torch_xla.experimental'" [];
	"transformers.trainer" -> "wandb" [];
	"transformers.trainer" -> "'peft.utils'" [];
	"transformers.utils.notebook" -> "re" [];
	"transformers.utils.notebook" -> "time" [];
	"transformers.utils.notebook" -> "typing" [];
	"transformers.utils.notebook" -> "'IPython.display'" [];
	"transformers.models.auto.modeling_auto" -> "warnings" [];
	"transformers.models.auto.modeling_auto" -> "collections" [];
	"transformers.integrations.tpu" -> "'torch_xla.distributed'" [];
	"transformers.debug_utils" -> "collections" [];
	"transformers.debug_utils" -> "torch" [];
	"transformers.pytorch_utils" -> "__future__" [];
	"transformers.pytorch_utils" -> "inspect" [];
	"transformers.pytorch_utils" -> "typing" [];
	"transformers.pytorch_utils" -> "torch" [];
	"transformers.pytorch_utils" -> "packaging" [];
	"transformers.pytorch_utils" -> "torch_xla" [];
	"transformers.optimization" -> "math" [];
	"transformers.optimization" -> "warnings" [];
	"transformers.optimization" -> "functools" [];
	"transformers.optimization" -> "typing" [];
	"transformers.optimization" -> "torch" [];
	"transformers.utils.versions" -> "operator" [];
	"transformers.utils.versions" -> "re" [];
	"transformers.utils.versions" -> "sys" [];
	"transformers.utils.versions" -> "typing" [];
	"transformers.utils.versions" -> "packaging" [];
	"transformers.modeling_utils" -> "collections" [];
	"transformers.modeling_utils" -> "copy" [];
	"transformers.modeling_utils" -> "functools" [];
	"transformers.modeling_utils" -> "gc" [];
	"transformers.modeling_utils" -> "inspect" [];
	"transformers.modeling_utils" -> "itertools" [];
	"transformers.modeling_utils" -> "json" [];
	"transformers.modeling_utils" -> "os" [];
	"transformers.modeling_utils" -> "re" [];
	"transformers.modeling_utils" -> "shutil" [];
	"transformers.modeling_utils" -> "tempfile" [];
	"transformers.modeling_utils" -> "warnings" [];
	"transformers.modeling_utils" -> "contextlib" [];
	"transformers.modeling_utils" -> "dataclasses" [];
	"transformers.modeling_utils" -> "threading" [];
	"transformers.modeling_utils" -> "typing" [];
	"transformers.modeling_utils" -> "zipfile" [];
	"transformers.modeling_utils" -> "torch" [];
	"transformers.modeling_utils" -> "huggingface_hub" [];
	"transformers.modeling_utils" -> "packaging" [];
	"transformers.modeling_utils" -> "accelerate" [];
	"transformers.modeling_utils" -> "'accelerate.hooks'" [];
	"transformers.modeling_utils" -> "'accelerate.utils'" [];
	"transformers.modeling_utils" -> "safetensors" [];
	"transformers.modeling_utils" -> "'smdistributed.modelparallel'" [];
	"transformers.modeling_utils" -> "deepspeed" [];
	"transformers.modeling_utils" -> "psutil" [];
	"transformers.modeling_utils" -> "bitsandbytes" [];
	"transformers.modeling_utils" -> "'optimum.version'" [];
	"transformers.modeling_utils" -> "'optimum.bettertransformer'" [];
	"transformers.modeling_gguf_pytorch_utils" -> "re" [];
	"transformers.modeling_gguf_pytorch_utils" -> "typing" [];
	"transformers.modeling_gguf_pytorch_utils" -> "numpy" [];
	"transformers.modeling_gguf_pytorch_utils" -> "tqdm" [];
	"transformers.modeling_gguf_pytorch_utils" -> "torch" [];
	"transformers.modeling_gguf_pytorch_utils" -> "gguf" [];
	"transformers.safetensors_conversion" -> "typing" [];
	"transformers.safetensors_conversion" -> "requests" [];
	"transformers.safetensors_conversion" -> "huggingface_hub" [];
	"transformers.quantizers.quantizers_utils" -> "typing" [];
	"transformers.quantizers.base" -> "abc" [];
	"transformers.quantizers.base" -> "typing" [];
	"transformers.quantizers.base" -> "torch" [];
	"transformers.quantizers.auto" -> "warnings" [];
	"transformers.quantizers.auto" -> "typing" [];
	"transformers.quantizers.quantizer_torchao" -> "importlib" [];
	"transformers.quantizers.quantizer_torchao" -> "typing" [];
	"transformers.quantizers.quantizer_torchao" -> "packaging" [];
	"transformers.quantizers.quantizer_torchao" -> "torch" [];
	"transformers.quantizers.quantizer_torchao" -> "'torchao.quantization'" [];
	"transformers.quantizers.quantizer_torchao" -> "'accelerate.utils'" [];
	"transformers.quantizers.quantizer_quanto" -> "importlib" [];
	"transformers.quantizers.quantizer_quanto" -> "typing" [];
	"transformers.quantizers.quantizer_quanto" -> "packaging" [];
	"transformers.quantizers.quantizer_quanto" -> "torch" [];
	"transformers.quantizers.quantizer_quanto" -> "'optimum.quanto'" [];
	"transformers.quantizers.quantizer_quanto" -> "quanto" [];
	"transformers.quantizers.quantizer_quanto" -> "'accelerate.utils'" [];
	"transformers.quantizers.quantizer_hqq" -> "typing" [];
	"transformers.quantizers.quantizer_hqq" -> "'accelerate.hooks'" [];
	"transformers.quantizers.quantizer_hqq" -> "torch" [];
	"transformers.quantizers.quantizer_hqq" -> "'hqq.core'" [];
	"transformers.quantizers.quantizer_gptq" -> "importlib" [];
	"transformers.quantizers.quantizer_gptq" -> "typing" [];
	"transformers.quantizers.quantizer_gptq" -> "packaging" [];
	"transformers.quantizers.quantizer_gptq" -> "torch" [];
	"transformers.quantizers.quantizer_gptq" -> "'optimum.gptq'" [];
	"transformers.quantizers.quantizer_fbgemm_fp8" -> "importlib" [];
	"transformers.quantizers.quantizer_fbgemm_fp8" -> "typing" [];
	"transformers.quantizers.quantizer_fbgemm_fp8" -> "packaging" [];
	"transformers.quantizers.quantizer_fbgemm_fp8" -> "torch" [];
	"transformers.quantizers.quantizer_eetq" -> "typing" [];
	"transformers.quantizers.quantizer_eetq" -> "torch" [];
	"transformers.quantizers.quantizer_eetq" -> "eetq" [];
	"transformers.quantizers.quantizer_compressed_tensors" -> "torch" [];
	"transformers.quantizers.quantizer_compressed_tensors" -> "'compressed_tensors.compressors'" [];
	"transformers.quantizers.quantizer_compressed_tensors" -> "'compressed_tensors.quantization'" [];
	"transformers.quantizers.quantizer_bnb_8bit" -> "importlib" [];
	"transformers.quantizers.quantizer_bnb_8bit" -> "typing" [];
	"transformers.quantizers.quantizer_bnb_8bit" -> "packaging" [];
	"transformers.quantizers.quantizer_bnb_8bit" -> "torch" [];
	"transformers.quantizers.quantizer_bnb_8bit" -> "bitsandbytes" [];
	"transformers.quantizers.quantizer_bnb_4bit" -> "importlib" [];
	"transformers.quantizers.quantizer_bnb_4bit" -> "functools" [];
	"transformers.quantizers.quantizer_bnb_4bit" -> "typing" [];
	"transformers.quantizers.quantizer_bnb_4bit" -> "packaging" [];
	"transformers.quantizers.quantizer_bnb_4bit" -> "torch" [];
	"transformers.quantizers.quantizer_bnb_4bit" -> "'accelerate.utils'" [];
	"transformers.quantizers.quantizer_bnb_4bit" -> "bitsandbytes" [];
	"transformers.quantizers.quantizer_bitnet" -> "typing" [];
	"transformers.quantizers.quantizer_bitnet" -> "torch" [];
	"transformers.quantizers.quantizer_awq" -> "typing" [];
	"transformers.quantizers.quantizer_awq" -> "packaging" [];
	"transformers.quantizers.quantizer_awq" -> "torch" [];
	"transformers.quantizers.quantizer_aqlm" -> "importlib" [];
	"transformers.quantizers.quantizer_aqlm" -> "typing" [];
	"transformers.quantizers.quantizer_aqlm" -> "packaging" [];
	"transformers.quantizers.quantizer_aqlm" -> "torch" [];
	"transformers.loss.loss_utils" -> "torch" [];
	"transformers.loss.loss_rt_detr" -> "torch" [];
	"transformers.loss.loss_rt_detr" -> "'scipy.optimize'" [];
	"transformers.image_transforms" -> "warnings" [];
	"transformers.image_transforms" -> "math" [];
	"transformers.image_transforms" -> "typing" [];
	"transformers.image_transforms" -> "numpy" [];
	"transformers.image_transforms" -> "PIL" [];
	"transformers.image_transforms" -> "torch" [];
	"transformers.image_transforms" -> "tensorflow" [];
	"transformers.image_transforms" -> "'jax.numpy'" [];
	"transformers.image_transforms" -> "'torchvision.transforms'" [];
	"transformers.loss.loss_for_object_detection" -> "typing" [];
	"transformers.loss.loss_for_object_detection" -> "torch" [];
	"transformers.loss.loss_for_object_detection" -> "accelerate" [];
	"transformers.loss.loss_for_object_detection" -> "'accelerate.utils'" [];
	"transformers.loss.loss_for_object_detection" -> "'scipy.optimize'" [];
	"transformers.loss.loss_deformable_detr" -> "torch" [];
	"transformers.loss.loss_deformable_detr" -> "'scipy.optimize'" [];
	"transformers.activations" -> "math" [];
	"transformers.activations" -> "collections" [];
	"transformers.activations" -> "torch" [];
	"transformers.activations" -> "packaging" [];
	"transformers.modeling_rope_utils" -> "math" [];
	"transformers.modeling_rope_utils" -> "typing" [];
	"transformers.modeling_rope_utils" -> "torch" [];
	"transformers.integrations.executorch" -> "torch" [];
	"transformers.integrations.executorch" -> "transformers" [];
	"transformers.data.datasets.squad" -> "os" [];
	"transformers.data.datasets.squad" -> "time" [];
	"transformers.data.datasets.squad" -> "dataclasses" [];
	"transformers.data.datasets.squad" -> "enum" [];
	"transformers.data.datasets.squad" -> "typing" [];
	"transformers.data.datasets.squad" -> "torch" [];
	"transformers.data.datasets.squad" -> "filelock" [];
	"transformers.data.processors.squad" -> "json" [];
	"transformers.data.processors.squad" -> "os" [];
	"transformers.data.processors.squad" -> "functools" [];
	"transformers.data.processors.squad" -> "multiprocessing" [];
	"transformers.data.processors.squad" -> "numpy" [];
	"transformers.data.processors.squad" -> "tqdm" [];
	"transformers.data.processors.squad" -> "torch" [];
	"transformers.data.processors.squad" -> "tensorflow" [];
	"transformers.data.processors.xnli" -> "os" [];
	"transformers.data.processors.glue" -> "os" [];
	"transformers.data.processors.glue" -> "warnings" [];
	"transformers.data.processors.glue" -> "dataclasses" [];
	"transformers.data.processors.glue" -> "enum" [];
	"transformers.data.processors.glue" -> "typing" [];
	"transformers.data.processors.glue" -> "tensorflow" [];
	"transformers.data.processors.utils" -> "csv" [];
	"transformers.data.processors.utils" -> "dataclasses" [];
	"transformers.data.processors.utils" -> "json" [];
	"transformers.data.processors.utils" -> "typing" [];
	"transformers.data.processors.utils" -> "tensorflow" [];
	"transformers.data.processors.utils" -> "torch" [];
	"transformers.models.bert.tokenization_bert" -> "collections" [];
	"transformers.models.bert.tokenization_bert" -> "os" [];
	"transformers.models.bert.tokenization_bert" -> "unicodedata" [];
	"transformers.models.bert.tokenization_bert" -> "typing" [];
	"transformers.data.datasets.language_modeling" -> "json" [];
	"transformers.data.datasets.language_modeling" -> "os" [];
	"transformers.data.datasets.language_modeling" -> "pickle" [];
	"transformers.data.datasets.language_modeling" -> "random" [];
	"transformers.data.datasets.language_modeling" -> "time" [];
	"transformers.data.datasets.language_modeling" -> "warnings" [];
	"transformers.data.datasets.language_modeling" -> "typing" [];
	"transformers.data.datasets.language_modeling" -> "torch" [];
	"transformers.data.datasets.language_modeling" -> "filelock" [];
	"transformers.data.datasets.glue" -> "os" [];
	"transformers.data.datasets.glue" -> "time" [];
	"transformers.data.datasets.glue" -> "warnings" [];
	"transformers.data.datasets.glue" -> "dataclasses" [];
	"transformers.data.datasets.glue" -> "enum" [];
	"transformers.data.datasets.glue" -> "typing" [];
	"transformers.data.datasets.glue" -> "torch" [];
	"transformers.data.datasets.glue" -> "filelock" [];
	"transformers.cache_utils" -> "copy" [];
	"transformers.cache_utils" -> "json" [];
	"transformers.cache_utils" -> "os" [];
	"transformers.cache_utils" -> "dataclasses" [];
	"transformers.cache_utils" -> "typing" [];
	"transformers.cache_utils" -> "torch" [];
	"transformers.cache_utils" -> "packaging" [];
	"transformers.cache_utils" -> "hqq" [];
	"transformers.cache_utils" -> "optimum" [];
	"transformers.cache_utils" -> "quanto" [];
	"transformers.cache_utils" -> "'optimum.quanto'" [];
	"transformers.benchmark.benchmark_args" -> "dataclasses" [];
	"transformers.benchmark.benchmark_args" -> "typing" [];
	"transformers.benchmark.benchmark_args" -> "torch" [];
	"transformers.benchmark.benchmark_args" -> "'torch_xla.core'" [];
	"transformers.benchmark.benchmark" -> "timeit" [];
	"transformers.benchmark.benchmark" -> "typing" [];
	"transformers.benchmark.benchmark" -> "torch" [];
	"transformers.benchmark.benchmark" -> "'py3nvml.py3nvml'" [];
	"transformers.benchmark.benchmark" -> "'torch_xla.debug'" [];
	"transformers.image_processing_utils_fast" -> "functools" [];
	"transformers.image_processing_utils_fast" -> "dataclasses" [];
	"transformers.image_processing_utils_fast" -> "'torchvision.transforms'" [];
	"transformers.image_utils" -> "base64" [];
	"transformers.image_utils" -> "os" [];
	"transformers.image_utils" -> "io" [];
	"transformers.image_utils" -> "typing" [];
	"transformers.image_utils" -> "numpy" [];
	"transformers.image_utils" -> "requests" [];
	"transformers.image_utils" -> "packaging" [];
	"transformers.image_utils" -> "'PIL.Image'" [];
	"transformers.image_utils" -> "'PIL.ImageOps'" [];
	"transformers.image_utils" -> "torchvision" [];
	"transformers.image_utils" -> "torch" [];
	"transformers.image_processing_utils" -> "typing" [];
	"transformers.image_processing_utils" -> "numpy" [];
	"transformers.image_processing_base" -> "copy" [];
	"transformers.image_processing_base" -> "json" [];
	"transformers.image_processing_base" -> "os" [];
	"transformers.image_processing_base" -> "warnings" [];
	"transformers.image_processing_base" -> "io" [];
	"transformers.image_processing_base" -> "typing" [];
	"transformers.image_processing_base" -> "numpy" [];
	"transformers.image_processing_base" -> "requests" [];
	"transformers.image_processing_base" -> "PIL" [];
	"transformers.convert_slow_tokenizer" -> "warnings" [];
	"transformers.convert_slow_tokenizer" -> "typing" [];
	"transformers.convert_slow_tokenizer" -> "packaging" [];
	"transformers.convert_slow_tokenizer" -> "tokenizers" [];
	"transformers.convert_slow_tokenizer" -> "sentencepiece" [];
	"transformers.convert_slow_tokenizer" -> "'google.protobuf'" [];
	"transformers.convert_slow_tokenizer" -> "tiktoken" [];
	"transformers.models.roformer.tokenization_utils" -> "typing" [];
	"transformers.models.roformer.tokenization_utils" -> "tokenizers" [];
	"transformers.models.roformer.tokenization_utils" -> "rjieba" [];
	"transformers.utils.sentencepiece_model_pb2_new" -> "'google.protobuf'" [];
	"transformers.utils.sentencepiece_model_pb2" -> "'google.protobuf'" [];
	"tokenizers" -> "enum" [];
	"tokenizers" -> "typing" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "json" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "os" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "typing" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "tokenizers" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "sys" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "sentencepiece_model_pb2" [];
	"tokenizers.implementations.sentencepiece_bpe" -> "typing" [];
	"tokenizers.implementations.sentencepiece_bpe" -> "tokenizers" [];
	"tokenizers.implementations.char_level_bpe" -> "typing" [];
	"tokenizers.implementations.char_level_bpe" -> "tokenizers" [];
	"tokenizers.implementations.byte_level_bpe" -> "typing" [];
	"tokenizers.implementations.byte_level_bpe" -> "tokenizers" [];
	"tokenizers.implementations.bert_wordpiece" -> "typing" [];
	"tokenizers.implementations.bert_wordpiece" -> "tokenizers" [];
	"tokenizers.implementations.base_tokenizer" -> "typing" [];
	"tokenizers.implementations.base_tokenizer" -> "tokenizers" [];
	"transformers.tokenization_utils_fast" -> "copy" [];
	"transformers.tokenization_utils_fast" -> "json" [];
	"transformers.tokenization_utils_fast" -> "os" [];
	"transformers.tokenization_utils_fast" -> "collections" [];
	"transformers.tokenization_utils_fast" -> "typing" [];
	"transformers.tokenization_utils_fast" -> "tokenizers" [];
	"transformers.integrations.ggml" -> "array" [];
	"transformers.integrations.ggml" -> "numpy" [];
	"transformers.integrations.ggml" -> "tokenizers" [];
	"transformers.integrations.ggml" -> "transformers" [];
	"transformers.models.nllb" -> "typing" [];
	"transformers.models.nllb" -> "sys" [];
	"transformers.models.nllb.tokenization_nllb_fast" -> "os" [];
	"transformers.models.nllb.tokenization_nllb_fast" -> "shutil" [];
	"transformers.models.nllb.tokenization_nllb_fast" -> "typing" [];
	"transformers.models.nllb.tokenization_nllb_fast" -> "tokenizers" [];
	"transformers.models.nllb.tokenization_nllb" -> "os" [];
	"transformers.models.nllb.tokenization_nllb" -> "shutil" [];
	"transformers.models.nllb.tokenization_nllb" -> "typing" [];
	"transformers.models.nllb.tokenization_nllb" -> "sentencepiece" [];
	"transformers.models.mluke" -> "typing" [];
	"transformers.models.mluke" -> "sys" [];
	"transformers.models.mluke.tokenization_mluke" -> "itertools" [];
	"transformers.models.mluke.tokenization_mluke" -> "json" [];
	"transformers.models.mluke.tokenization_mluke" -> "os" [];
	"transformers.models.mluke.tokenization_mluke" -> "shutil" [];
	"transformers.models.mluke.tokenization_mluke" -> "typing" [];
	"transformers.models.mluke.tokenization_mluke" -> "numpy" [];
	"transformers.models.mluke.tokenization_mluke" -> "sentencepiece" [];
	"transformers.models.mbart50" -> "typing" [];
	"transformers.models.mbart50" -> "sys" [];
	"transformers.models.mbart50.tokenization_mbart50_fast" -> "os" [];
	"transformers.models.mbart50.tokenization_mbart50_fast" -> "shutil" [];
	"transformers.models.mbart50.tokenization_mbart50_fast" -> "typing" [];
	"transformers.models.mbart50.tokenization_mbart50_fast" -> "tokenizers" [];
	"transformers.models.mbart50.tokenization_mbart50" -> "os" [];
	"transformers.models.mbart50.tokenization_mbart50" -> "shutil" [];
	"transformers.models.mbart50.tokenization_mbart50" -> "typing" [];
	"transformers.models.mbart50.tokenization_mbart50" -> "sentencepiece" [];
	"transformers.models.gpt_sw3" -> "typing" [];
	"transformers.models.gpt_sw3" -> "sys" [];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" -> "os" [];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" -> "re" [];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" -> "unicodedata" [];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" -> "shutil" [];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" -> "typing" [];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" -> "sentencepiece" [];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" -> "torch" [];
	"transformers.models.cpm" -> "typing" [];
	"transformers.models.cpm" -> "sys" [];
	"transformers.models.cpm.tokenization_cpm_fast" -> "os" [];
	"transformers.models.cpm.tokenization_cpm_fast" -> "shutil" [];
	"transformers.models.cpm.tokenization_cpm_fast" -> "typing" [];
	"transformers.models.cpm.tokenization_cpm_fast" -> "jieba" [];
	"transformers.models.cpm.tokenization_cpm" -> "os" [];
	"transformers.models.cpm.tokenization_cpm" -> "unicodedata" [];
	"transformers.models.cpm.tokenization_cpm" -> "shutil" [];
	"transformers.models.cpm.tokenization_cpm" -> "typing" [];
	"transformers.models.cpm.tokenization_cpm" -> "sentencepiece" [];
	"transformers.models.cpm.tokenization_cpm" -> "jieba" [];
	"transformers.models.code_llama" -> "typing" [];
	"transformers.models.code_llama" -> "sys" [];
	"transformers.models.code_llama.tokenization_code_llama_fast" -> "os" [];
	"transformers.models.code_llama.tokenization_code_llama_fast" -> "shutil" [];
	"transformers.models.code_llama.tokenization_code_llama_fast" -> "typing" [];
	"transformers.models.code_llama.tokenization_code_llama_fast" -> "tokenizers" [];
	"transformers.models.code_llama.tokenization_code_llama" -> "os" [];
	"transformers.models.code_llama.tokenization_code_llama" -> "shutil" [];
	"transformers.models.code_llama.tokenization_code_llama" -> "typing" [];
	"transformers.models.code_llama.tokenization_code_llama" -> "sentencepiece" [];
	"transformers.models.bartpho" -> "typing" [];
	"transformers.models.bartpho" -> "sys" [];
	"transformers.models.bartpho.tokenization_bartpho" -> "os" [];
	"transformers.models.bartpho.tokenization_bartpho" -> "shutil" [];
	"transformers.models.bartpho.tokenization_bartpho" -> "typing" [];
	"transformers.models.bartpho.tokenization_bartpho" -> "sentencepiece" [];
	"transformers.models.barthez" -> "typing" [];
	"transformers.models.barthez" -> "sys" [];
	"transformers.models.barthez.tokenization_barthez_fast" -> "os" [];
	"transformers.models.barthez.tokenization_barthez_fast" -> "shutil" [];
	"transformers.models.barthez.tokenization_barthez_fast" -> "typing" [];
	"transformers.models.barthez.tokenization_barthez" -> "os" [];
	"transformers.models.barthez.tokenization_barthez" -> "shutil" [];
	"transformers.models.barthez.tokenization_barthez" -> "typing" [];
	"transformers.models.barthez.tokenization_barthez" -> "sentencepiece" [];
	"transformers.utils.quantization_config" -> "copy" [];
	"transformers.utils.quantization_config" -> "json" [];
	"transformers.utils.quantization_config" -> "os" [];
	"transformers.utils.quantization_config" -> "dataclasses" [];
	"transformers.utils.quantization_config" -> "enum" [];
	"transformers.utils.quantization_config" -> "inspect" [];
	"transformers.utils.quantization_config" -> "typing" [];
	"transformers.utils.quantization_config" -> "packaging" [];
	"transformers.utils.quantization_config" -> "torch" [];
	"transformers.utils.quantization_config" -> "'hqq.core'" [];
	"transformers.utils.quantization_config" -> "compressed_tensors" [];
	"transformers.utils.quantization_config" -> "'compressed_tensors.config'" [];
	"transformers.utils.quantization_config" -> "torchao" [];
	"transformers.training_args_tf" -> "warnings" [];
	"transformers.training_args_tf" -> "dataclasses" [];
	"transformers.training_args_tf" -> "typing" [];
	"transformers.training_args_tf" -> "tensorflow" [];
	"transformers.training_args_seq2seq" -> "logging" [];
	"transformers.training_args_seq2seq" -> "dataclasses" [];
	"transformers.training_args_seq2seq" -> "pathlib" [];
	"transformers.training_args_seq2seq" -> "typing" [];
	"transformers.training_args" -> "contextlib" [];
	"transformers.training_args" -> "io" [];
	"transformers.training_args" -> "json" [];
	"transformers.training_args" -> "math" [];
	"transformers.training_args" -> "os" [];
	"transformers.training_args" -> "warnings" [];
	"transformers.training_args" -> "dataclasses" [];
	"transformers.training_args" -> "datetime" [];
	"transformers.training_args" -> "enum" [];
	"transformers.training_args" -> "pathlib" [];
	"transformers.training_args" -> "typing" [];
	"transformers.training_args" -> "huggingface_hub" [];
	"transformers.training_args" -> "packaging" [];
	"transformers.training_args" -> "torch" [];
	"transformers.training_args" -> "'accelerate.state'" [];
	"transformers.training_args" -> "'accelerate.utils'" [];
	"transformers.training_args" -> "'torch_xla.core'" [];
	"transformers.training_args" -> "'torch_xla.distributed'" [];
	"transformers.training_args" -> "'smdistributed.modelparallel'" [];
	"transformers.training_args" -> "socket" [];
	"transformers.trainer_utils" -> "copy" [];
	"transformers.trainer_utils" -> "functools" [];
	"transformers.trainer_utils" -> "gc" [];
	"transformers.trainer_utils" -> "inspect" [];
	"transformers.trainer_utils" -> "os" [];
	"transformers.trainer_utils" -> "random" [];
	"transformers.trainer_utils" -> "re" [];
	"transformers.trainer_utils" -> "threading" [];
	"transformers.trainer_utils" -> "time" [];
	"transformers.trainer_utils" -> "typing" [];
	"transformers.trainer_utils" -> "numpy" [];
	"transformers.trainer_utils" -> "torch" [];
	"transformers.trainer_utils" -> "tensorflow" [];
	"transformers.trainer_utils" -> "ray" [];
	"transformers.trainer_utils" -> "'torch_xla.core'" [];
	"transformers.trainer_utils" -> "psutil" [];
	"transformers.trainer_utils" -> "'accelerate.utils'" [];
	"transformers.trainer_callback" -> "dataclasses" [];
	"transformers.trainer_callback" -> "json" [];
	"transformers.trainer_callback" -> "typing" [];
	"transformers.trainer_callback" -> "numpy" [];
	"transformers.tokenization_utils_base" -> "copy" [];
	"transformers.tokenization_utils_base" -> "json" [];
	"transformers.tokenization_utils_base" -> "os" [];
	"transformers.tokenization_utils_base" -> "re" [];
	"transformers.tokenization_utils_base" -> "warnings" [];
	"transformers.tokenization_utils_base" -> "collections" [];
	"transformers.tokenization_utils_base" -> "contextlib" [];
	"transformers.tokenization_utils_base" -> "dataclasses" [];
	"transformers.tokenization_utils_base" -> "inspect" [];
	"transformers.tokenization_utils_base" -> "typing" [];
	"transformers.tokenization_utils_base" -> "numpy" [];
	"transformers.tokenization_utils_base" -> "packaging" [];
	"transformers.tokenization_utils_base" -> "torch" [];
	"transformers.tokenization_utils_base" -> "tensorflow" [];
	"transformers.tokenization_utils_base" -> "'jax.numpy'" [];
	"transformers.tokenization_utils_base" -> "'google.protobuf'" [];
	"transformers.tokenization_utils_base" -> "tokenizers" [];
	"transformers.tokenization_utils_base" -> "mlx" [];
	"transformers.models.auto.tokenization_auto" -> "importlib" [];
	"transformers.models.auto.tokenization_auto" -> "json" [];
	"transformers.models.auto.tokenization_auto" -> "os" [];
	"transformers.models.auto.tokenization_auto" -> "warnings" [];
	"transformers.models.auto.tokenization_auto" -> "collections" [];
	"transformers.models.auto.tokenization_auto" -> "typing" [];
	"transformers.utils.chat_template_utils" -> "inspect" [];
	"transformers.utils.chat_template_utils" -> "json" [];
	"transformers.utils.chat_template_utils" -> "re" [];
	"transformers.utils.chat_template_utils" -> "contextlib" [];
	"transformers.utils.chat_template_utils" -> "datetime" [];
	"transformers.utils.chat_template_utils" -> "functools" [];
	"transformers.utils.chat_template_utils" -> "typing" [];
	"transformers.utils.chat_template_utils" -> "packaging" [];
	"transformers.utils.chat_template_utils" -> "jinja2" [];
	"transformers.utils.chat_template_utils" -> "'PIL.Image'" [];
	"transformers.utils.chat_template_utils" -> "torch" [];
	"transformers.tokenization_utils" -> "bisect" [];
	"transformers.tokenization_utils" -> "itertools" [];
	"transformers.tokenization_utils" -> "re" [];
	"transformers.tokenization_utils" -> "unicodedata" [];
	"transformers.tokenization_utils" -> "collections" [];
	"transformers.tokenization_utils" -> "typing" [];
	"transformers.processing_utils" -> "copy" [];
	"transformers.processing_utils" -> "inspect" [];
	"transformers.processing_utils" -> "json" [];
	"transformers.processing_utils" -> "os" [];
	"transformers.processing_utils" -> "sys" [];
	"transformers.processing_utils" -> "typing" [];
	"transformers.processing_utils" -> "warnings" [];
	"transformers.processing_utils" -> "pathlib" [];
	"transformers.processing_utils" -> "numpy" [];
	"transformers.processing_utils" -> "typing_extensions" [];
	"transformers.pipelines" -> "json" [];
	"transformers.pipelines" -> "os" [];
	"transformers.pipelines" -> "warnings" [];
	"transformers.pipelines" -> "pathlib" [];
	"transformers.pipelines" -> "typing" [];
	"transformers.pipelines" -> "huggingface_hub" [];
	"transformers.pipelines" -> "tensorflow" [];
	"transformers.pipelines" -> "torch" [];
	"transformers.pipelines" -> "kenlm" [];
	"transformers.pipelines" -> "pyctcdecode" [];
	"transformers.pipelines.zero_shot_object_detection" -> "typing" [];
	"transformers.pipelines.zero_shot_object_detection" -> "PIL" [];
	"transformers.pipelines.zero_shot_object_detection" -> "torch" [];
	"transformers.pipelines.zero_shot_image_classification" -> "warnings" [];
	"transformers.pipelines.zero_shot_image_classification" -> "collections" [];
	"transformers.pipelines.zero_shot_image_classification" -> "typing" [];
	"transformers.pipelines.zero_shot_image_classification" -> "PIL" [];
	"transformers.pipelines.zero_shot_image_classification" -> "torch" [];
	"transformers.pipelines.zero_shot_classification" -> "inspect" [];
	"transformers.pipelines.zero_shot_classification" -> "typing" [];
	"transformers.pipelines.zero_shot_classification" -> "numpy" [];
	"transformers.pipelines.zero_shot_audio_classification" -> "collections" [];
	"transformers.pipelines.zero_shot_audio_classification" -> "typing" [];
	"transformers.pipelines.zero_shot_audio_classification" -> "numpy" [];
	"transformers.pipelines.zero_shot_audio_classification" -> "requests" [];
	"transformers.pipelines.visual_question_answering" -> "typing" [];
	"transformers.pipelines.visual_question_answering" -> "PIL" [];
	"transformers.pipelines.pt_utils" -> "numpy" [];
	"transformers.pipelines.pt_utils" -> "torch" [];
	"transformers.pipelines.video_classification" -> "warnings" [];
	"transformers.pipelines.video_classification" -> "io" [];
	"transformers.pipelines.video_classification" -> "typing" [];
	"transformers.pipelines.video_classification" -> "requests" [];
	"transformers.pipelines.video_classification" -> "av" [];
	"transformers.pipelines.video_classification" -> "numpy" [];
	"transformers.pipelines.token_classification" -> "types" [];
	"transformers.pipelines.token_classification" -> "warnings" [];
	"transformers.pipelines.token_classification" -> "typing" [];
	"transformers.pipelines.token_classification" -> "numpy" [];
	"transformers.pipelines.token_classification" -> "tensorflow" [];
	"transformers.pipelines.token_classification" -> "torch" [];
	"transformers.pipelines.text_to_audio" -> "typing" [];
	"transformers.models.speecht5.modeling_speecht5" -> "math" [];
	"transformers.models.speecht5.modeling_speecht5" -> "typing" [];
	"transformers.models.speecht5.modeling_speecht5" -> "numpy" [];
	"transformers.models.speecht5.modeling_speecht5" -> "torch" [];
	"transformers.models.speecht5.modeling_speecht5" -> "deepspeed" [];
	"transformers.models.speecht5.configuration_speecht5" -> "functools" [];
	"transformers.models.speecht5.configuration_speecht5" -> "operator" [];
	"transformers.modeling_attn_mask_utils" -> "dataclasses" [];
	"transformers.modeling_attn_mask_utils" -> "typing" [];
	"transformers.modeling_attn_mask_utils" -> "torch" [];
	"transformers.pipelines.text_generation" -> "enum" [];
	"transformers.pipelines.text_generation" -> "warnings" [];
	"transformers.pipelines.text_generation" -> "typing" [];
	"transformers.pipelines.text_generation" -> "tensorflow" [];
	"transformers.pipelines.text_classification" -> "inspect" [];
	"transformers.pipelines.text_classification" -> "warnings" [];
	"transformers.pipelines.text_classification" -> "typing" [];
	"transformers.pipelines.text_classification" -> "numpy" [];
	"transformers.pipelines.text2text_generation" -> "enum" [];
	"transformers.pipelines.text2text_generation" -> "warnings" [];
	"transformers.pipelines.text2text_generation" -> "tensorflow" [];
	"transformers.pipelines.table_question_answering" -> "collections" [];
	"transformers.pipelines.table_question_answering" -> "types" [];
	"transformers.pipelines.table_question_answering" -> "numpy" [];
	"transformers.pipelines.table_question_answering" -> "torch" [];
	"transformers.pipelines.table_question_answering" -> "tensorflow" [];
	"transformers.pipelines.table_question_answering" -> "pandas" [];
	"transformers.pipelines.question_answering" -> "inspect" [];
	"transformers.pipelines.question_answering" -> "types" [];
	"transformers.pipelines.question_answering" -> "warnings" [];
	"transformers.pipelines.question_answering" -> "typing" [];
	"transformers.pipelines.question_answering" -> "numpy" [];
	"transformers.pipelines.question_answering" -> "tokenizers" [];
	"transformers.pipelines.question_answering" -> "tensorflow" [];
	"transformers.pipelines.question_answering" -> "torch" [];
	"transformers.pipelines.object_detection" -> "warnings" [];
	"transformers.pipelines.object_detection" -> "typing" [];
	"transformers.pipelines.object_detection" -> "torch" [];
	"transformers.pipelines.mask_generation" -> "collections" [];
	"transformers.pipelines.mask_generation" -> "typing" [];
	"transformers.pipelines.mask_generation" -> "torch" [];
	"transformers.pipelines.image_to_text" -> "warnings" [];
	"transformers.pipelines.image_to_text" -> "typing" [];
	"transformers.pipelines.image_to_text" -> "PIL" [];
	"transformers.pipelines.image_to_text" -> "torch" [];
	"transformers.pipelines.image_to_image" -> "typing" [];
	"transformers.pipelines.image_to_image" -> "numpy" [];
	"transformers.pipelines.image_to_image" -> "PIL" [];
	"transformers.pipelines.image_segmentation" -> "warnings" [];
	"transformers.pipelines.image_segmentation" -> "typing" [];
	"transformers.pipelines.image_segmentation" -> "numpy" [];
	"transformers.pipelines.image_segmentation" -> "PIL" [];
	"transformers.pipelines.image_feature_extraction" -> "typing" [];
	"transformers.pipelines.image_classification" -> "warnings" [];
	"transformers.pipelines.image_classification" -> "typing" [];
	"transformers.pipelines.image_classification" -> "numpy" [];
	"transformers.pipelines.image_classification" -> "PIL" [];
	"transformers.pipelines.image_classification" -> "torch" [];
	"transformers.pipelines.fill_mask" -> "typing" [];
	"transformers.pipelines.fill_mask" -> "numpy" [];
	"transformers.pipelines.fill_mask" -> "tensorflow" [];
	"transformers.pipelines.fill_mask" -> "torch" [];
	"transformers.pipelines.feature_extraction" -> "typing" [];
	"transformers.pipelines.document_question_answering" -> "re" [];
	"transformers.pipelines.document_question_answering" -> "typing" [];
	"transformers.pipelines.document_question_answering" -> "numpy" [];
	"transformers.pipelines.document_question_answering" -> "PIL" [];
	"transformers.pipelines.document_question_answering" -> "torch" [];
	"transformers.pipelines.document_question_answering" -> "pytesseract" [];
	"transformers.pipelines.depth_estimation" -> "warnings" [];
	"transformers.pipelines.depth_estimation" -> "typing" [];
	"transformers.pipelines.depth_estimation" -> "PIL" [];
	"transformers.pipelines.base" -> "collections" [];
	"transformers.pipelines.base" -> "copy" [];
	"transformers.pipelines.base" -> "csv" [];
	"transformers.pipelines.base" -> "importlib" [];
	"transformers.pipelines.base" -> "json" [];
	"transformers.pipelines.base" -> "os" [];
	"transformers.pipelines.base" -> "pickle" [];
	"transformers.pipelines.base" -> "sys" [];
	"transformers.pipelines.base" -> "traceback" [];
	"transformers.pipelines.base" -> "types" [];
	"transformers.pipelines.base" -> "warnings" [];
	"transformers.pipelines.base" -> "abc" [];
	"transformers.pipelines.base" -> "contextlib" [];
	"transformers.pipelines.base" -> "os.path" [];
	"transformers.pipelines.base" -> "typing" [];
	"transformers.pipelines.base" -> "tensorflow" [];
	"transformers.pipelines.base" -> "torch" [];
	"transformers.pipelines.automatic_speech_recognition" -> "warnings" [];
	"transformers.pipelines.automatic_speech_recognition" -> "collections" [];
	"transformers.pipelines.automatic_speech_recognition" -> "typing" [];
	"transformers.pipelines.automatic_speech_recognition" -> "numpy" [];
	"transformers.pipelines.automatic_speech_recognition" -> "requests" [];
	"transformers.pipelines.automatic_speech_recognition" -> "pyctcdecode" [];
	"transformers.pipelines.automatic_speech_recognition" -> "torch" [];
	"transformers.pipelines.automatic_speech_recognition" -> "torchaudio" [];
	"transformers.pipelines.audio_utils" -> "datetime" [];
	"transformers.pipelines.audio_utils" -> "platform" [];
	"transformers.pipelines.audio_utils" -> "subprocess" [];
	"transformers.pipelines.audio_utils" -> "typing" [];
	"transformers.pipelines.audio_utils" -> "numpy" [];
	"transformers.pipelines.audio_classification" -> "subprocess" [];
	"transformers.pipelines.audio_classification" -> "typing" [];
	"transformers.pipelines.audio_classification" -> "numpy" [];
	"transformers.pipelines.audio_classification" -> "requests" [];
	"transformers.pipelines.audio_classification" -> "torch" [];
	"transformers.pipelines.audio_classification" -> "torchaudio" [];
	"transformers.models.auto.processing_auto" -> "importlib" [];
	"transformers.models.auto.processing_auto" -> "inspect" [];
	"transformers.models.auto.processing_auto" -> "json" [];
	"transformers.models.auto.processing_auto" -> "os" [];
	"transformers.models.auto.processing_auto" -> "warnings" [];
	"transformers.models.auto.processing_auto" -> "collections" [];
	"transformers.models.auto.image_processing_auto" -> "importlib" [];
	"transformers.models.auto.image_processing_auto" -> "json" [];
	"transformers.models.auto.image_processing_auto" -> "os" [];
	"transformers.models.auto.image_processing_auto" -> "warnings" [];
	"transformers.models.auto.image_processing_auto" -> "collections" [];
	"transformers.models.auto.image_processing_auto" -> "typing" [];
	"transformers.models.auto.feature_extraction_auto" -> "importlib" [];
	"transformers.models.auto.feature_extraction_auto" -> "json" [];
	"transformers.models.auto.feature_extraction_auto" -> "os" [];
	"transformers.models.auto.feature_extraction_auto" -> "warnings" [];
	"transformers.models.auto.feature_extraction_auto" -> "collections" [];
	"transformers.models.auto.feature_extraction_auto" -> "typing" [];
	"transformers.models.zoedepth" -> "typing" [];
	"transformers.models.zoedepth" -> "sys" [];
	"transformers.models.zoedepth.image_processing_zoedepth" -> "math" [];
	"transformers.models.zoedepth.image_processing_zoedepth" -> "typing" [];
	"transformers.models.zoedepth.image_processing_zoedepth" -> "numpy" [];
	"transformers.models.zoedepth.image_processing_zoedepth" -> "PIL" [];
	"transformers.models.zoedepth.image_processing_zoedepth" -> "torch" [];
	"transformers.models.zoedepth.modeling_zoedepth" -> "math" [];
	"transformers.models.zoedepth.modeling_zoedepth" -> "dataclasses" [];
	"transformers.models.zoedepth.modeling_zoedepth" -> "typing" [];
	"transformers.models.zoedepth.modeling_zoedepth" -> "torch" [];
	"transformers.utils.backbone_utils" -> "enum" [];
	"transformers.utils.backbone_utils" -> "inspect" [];
	"transformers.utils.backbone_utils" -> "typing" [];
	"transformers.utils.backbone_utils" -> "transformers" [];
	"transformers.file_utils" -> "huggingface_hub" [];
	"transformers.models.zamba" -> "typing" [];
	"transformers.models.zamba" -> "sys" [];
	"transformers.models.zamba.modeling_zamba" -> "math" [];
	"transformers.models.zamba.modeling_zamba" -> "typing" [];
	"transformers.models.zamba.modeling_zamba" -> "torch" [];
	"transformers.models.zamba.modeling_zamba" -> "'mamba_ssm.ops'" [];
	"transformers.models.zamba.modeling_zamba" -> "causal_conv1d" [];
	"transformers.modeling_flash_attention_utils" -> "inspect" [];
	"transformers.modeling_flash_attention_utils" -> "os" [];
	"transformers.modeling_flash_attention_utils" -> "typing" [];
	"transformers.modeling_flash_attention_utils" -> "torch" [];
	"transformers.modeling_flash_attention_utils" -> "flash_attn" [];
	"transformers.models.zamba.configuration_zamba" -> "math" [];
	"transformers.models.yoso" -> "typing" [];
	"transformers.models.yoso" -> "sys" [];
	"transformers.models.yoso.modeling_yoso" -> "math" [];
	"transformers.models.yoso.modeling_yoso" -> "pathlib" [];
	"transformers.models.yoso.modeling_yoso" -> "typing" [];
	"transformers.models.yoso.modeling_yoso" -> "torch" [];
	"transformers.models.yoso.modeling_yoso" -> "fast_lsh_cumulation" [];
	"transformers.models.yolos" -> "typing" [];
	"transformers.models.yolos" -> "sys" [];
	"transformers.models.yolos.modeling_yolos" -> "math" [];
	"transformers.models.yolos.modeling_yolos" -> "dataclasses" [];
	"transformers.models.yolos.modeling_yolos" -> "typing" [];
	"transformers.models.yolos.modeling_yolos" -> "torch" [];
	"transformers.models.yolos.image_processing_yolos" -> "pathlib" [];
	"transformers.models.yolos.image_processing_yolos" -> "typing" [];
	"transformers.models.yolos.image_processing_yolos" -> "numpy" [];
	"transformers.models.yolos.image_processing_yolos" -> "torch" [];
	"transformers.models.yolos.image_processing_yolos" -> "PIL" [];
	"transformers.models.yolos.image_processing_yolos" -> "'scipy.special'" [];
	"transformers.models.yolos.image_processing_yolos" -> "'scipy.stats'" [];
	"transformers.models.yolos.image_processing_yolos" -> "tensorflow" [];
	"transformers.models.yolos.image_processing_yolos" -> "'jax.numpy'" [];
	"transformers.models.yolos.image_processing_yolos" -> "pycocotools" [];
	"transformers.models.yolos.feature_extraction_yolos" -> "warnings" [];
	"transformers.models.yolos.configuration_yolos" -> "collections" [];
	"transformers.models.yolos.configuration_yolos" -> "typing" [];
	"transformers.models.yolos.configuration_yolos" -> "packaging" [];
	"transformers.onnx" -> "typing" [];
	"transformers.onnx" -> "sys" [];
	"transformers.onnx.utils" -> "ctypes" [];
	"transformers.onnx.utils" -> "enum" [];
	"transformers.onnx.utils" -> "typing" [];
	"transformers.onnx.utils" -> "transformers" [];
	"transformers.onnx.features" -> "os" [];
	"transformers.onnx.features" -> "functools" [];
	"transformers.onnx.features" -> "typing" [];
	"transformers.onnx.features" -> "transformers" [];
	"transformers.onnx.convert" -> "warnings" [];
	"transformers.onnx.convert" -> "inspect" [];
	"transformers.onnx.convert" -> "itertools" [];
	"transformers.onnx.convert" -> "pathlib" [];
	"transformers.onnx.convert" -> "typing" [];
	"transformers.onnx.convert" -> "numpy" [];
	"transformers.onnx.convert" -> "onnxruntime" [];
	"transformers.onnx.convert" -> "torch" [];
	"transformers.onnx.convert" -> "onnx" [];
	"transformers.onnx.convert" -> "tensorflow" [];
	"transformers.onnx.convert" -> "tf2onnx" [];
	"transformers.onnx.config" -> "copy" [];
	"transformers.onnx.config" -> "dataclasses" [];
	"transformers.onnx.config" -> "warnings" [];
	"transformers.onnx.config" -> "abc" [];
	"transformers.onnx.config" -> "collections" [];
	"transformers.onnx.config" -> "typing" [];
	"transformers.onnx.config" -> "numpy" [];
	"transformers.onnx.config" -> "packaging" [];
	"transformers.onnx.config" -> "PIL" [];
	"transformers.onnx.config" -> "itertools" [];
	"transformers.onnx.config" -> "torch" [];
	"transformers.models.xmod" -> "typing" [];
	"transformers.models.xmod" -> "sys" [];
	"transformers.models.xmod.modeling_xmod" -> "math" [];
	"transformers.models.xmod.modeling_xmod" -> "typing" [];
	"transformers.models.xmod.modeling_xmod" -> "torch" [];
	"transformers.models.xmod.configuration_xmod" -> "collections" [];
	"transformers.models.xmod.configuration_xmod" -> "typing" [];
	"transformers.models.xlnet" -> "typing" [];
	"transformers.models.xlnet" -> "sys" [];
	"transformers.models.xlnet.modeling_tf_xlnet" -> "__future__" [];
	"transformers.models.xlnet.modeling_tf_xlnet" -> "warnings" [];
	"transformers.models.xlnet.modeling_tf_xlnet" -> "dataclasses" [];
	"transformers.models.xlnet.modeling_tf_xlnet" -> "typing" [];
	"transformers.models.xlnet.modeling_tf_xlnet" -> "numpy" [];
	"transformers.models.xlnet.modeling_tf_xlnet" -> "tensorflow" [];
	"transformers.models.xlnet.modeling_xlnet" -> "warnings" [];
	"transformers.models.xlnet.modeling_xlnet" -> "dataclasses" [];
	"transformers.models.xlnet.modeling_xlnet" -> "typing" [];
	"transformers.models.xlnet.modeling_xlnet" -> "torch" [];
	"transformers.models.xlnet.modeling_xlnet" -> "numpy" [];
	"transformers.models.xlnet.modeling_xlnet" -> "tensorflow" [];
	"transformers.models.xlnet.tokenization_xlnet_fast" -> "os" [];
	"transformers.models.xlnet.tokenization_xlnet_fast" -> "shutil" [];
	"transformers.models.xlnet.tokenization_xlnet_fast" -> "typing" [];
	"transformers.models.xlnet.tokenization_xlnet" -> "os" [];
	"transformers.models.xlnet.tokenization_xlnet" -> "unicodedata" [];
	"transformers.models.xlnet.tokenization_xlnet" -> "shutil" [];
	"transformers.models.xlnet.tokenization_xlnet" -> "typing" [];
	"transformers.models.xlnet.tokenization_xlnet" -> "sentencepiece" [];
	"transformers.models.xlnet.configuration_xlnet" -> "warnings" [];
	"transformers.models.xlm_roberta_xl" -> "typing" [];
	"transformers.models.xlm_roberta_xl" -> "sys" [];
	"transformers.models.xlm_roberta_xl.modeling_xlm_roberta_xl" -> "math" [];
	"transformers.models.xlm_roberta_xl.modeling_xlm_roberta_xl" -> "typing" [];
	"transformers.models.xlm_roberta_xl.modeling_xlm_roberta_xl" -> "torch" [];
	"transformers.models.xlm_roberta_xl.modeling_xlm_roberta_xl" -> "packaging" [];
	"transformers.models.xlm_roberta_xl.configuration_xlm_roberta_xl" -> "collections" [];
	"transformers.models.xlm_roberta_xl.configuration_xlm_roberta_xl" -> "typing" [];
	"transformers.models.xlm_roberta" -> "typing" [];
	"transformers.models.xlm_roberta" -> "sys" [];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" -> "typing" [];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" -> "'flax.linen'" [];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" -> "jax" [];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" -> "'jax.numpy'" [];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" -> "numpy" [];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" -> "'flax.core'" [];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" -> "'flax.traverse_util'" [];
	"transformers.modeling_flax_outputs" -> "typing" [];
	"transformers.modeling_flax_outputs" -> "flax" [];
	"transformers.modeling_flax_outputs" -> "'jax.numpy'" [];
	"transformers.models.xlm_roberta.modeling_tf_xlm_roberta" -> "__future__" [];
	"transformers.models.xlm_roberta.modeling_tf_xlm_roberta" -> "math" [];
	"transformers.models.xlm_roberta.modeling_tf_xlm_roberta" -> "warnings" [];
	"transformers.models.xlm_roberta.modeling_tf_xlm_roberta" -> "typing" [];
	"transformers.models.xlm_roberta.modeling_tf_xlm_roberta" -> "numpy" [];
	"transformers.models.xlm_roberta.modeling_tf_xlm_roberta" -> "tensorflow" [];
	"transformers.modeling_tf_outputs" -> "__future__" [];
	"transformers.modeling_tf_outputs" -> "warnings" [];
	"transformers.modeling_tf_outputs" -> "dataclasses" [];
	"transformers.modeling_tf_outputs" -> "typing" [];
	"transformers.modeling_tf_outputs" -> "tensorflow" [];
	"transformers.models.xlm_roberta.modeling_xlm_roberta" -> "math" [];
	"transformers.models.xlm_roberta.modeling_xlm_roberta" -> "typing" [];
	"transformers.models.xlm_roberta.modeling_xlm_roberta" -> "torch" [];
	"transformers.models.xlm_roberta.modeling_xlm_roberta" -> "packaging" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta_fast" -> "os" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta_fast" -> "shutil" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta_fast" -> "typing" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta" -> "os" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta" -> "shutil" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta" -> "typing" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta" -> "sentencepiece" [];
	"transformers.models.xlm_roberta.configuration_xlm_roberta" -> "collections" [];
	"transformers.models.xlm_roberta.configuration_xlm_roberta" -> "typing" [];
	"transformers.models.xlm" -> "typing" [];
	"transformers.models.xlm" -> "sys" [];
	"transformers.models.xlm.modeling_tf_xlm" -> "__future__" [];
	"transformers.models.xlm.modeling_tf_xlm" -> "itertools" [];
	"transformers.models.xlm.modeling_tf_xlm" -> "warnings" [];
	"transformers.models.xlm.modeling_tf_xlm" -> "dataclasses" [];
	"transformers.models.xlm.modeling_tf_xlm" -> "typing" [];
	"transformers.models.xlm.modeling_tf_xlm" -> "numpy" [];
	"transformers.models.xlm.modeling_tf_xlm" -> "tensorflow" [];
	"transformers.models.xlm.modeling_xlm" -> "itertools" [];
	"transformers.models.xlm.modeling_xlm" -> "math" [];
	"transformers.models.xlm.modeling_xlm" -> "dataclasses" [];
	"transformers.models.xlm.modeling_xlm" -> "typing" [];
	"transformers.models.xlm.modeling_xlm" -> "numpy" [];
	"transformers.models.xlm.modeling_xlm" -> "torch" [];
	"transformers.models.xlm.tokenization_xlm" -> "json" [];
	"transformers.models.xlm.tokenization_xlm" -> "os" [];
	"transformers.models.xlm.tokenization_xlm" -> "re" [];
	"transformers.models.xlm.tokenization_xlm" -> "sys" [];
	"transformers.models.xlm.tokenization_xlm" -> "unicodedata" [];
	"transformers.models.xlm.tokenization_xlm" -> "typing" [];
	"transformers.models.xlm.tokenization_xlm" -> "sacremoses" [];
	"transformers.models.xlm.tokenization_xlm" -> "Mykytea" [];
	"transformers.models.xlm.tokenization_xlm" -> "pythainlp" [];
	"transformers.models.xlm.tokenization_xlm" -> "jieba" [];
	"transformers.models.xlm.configuration_xlm" -> "collections" [];
	"transformers.models.xlm.configuration_xlm" -> "typing" [];
	"transformers.models.xglm" -> "typing" [];
	"transformers.models.xglm" -> "sys" [];
	"transformers.models.xglm.modeling_tf_xglm" -> "__future__" [];
	"transformers.models.xglm.modeling_tf_xglm" -> "math" [];
	"transformers.models.xglm.modeling_tf_xglm" -> "random" [];
	"transformers.models.xglm.modeling_tf_xglm" -> "typing" [];
	"transformers.models.xglm.modeling_tf_xglm" -> "numpy" [];
	"transformers.models.xglm.modeling_tf_xglm" -> "tensorflow" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "math" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "random" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "functools" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "typing" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "'flax.linen'" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "jax" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "'jax.numpy'" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "numpy" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "'flax.core'" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "'flax.traverse_util'" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "'jax.random'" [];
	"transformers.models.xglm.modeling_xglm" -> "math" [];
	"transformers.models.xglm.modeling_xglm" -> "typing" [];
	"transformers.models.xglm.modeling_xglm" -> "torch" [];
	"transformers.models.xglm.tokenization_xglm_fast" -> "os" [];
	"transformers.models.xglm.tokenization_xglm_fast" -> "shutil" [];
	"transformers.models.xglm.tokenization_xglm_fast" -> "typing" [];
	"transformers.models.xglm.tokenization_xglm" -> "os" [];
	"transformers.models.xglm.tokenization_xglm" -> "shutil" [];
	"transformers.models.xglm.tokenization_xglm" -> "typing" [];
	"transformers.models.xglm.tokenization_xglm" -> "sentencepiece" [];
	"transformers.models.x_clip" -> "typing" [];
	"transformers.models.x_clip" -> "sys" [];
	"transformers.models.x_clip.modeling_x_clip" -> "copy" [];
	"transformers.models.x_clip.modeling_x_clip" -> "dataclasses" [];
	"transformers.models.x_clip.modeling_x_clip" -> "typing" [];
	"transformers.models.x_clip.modeling_x_clip" -> "torch" [];
	"transformers.models.x_clip.processing_x_clip" -> "warnings" [];
	"transformers.models.x_clip.configuration_x_clip" -> "os" [];
	"transformers.models.x_clip.configuration_x_clip" -> "typing" [];
	"transformers.models.whisper" -> "typing" [];
	"transformers.models.whisper" -> "sys" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "math" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "random" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "functools" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "typing" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "'flax.linen'" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "jax" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "'jax.numpy'" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "'flax.core'" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "'flax.traverse_util'" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "'jax.random'" [];
	"transformers.generation.flax_logits_process" -> "inspect" [];
	"transformers.generation.flax_logits_process" -> "jax" [];
	"transformers.generation.flax_logits_process" -> "'jax.lax'" [];
	"transformers.generation.flax_logits_process" -> "'jax.numpy'" [];
	"transformers.generation.flax_logits_process" -> "'jax.experimental'" [];
	"transformers.models.whisper.modeling_tf_whisper" -> "__future__" [];
	"transformers.models.whisper.modeling_tf_whisper" -> "math" [];
	"transformers.models.whisper.modeling_tf_whisper" -> "random" [];
	"transformers.models.whisper.modeling_tf_whisper" -> "typing" [];
	"transformers.models.whisper.modeling_tf_whisper" -> "numpy" [];
	"transformers.models.whisper.modeling_tf_whisper" -> "tensorflow" [];
	"transformers.generation.tf_logits_process" -> "inspect" [];
	"transformers.generation.tf_logits_process" -> "typing" [];
	"transformers.generation.tf_logits_process" -> "numpy" [];
	"transformers.generation.tf_logits_process" -> "tensorflow" [];
	"transformers.models.whisper.modeling_whisper" -> "math" [];
	"transformers.models.whisper.modeling_whisper" -> "typing" [];
	"transformers.models.whisper.modeling_whisper" -> "numpy" [];
	"transformers.models.whisper.modeling_whisper" -> "torch" [];
	"transformers.models.whisper.generation_whisper" -> "copy" [];
	"transformers.models.whisper.generation_whisper" -> "math" [];
	"transformers.models.whisper.generation_whisper" -> "warnings" [];
	"transformers.models.whisper.generation_whisper" -> "zlib" [];
	"transformers.models.whisper.generation_whisper" -> "typing" [];
	"transformers.models.whisper.generation_whisper" -> "numpy" [];
	"transformers.models.whisper.generation_whisper" -> "torch" [];
	"transformers.generation.stopping_criteria" -> "time" [];
	"transformers.generation.stopping_criteria" -> "warnings" [];
	"transformers.generation.stopping_criteria" -> "abc" [];
	"transformers.generation.stopping_criteria" -> "collections" [];
	"transformers.generation.stopping_criteria" -> "copy" [];
	"transformers.generation.stopping_criteria" -> "typing" [];
	"transformers.generation.stopping_criteria" -> "numpy" [];
	"transformers.generation.stopping_criteria" -> "torch" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "json" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "os" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "re" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "warnings" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "functools" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "typing" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "numpy" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "tokenizers" [];
	"transformers.models.whisper.english_normalizer" -> "re" [];
	"transformers.models.whisper.english_normalizer" -> "unicodedata" [];
	"transformers.models.whisper.english_normalizer" -> "fractions" [];
	"transformers.models.whisper.english_normalizer" -> "typing" [];
	"transformers.models.whisper.english_normalizer" -> "regex" [];
	"regex" -> "warnings" [];
	"regex.regex" -> "threading" [];
	"regex.regex" -> "locale" [];
	"regex.regex" -> "copyreg" [];
	"regex._regex_core" -> "enum" [];
	"regex._regex_core" -> "string" [];
	"regex._regex_core" -> "unicodedata" [];
	"regex._regex_core" -> "collections" [];
	"regex._regex_core" -> "random" [];
	"transformers.models.whisper.tokenization_whisper" -> "json" [];
	"transformers.models.whisper.tokenization_whisper" -> "os" [];
	"transformers.models.whisper.tokenization_whisper" -> "warnings" [];
	"transformers.models.whisper.tokenization_whisper" -> "functools" [];
	"transformers.models.whisper.tokenization_whisper" -> "typing" [];
	"transformers.models.whisper.tokenization_whisper" -> "numpy" [];
	"transformers.models.whisper.tokenization_whisper" -> "regex" [];
	"transformers.models.whisper.feature_extraction_whisper" -> "typing" [];
	"transformers.models.whisper.feature_extraction_whisper" -> "numpy" [];
	"transformers.models.whisper.feature_extraction_whisper" -> "transformers" [];
	"transformers.models.whisper.feature_extraction_whisper" -> "torch" [];
	"transformers.audio_utils" -> "warnings" [];
	"transformers.audio_utils" -> "typing" [];
	"transformers.audio_utils" -> "numpy" [];
	"transformers.models.whisper.configuration_whisper" -> "collections" [];
	"transformers.models.whisper.configuration_whisper" -> "typing" [];
	"transformers.models.wavlm" -> "typing" [];
	"transformers.models.wavlm" -> "sys" [];
	"transformers.models.wavlm.modeling_wavlm" -> "math" [];
	"transformers.models.wavlm.modeling_wavlm" -> "warnings" [];
	"transformers.models.wavlm.modeling_wavlm" -> "typing" [];
	"transformers.models.wavlm.modeling_wavlm" -> "numpy" [];
	"transformers.models.wavlm.modeling_wavlm" -> "torch" [];
	"transformers.models.wavlm.modeling_wavlm" -> "deepspeed" [];
	"transformers.models.wavlm.modeling_wavlm" -> "'peft.tuners'" [];
	"transformers.models.wavlm.configuration_wavlm" -> "functools" [];
	"transformers.models.wavlm.configuration_wavlm" -> "operator" [];
	"transformers.models.wav2vec2_with_lm" -> "typing" [];
	"transformers.models.wav2vec2_with_lm" -> "sys" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "os" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "warnings" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "contextlib" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "dataclasses" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "multiprocessing" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "typing" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "numpy" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "pyctcdecode" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "'pyctcdecode.alphabet'" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "'pyctcdecode.constants'" [];
	"transformers.models.wav2vec2_phoneme" -> "typing" [];
	"transformers.models.wav2vec2_phoneme" -> "sys" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "json" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "os" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "dataclasses" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "itertools" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "typing" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "numpy" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "torch" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "tensorflow" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "'jax.numpy'" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "'phonemizer.backend'" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "'phonemizer.separator'" [];
	"transformers.models.wav2vec2_conformer" -> "typing" [];
	"transformers.models.wav2vec2_conformer" -> "sys" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "math" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "warnings" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "dataclasses" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "typing" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "numpy" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "torch" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "deepspeed" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "'peft.tuners'" [];
	"transformers.models.wav2vec2_conformer.configuration_wav2vec2_conformer" -> "functools" [];
	"transformers.models.wav2vec2_conformer.configuration_wav2vec2_conformer" -> "operator" [];
	"transformers.models.wav2vec2_bert" -> "typing" [];
	"transformers.models.wav2vec2_bert" -> "sys" [];
	"transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" -> "math" [];
	"transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" -> "warnings" [];
	"transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" -> "typing" [];
	"transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" -> "numpy" [];
	"transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" -> "torch" [];
	"transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" -> "'peft.tuners'" [];
	"transformers.models.wav2vec2_bert.processing_wav2vec2_bert" -> "warnings" [];
	"transformers.models.wav2vec2_bert.processing_wav2vec2_bert" -> "typing" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "json" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "os" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "warnings" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "dataclasses" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "itertools" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "typing" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "numpy" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "torch" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "tensorflow" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "'jax.numpy'" [];
	"transformers.models.seamless_m4t.feature_extraction_seamless_m4t" -> "typing" [];
	"transformers.models.seamless_m4t.feature_extraction_seamless_m4t" -> "numpy" [];
	"transformers.models.seamless_m4t.feature_extraction_seamless_m4t" -> "torch" [];
	"transformers.models.wav2vec2" -> "typing" [];
	"transformers.models.wav2vec2" -> "sys" [];
	"transformers.models.wav2vec2.modeling_tf_wav2vec2" -> "__future__" [];
	"transformers.models.wav2vec2.modeling_tf_wav2vec2" -> "warnings" [];
	"transformers.models.wav2vec2.modeling_tf_wav2vec2" -> "dataclasses" [];
	"transformers.models.wav2vec2.modeling_tf_wav2vec2" -> "typing" [];
	"transformers.models.wav2vec2.modeling_tf_wav2vec2" -> "numpy" [];
	"transformers.models.wav2vec2.modeling_tf_wav2vec2" -> "tensorflow" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "math" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "warnings" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "dataclasses" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "typing" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "numpy" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "torch" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "deepspeed" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "'peft.tuners'" [];
	"transformers.models.wav2vec2.processing_wav2vec2" -> "warnings" [];
	"transformers.models.wav2vec2.processing_wav2vec2" -> "contextlib" [];
	"transformers.models.wav2vec2.processing_wav2vec2" -> "typing" [];
	"transformers.models.wav2vec2.feature_extraction_wav2vec2" -> "typing" [];
	"transformers.models.wav2vec2.feature_extraction_wav2vec2" -> "numpy" [];
	"transformers.models.wav2vec2.configuration_wav2vec2" -> "functools" [];
	"transformers.models.wav2vec2.configuration_wav2vec2" -> "operator" [];
	"transformers.models.vivit" -> "typing" [];
	"transformers.models.vivit" -> "sys" [];
	"transformers.models.vivit.modeling_vivit" -> "math" [];
	"transformers.models.vivit.modeling_vivit" -> "typing" [];
	"transformers.models.vivit.modeling_vivit" -> "torch" [];
	"transformers.models.vivit.image_processing_vivit" -> "typing" [];
	"transformers.models.vivit.image_processing_vivit" -> "numpy" [];
	"transformers.models.vivit.image_processing_vivit" -> "PIL" [];
	"transformers.models.vits" -> "typing" [];
	"transformers.models.vits" -> "sys" [];
	"transformers.models.vits.modeling_vits" -> "math" [];
	"transformers.models.vits.modeling_vits" -> "dataclasses" [];
	"transformers.models.vits.modeling_vits" -> "typing" [];
	"transformers.models.vits.modeling_vits" -> "numpy" [];
	"transformers.models.vits.modeling_vits" -> "torch" [];
	"transformers.models.vits.tokenization_vits" -> "json" [];
	"transformers.models.vits.tokenization_vits" -> "os" [];
	"transformers.models.vits.tokenization_vits" -> "re" [];
	"transformers.models.vits.tokenization_vits" -> "typing" [];
	"transformers.models.vits.tokenization_vits" -> "phonemizer" [];
	"transformers.models.vits.tokenization_vits" -> "uroman" [];
	"transformers.models.vitmatte" -> "typing" [];
	"transformers.models.vitmatte" -> "sys" [];
	"transformers.models.vitmatte.modeling_vitmatte" -> "dataclasses" [];
	"transformers.models.vitmatte.modeling_vitmatte" -> "typing" [];
	"transformers.models.vitmatte.modeling_vitmatte" -> "torch" [];
	"transformers.models.vitmatte.image_processing_vitmatte" -> "typing" [];
	"transformers.models.vitmatte.image_processing_vitmatte" -> "numpy" [];
	"transformers.models.vitmatte.configuration_vitmatte" -> "copy" [];
	"transformers.models.vitmatte.configuration_vitmatte" -> "typing" [];
	"transformers.models.vitdet" -> "typing" [];
	"transformers.models.vitdet" -> "sys" [];
	"transformers.models.vitdet.modeling_vitdet" -> "math" [];
	"transformers.models.vitdet.modeling_vitdet" -> "typing" [];
	"transformers.models.vitdet.modeling_vitdet" -> "torch" [];
	"transformers.models.vit_msn" -> "typing" [];
	"transformers.models.vit_msn" -> "sys" [];
	"transformers.models.vit_msn.modeling_vit_msn" -> "math" [];
	"transformers.models.vit_msn.modeling_vit_msn" -> "typing" [];
	"transformers.models.vit_msn.modeling_vit_msn" -> "torch" [];
	"transformers.models.vit_mae" -> "typing" [];
	"transformers.models.vit_mae" -> "sys" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "__future__" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "math" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "copy" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "dataclasses" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "typing" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "numpy" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "tensorflow" [];
	"transformers.models.vit_mae.modeling_vit_mae" -> "math" [];
	"transformers.models.vit_mae.modeling_vit_mae" -> "copy" [];
	"transformers.models.vit_mae.modeling_vit_mae" -> "dataclasses" [];
	"transformers.models.vit_mae.modeling_vit_mae" -> "typing" [];
	"transformers.models.vit_mae.modeling_vit_mae" -> "numpy" [];
	"transformers.models.vit_mae.modeling_vit_mae" -> "torch" [];
	"transformers.models.vit" -> "typing" [];
	"transformers.models.vit" -> "sys" [];
	"transformers.models.vit.modeling_flax_vit" -> "typing" [];
	"transformers.models.vit.modeling_flax_vit" -> "'flax.linen'" [];
	"transformers.models.vit.modeling_flax_vit" -> "jax" [];
	"transformers.models.vit.modeling_flax_vit" -> "'jax.numpy'" [];
	"transformers.models.vit.modeling_flax_vit" -> "'flax.core'" [];
	"transformers.models.vit.modeling_flax_vit" -> "'flax.traverse_util'" [];
	"transformers.models.vit.modeling_tf_vit" -> "__future__" [];
	"transformers.models.vit.modeling_tf_vit" -> "math" [];
	"transformers.models.vit.modeling_tf_vit" -> "typing" [];
	"transformers.models.vit.modeling_tf_vit" -> "numpy" [];
	"transformers.models.vit.modeling_tf_vit" -> "tensorflow" [];
	"transformers.models.vit.modeling_vit" -> "math" [];
	"transformers.models.vit.modeling_vit" -> "typing" [];
	"transformers.models.vit.modeling_vit" -> "torch" [];
	"transformers.models.vit.image_processing_vit_fast" -> "functools" [];
	"transformers.models.vit.image_processing_vit_fast" -> "typing" [];
	"transformers.models.vit.image_processing_vit_fast" -> "torch" [];
	"transformers.models.vit.image_processing_vit_fast" -> "'torchvision.transforms'" [];
	"transformers.models.vit.image_processing_vit" -> "typing" [];
	"transformers.models.vit.image_processing_vit" -> "numpy" [];
	"transformers.models.vit.feature_extraction_vit" -> "warnings" [];
	"transformers.models.vit.configuration_vit" -> "collections" [];
	"transformers.models.vit.configuration_vit" -> "typing" [];
	"transformers.models.vit.configuration_vit" -> "packaging" [];
	"transformers.models.visual_bert" -> "typing" [];
	"transformers.models.visual_bert" -> "sys" [];
	"transformers.models.visual_bert.modeling_visual_bert" -> "math" [];
	"transformers.models.visual_bert.modeling_visual_bert" -> "dataclasses" [];
	"transformers.models.visual_bert.modeling_visual_bert" -> "typing" [];
	"transformers.models.visual_bert.modeling_visual_bert" -> "torch" [];
	"transformers.models.vision_text_dual_encoder" -> "typing" [];
	"transformers.models.vision_text_dual_encoder" -> "sys" [];
	"transformers.models.vision_text_dual_encoder.modeling_tf_vision_text_dual_encoder" -> "__future__" [];
	"transformers.models.vision_text_dual_encoder.modeling_tf_vision_text_dual_encoder" -> "re" [];
	"transformers.models.vision_text_dual_encoder.modeling_tf_vision_text_dual_encoder" -> "typing" [];
	"transformers.models.vision_text_dual_encoder.modeling_tf_vision_text_dual_encoder" -> "tensorflow" [];
	"transformers.models.clip.modeling_tf_clip" -> "__future__" [];
	"transformers.models.clip.modeling_tf_clip" -> "math" [];
	"transformers.models.clip.modeling_tf_clip" -> "dataclasses" [];
	"transformers.models.clip.modeling_tf_clip" -> "typing" [];
	"transformers.models.clip.modeling_tf_clip" -> "numpy" [];
	"transformers.models.clip.modeling_tf_clip" -> "tensorflow" [];
	"transformers.models.clip.configuration_clip" -> "os" [];
	"transformers.models.clip.configuration_clip" -> "collections" [];
	"transformers.models.clip.configuration_clip" -> "typing" [];
	"transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" -> "typing" [];
	"transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" -> "'flax.linen'" [];
	"transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" -> "jax" [];
	"transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" -> "'jax.numpy'" [];
	"transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" -> "'flax.core'" [];
	"transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" -> "'flax.traverse_util'" [];
	"transformers.models.clip.modeling_flax_clip" -> "typing" [];
	"transformers.models.clip.modeling_flax_clip" -> "flax" [];
	"transformers.models.clip.modeling_flax_clip" -> "'flax.linen'" [];
	"transformers.models.clip.modeling_flax_clip" -> "jax" [];
	"transformers.models.clip.modeling_flax_clip" -> "'jax.numpy'" [];
	"transformers.models.clip.modeling_flax_clip" -> "'flax.core'" [];
	"transformers.models.clip.modeling_flax_clip" -> "'flax.traverse_util'" [];
	"transformers.models.auto.modeling_flax_auto" -> "collections" [];
	"transformers.models.vision_text_dual_encoder.modeling_vision_text_dual_encoder" -> "typing" [];
	"transformers.models.vision_text_dual_encoder.modeling_vision_text_dual_encoder" -> "torch" [];
	"transformers.models.clip.modeling_clip" -> "dataclasses" [];
	"transformers.models.clip.modeling_clip" -> "typing" [];
	"transformers.models.clip.modeling_clip" -> "torch" [];
	"transformers.models.vision_text_dual_encoder.processing_vision_text_dual_encoder" -> "warnings" [];
	"transformers.models.siglip.configuration_siglip" -> "os" [];
	"transformers.models.siglip.configuration_siglip" -> "typing" [];
	"transformers.models.chinese_clip.configuration_chinese_clip" -> "os" [];
	"transformers.models.chinese_clip.configuration_chinese_clip" -> "collections" [];
	"transformers.models.chinese_clip.configuration_chinese_clip" -> "typing" [];
	"transformers.models.vision_encoder_decoder" -> "typing" [];
	"transformers.models.vision_encoder_decoder" -> "sys" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "os" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "typing" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "'flax.linen'" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "jax" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "'jax.numpy'" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "'flax.core'" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "'flax.traverse_util'" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "'jax.random'" [];
	"transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" -> "__future__" [];
	"transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" -> "re" [];
	"transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" -> "warnings" [];
	"transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" -> "typing" [];
	"transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" -> "numpy" [];
	"transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" -> "tensorflow" [];
	"transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder" -> "gc" [];
	"transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder" -> "os" [];
	"transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder" -> "tempfile" [];
	"transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder" -> "typing" [];
	"transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder" -> "torch" [];
	"transformers.models.vision_encoder_decoder.modeling_vision_encoder_decoder" -> "transformers" [];
	"transformers.models.vision_encoder_decoder.configuration_vision_encoder_decoder" -> "typing" [];
	"transformers.models.vision_encoder_decoder.configuration_vision_encoder_decoder" -> "packaging" [];
	"transformers.models.vision_encoder_decoder.configuration_vision_encoder_decoder" -> "transformers" [];
	"transformers.models.vision_encoder_decoder.configuration_vision_encoder_decoder" -> "torch" [];
	"transformers.models.vipllava" -> "typing" [];
	"transformers.models.vipllava" -> "sys" [];
	"transformers.models.vipllava.modeling_vipllava" -> "dataclasses" [];
	"transformers.models.vipllava.modeling_vipllava" -> "typing" [];
	"transformers.models.vipllava.modeling_vipllava" -> "torch" [];
	"transformers.models.vilt" -> "typing" [];
	"transformers.models.vilt" -> "sys" [];
	"transformers.models.vilt.modeling_vilt" -> "math" [];
	"transformers.models.vilt.modeling_vilt" -> "dataclasses" [];
	"transformers.models.vilt.modeling_vilt" -> "typing" [];
	"transformers.models.vilt.modeling_vilt" -> "torch" [];
	"transformers.models.vilt.processing_vilt" -> "warnings" [];
	"transformers.models.vilt.processing_vilt" -> "typing" [];
	"transformers.models.vilt.image_processing_vilt" -> "typing" [];
	"transformers.models.vilt.image_processing_vilt" -> "numpy" [];
	"transformers.models.vilt.image_processing_vilt" -> "PIL" [];
	"transformers.models.vilt.feature_extraction_vilt" -> "warnings" [];
	"transformers.models.videomae" -> "typing" [];
	"transformers.models.videomae" -> "sys" [];
	"transformers.models.videomae.image_processing_videomae" -> "typing" [];
	"transformers.models.videomae.image_processing_videomae" -> "numpy" [];
	"transformers.models.videomae.image_processing_videomae" -> "PIL" [];
	"transformers.models.videomae.feature_extraction_videomae" -> "warnings" [];
	"transformers.models.videomae.modeling_videomae" -> "math" [];
	"transformers.models.videomae.modeling_videomae" -> "copy" [];
	"transformers.models.videomae.modeling_videomae" -> "dataclasses" [];
	"transformers.models.videomae.modeling_videomae" -> "typing" [];
	"transformers.models.videomae.modeling_videomae" -> "numpy" [];
	"transformers.models.videomae.modeling_videomae" -> "torch" [];
	"transformers.models.video_llava" -> "typing" [];
	"transformers.models.video_llava" -> "sys" [];
	"transformers.models.video_llava.modeling_video_llava" -> "dataclasses" [];
	"transformers.models.video_llava.modeling_video_llava" -> "typing" [];
	"transformers.models.video_llava.modeling_video_llava" -> "torch" [];
	"transformers.models.video_llava.image_processing_video_llava" -> "typing" [];
	"transformers.models.video_llava.image_processing_video_llava" -> "numpy" [];
	"transformers.models.video_llava.image_processing_video_llava" -> "PIL" [];
	"transformers.models.upernet" -> "typing" [];
	"transformers.models.upernet" -> "sys" [];
	"transformers.models.upernet.modeling_upernet" -> "typing" [];
	"transformers.models.upernet.modeling_upernet" -> "torch" [];
	"transformers.models.univnet" -> "typing" [];
	"transformers.models.univnet" -> "sys" [];
	"transformers.models.univnet.modeling_univnet" -> "dataclasses" [];
	"transformers.models.univnet.modeling_univnet" -> "typing" [];
	"transformers.models.univnet.modeling_univnet" -> "torch" [];
	"transformers.models.univnet.feature_extraction_univnet" -> "typing" [];
	"transformers.models.univnet.feature_extraction_univnet" -> "numpy" [];
	"transformers.models.unispeech_sat" -> "typing" [];
	"transformers.models.unispeech_sat" -> "sys" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "math" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "warnings" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "dataclasses" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "typing" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "numpy" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "torch" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "deepspeed" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "'peft.tuners'" [];
	"transformers.models.unispeech_sat.configuration_unispeech_sat" -> "functools" [];
	"transformers.models.unispeech_sat.configuration_unispeech_sat" -> "operator" [];
	"transformers.models.unispeech" -> "typing" [];
	"transformers.models.unispeech" -> "sys" [];
	"transformers.models.unispeech.modeling_unispeech" -> "math" [];
	"transformers.models.unispeech.modeling_unispeech" -> "warnings" [];
	"transformers.models.unispeech.modeling_unispeech" -> "dataclasses" [];
	"transformers.models.unispeech.modeling_unispeech" -> "typing" [];
	"transformers.models.unispeech.modeling_unispeech" -> "numpy" [];
	"transformers.models.unispeech.modeling_unispeech" -> "torch" [];
	"transformers.models.unispeech.modeling_unispeech" -> "deepspeed" [];
	"transformers.models.unispeech.configuration_unispeech" -> "functools" [];
	"transformers.models.unispeech.configuration_unispeech" -> "operator" [];
	"transformers.models.umt5" -> "typing" [];
	"transformers.models.umt5" -> "sys" [];
	"transformers.models.umt5.modeling_umt5" -> "copy" [];
	"transformers.models.umt5.modeling_umt5" -> "math" [];
	"transformers.models.umt5.modeling_umt5" -> "typing" [];
	"transformers.models.umt5.modeling_umt5" -> "torch" [];
	"transformers.models.umt5.configuration_umt5" -> "typing" [];
	"transformers.models.udop" -> "typing" [];
	"transformers.models.udop" -> "sys" [];
	"transformers.models.udop.modeling_udop" -> "collections" [];
	"transformers.models.udop.modeling_udop" -> "logging" [];
	"transformers.models.udop.modeling_udop" -> "math" [];
	"transformers.models.udop.modeling_udop" -> "random" [];
	"transformers.models.udop.modeling_udop" -> "abc" [];
	"transformers.models.udop.modeling_udop" -> "copy" [];
	"transformers.models.udop.modeling_udop" -> "dataclasses" [];
	"transformers.models.udop.modeling_udop" -> "typing" [];
	"transformers.models.udop.modeling_udop" -> "torch" [];
	"transformers.models.udop.modeling_udop" -> "transformers" [];
	"transformers.models.udop.tokenization_udop_fast" -> "os" [];
	"transformers.models.udop.tokenization_udop_fast" -> "shutil" [];
	"transformers.models.udop.tokenization_udop_fast" -> "typing" [];
	"transformers.models.udop.tokenization_udop" -> "os" [];
	"transformers.models.udop.tokenization_udop" -> "re" [];
	"transformers.models.udop.tokenization_udop" -> "warnings" [];
	"transformers.models.udop.tokenization_udop" -> "shutil" [];
	"transformers.models.udop.tokenization_udop" -> "typing" [];
	"transformers.models.udop.tokenization_udop" -> "sentencepiece" [];
	"transformers.models.udop.processing_udop" -> "typing" [];
	"transformers.models.udop.processing_udop" -> "transformers" [];
	"transformers.models.tvp" -> "typing" [];
	"transformers.models.tvp" -> "sys" [];
	"transformers.models.tvp.modeling_tvp" -> "math" [];
	"transformers.models.tvp.modeling_tvp" -> "dataclasses" [];
	"transformers.models.tvp.modeling_tvp" -> "typing" [];
	"transformers.models.tvp.modeling_tvp" -> "torch" [];
	"transformers.models.tvp.image_processing_tvp" -> "typing" [];
	"transformers.models.tvp.image_processing_tvp" -> "numpy" [];
	"transformers.models.tvp.image_processing_tvp" -> "PIL" [];
	"transformers.models.tvp.configuration_tvp" -> "copy" [];
	"transformers.models.trocr" -> "typing" [];
	"transformers.models.trocr" -> "sys" [];
	"transformers.models.trocr.modeling_trocr" -> "copy" [];
	"transformers.models.trocr.modeling_trocr" -> "math" [];
	"transformers.models.trocr.modeling_trocr" -> "typing" [];
	"transformers.models.trocr.modeling_trocr" -> "torch" [];
	"transformers.models.trocr.processing_trocr" -> "warnings" [];
	"transformers.models.trocr.processing_trocr" -> "contextlib" [];
	"transformers.models.timm_backbone" -> "typing" [];
	"transformers.models.timm_backbone" -> "sys" [];
	"transformers.models.timm_backbone.modeling_timm_backbone" -> "typing" [];
	"transformers.models.timm_backbone.modeling_timm_backbone" -> "torch" [];
	"transformers.models.timm_backbone.modeling_timm_backbone" -> "timm" [];
	"transformers.models.timesformer" -> "typing" [];
	"transformers.models.timesformer" -> "sys" [];
	"transformers.models.timesformer.modeling_timesformer" -> "collections" [];
	"transformers.models.timesformer.modeling_timesformer" -> "typing" [];
	"transformers.models.timesformer.modeling_timesformer" -> "torch" [];
	"transformers.models.time_series_transformer" -> "typing" [];
	"transformers.models.time_series_transformer" -> "sys" [];
	"transformers.models.time_series_transformer.modeling_time_series_transformer" -> "typing" [];
	"transformers.models.time_series_transformer.modeling_time_series_transformer" -> "numpy" [];
	"transformers.models.time_series_transformer.modeling_time_series_transformer" -> "torch" [];
	"transformers.time_series_utils" -> "typing" [];
	"transformers.time_series_utils" -> "torch" [];
	"torch.distributions.wishart" -> "math" [];
	"torch.distributions.wishart" -> "warnings" [];
	"torch.distributions.wishart" -> "numbers" [];
	"torch.distributions.wishart" -> "typing" [];
	"torch.distributions.wishart" -> "torch" [];
	"torch.distributions.utils" -> "functools" [];
	"torch.distributions.utils" -> "numbers" [];
	"torch.distributions.utils" -> "typing" [];
	"torch.distributions.utils" -> "torch" [];
	"torch.distributions.weibull" -> "torch" [];
	"torch.distributions.von_mises" -> "math" [];
	"torch.distributions.von_mises" -> "torch" [];
	"torch.distributions.uniform" -> "numbers" [];
	"torch.distributions.uniform" -> "torch" [];
	"torch.distributions.transformed_distribution" -> "typing" [];
	"torch.distributions.transformed_distribution" -> "torch" [];
	"torch.distributions.studentT" -> "math" [];
	"torch.distributions.studentT" -> "torch" [];
	"torch.distributions.relaxed_categorical" -> "torch" [];
	"torch.distributions.relaxed_bernoulli" -> "numbers" [];
	"torch.distributions.relaxed_bernoulli" -> "torch" [];
	"torch.distributions.poisson" -> "numbers" [];
	"torch.distributions.poisson" -> "torch" [];
	"torch.distributions.one_hot_categorical" -> "torch" [];
	"torch.distributions.normal" -> "math" [];
	"torch.distributions.normal" -> "numbers" [];
	"torch.distributions.normal" -> "torch" [];
	"torch.distributions.negative_binomial" -> "torch" [];
	"torch.distributions.multivariate_normal" -> "math" [];
	"torch.distributions.multivariate_normal" -> "torch" [];
	"torch.distributions.multinomial" -> "torch" [];
	"torch.distributions.mixture_same_family" -> "typing" [];
	"torch.distributions.mixture_same_family" -> "torch" [];
	"torch.distributions.lowrank_multivariate_normal" -> "math" [];
	"torch.distributions.lowrank_multivariate_normal" -> "torch" [];
	"torch.distributions.lkj_cholesky" -> "math" [];
	"torch.distributions.lkj_cholesky" -> "torch" [];
	"torch.distributions.laplace" -> "numbers" [];
	"torch.distributions.laplace" -> "torch" [];
	"torch.distributions.kumaraswamy" -> "torch" [];
	"torch.distributions.kl" -> "math" [];
	"torch.distributions.kl" -> "warnings" [];
	"torch.distributions.kl" -> "functools" [];
	"torch.distributions.kl" -> "typing" [];
	"torch.distributions.kl" -> "torch" [];
	"torch.distributions.inverse_gamma" -> "torch" [];
	"torch.distributions.independent" -> "typing" [];
	"torch.distributions.independent" -> "torch" [];
	"torch.distributions.half_normal" -> "math" [];
	"torch.distributions.half_normal" -> "torch" [];
	"torch.distributions.half_cauchy" -> "math" [];
	"torch.distributions.half_cauchy" -> "torch" [];
	"torch.distributions.gumbel" -> "math" [];
	"torch.distributions.gumbel" -> "numbers" [];
	"torch.distributions.gumbel" -> "torch" [];
	"torch.distributions.geometric" -> "numbers" [];
	"torch.distributions.geometric" -> "torch" [];
	"torch.distributions.gamma" -> "numbers" [];
	"torch.distributions.gamma" -> "torch" [];
	"torch.distributions.fishersnedecor" -> "numbers" [];
	"torch.distributions.fishersnedecor" -> "torch" [];
	"torch.distributions.exponential" -> "numbers" [];
	"torch.distributions.exponential" -> "torch" [];
	"torch.distributions.exp_family" -> "torch" [];
	"torch.distributions.distribution" -> "warnings" [];
	"torch.distributions.distribution" -> "typing" [];
	"torch.distributions.distribution" -> "typing_extensions" [];
	"torch.distributions.distribution" -> "torch" [];
	"torch.distributions.dirichlet" -> "torch" [];
	"torch.distributions.continuous_bernoulli" -> "math" [];
	"torch.distributions.continuous_bernoulli" -> "numbers" [];
	"torch.distributions.continuous_bernoulli" -> "torch" [];
	"torch.distributions.constraint_registry" -> "numbers" [];
	"torch.distributions.cauchy" -> "math" [];
	"torch.distributions.cauchy" -> "numbers" [];
	"torch.distributions.cauchy" -> "torch" [];
	"torch.distributions.categorical" -> "torch" [];
	"torch.distributions.binomial" -> "torch" [];
	"torch.distributions.beta" -> "numbers" [];
	"torch.distributions.beta" -> "torch" [];
	"torch.distributions.bernoulli" -> "numbers" [];
	"torch.distributions.bernoulli" -> "torch" [];
	"torch.distributions.transforms" -> "functools" [];
	"torch.distributions.transforms" -> "math" [];
	"torch.distributions.transforms" -> "numbers" [];
	"torch.distributions.transforms" -> "operator" [];
	"torch.distributions.transforms" -> "weakref" [];
	"torch.distributions.transforms" -> "typing" [];
	"torch.distributions.transforms" -> "torch" [];
	"torch.distributions.constraints" -> "torch" [];
	"transformers.models.time_series_transformer.configuration_time_series_transformer" -> "typing" [];
	"transformers.models.tapas" -> "typing" [];
	"transformers.models.tapas" -> "sys" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "__future__" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "enum" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "math" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "dataclasses" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "typing" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "numpy" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "tensorflow" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "tensorflow_probability" [];
	"transformers.models.tapas.modeling_tapas" -> "enum" [];
	"transformers.models.tapas.modeling_tapas" -> "math" [];
	"transformers.models.tapas.modeling_tapas" -> "os" [];
	"transformers.models.tapas.modeling_tapas" -> "dataclasses" [];
	"transformers.models.tapas.modeling_tapas" -> "typing" [];
	"transformers.models.tapas.modeling_tapas" -> "torch" [];
	"transformers.models.tapas.modeling_tapas" -> "re" [];
	"transformers.models.tapas.modeling_tapas" -> "numpy" [];
	"transformers.models.tapas.modeling_tapas" -> "tensorflow" [];
	"transformers.models.tapas.tokenization_tapas" -> "collections" [];
	"transformers.models.tapas.tokenization_tapas" -> "datetime" [];
	"transformers.models.tapas.tokenization_tapas" -> "enum" [];
	"transformers.models.tapas.tokenization_tapas" -> "itertools" [];
	"transformers.models.tapas.tokenization_tapas" -> "math" [];
	"transformers.models.tapas.tokenization_tapas" -> "os" [];
	"transformers.models.tapas.tokenization_tapas" -> "re" [];
	"transformers.models.tapas.tokenization_tapas" -> "unicodedata" [];
	"transformers.models.tapas.tokenization_tapas" -> "dataclasses" [];
	"transformers.models.tapas.tokenization_tapas" -> "typing" [];
	"transformers.models.tapas.tokenization_tapas" -> "numpy" [];
	"transformers.models.tapas.tokenization_tapas" -> "pandas" [];
	"transformers.models.table_transformer" -> "typing" [];
	"transformers.models.table_transformer" -> "sys" [];
	"transformers.models.table_transformer.modeling_table_transformer" -> "math" [];
	"transformers.models.table_transformer.modeling_table_transformer" -> "dataclasses" [];
	"transformers.models.table_transformer.modeling_table_transformer" -> "typing" [];
	"transformers.models.table_transformer.modeling_table_transformer" -> "torch" [];
	"transformers.models.table_transformer.modeling_table_transformer" -> "timm" [];
	"transformers.models.table_transformer.configuration_table_transformer" -> "collections" [];
	"transformers.models.table_transformer.configuration_table_transformer" -> "typing" [];
	"transformers.models.table_transformer.configuration_table_transformer" -> "packaging" [];
	"transformers.models.t5" -> "typing" [];
	"transformers.models.t5" -> "sys" [];
	"transformers.models.t5.modeling_flax_t5" -> "copy" [];
	"transformers.models.t5.modeling_flax_t5" -> "typing" [];
	"transformers.models.t5.modeling_flax_t5" -> "'flax.linen'" [];
	"transformers.models.t5.modeling_flax_t5" -> "jax" [];
	"transformers.models.t5.modeling_flax_t5" -> "'jax.numpy'" [];
	"transformers.models.t5.modeling_flax_t5" -> "numpy" [];
	"transformers.models.t5.modeling_flax_t5" -> "'flax.core'" [];
	"transformers.models.t5.modeling_flax_t5" -> "'flax.traverse_util'" [];
	"transformers.models.t5.modeling_flax_t5" -> "'jax.random'" [];
	"transformers.models.t5.modeling_tf_t5" -> "__future__" [];
	"transformers.models.t5.modeling_tf_t5" -> "copy" [];
	"transformers.models.t5.modeling_tf_t5" -> "itertools" [];
	"transformers.models.t5.modeling_tf_t5" -> "math" [];
	"transformers.models.t5.modeling_tf_t5" -> "warnings" [];
	"transformers.models.t5.modeling_tf_t5" -> "typing" [];
	"transformers.models.t5.modeling_tf_t5" -> "numpy" [];
	"transformers.models.t5.modeling_tf_t5" -> "tensorflow" [];
	"transformers.models.t5.modeling_tf_t5" -> "'tensorflow.compiler'" [];
	"transformers.models.t5.modeling_t5" -> "copy" [];
	"transformers.models.t5.modeling_t5" -> "math" [];
	"transformers.models.t5.modeling_t5" -> "os" [];
	"transformers.models.t5.modeling_t5" -> "warnings" [];
	"transformers.models.t5.modeling_t5" -> "typing" [];
	"transformers.models.t5.modeling_t5" -> "torch" [];
	"transformers.models.t5.modeling_t5" -> "re" [];
	"transformers.models.t5.modeling_t5" -> "numpy" [];
	"transformers.models.t5.modeling_t5" -> "tensorflow" [];
	"transformers.models.t5.modeling_t5" -> "'apex.normalization'" [];
	"transformers.utils.model_parallel_utils" -> "math" [];
	"transformers.models.t5.tokenization_t5_fast" -> "os" [];
	"transformers.models.t5.tokenization_t5_fast" -> "re" [];
	"transformers.models.t5.tokenization_t5_fast" -> "warnings" [];
	"transformers.models.t5.tokenization_t5_fast" -> "shutil" [];
	"transformers.models.t5.tokenization_t5_fast" -> "typing" [];
	"transformers.models.t5.tokenization_t5" -> "os" [];
	"transformers.models.t5.tokenization_t5" -> "re" [];
	"transformers.models.t5.tokenization_t5" -> "warnings" [];
	"transformers.models.t5.tokenization_t5" -> "shutil" [];
	"transformers.models.t5.tokenization_t5" -> "typing" [];
	"transformers.models.t5.tokenization_t5" -> "sentencepiece" [];
	"transformers.models.t5.configuration_t5" -> "typing" [];
	"transformers.models.switch_transformers" -> "typing" [];
	"transformers.models.switch_transformers" -> "sys" [];
	"transformers.models.switch_transformers.modeling_switch_transformers" -> "copy" [];
	"transformers.models.switch_transformers.modeling_switch_transformers" -> "math" [];
	"transformers.models.switch_transformers.modeling_switch_transformers" -> "warnings" [];
	"transformers.models.switch_transformers.modeling_switch_transformers" -> "typing" [];
	"transformers.models.switch_transformers.modeling_switch_transformers" -> "torch" [];
	"transformers.models.swinv2" -> "typing" [];
	"transformers.models.swinv2" -> "sys" [];
	"transformers.models.swinv2.modeling_swinv2" -> "math" [];
	"transformers.models.swinv2.modeling_swinv2" -> "warnings" [];
	"transformers.models.swinv2.modeling_swinv2" -> "dataclasses" [];
	"transformers.models.swinv2.modeling_swinv2" -> "typing" [];
	"transformers.models.swinv2.modeling_swinv2" -> "torch" [];
	"transformers.models.swin2sr" -> "typing" [];
	"transformers.models.swin2sr" -> "sys" [];
	"transformers.models.swin2sr.image_processing_swin2sr" -> "typing" [];
	"transformers.models.swin2sr.image_processing_swin2sr" -> "numpy" [];
	"transformers.models.swin2sr.modeling_swin2sr" -> "math" [];
	"transformers.models.swin2sr.modeling_swin2sr" -> "dataclasses" [];
	"transformers.models.swin2sr.modeling_swin2sr" -> "typing" [];
	"transformers.models.swin2sr.modeling_swin2sr" -> "torch" [];
	"transformers.models.swin" -> "typing" [];
	"transformers.models.swin" -> "sys" [];
	"transformers.models.swin.modeling_tf_swin" -> "__future__" [];
	"transformers.models.swin.modeling_tf_swin" -> "math" [];
	"transformers.models.swin.modeling_tf_swin" -> "warnings" [];
	"transformers.models.swin.modeling_tf_swin" -> "dataclasses" [];
	"transformers.models.swin.modeling_tf_swin" -> "functools" [];
	"transformers.models.swin.modeling_tf_swin" -> "typing" [];
	"transformers.models.swin.modeling_tf_swin" -> "tensorflow" [];
	"transformers.models.swin.modeling_swin" -> "math" [];
	"transformers.models.swin.modeling_swin" -> "warnings" [];
	"transformers.models.swin.modeling_swin" -> "dataclasses" [];
	"transformers.models.swin.modeling_swin" -> "typing" [];
	"transformers.models.swin.modeling_swin" -> "torch" [];
	"transformers.models.swin.configuration_swin" -> "collections" [];
	"transformers.models.swin.configuration_swin" -> "typing" [];
	"transformers.models.swin.configuration_swin" -> "packaging" [];
	"transformers.models.swiftformer" -> "typing" [];
	"transformers.models.swiftformer" -> "sys" [];
	"transformers.models.swiftformer.modeling_tf_swiftformer" -> "typing" [];
	"transformers.models.swiftformer.modeling_tf_swiftformer" -> "tensorflow" [];
	"transformers.models.swiftformer.modeling_swiftformer" -> "typing" [];
	"transformers.models.swiftformer.modeling_swiftformer" -> "torch" [];
	"transformers.models.swiftformer.configuration_swiftformer" -> "collections" [];
	"transformers.models.swiftformer.configuration_swiftformer" -> "typing" [];
	"transformers.models.swiftformer.configuration_swiftformer" -> "packaging" [];
	"transformers.models.superpoint" -> "typing" [];
	"transformers.models.superpoint" -> "sys" [];
	"transformers.models.superpoint.modeling_superpoint" -> "dataclasses" [];
	"transformers.models.superpoint.modeling_superpoint" -> "typing" [];
	"transformers.models.superpoint.modeling_superpoint" -> "torch" [];
	"transformers.models.superpoint.modeling_superpoint" -> "transformers" [];
	"transformers.models.superpoint.image_processing_superpoint" -> "typing" [];
	"transformers.models.superpoint.image_processing_superpoint" -> "numpy" [];
	"transformers.models.superpoint.image_processing_superpoint" -> "transformers" [];
	"transformers.models.superpoint.image_processing_superpoint" -> "PIL" [];
	"transformers.models.superpoint.configuration_superpoint" -> "typing" [];
	"transformers.models.starcoder2" -> "typing" [];
	"transformers.models.starcoder2" -> "sys" [];
	"transformers.models.starcoder2.modeling_starcoder2" -> "math" [];
	"transformers.models.starcoder2.modeling_starcoder2" -> "typing" [];
	"transformers.models.starcoder2.modeling_starcoder2" -> "torch" [];
	"transformers.models.stablelm" -> "typing" [];
	"transformers.models.stablelm" -> "sys" [];
	"transformers.models.stablelm.modeling_stablelm" -> "math" [];
	"transformers.models.stablelm.modeling_stablelm" -> "typing" [];
	"transformers.models.stablelm.modeling_stablelm" -> "torch" [];
	"transformers.models.squeezebert" -> "typing" [];
	"transformers.models.squeezebert" -> "sys" [];
	"transformers.models.squeezebert.modeling_squeezebert" -> "math" [];
	"transformers.models.squeezebert.modeling_squeezebert" -> "typing" [];
	"transformers.models.squeezebert.modeling_squeezebert" -> "torch" [];
	"transformers.models.squeezebert.tokenization_squeezebert_fast" -> "json" [];
	"transformers.models.squeezebert.tokenization_squeezebert_fast" -> "typing" [];
	"transformers.models.squeezebert.tokenization_squeezebert_fast" -> "tokenizers" [];
	"transformers.models.squeezebert.tokenization_squeezebert" -> "collections" [];
	"transformers.models.squeezebert.tokenization_squeezebert" -> "os" [];
	"transformers.models.squeezebert.tokenization_squeezebert" -> "unicodedata" [];
	"transformers.models.squeezebert.tokenization_squeezebert" -> "typing" [];
	"transformers.models.squeezebert.configuration_squeezebert" -> "collections" [];
	"transformers.models.squeezebert.configuration_squeezebert" -> "typing" [];
	"transformers.models.splinter" -> "typing" [];
	"transformers.models.splinter" -> "sys" [];
	"transformers.models.splinter.modeling_splinter" -> "math" [];
	"transformers.models.splinter.modeling_splinter" -> "dataclasses" [];
	"transformers.models.splinter.modeling_splinter" -> "typing" [];
	"transformers.models.splinter.modeling_splinter" -> "torch" [];
	"transformers.models.splinter.tokenization_splinter_fast" -> "json" [];
	"transformers.models.splinter.tokenization_splinter_fast" -> "typing" [];
	"transformers.models.splinter.tokenization_splinter_fast" -> "tokenizers" [];
	"transformers.models.splinter.tokenization_splinter" -> "collections" [];
	"transformers.models.splinter.tokenization_splinter" -> "os" [];
	"transformers.models.splinter.tokenization_splinter" -> "unicodedata" [];
	"transformers.models.splinter.tokenization_splinter" -> "typing" [];
	"transformers.models.speecht5" -> "typing" [];
	"transformers.models.speecht5" -> "sys" [];
	"transformers.models.speecht5.tokenization_speecht5" -> "os" [];
	"transformers.models.speecht5.tokenization_speecht5" -> "shutil" [];
	"transformers.models.speecht5.tokenization_speecht5" -> "typing" [];
	"transformers.models.speecht5.tokenization_speecht5" -> "sentencepiece" [];
	"transformers.models.speecht5.number_normalizer" -> "re" [];
	"transformers.models.speecht5.feature_extraction_speecht5" -> "warnings" [];
	"transformers.models.speecht5.feature_extraction_speecht5" -> "typing" [];
	"transformers.models.speecht5.feature_extraction_speecht5" -> "numpy" [];
	"transformers.models.speech_to_text" -> "typing" [];
	"transformers.models.speech_to_text" -> "sys" [];
	"transformers.models.speech_to_text.modeling_speech_to_text" -> "math" [];
	"transformers.models.speech_to_text.modeling_speech_to_text" -> "typing" [];
	"transformers.models.speech_to_text.modeling_speech_to_text" -> "torch" [];
	"transformers.models.speech_to_text.modeling_tf_speech_to_text" -> "__future__" [];
	"transformers.models.speech_to_text.modeling_tf_speech_to_text" -> "random" [];
	"transformers.models.speech_to_text.modeling_tf_speech_to_text" -> "typing" [];
	"transformers.models.speech_to_text.modeling_tf_speech_to_text" -> "numpy" [];
	"transformers.models.speech_to_text.modeling_tf_speech_to_text" -> "tensorflow" [];
	"transformers.models.speech_to_text.tokenization_speech_to_text" -> "json" [];
	"transformers.models.speech_to_text.tokenization_speech_to_text" -> "os" [];
	"transformers.models.speech_to_text.tokenization_speech_to_text" -> "pathlib" [];
	"transformers.models.speech_to_text.tokenization_speech_to_text" -> "shutil" [];
	"transformers.models.speech_to_text.tokenization_speech_to_text" -> "typing" [];
	"transformers.models.speech_to_text.tokenization_speech_to_text" -> "sentencepiece" [];
	"transformers.models.speech_to_text.processing_speech_to_text" -> "warnings" [];
	"transformers.models.speech_to_text.processing_speech_to_text" -> "contextlib" [];
	"transformers.models.speech_to_text.feature_extraction_speech_to_text" -> "typing" [];
	"transformers.models.speech_to_text.feature_extraction_speech_to_text" -> "numpy" [];
	"transformers.models.speech_to_text.feature_extraction_speech_to_text" -> "torch" [];
	"transformers.models.speech_to_text.feature_extraction_speech_to_text" -> "'torchaudio.compliance'" [];
	"transformers.models.speech_encoder_decoder" -> "typing" [];
	"transformers.models.speech_encoder_decoder" -> "sys" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "os" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "typing" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "'flax.linen'" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "jax" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "'jax.numpy'" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "'flax.core'" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "'flax.traverse_util'" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "'jax.random'" [];
	"transformers.models.speech_encoder_decoder.modeling_speech_encoder_decoder" -> "typing" [];
	"transformers.models.speech_encoder_decoder.modeling_speech_encoder_decoder" -> "torch" [];
	"transformers.models.siglip" -> "typing" [];
	"transformers.models.siglip" -> "sys" [];
	"transformers.models.siglip.modeling_siglip" -> "math" [];
	"transformers.models.siglip.modeling_siglip" -> "warnings" [];
	"transformers.models.siglip.modeling_siglip" -> "dataclasses" [];
	"transformers.models.siglip.modeling_siglip" -> "typing" [];
	"transformers.models.siglip.modeling_siglip" -> "numpy" [];
	"transformers.models.siglip.modeling_siglip" -> "torch" [];
	"transformers.models.siglip.image_processing_siglip" -> "typing" [];
	"transformers.models.siglip.image_processing_siglip" -> "PIL" [];
	"transformers.models.siglip.tokenization_siglip" -> "os" [];
	"transformers.models.siglip.tokenization_siglip" -> "re" [];
	"transformers.models.siglip.tokenization_siglip" -> "string" [];
	"transformers.models.siglip.tokenization_siglip" -> "warnings" [];
	"transformers.models.siglip.tokenization_siglip" -> "shutil" [];
	"transformers.models.siglip.tokenization_siglip" -> "typing" [];
	"transformers.models.siglip.tokenization_siglip" -> "sentencepiece" [];
	"transformers.models.siglip.processing_siglip" -> "typing" [];
	"transformers.models.sew_d" -> "typing" [];
	"transformers.models.sew_d" -> "sys" [];
	"transformers.models.sew_d.modeling_sew_d" -> "math" [];
	"transformers.models.sew_d.modeling_sew_d" -> "warnings" [];
	"transformers.models.sew_d.modeling_sew_d" -> "typing" [];
	"transformers.models.sew_d.modeling_sew_d" -> "numpy" [];
	"transformers.models.sew_d.modeling_sew_d" -> "torch" [];
	"transformers.models.sew_d.modeling_sew_d" -> "deepspeed" [];
	"transformers.models.sew_d.configuration_sew_d" -> "functools" [];
	"transformers.models.sew_d.configuration_sew_d" -> "operator" [];
	"transformers.models.sew" -> "typing" [];
	"transformers.models.sew" -> "sys" [];
	"transformers.models.sew.modeling_sew" -> "math" [];
	"transformers.models.sew.modeling_sew" -> "warnings" [];
	"transformers.models.sew.modeling_sew" -> "typing" [];
	"transformers.models.sew.modeling_sew" -> "numpy" [];
	"transformers.models.sew.modeling_sew" -> "torch" [];
	"transformers.models.sew.modeling_sew" -> "deepspeed" [];
	"transformers.models.sew.configuration_sew" -> "functools" [];
	"transformers.models.sew.configuration_sew" -> "operator" [];
	"transformers.models.seggpt" -> "typing" [];
	"transformers.models.seggpt" -> "sys" [];
	"transformers.models.seggpt.image_processing_seggpt" -> "typing" [];
	"transformers.models.seggpt.image_processing_seggpt" -> "numpy" [];
	"transformers.models.seggpt.image_processing_seggpt" -> "torch" [];
	"transformers.models.seggpt.modeling_seggpt" -> "dataclasses" [];
	"transformers.models.seggpt.modeling_seggpt" -> "typing" [];
	"transformers.models.seggpt.modeling_seggpt" -> "torch" [];
	"transformers.models.segformer" -> "typing" [];
	"transformers.models.segformer" -> "sys" [];
	"transformers.models.segformer.modeling_tf_segformer" -> "__future__" [];
	"transformers.models.segformer.modeling_tf_segformer" -> "math" [];
	"transformers.models.segformer.modeling_tf_segformer" -> "typing" [];
	"transformers.models.segformer.modeling_tf_segformer" -> "tensorflow" [];
	"transformers.models.segformer.modeling_segformer" -> "math" [];
	"transformers.models.segformer.modeling_segformer" -> "typing" [];
	"transformers.models.segformer.modeling_segformer" -> "torch" [];
	"transformers.models.segformer.image_processing_segformer" -> "typing" [];
	"transformers.models.segformer.image_processing_segformer" -> "numpy" [];
	"transformers.models.segformer.image_processing_segformer" -> "'PIL.Image'" [];
	"transformers.models.segformer.image_processing_segformer" -> "torch" [];
	"transformers.models.segformer.feature_extraction_segformer" -> "warnings" [];
	"transformers.models.segformer.configuration_segformer" -> "warnings" [];
	"transformers.models.segformer.configuration_segformer" -> "collections" [];
	"transformers.models.segformer.configuration_segformer" -> "typing" [];
	"transformers.models.segformer.configuration_segformer" -> "packaging" [];
	"transformers.models.seamless_m4t_v2" -> "typing" [];
	"transformers.models.seamless_m4t_v2" -> "sys" [];
	"transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2" -> "copy" [];
	"transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2" -> "math" [];
	"transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2" -> "dataclasses" [];
	"transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2" -> "typing" [];
	"transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2" -> "torch" [];
	"transformers.models.seamless_m4t" -> "typing" [];
	"transformers.models.seamless_m4t" -> "sys" [];
	"transformers.models.seamless_m4t.modeling_seamless_m4t" -> "copy" [];
	"transformers.models.seamless_m4t.modeling_seamless_m4t" -> "math" [];
	"transformers.models.seamless_m4t.modeling_seamless_m4t" -> "dataclasses" [];
	"transformers.models.seamless_m4t.modeling_seamless_m4t" -> "typing" [];
	"transformers.models.seamless_m4t.modeling_seamless_m4t" -> "torch" [];
	"transformers.models.seamless_m4t.modeling_seamless_m4t" -> "deepspeed" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t_fast" -> "os" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t_fast" -> "shutil" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t_fast" -> "typing" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t_fast" -> "tokenizers" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t" -> "os" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t" -> "shutil" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t" -> "typing" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t" -> "sentencepiece" [];
	"transformers.models.sam" -> "typing" [];
	"transformers.models.sam" -> "sys" [];
	"transformers.models.sam.image_processing_sam" -> "math" [];
	"transformers.models.sam.image_processing_sam" -> "copy" [];
	"transformers.models.sam.image_processing_sam" -> "itertools" [];
	"transformers.models.sam.image_processing_sam" -> "typing" [];
	"transformers.models.sam.image_processing_sam" -> "numpy" [];
	"transformers.models.sam.image_processing_sam" -> "torch" [];
	"transformers.models.sam.image_processing_sam" -> "'torchvision.ops'" [];
	"transformers.models.sam.image_processing_sam" -> "tensorflow" [];
	"transformers.models.sam.image_processing_sam" -> "'tensorflow.experimental'" [];
	"transformers.models.sam.modeling_tf_sam" -> "__future__" [];
	"transformers.models.sam.modeling_tf_sam" -> "collections" [];
	"transformers.models.sam.modeling_tf_sam" -> "dataclasses" [];
	"transformers.models.sam.modeling_tf_sam" -> "typing" [];
	"transformers.models.sam.modeling_tf_sam" -> "numpy" [];
	"transformers.models.sam.modeling_tf_sam" -> "tensorflow" [];
	"transformers.models.sam.modeling_sam" -> "collections" [];
	"transformers.models.sam.modeling_sam" -> "dataclasses" [];
	"transformers.models.sam.modeling_sam" -> "typing" [];
	"transformers.models.sam.modeling_sam" -> "numpy" [];
	"transformers.models.sam.modeling_sam" -> "torch" [];
	"transformers.models.sam.processing_sam" -> "copy" [];
	"transformers.models.sam.processing_sam" -> "typing" [];
	"transformers.models.sam.processing_sam" -> "numpy" [];
	"transformers.models.sam.processing_sam" -> "torch" [];
	"transformers.models.sam.processing_sam" -> "tensorflow" [];
	"transformers.models.rwkv" -> "typing" [];
	"transformers.models.rwkv" -> "sys" [];
	"transformers.models.rwkv.modeling_rwkv" -> "math" [];
	"transformers.models.rwkv.modeling_rwkv" -> "dataclasses" [];
	"transformers.models.rwkv.modeling_rwkv" -> "pathlib" [];
	"transformers.models.rwkv.modeling_rwkv" -> "typing" [];
	"transformers.models.rwkv.modeling_rwkv" -> "torch" [];
	"transformers.models.rwkv.modeling_rwkv" -> "bitsandbytes" [];
	"transformers.models.rt_detr" -> "typing" [];
	"transformers.models.rt_detr" -> "sys" [];
	"transformers.models.rt_detr.modeling_rt_detr_resnet" -> "math" [];
	"transformers.models.rt_detr.modeling_rt_detr_resnet" -> "typing" [];
	"transformers.models.rt_detr.modeling_rt_detr_resnet" -> "torch" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "math" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "os" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "warnings" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "dataclasses" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "functools" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "pathlib" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "typing" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "torch" [];
	"transformers.models.rt_detr.image_processing_rt_detr" -> "pathlib" [];
	"transformers.models.rt_detr.image_processing_rt_detr" -> "typing" [];
	"transformers.models.rt_detr.image_processing_rt_detr" -> "numpy" [];
	"transformers.models.rt_detr.image_processing_rt_detr" -> "torch" [];
	"transformers.models.rt_detr.image_processing_rt_detr" -> "tensorflow" [];
	"transformers.models.rt_detr.image_processing_rt_detr" -> "'jax.numpy'" [];
	"transformers.models.roformer" -> "typing" [];
	"transformers.models.roformer" -> "sys" [];
	"transformers.models.roformer.modeling_flax_roformer" -> "typing" [];
	"transformers.models.roformer.modeling_flax_roformer" -> "'flax.linen'" [];
	"transformers.models.roformer.modeling_flax_roformer" -> "jax" [];
	"transformers.models.roformer.modeling_flax_roformer" -> "'jax.numpy'" [];
	"transformers.models.roformer.modeling_flax_roformer" -> "numpy" [];
	"transformers.models.roformer.modeling_flax_roformer" -> "'flax.core'" [];
	"transformers.models.roformer.modeling_flax_roformer" -> "'flax.traverse_util'" [];
	"transformers.models.roformer.modeling_tf_roformer" -> "__future__" [];
	"transformers.models.roformer.modeling_tf_roformer" -> "math" [];
	"transformers.models.roformer.modeling_tf_roformer" -> "typing" [];
	"transformers.models.roformer.modeling_tf_roformer" -> "numpy" [];
	"transformers.models.roformer.modeling_tf_roformer" -> "tensorflow" [];
	"transformers.models.roformer.modeling_roformer" -> "math" [];
	"transformers.models.roformer.modeling_roformer" -> "os" [];
	"transformers.models.roformer.modeling_roformer" -> "typing" [];
	"transformers.models.roformer.modeling_roformer" -> "numpy" [];
	"transformers.models.roformer.modeling_roformer" -> "torch" [];
	"transformers.models.roformer.modeling_roformer" -> "re" [];
	"transformers.models.roformer.modeling_roformer" -> "tensorflow" [];
	"transformers.models.roformer.tokenization_roformer_fast" -> "json" [];
	"transformers.models.roformer.tokenization_roformer_fast" -> "typing" [];
	"transformers.models.roformer.tokenization_roformer_fast" -> "tokenizers" [];
	"transformers.models.roformer.tokenization_roformer" -> "collections" [];
	"transformers.models.roformer.tokenization_roformer" -> "os" [];
	"transformers.models.roformer.tokenization_roformer" -> "unicodedata" [];
	"transformers.models.roformer.tokenization_roformer" -> "typing" [];
	"transformers.models.roformer.tokenization_roformer" -> "rjieba" [];
	"transformers.models.roformer.configuration_roformer" -> "collections" [];
	"transformers.models.roformer.configuration_roformer" -> "typing" [];
	"transformers.models.roc_bert" -> "typing" [];
	"transformers.models.roc_bert" -> "sys" [];
	"transformers.models.roc_bert.modeling_roc_bert" -> "math" [];
	"transformers.models.roc_bert.modeling_roc_bert" -> "os" [];
	"transformers.models.roc_bert.modeling_roc_bert" -> "typing" [];
	"transformers.models.roc_bert.modeling_roc_bert" -> "torch" [];
	"transformers.models.roc_bert.modeling_roc_bert" -> "re" [];
	"transformers.models.roc_bert.modeling_roc_bert" -> "numpy" [];
	"transformers.models.roc_bert.modeling_roc_bert" -> "tensorflow" [];
	"transformers.models.roc_bert.tokenization_roc_bert" -> "collections" [];
	"transformers.models.roc_bert.tokenization_roc_bert" -> "itertools" [];
	"transformers.models.roc_bert.tokenization_roc_bert" -> "json" [];
	"transformers.models.roc_bert.tokenization_roc_bert" -> "os" [];
	"transformers.models.roc_bert.tokenization_roc_bert" -> "unicodedata" [];
	"transformers.models.roc_bert.tokenization_roc_bert" -> "typing" [];
	"transformers.models.roberta_prelayernorm" -> "typing" [];
	"transformers.models.roberta_prelayernorm" -> "sys" [];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" -> "typing" [];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" -> "'flax.linen'" [];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" -> "jax" [];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" -> "'jax.numpy'" [];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" -> "numpy" [];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" -> "'flax.core'" [];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" -> "'flax.traverse_util'" [];
	"transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" -> "__future__" [];
	"transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" -> "math" [];
	"transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" -> "warnings" [];
	"transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" -> "typing" [];
	"transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" -> "numpy" [];
	"transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" -> "tensorflow" [];
	"transformers.models.roberta_prelayernorm.modeling_roberta_prelayernorm" -> "math" [];
	"transformers.models.roberta_prelayernorm.modeling_roberta_prelayernorm" -> "typing" [];
	"transformers.models.roberta_prelayernorm.modeling_roberta_prelayernorm" -> "torch" [];
	"transformers.models.roberta_prelayernorm.configuration_roberta_prelayernorm" -> "collections" [];
	"transformers.models.roberta_prelayernorm.configuration_roberta_prelayernorm" -> "typing" [];
	"transformers.models.roberta" -> "typing" [];
	"transformers.models.roberta" -> "sys" [];
	"transformers.models.roberta.modeling_flax_roberta" -> "typing" [];
	"transformers.models.roberta.modeling_flax_roberta" -> "'flax.linen'" [];
	"transformers.models.roberta.modeling_flax_roberta" -> "jax" [];
	"transformers.models.roberta.modeling_flax_roberta" -> "'jax.numpy'" [];
	"transformers.models.roberta.modeling_flax_roberta" -> "numpy" [];
	"transformers.models.roberta.modeling_flax_roberta" -> "'flax.core'" [];
	"transformers.models.roberta.modeling_flax_roberta" -> "'flax.traverse_util'" [];
	"transformers.models.roberta.modeling_tf_roberta" -> "__future__" [];
	"transformers.models.roberta.modeling_tf_roberta" -> "math" [];
	"transformers.models.roberta.modeling_tf_roberta" -> "warnings" [];
	"transformers.models.roberta.modeling_tf_roberta" -> "typing" [];
	"transformers.models.roberta.modeling_tf_roberta" -> "numpy" [];
	"transformers.models.roberta.modeling_tf_roberta" -> "tensorflow" [];
	"transformers.models.roberta.modeling_roberta" -> "math" [];
	"transformers.models.roberta.modeling_roberta" -> "typing" [];
	"transformers.models.roberta.modeling_roberta" -> "torch" [];
	"transformers.models.roberta.modeling_roberta" -> "packaging" [];
	"transformers.models.roberta.tokenization_roberta_fast" -> "json" [];
	"transformers.models.roberta.tokenization_roberta_fast" -> "typing" [];
	"transformers.models.roberta.tokenization_roberta_fast" -> "tokenizers" [];
	"transformers.models.roberta.tokenization_roberta" -> "json" [];
	"transformers.models.roberta.tokenization_roberta" -> "os" [];
	"transformers.models.roberta.tokenization_roberta" -> "functools" [];
	"transformers.models.roberta.tokenization_roberta" -> "typing" [];
	"transformers.models.roberta.tokenization_roberta" -> "regex" [];
	"transformers.models.roberta.configuration_roberta" -> "collections" [];
	"transformers.models.roberta.configuration_roberta" -> "typing" [];
	"transformers.models.resnet" -> "typing" [];
	"transformers.models.resnet" -> "sys" [];
	"transformers.models.resnet.modeling_flax_resnet" -> "functools" [];
	"transformers.models.resnet.modeling_flax_resnet" -> "typing" [];
	"transformers.models.resnet.modeling_flax_resnet" -> "'flax.linen'" [];
	"transformers.models.resnet.modeling_flax_resnet" -> "jax" [];
	"transformers.models.resnet.modeling_flax_resnet" -> "'jax.numpy'" [];
	"transformers.models.resnet.modeling_flax_resnet" -> "'flax.core'" [];
	"transformers.models.resnet.modeling_flax_resnet" -> "'flax.traverse_util'" [];
	"transformers.models.resnet.modeling_tf_resnet" -> "typing" [];
	"transformers.models.resnet.modeling_tf_resnet" -> "tensorflow" [];
	"transformers.models.resnet.modeling_resnet" -> "math" [];
	"transformers.models.resnet.modeling_resnet" -> "typing" [];
	"transformers.models.resnet.modeling_resnet" -> "torch" [];
	"transformers.models.resnet.configuration_resnet" -> "collections" [];
	"transformers.models.resnet.configuration_resnet" -> "typing" [];
	"transformers.models.resnet.configuration_resnet" -> "packaging" [];
	"transformers.models.rembert" -> "typing" [];
	"transformers.models.rembert" -> "sys" [];
	"transformers.models.rembert.modeling_tf_rembert" -> "__future__" [];
	"transformers.models.rembert.modeling_tf_rembert" -> "math" [];
	"transformers.models.rembert.modeling_tf_rembert" -> "typing" [];
	"transformers.models.rembert.modeling_tf_rembert" -> "numpy" [];
	"transformers.models.rembert.modeling_tf_rembert" -> "tensorflow" [];
	"transformers.models.rembert.modeling_rembert" -> "math" [];
	"transformers.models.rembert.modeling_rembert" -> "os" [];
	"transformers.models.rembert.modeling_rembert" -> "typing" [];
	"transformers.models.rembert.modeling_rembert" -> "torch" [];
	"transformers.models.rembert.modeling_rembert" -> "re" [];
	"transformers.models.rembert.modeling_rembert" -> "numpy" [];
	"transformers.models.rembert.modeling_rembert" -> "tensorflow" [];
	"transformers.models.rembert.tokenization_rembert_fast" -> "os" [];
	"transformers.models.rembert.tokenization_rembert_fast" -> "shutil" [];
	"transformers.models.rembert.tokenization_rembert_fast" -> "typing" [];
	"transformers.models.rembert.tokenization_rembert" -> "os" [];
	"transformers.models.rembert.tokenization_rembert" -> "shutil" [];
	"transformers.models.rembert.tokenization_rembert" -> "typing" [];
	"transformers.models.rembert.tokenization_rembert" -> "sentencepiece" [];
	"transformers.models.rembert.configuration_rembert" -> "collections" [];
	"transformers.models.rembert.configuration_rembert" -> "typing" [];
	"transformers.models.regnet" -> "typing" [];
	"transformers.models.regnet" -> "sys" [];
	"transformers.models.regnet.modeling_flax_regnet" -> "functools" [];
	"transformers.models.regnet.modeling_flax_regnet" -> "typing" [];
	"transformers.models.regnet.modeling_flax_regnet" -> "'flax.linen'" [];
	"transformers.models.regnet.modeling_flax_regnet" -> "jax" [];
	"transformers.models.regnet.modeling_flax_regnet" -> "'jax.numpy'" [];
	"transformers.models.regnet.modeling_flax_regnet" -> "'flax.core'" [];
	"transformers.models.regnet.modeling_flax_regnet" -> "'flax.traverse_util'" [];
	"transformers.models.regnet.modeling_flax_regnet" -> "transformers" [];
	"transformers.models.regnet.modeling_tf_regnet" -> "typing" [];
	"transformers.models.regnet.modeling_tf_regnet" -> "tensorflow" [];
	"transformers.models.regnet.modeling_regnet" -> "math" [];
	"transformers.models.regnet.modeling_regnet" -> "typing" [];
	"transformers.models.regnet.modeling_regnet" -> "torch" [];
	"transformers.models.reformer" -> "typing" [];
	"transformers.models.reformer" -> "sys" [];
	"transformers.models.reformer.modeling_reformer" -> "sys" [];
	"transformers.models.reformer.modeling_reformer" -> "collections" [];
	"transformers.models.reformer.modeling_reformer" -> "dataclasses" [];
	"transformers.models.reformer.modeling_reformer" -> "functools" [];
	"transformers.models.reformer.modeling_reformer" -> "operator" [];
	"transformers.models.reformer.modeling_reformer" -> "typing" [];
	"transformers.models.reformer.modeling_reformer" -> "numpy" [];
	"transformers.models.reformer.modeling_reformer" -> "torch" [];
	"transformers.models.reformer.tokenization_reformer_fast" -> "os" [];
	"transformers.models.reformer.tokenization_reformer_fast" -> "shutil" [];
	"transformers.models.reformer.tokenization_reformer_fast" -> "typing" [];
	"transformers.models.reformer.tokenization_reformer" -> "os" [];
	"transformers.models.reformer.tokenization_reformer" -> "shutil" [];
	"transformers.models.reformer.tokenization_reformer" -> "typing" [];
	"transformers.models.reformer.tokenization_reformer" -> "sentencepiece" [];
	"transformers.models.recurrent_gemma" -> "typing" [];
	"transformers.models.recurrent_gemma" -> "sys" [];
	"transformers.models.recurrent_gemma.modeling_recurrent_gemma" -> "math" [];
	"transformers.models.recurrent_gemma.modeling_recurrent_gemma" -> "typing" [];
	"transformers.models.recurrent_gemma.modeling_recurrent_gemma" -> "torch" [];
	"transformers.models.rag" -> "typing" [];
	"transformers.models.rag" -> "sys" [];
	"transformers.models.rag.modeling_tf_rag" -> "__future__" [];
	"transformers.models.rag.modeling_tf_rag" -> "copy" [];
	"transformers.models.rag.modeling_tf_rag" -> "dataclasses" [];
	"transformers.models.rag.modeling_tf_rag" -> "typing" [];
	"transformers.models.rag.modeling_tf_rag" -> "numpy" [];
	"transformers.models.rag.modeling_tf_rag" -> "tensorflow" [];
	"transformers.models.rag.modeling_rag" -> "copy" [];
	"transformers.models.rag.modeling_rag" -> "dataclasses" [];
	"transformers.models.rag.modeling_rag" -> "typing" [];
	"transformers.models.rag.modeling_rag" -> "torch" [];
	"transformers.models.rag.tokenization_rag" -> "os" [];
	"transformers.models.rag.tokenization_rag" -> "warnings" [];
	"transformers.models.rag.tokenization_rag" -> "typing" [];
	"transformers.models.rag.retrieval_rag" -> "os" [];
	"transformers.models.rag.retrieval_rag" -> "pickle" [];
	"transformers.models.rag.retrieval_rag" -> "time" [];
	"transformers.models.rag.retrieval_rag" -> "typing" [];
	"transformers.models.rag.retrieval_rag" -> "numpy" [];
	"transformers.models.rag.retrieval_rag" -> "datasets" [];
	"transformers.models.rag.retrieval_rag" -> "faiss" [];
	"transformers.models.qwen2_vl" -> "typing" [];
	"transformers.models.qwen2_vl" -> "sys" [];
	"transformers.models.qwen2_vl.image_processing_qwen2_vl" -> "math" [];
	"transformers.models.qwen2_vl.image_processing_qwen2_vl" -> "typing" [];
	"transformers.models.qwen2_vl.image_processing_qwen2_vl" -> "numpy" [];
	"transformers.models.qwen2_vl.image_processing_qwen2_vl" -> "PIL" [];
	"transformers.models.qwen2_vl.modeling_qwen2_vl" -> "math" [];
	"transformers.models.qwen2_vl.modeling_qwen2_vl" -> "dataclasses" [];
	"transformers.models.qwen2_vl.modeling_qwen2_vl" -> "typing" [];
	"transformers.models.qwen2_vl.modeling_qwen2_vl" -> "torch" [];
	"transformers.models.qwen2_vl.modeling_qwen2_vl" -> "flash_attn" [];
	"transformers.models.qwen2_vl.processing_qwen2_vl" -> "typing" [];
	"transformers.models.qwen2_vl.configuration_qwen2_vl" -> "os" [];
	"transformers.models.qwen2_vl.configuration_qwen2_vl" -> "typing" [];
	"transformers.models.qwen2_moe" -> "typing" [];
	"transformers.models.qwen2_moe" -> "sys" [];
	"transformers.models.qwen2_moe.modeling_qwen2_moe" -> "math" [];
	"transformers.models.qwen2_moe.modeling_qwen2_moe" -> "typing" [];
	"transformers.models.qwen2_moe.modeling_qwen2_moe" -> "torch" [];
	"transformers.models.qwen2_audio" -> "typing" [];
	"transformers.models.qwen2_audio" -> "sys" [];
	"transformers.models.qwen2_audio.modeling_qwen2_audio" -> "math" [];
	"transformers.models.qwen2_audio.modeling_qwen2_audio" -> "dataclasses" [];
	"transformers.models.qwen2_audio.modeling_qwen2_audio" -> "typing" [];
	"transformers.models.qwen2_audio.modeling_qwen2_audio" -> "torch" [];
	"transformers.models.qwen2_audio.processing_qwen2_audio" -> "typing" [];
	"transformers.models.qwen2_audio.processing_qwen2_audio" -> "numpy" [];
	"transformers.models.qwen2" -> "typing" [];
	"transformers.models.qwen2" -> "sys" [];
	"transformers.models.qwen2.modeling_qwen2" -> "math" [];
	"transformers.models.qwen2.modeling_qwen2" -> "typing" [];
	"transformers.models.qwen2.modeling_qwen2" -> "torch" [];
	"transformers.models.qwen2.tokenization_qwen2_fast" -> "typing" [];
	"transformers.models.qwen2.tokenization_qwen2" -> "json" [];
	"transformers.models.qwen2.tokenization_qwen2" -> "os" [];
	"transformers.models.qwen2.tokenization_qwen2" -> "unicodedata" [];
	"transformers.models.qwen2.tokenization_qwen2" -> "functools" [];
	"transformers.models.qwen2.tokenization_qwen2" -> "typing" [];
	"transformers.models.qwen2.tokenization_qwen2" -> "regex" [];
	"transformers.models.pvt_v2" -> "typing" [];
	"transformers.models.pvt_v2" -> "sys" [];
	"transformers.models.pvt_v2.modeling_pvt_v2" -> "math" [];
	"transformers.models.pvt_v2.modeling_pvt_v2" -> "typing" [];
	"transformers.models.pvt_v2.modeling_pvt_v2" -> "torch" [];
	"transformers.models.pvt_v2.configuration_pvt_v2" -> "typing" [];
	"transformers.models.pvt" -> "typing" [];
	"transformers.models.pvt" -> "sys" [];
	"transformers.models.pvt.modeling_pvt" -> "collections" [];
	"transformers.models.pvt.modeling_pvt" -> "math" [];
	"transformers.models.pvt.modeling_pvt" -> "typing" [];
	"transformers.models.pvt.modeling_pvt" -> "torch" [];
	"transformers.models.pvt.image_processing_pvt" -> "typing" [];
	"transformers.models.pvt.image_processing_pvt" -> "numpy" [];
	"transformers.models.pvt.configuration_pvt" -> "collections" [];
	"transformers.models.pvt.configuration_pvt" -> "typing" [];
	"transformers.models.pvt.configuration_pvt" -> "packaging" [];
	"transformers.models.prophetnet" -> "typing" [];
	"transformers.models.prophetnet" -> "sys" [];
	"transformers.models.prophetnet.modeling_prophetnet" -> "copy" [];
	"transformers.models.prophetnet.modeling_prophetnet" -> "math" [];
	"transformers.models.prophetnet.modeling_prophetnet" -> "warnings" [];
	"transformers.models.prophetnet.modeling_prophetnet" -> "dataclasses" [];
	"transformers.models.prophetnet.modeling_prophetnet" -> "typing" [];
	"transformers.models.prophetnet.modeling_prophetnet" -> "torch" [];
	"transformers.models.prophetnet.tokenization_prophetnet" -> "collections" [];
	"transformers.models.prophetnet.tokenization_prophetnet" -> "os" [];
	"transformers.models.prophetnet.tokenization_prophetnet" -> "unicodedata" [];
	"transformers.models.prophetnet.tokenization_prophetnet" -> "typing" [];
	"transformers.models.prophetnet.configuration_prophetnet" -> "typing" [];
	"transformers.models.pop2piano" -> "typing" [];
	"transformers.models.pop2piano" -> "sys" [];
	"transformers.models.pop2piano.processing_pop2piano" -> "os" [];
	"transformers.models.pop2piano.processing_pop2piano" -> "typing" [];
	"transformers.models.pop2piano.processing_pop2piano" -> "numpy" [];
	"transformers.models.pop2piano.tokenization_pop2piano" -> "json" [];
	"transformers.models.pop2piano.tokenization_pop2piano" -> "os" [];
	"transformers.models.pop2piano.tokenization_pop2piano" -> "typing" [];
	"transformers.models.pop2piano.tokenization_pop2piano" -> "numpy" [];
	"transformers.models.pop2piano.tokenization_pop2piano" -> "pretty_midi" [];
	"transformers.models.pop2piano.feature_extraction_pop2piano" -> "warnings" [];
	"transformers.models.pop2piano.feature_extraction_pop2piano" -> "typing" [];
	"transformers.models.pop2piano.feature_extraction_pop2piano" -> "numpy" [];
	"transformers.models.pop2piano.feature_extraction_pop2piano" -> "essentia" [];
	"transformers.models.pop2piano.feature_extraction_pop2piano" -> "'essentia.standard'" [];
	"transformers.models.pop2piano.feature_extraction_pop2piano" -> "librosa" [];
	"transformers.models.pop2piano.feature_extraction_pop2piano" -> "scipy" [];
	"transformers.models.pop2piano.modeling_pop2piano" -> "copy" [];
	"transformers.models.pop2piano.modeling_pop2piano" -> "math" [];
	"transformers.models.pop2piano.modeling_pop2piano" -> "typing" [];
	"transformers.models.pop2piano.modeling_pop2piano" -> "torch" [];
	"transformers.models.pop2piano.modeling_pop2piano" -> "'apex.normalization'" [];
	"transformers.models.poolformer" -> "typing" [];
	"transformers.models.poolformer" -> "sys" [];
	"transformers.models.poolformer.modeling_poolformer" -> "typing" [];
	"transformers.models.poolformer.modeling_poolformer" -> "torch" [];
	"transformers.models.poolformer.image_processing_poolformer" -> "typing" [];
	"transformers.models.poolformer.image_processing_poolformer" -> "numpy" [];
	"transformers.models.poolformer.image_processing_poolformer" -> "PIL" [];
	"transformers.models.poolformer.feature_extraction_poolformer" -> "warnings" [];
	"transformers.models.poolformer.configuration_poolformer" -> "collections" [];
	"transformers.models.poolformer.configuration_poolformer" -> "typing" [];
	"transformers.models.poolformer.configuration_poolformer" -> "packaging" [];
	"transformers.models.plbart" -> "typing" [];
	"transformers.models.plbart" -> "sys" [];
	"transformers.models.plbart.modeling_plbart" -> "copy" [];
	"transformers.models.plbart.modeling_plbart" -> "math" [];
	"transformers.models.plbart.modeling_plbart" -> "typing" [];
	"transformers.models.plbart.modeling_plbart" -> "torch" [];
	"transformers.models.plbart.tokenization_plbart" -> "os" [];
	"transformers.models.plbart.tokenization_plbart" -> "shutil" [];
	"transformers.models.plbart.tokenization_plbart" -> "typing" [];
	"transformers.models.plbart.tokenization_plbart" -> "sentencepiece" [];
	"transformers.models.plbart.configuration_plbart" -> "collections" [];
	"transformers.models.plbart.configuration_plbart" -> "typing" [];
	"transformers.models.pixtral" -> "typing" [];
	"transformers.models.pixtral" -> "sys" [];
	"transformers.models.pixtral.image_processing_pixtral" -> "typing" [];
	"transformers.models.pixtral.image_processing_pixtral" -> "numpy" [];
	"transformers.models.pixtral.image_processing_pixtral" -> "PIL" [];
	"transformers.models.pixtral.image_processing_pixtral" -> "torch" [];
	"transformers.models.pixtral.modeling_pixtral" -> "typing" [];
	"transformers.models.pixtral.modeling_pixtral" -> "torch" [];
	"transformers.models.pixtral.modeling_pixtral" -> "transformers" [];
	"transformers.models.pixtral.processing_pixtral" -> "typing" [];
	"transformers.models.pixtral.processing_pixtral" -> "torch" [];
	"transformers.models.pix2struct" -> "typing" [];
	"transformers.models.pix2struct" -> "sys" [];
	"transformers.models.pix2struct.modeling_pix2struct" -> "math" [];
	"transformers.models.pix2struct.modeling_pix2struct" -> "typing" [];
	"transformers.models.pix2struct.modeling_pix2struct" -> "torch" [];
	"transformers.models.pix2struct.modeling_pix2struct" -> "'apex.normalization'" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "io" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "math" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "typing" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "numpy" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "huggingface_hub" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "textwrap" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "PIL" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "torch" [];
	"transformers.models.pix2struct.processing_pix2struct" -> "typing" [];
	"transformers.models.pix2struct.configuration_pix2struct" -> "os" [];
	"transformers.models.pix2struct.configuration_pix2struct" -> "typing" [];
	"transformers.models.phobert" -> "typing" [];
	"transformers.models.phobert" -> "sys" [];
	"transformers.models.phobert.tokenization_phobert" -> "os" [];
	"transformers.models.phobert.tokenization_phobert" -> "re" [];
	"transformers.models.phobert.tokenization_phobert" -> "shutil" [];
	"transformers.models.phobert.tokenization_phobert" -> "typing" [];
	"transformers.models.phimoe" -> "typing" [];
	"transformers.models.phimoe" -> "sys" [];
	"transformers.models.phimoe.modeling_phimoe" -> "math" [];
	"transformers.models.phimoe.modeling_phimoe" -> "typing" [];
	"transformers.models.phimoe.modeling_phimoe" -> "torch" [];
	"transformers.models.phi3" -> "typing" [];
	"transformers.models.phi3" -> "sys" [];
	"transformers.models.phi3.modeling_phi3" -> "math" [];
	"transformers.models.phi3.modeling_phi3" -> "warnings" [];
	"transformers.models.phi3.modeling_phi3" -> "typing" [];
	"transformers.models.phi3.modeling_phi3" -> "torch" [];
	"transformers.models.phi" -> "typing" [];
	"transformers.models.phi" -> "sys" [];
	"transformers.models.phi.modeling_phi" -> "math" [];
	"transformers.models.phi.modeling_phi" -> "typing" [];
	"transformers.models.phi.modeling_phi" -> "torch" [];
	"transformers.models.phi.modeling_phi" -> "packaging" [];
	"transformers.models.persimmon" -> "typing" [];
	"transformers.models.persimmon" -> "sys" [];
	"transformers.models.persimmon.modeling_persimmon" -> "math" [];
	"transformers.models.persimmon.modeling_persimmon" -> "typing" [];
	"transformers.models.persimmon.modeling_persimmon" -> "torch" [];
	"transformers.models.perceiver" -> "typing" [];
	"transformers.models.perceiver" -> "sys" [];
	"transformers.models.perceiver.modeling_perceiver" -> "abc" [];
	"transformers.models.perceiver.modeling_perceiver" -> "math" [];
	"transformers.models.perceiver.modeling_perceiver" -> "dataclasses" [];
	"transformers.models.perceiver.modeling_perceiver" -> "functools" [];
	"transformers.models.perceiver.modeling_perceiver" -> "operator" [];
	"transformers.models.perceiver.modeling_perceiver" -> "typing" [];
	"transformers.models.perceiver.modeling_perceiver" -> "numpy" [];
	"transformers.models.perceiver.modeling_perceiver" -> "torch" [];
	"transformers.models.perceiver.image_processing_perceiver" -> "typing" [];
	"transformers.models.perceiver.image_processing_perceiver" -> "numpy" [];
	"transformers.models.perceiver.image_processing_perceiver" -> "PIL" [];
	"transformers.models.perceiver.feature_extraction_perceiver" -> "warnings" [];
	"transformers.models.perceiver.tokenization_perceiver" -> "typing" [];
	"transformers.models.perceiver.configuration_perceiver" -> "collections" [];
	"transformers.models.perceiver.configuration_perceiver" -> "typing" [];
	"transformers.models.pegasus_x" -> "typing" [];
	"transformers.models.pegasus_x" -> "sys" [];
	"transformers.models.pegasus_x.modeling_pegasus_x" -> "dataclasses" [];
	"transformers.models.pegasus_x.modeling_pegasus_x" -> "math" [];
	"transformers.models.pegasus_x.modeling_pegasus_x" -> "typing" [];
	"transformers.models.pegasus_x.modeling_pegasus_x" -> "numpy" [];
	"transformers.models.pegasus_x.modeling_pegasus_x" -> "torch" [];
	"transformers.models.pegasus" -> "typing" [];
	"transformers.models.pegasus" -> "sys" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "math" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "random" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "functools" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "typing" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "'flax.linen'" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "jax" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "'jax.numpy'" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "numpy" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "'flax.core'" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "'flax.traverse_util'" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "'jax.random'" [];
	"transformers.models.pegasus.modeling_tf_pegasus" -> "__future__" [];
	"transformers.models.pegasus.modeling_tf_pegasus" -> "random" [];
	"transformers.models.pegasus.modeling_tf_pegasus" -> "typing" [];
	"transformers.models.pegasus.modeling_tf_pegasus" -> "numpy" [];
	"transformers.models.pegasus.modeling_tf_pegasus" -> "tensorflow" [];
	"transformers.models.pegasus.modeling_pegasus" -> "copy" [];
	"transformers.models.pegasus.modeling_pegasus" -> "math" [];
	"transformers.models.pegasus.modeling_pegasus" -> "typing" [];
	"transformers.models.pegasus.modeling_pegasus" -> "numpy" [];
	"transformers.models.pegasus.modeling_pegasus" -> "torch" [];
	"transformers.models.pegasus.tokenization_pegasus_fast" -> "os" [];
	"transformers.models.pegasus.tokenization_pegasus_fast" -> "shutil" [];
	"transformers.models.pegasus.tokenization_pegasus_fast" -> "typing" [];
	"transformers.models.pegasus.tokenization_pegasus" -> "os" [];
	"transformers.models.pegasus.tokenization_pegasus" -> "shutil" [];
	"transformers.models.pegasus.tokenization_pegasus" -> "typing" [];
	"transformers.models.pegasus.tokenization_pegasus" -> "sentencepiece" [];
	"transformers.models.patchtst" -> "typing" [];
	"transformers.models.patchtst" -> "sys" [];
	"transformers.models.patchtst.modeling_patchtst" -> "math" [];
	"transformers.models.patchtst.modeling_patchtst" -> "dataclasses" [];
	"transformers.models.patchtst.modeling_patchtst" -> "typing" [];
	"transformers.models.patchtst.modeling_patchtst" -> "torch" [];
	"transformers.models.patchtst.configuration_patchtst" -> "typing" [];
	"transformers.models.patchtsmixer" -> "typing" [];
	"transformers.models.patchtsmixer" -> "sys" [];
	"transformers.models.patchtsmixer.modeling_patchtsmixer" -> "math" [];
	"transformers.models.patchtsmixer.modeling_patchtsmixer" -> "dataclasses" [];
	"transformers.models.patchtsmixer.modeling_patchtsmixer" -> "typing" [];
	"transformers.models.patchtsmixer.modeling_patchtsmixer" -> "torch" [];
	"transformers.models.patchtsmixer.configuration_patchtsmixer" -> "typing" [];
	"transformers.models.paligemma" -> "typing" [];
	"transformers.models.paligemma" -> "sys" [];
	"transformers.models.paligemma.processing_paligemma" -> "typing" [];
	"transformers.models.paligemma.modeling_paligemma" -> "dataclasses" [];
	"transformers.models.paligemma.modeling_paligemma" -> "typing" [];
	"transformers.models.paligemma.modeling_paligemma" -> "torch" [];
	"transformers.models.paligemma.modeling_paligemma" -> "'flash_attn.bert_padding'" [];
	"transformers.models.paligemma.configuration_paligemma" -> "warnings" [];
	"transformers.models.owlvit" -> "typing" [];
	"transformers.models.owlvit" -> "sys" [];
	"transformers.models.owlvit.modeling_owlvit" -> "dataclasses" [];
	"transformers.models.owlvit.modeling_owlvit" -> "functools" [];
	"transformers.models.owlvit.modeling_owlvit" -> "typing" [];
	"transformers.models.owlvit.modeling_owlvit" -> "torch" [];
	"transformers.models.owlvit.image_processing_owlvit" -> "warnings" [];
	"transformers.models.owlvit.image_processing_owlvit" -> "typing" [];
	"transformers.models.owlvit.image_processing_owlvit" -> "numpy" [];
	"transformers.models.owlvit.image_processing_owlvit" -> "torch" [];
	"transformers.models.owlvit.feature_extraction_owlvit" -> "warnings" [];
	"transformers.models.owlvit.processing_owlvit" -> "warnings" [];
	"transformers.models.owlvit.processing_owlvit" -> "typing" [];
	"transformers.models.owlvit.processing_owlvit" -> "numpy" [];
	"transformers.models.owlvit.processing_owlvit" -> "'jax.numpy'" [];
	"transformers.models.owlvit.processing_owlvit" -> "torch" [];
	"transformers.models.owlvit.processing_owlvit" -> "tensorflow" [];
	"transformers.models.owlvit.configuration_owlvit" -> "os" [];
	"transformers.models.owlvit.configuration_owlvit" -> "collections" [];
	"transformers.models.owlvit.configuration_owlvit" -> "typing" [];
	"transformers.models.owlv2" -> "typing" [];
	"transformers.models.owlv2" -> "sys" [];
	"transformers.models.owlv2.modeling_owlv2" -> "dataclasses" [];
	"transformers.models.owlv2.modeling_owlv2" -> "functools" [];
	"transformers.models.owlv2.modeling_owlv2" -> "typing" [];
	"transformers.models.owlv2.modeling_owlv2" -> "torch" [];
	"transformers.models.owlv2.image_processing_owlv2" -> "warnings" [];
	"transformers.models.owlv2.image_processing_owlv2" -> "typing" [];
	"transformers.models.owlv2.image_processing_owlv2" -> "numpy" [];
	"transformers.models.owlv2.image_processing_owlv2" -> "torch" [];
	"transformers.models.owlv2.image_processing_owlv2" -> "PIL" [];
	"transformers.models.owlv2.image_processing_owlv2" -> "scipy" [];
	"transformers.models.owlv2.processing_owlv2" -> "typing" [];
	"transformers.models.owlv2.processing_owlv2" -> "numpy" [];
	"transformers.models.owlv2.processing_owlv2" -> "'jax.numpy'" [];
	"transformers.models.owlv2.processing_owlv2" -> "torch" [];
	"transformers.models.owlv2.processing_owlv2" -> "tensorflow" [];
	"transformers.models.owlv2.configuration_owlv2" -> "os" [];
	"transformers.models.owlv2.configuration_owlv2" -> "typing" [];
	"transformers.models.opt" -> "typing" [];
	"transformers.models.opt" -> "sys" [];
	"transformers.models.opt.modeling_flax_opt" -> "functools" [];
	"transformers.models.opt.modeling_flax_opt" -> "typing" [];
	"transformers.models.opt.modeling_flax_opt" -> "'flax.linen'" [];
	"transformers.models.opt.modeling_flax_opt" -> "jax" [];
	"transformers.models.opt.modeling_flax_opt" -> "'jax.numpy'" [];
	"transformers.models.opt.modeling_flax_opt" -> "'flax.core'" [];
	"transformers.models.opt.modeling_flax_opt" -> "'flax.traverse_util'" [];
	"transformers.models.opt.modeling_flax_opt" -> "'jax.random'" [];
	"transformers.models.opt.modeling_tf_opt" -> "__future__" [];
	"transformers.models.opt.modeling_tf_opt" -> "typing" [];
	"transformers.models.opt.modeling_tf_opt" -> "numpy" [];
	"transformers.models.opt.modeling_tf_opt" -> "tensorflow" [];
	"transformers.models.opt.modeling_opt" -> "typing" [];
	"transformers.models.opt.modeling_opt" -> "torch" [];
	"transformers.models.openai" -> "typing" [];
	"transformers.models.openai" -> "sys" [];
	"transformers.models.openai.modeling_tf_openai" -> "__future__" [];
	"transformers.models.openai.modeling_tf_openai" -> "dataclasses" [];
	"transformers.models.openai.modeling_tf_openai" -> "typing" [];
	"transformers.models.openai.modeling_tf_openai" -> "numpy" [];
	"transformers.models.openai.modeling_tf_openai" -> "tensorflow" [];
	"transformers.models.openai.modeling_openai" -> "json" [];
	"transformers.models.openai.modeling_openai" -> "math" [];
	"transformers.models.openai.modeling_openai" -> "os" [];
	"transformers.models.openai.modeling_openai" -> "dataclasses" [];
	"transformers.models.openai.modeling_openai" -> "typing" [];
	"transformers.models.openai.modeling_openai" -> "torch" [];
	"transformers.models.openai.modeling_openai" -> "re" [];
	"transformers.models.openai.modeling_openai" -> "numpy" [];
	"transformers.models.openai.tokenization_openai_fast" -> "typing" [];
	"transformers.models.openai.tokenization_openai" -> "json" [];
	"transformers.models.openai.tokenization_openai" -> "os" [];
	"transformers.models.openai.tokenization_openai" -> "re" [];
	"transformers.models.openai.tokenization_openai" -> "unicodedata" [];
	"transformers.models.openai.tokenization_openai" -> "typing" [];
	"transformers.models.openai.tokenization_openai" -> "ftfy" [];
	"transformers.models.openai.tokenization_openai" -> "spacy" [];
	"transformers.models.oneformer" -> "typing" [];
	"transformers.models.oneformer" -> "sys" [];
	"transformers.models.oneformer.modeling_oneformer" -> "copy" [];
	"transformers.models.oneformer.modeling_oneformer" -> "math" [];
	"transformers.models.oneformer.modeling_oneformer" -> "warnings" [];
	"transformers.models.oneformer.modeling_oneformer" -> "dataclasses" [];
	"transformers.models.oneformer.modeling_oneformer" -> "typing" [];
	"transformers.models.oneformer.modeling_oneformer" -> "numpy" [];
	"transformers.models.oneformer.modeling_oneformer" -> "torch" [];
	"transformers.models.oneformer.modeling_oneformer" -> "accelerate" [];
	"transformers.models.oneformer.modeling_oneformer" -> "'accelerate.utils'" [];
	"transformers.models.oneformer.modeling_oneformer" -> "'scipy.optimize'" [];
	"transformers.models.oneformer.image_processing_oneformer" -> "json" [];
	"transformers.models.oneformer.image_processing_oneformer" -> "os" [];
	"transformers.models.oneformer.image_processing_oneformer" -> "typing" [];
	"transformers.models.oneformer.image_processing_oneformer" -> "numpy" [];
	"transformers.models.oneformer.image_processing_oneformer" -> "huggingface_hub" [];
	"transformers.models.oneformer.image_processing_oneformer" -> "torch" [];
	"transformers.models.oneformer.processing_oneformer" -> "typing" [];
	"transformers.models.oneformer.processing_oneformer" -> "torch" [];
	"transformers.models.oneformer.configuration_oneformer" -> "typing" [];
	"transformers.models.omdet_turbo" -> "typing" [];
	"transformers.models.omdet_turbo" -> "sys" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "math" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "os" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "warnings" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "collections" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "dataclasses" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "functools" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "pathlib" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "typing" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "torch" [];
	"transformers.models.omdet_turbo.processing_omdet_turbo" -> "typing" [];
	"transformers.models.omdet_turbo.processing_omdet_turbo" -> "torch" [];
	"transformers.models.omdet_turbo.processing_omdet_turbo" -> "'torchvision.ops'" [];
	"transformers.models.olmoe" -> "typing" [];
	"transformers.models.olmoe" -> "sys" [];
	"transformers.models.olmoe.modeling_olmoe" -> "math" [];
	"transformers.models.olmoe.modeling_olmoe" -> "typing" [];
	"transformers.models.olmoe.modeling_olmoe" -> "torch" [];
	"transformers.models.olmo" -> "typing" [];
	"transformers.models.olmo" -> "sys" [];
	"transformers.models.olmo.modeling_olmo" -> "math" [];
	"transformers.models.olmo.modeling_olmo" -> "typing" [];
	"transformers.models.olmo.modeling_olmo" -> "torch" [];
	"transformers.models.nystromformer" -> "typing" [];
	"transformers.models.nystromformer" -> "sys" [];
	"transformers.models.nystromformer.modeling_nystromformer" -> "math" [];
	"transformers.models.nystromformer.modeling_nystromformer" -> "typing" [];
	"transformers.models.nystromformer.modeling_nystromformer" -> "torch" [];
	"transformers.models.nougat" -> "typing" [];
	"transformers.models.nougat" -> "sys" [];
	"transformers.models.nougat.image_processing_nougat" -> "typing" [];
	"transformers.models.nougat.image_processing_nougat" -> "numpy" [];
	"transformers.models.nougat.image_processing_nougat" -> "PIL" [];
	"transformers.models.nougat.tokenization_nougat_fast" -> "re" [];
	"transformers.models.nougat.tokenization_nougat_fast" -> "functools" [];
	"transformers.models.nougat.tokenization_nougat_fast" -> "multiprocessing" [];
	"transformers.models.nougat.tokenization_nougat_fast" -> "typing" [];
	"transformers.models.nougat.tokenization_nougat_fast" -> "numpy" [];
	"transformers.models.nougat.tokenization_nougat_fast" -> "Levenshtein" [];
	"transformers.models.nougat.tokenization_nougat_fast" -> "nltk" [];
	"transformers.models.nougat.processing_nougat" -> "typing" [];
	"transformers.models.nllb_moe" -> "typing" [];
	"transformers.models.nllb_moe" -> "sys" [];
	"transformers.models.nllb_moe.modeling_nllb_moe" -> "math" [];
	"transformers.models.nllb_moe.modeling_nllb_moe" -> "typing" [];
	"transformers.models.nllb_moe.modeling_nllb_moe" -> "torch" [];
	"transformers.models.nemotron" -> "typing" [];
	"transformers.models.nemotron" -> "sys" [];
	"transformers.models.nemotron.modeling_nemotron" -> "math" [];
	"transformers.models.nemotron.modeling_nemotron" -> "typing" [];
	"transformers.models.nemotron.modeling_nemotron" -> "torch" [];
	"transformers.models.myt5" -> "typing" [];
	"transformers.models.myt5" -> "sys" [];
	"transformers.models.myt5.tokenization_myt5" -> "json" [];
	"transformers.models.myt5.tokenization_myt5" -> "os" [];
	"transformers.models.myt5.tokenization_myt5" -> "warnings" [];
	"transformers.models.myt5.tokenization_myt5" -> "collections" [];
	"transformers.models.myt5.tokenization_myt5" -> "typing" [];
	"transformers.models.mvp" -> "typing" [];
	"transformers.models.mvp" -> "sys" [];
	"transformers.models.mvp.modeling_mvp" -> "copy" [];
	"transformers.models.mvp.modeling_mvp" -> "math" [];
	"transformers.models.mvp.modeling_mvp" -> "typing" [];
	"transformers.models.mvp.modeling_mvp" -> "torch" [];
	"transformers.models.mvp.tokenization_mvp_fast" -> "json" [];
	"transformers.models.mvp.tokenization_mvp_fast" -> "typing" [];
	"transformers.models.mvp.tokenization_mvp_fast" -> "tokenizers" [];
	"transformers.models.mvp.tokenization_mvp" -> "json" [];
	"transformers.models.mvp.tokenization_mvp" -> "os" [];
	"transformers.models.mvp.tokenization_mvp" -> "functools" [];
	"transformers.models.mvp.tokenization_mvp" -> "typing" [];
	"transformers.models.mvp.tokenization_mvp" -> "regex" [];
	"transformers.models.mvp.configuration_mvp" -> "warnings" [];
	"transformers.models.musicgen_melody" -> "typing" [];
	"transformers.models.musicgen_melody" -> "sys" [];
	"transformers.models.musicgen_melody.processing_musicgen_melody" -> "typing" [];
	"transformers.models.musicgen_melody.processing_musicgen_melody" -> "numpy" [];
	"transformers.models.musicgen_melody.feature_extraction_musicgen_melody" -> "copy" [];
	"transformers.models.musicgen_melody.feature_extraction_musicgen_melody" -> "typing" [];
	"transformers.models.musicgen_melody.feature_extraction_musicgen_melody" -> "numpy" [];
	"transformers.models.musicgen_melody.feature_extraction_musicgen_melody" -> "torch" [];
	"transformers.models.musicgen_melody.feature_extraction_musicgen_melody" -> "torchaudio" [];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" -> "copy" [];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" -> "inspect" [];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" -> "math" [];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" -> "random" [];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" -> "dataclasses" [];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" -> "typing" [];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" -> "torch" [];
	"transformers.generation.streamers" -> "queue" [];
	"transformers.generation.streamers" -> "typing" [];
	"transformers.models.musicgen" -> "typing" [];
	"transformers.models.musicgen" -> "sys" [];
	"transformers.models.musicgen.modeling_musicgen" -> "copy" [];
	"transformers.models.musicgen.modeling_musicgen" -> "inspect" [];
	"transformers.models.musicgen.modeling_musicgen" -> "math" [];
	"transformers.models.musicgen.modeling_musicgen" -> "random" [];
	"transformers.models.musicgen.modeling_musicgen" -> "dataclasses" [];
	"transformers.models.musicgen.modeling_musicgen" -> "typing" [];
	"transformers.models.musicgen.modeling_musicgen" -> "torch" [];
	"transformers.models.musicgen.processing_musicgen" -> "typing" [];
	"transformers.models.musicgen.processing_musicgen" -> "numpy" [];
	"transformers.models.mt5" -> "typing" [];
	"transformers.models.mt5" -> "sys" [];
	"transformers.models.mt5.modeling_flax_mt5" -> "'jax.numpy'" [];
	"transformers.models.mt5.modeling_mt5" -> "copy" [];
	"transformers.models.mt5.modeling_mt5" -> "math" [];
	"transformers.models.mt5.modeling_mt5" -> "os" [];
	"transformers.models.mt5.modeling_mt5" -> "warnings" [];
	"transformers.models.mt5.modeling_mt5" -> "typing" [];
	"transformers.models.mt5.modeling_mt5" -> "torch" [];
	"transformers.models.mt5.modeling_mt5" -> "re" [];
	"transformers.models.mt5.modeling_mt5" -> "numpy" [];
	"transformers.models.mt5.modeling_mt5" -> "tensorflow" [];
	"transformers.models.mt5.configuration_mt5" -> "typing" [];
	"transformers.models.mra" -> "typing" [];
	"transformers.models.mra" -> "sys" [];
	"transformers.models.mra.modeling_mra" -> "math" [];
	"transformers.models.mra.modeling_mra" -> "pathlib" [];
	"transformers.models.mra.modeling_mra" -> "typing" [];
	"transformers.models.mra.modeling_mra" -> "torch" [];
	"transformers.models.mpt" -> "typing" [];
	"transformers.models.mpt" -> "sys" [];
	"transformers.models.mpt.modeling_mpt" -> "math" [];
	"transformers.models.mpt.modeling_mpt" -> "typing" [];
	"transformers.models.mpt.modeling_mpt" -> "torch" [];
	"transformers.models.mpt.configuration_mpt" -> "typing" [];
	"transformers.models.mpnet" -> "typing" [];
	"transformers.models.mpnet" -> "sys" [];
	"transformers.models.mpnet.modeling_tf_mpnet" -> "__future__" [];
	"transformers.models.mpnet.modeling_tf_mpnet" -> "math" [];
	"transformers.models.mpnet.modeling_tf_mpnet" -> "warnings" [];
	"transformers.models.mpnet.modeling_tf_mpnet" -> "typing" [];
	"transformers.models.mpnet.modeling_tf_mpnet" -> "numpy" [];
	"transformers.models.mpnet.modeling_tf_mpnet" -> "tensorflow" [];
	"transformers.models.mpnet.modeling_mpnet" -> "math" [];
	"transformers.models.mpnet.modeling_mpnet" -> "typing" [];
	"transformers.models.mpnet.modeling_mpnet" -> "torch" [];
	"transformers.models.mpnet.tokenization_mpnet_fast" -> "json" [];
	"transformers.models.mpnet.tokenization_mpnet_fast" -> "typing" [];
	"transformers.models.mpnet.tokenization_mpnet_fast" -> "tokenizers" [];
	"transformers.models.mpnet.tokenization_mpnet" -> "collections" [];
	"transformers.models.mpnet.tokenization_mpnet" -> "os" [];
	"transformers.models.mpnet.tokenization_mpnet" -> "unicodedata" [];
	"transformers.models.mpnet.tokenization_mpnet" -> "typing" [];
	"transformers.models.moshi" -> "typing" [];
	"transformers.models.moshi" -> "sys" [];
	"transformers.models.moshi.modeling_moshi" -> "math" [];
	"transformers.models.moshi.modeling_moshi" -> "dataclasses" [];
	"transformers.models.moshi.modeling_moshi" -> "typing" [];
	"transformers.models.moshi.modeling_moshi" -> "torch" [];
	"transformers.models.mobilevitv2" -> "typing" [];
	"transformers.models.mobilevitv2" -> "sys" [];
	"transformers.models.mobilevitv2.modeling_mobilevitv2" -> "typing" [];
	"transformers.models.mobilevitv2.modeling_mobilevitv2" -> "torch" [];
	"transformers.models.mobilevitv2.configuration_mobilevitv2" -> "collections" [];
	"transformers.models.mobilevitv2.configuration_mobilevitv2" -> "typing" [];
	"transformers.models.mobilevitv2.configuration_mobilevitv2" -> "packaging" [];
	"transformers.models.mobilevit" -> "typing" [];
	"transformers.models.mobilevit" -> "sys" [];
	"transformers.models.mobilevit.modeling_tf_mobilevit" -> "__future__" [];
	"transformers.models.mobilevit.modeling_tf_mobilevit" -> "typing" [];
	"transformers.models.mobilevit.modeling_tf_mobilevit" -> "tensorflow" [];
	"transformers.models.mobilevit.modeling_mobilevit" -> "math" [];
	"transformers.models.mobilevit.modeling_mobilevit" -> "typing" [];
	"transformers.models.mobilevit.modeling_mobilevit" -> "torch" [];
	"transformers.models.mobilevit.image_processing_mobilevit" -> "typing" [];
	"transformers.models.mobilevit.image_processing_mobilevit" -> "numpy" [];
	"transformers.models.mobilevit.image_processing_mobilevit" -> "PIL" [];
	"transformers.models.mobilevit.image_processing_mobilevit" -> "torch" [];
	"transformers.models.mobilevit.feature_extraction_mobilevit" -> "warnings" [];
	"transformers.models.mobilevit.configuration_mobilevit" -> "collections" [];
	"transformers.models.mobilevit.configuration_mobilevit" -> "typing" [];
	"transformers.models.mobilevit.configuration_mobilevit" -> "packaging" [];
	"transformers.models.mobilenet_v2" -> "typing" [];
	"transformers.models.mobilenet_v2" -> "sys" [];
	"transformers.models.mobilenet_v2.modeling_mobilenet_v2" -> "typing" [];
	"transformers.models.mobilenet_v2.modeling_mobilenet_v2" -> "torch" [];
	"transformers.models.mobilenet_v2.modeling_mobilenet_v2" -> "numpy" [];
	"transformers.models.mobilenet_v2.modeling_mobilenet_v2" -> "tensorflow" [];
	"transformers.models.mobilenet_v2.image_processing_mobilenet_v2" -> "typing" [];
	"transformers.models.mobilenet_v2.image_processing_mobilenet_v2" -> "numpy" [];
	"transformers.models.mobilenet_v2.image_processing_mobilenet_v2" -> "torch" [];
	"transformers.models.mobilenet_v2.feature_extraction_mobilenet_v2" -> "warnings" [];
	"transformers.models.mobilenet_v2.configuration_mobilenet_v2" -> "collections" [];
	"transformers.models.mobilenet_v2.configuration_mobilenet_v2" -> "typing" [];
	"transformers.models.mobilenet_v2.configuration_mobilenet_v2" -> "packaging" [];
	"transformers.models.mobilenet_v1" -> "typing" [];
	"transformers.models.mobilenet_v1" -> "sys" [];
	"transformers.models.mobilenet_v1.modeling_mobilenet_v1" -> "typing" [];
	"transformers.models.mobilenet_v1.modeling_mobilenet_v1" -> "torch" [];
	"transformers.models.mobilenet_v1.modeling_mobilenet_v1" -> "numpy" [];
	"transformers.models.mobilenet_v1.modeling_mobilenet_v1" -> "tensorflow" [];
	"transformers.models.mobilenet_v1.image_processing_mobilenet_v1" -> "typing" [];
	"transformers.models.mobilenet_v1.image_processing_mobilenet_v1" -> "numpy" [];
	"transformers.models.mobilenet_v1.feature_extraction_mobilenet_v1" -> "warnings" [];
	"transformers.models.mobilenet_v1.configuration_mobilenet_v1" -> "collections" [];
	"transformers.models.mobilenet_v1.configuration_mobilenet_v1" -> "typing" [];
	"transformers.models.mobilenet_v1.configuration_mobilenet_v1" -> "packaging" [];
	"transformers.models.mobilebert" -> "typing" [];
	"transformers.models.mobilebert" -> "sys" [];
	"transformers.models.mobilebert.modeling_tf_mobilebert" -> "__future__" [];
	"transformers.models.mobilebert.modeling_tf_mobilebert" -> "warnings" [];
	"transformers.models.mobilebert.modeling_tf_mobilebert" -> "dataclasses" [];
	"transformers.models.mobilebert.modeling_tf_mobilebert" -> "typing" [];
	"transformers.models.mobilebert.modeling_tf_mobilebert" -> "numpy" [];
	"transformers.models.mobilebert.modeling_tf_mobilebert" -> "tensorflow" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "math" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "os" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "warnings" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "dataclasses" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "typing" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "torch" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "re" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "numpy" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "tensorflow" [];
	"transformers.models.mobilebert.tokenization_mobilebert_fast" -> "json" [];
	"transformers.models.mobilebert.tokenization_mobilebert_fast" -> "typing" [];
	"transformers.models.mobilebert.tokenization_mobilebert_fast" -> "tokenizers" [];
	"transformers.models.mobilebert.tokenization_mobilebert" -> "collections" [];
	"transformers.models.mobilebert.tokenization_mobilebert" -> "os" [];
	"transformers.models.mobilebert.tokenization_mobilebert" -> "unicodedata" [];
	"transformers.models.mobilebert.tokenization_mobilebert" -> "typing" [];
	"transformers.models.mobilebert.configuration_mobilebert" -> "collections" [];
	"transformers.models.mobilebert.configuration_mobilebert" -> "typing" [];
	"transformers.models.mllama" -> "typing" [];
	"transformers.models.mllama" -> "sys" [];
	"transformers.models.mllama.image_processing_mllama" -> "math" [];
	"transformers.models.mllama.image_processing_mllama" -> "functools" [];
	"transformers.models.mllama.image_processing_mllama" -> "typing" [];
	"transformers.models.mllama.image_processing_mllama" -> "numpy" [];
	"transformers.models.mllama.image_processing_mllama" -> "PIL" [];
	"transformers.models.mllama.modeling_mllama" -> "math" [];
	"transformers.models.mllama.modeling_mllama" -> "typing" [];
	"transformers.models.mllama.modeling_mllama" -> "torch" [];
	"transformers.models.mllama.modeling_mllama" -> "transformers" [];
	"transformers.models.mllama.processing_mllama" -> "typing" [];
	"transformers.models.mllama.processing_mllama" -> "numpy" [];
	"transformers.models.mllama.configuration_mllama" -> "os" [];
	"transformers.models.mllama.configuration_mllama" -> "typing" [];
	"transformers.models.mixtral" -> "typing" [];
	"transformers.models.mixtral" -> "sys" [];
	"transformers.models.mixtral.modeling_mixtral" -> "math" [];
	"transformers.models.mixtral.modeling_mixtral" -> "typing" [];
	"transformers.models.mixtral.modeling_mixtral" -> "torch" [];
	"transformers.models.mistral" -> "typing" [];
	"transformers.models.mistral" -> "sys" [];
	"transformers.models.mistral.modeling_tf_mistral" -> "math" [];
	"transformers.models.mistral.modeling_tf_mistral" -> "warnings" [];
	"transformers.models.mistral.modeling_tf_mistral" -> "typing" [];
	"transformers.models.mistral.modeling_tf_mistral" -> "tensorflow" [];
	"transformers.models.mistral.modeling_flax_mistral" -> "typing" [];
	"transformers.models.mistral.modeling_flax_mistral" -> "'flax.linen'" [];
	"transformers.models.mistral.modeling_flax_mistral" -> "jax" [];
	"transformers.models.mistral.modeling_flax_mistral" -> "'jax.numpy'" [];
	"transformers.models.mistral.modeling_flax_mistral" -> "numpy" [];
	"transformers.models.mistral.modeling_flax_mistral" -> "'flax.core'" [];
	"transformers.models.mistral.modeling_flax_mistral" -> "'flax.traverse_util'" [];
	"transformers.models.mistral.modeling_mistral" -> "math" [];
	"transformers.models.mistral.modeling_mistral" -> "typing" [];
	"transformers.models.mistral.modeling_mistral" -> "torch" [];
	"transformers.models.mimi" -> "typing" [];
	"transformers.models.mimi" -> "sys" [];
	"transformers.models.mimi.modeling_mimi" -> "math" [];
	"transformers.models.mimi.modeling_mimi" -> "dataclasses" [];
	"transformers.models.mimi.modeling_mimi" -> "typing" [];
	"transformers.models.mimi.modeling_mimi" -> "torch" [];
	"transformers.models.mimi.configuration_mimi" -> "math" [];
	"transformers.models.mimi.configuration_mimi" -> "numpy" [];
	"transformers.models.mgp_str" -> "typing" [];
	"transformers.models.mgp_str" -> "sys" [];
	"transformers.models.mgp_str.modeling_mgp_str" -> "dataclasses" [];
	"transformers.models.mgp_str.modeling_mgp_str" -> "typing" [];
	"transformers.models.mgp_str.modeling_mgp_str" -> "torch" [];
	"transformers.models.mgp_str.tokenization_mgp_str" -> "json" [];
	"transformers.models.mgp_str.tokenization_mgp_str" -> "os" [];
	"transformers.models.mgp_str.tokenization_mgp_str" -> "typing" [];
	"transformers.models.mgp_str.processing_mgp_str" -> "warnings" [];
	"transformers.models.mgp_str.processing_mgp_str" -> "transformers" [];
	"transformers.models.mgp_str.processing_mgp_str" -> "torch" [];
	"transformers.models.megatron_bert" -> "typing" [];
	"transformers.models.megatron_bert" -> "sys" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "math" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "os" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "warnings" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "dataclasses" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "typing" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "torch" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "re" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "numpy" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "tensorflow" [];
	"transformers.models.mbart" -> "typing" [];
	"transformers.models.mbart" -> "sys" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "math" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "random" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "functools" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "typing" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "'flax.linen'" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "jax" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "'jax.numpy'" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "'flax.core'" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "'flax.traverse_util'" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "'jax.random'" [];
	"transformers.models.mbart.modeling_tf_mbart" -> "__future__" [];
	"transformers.models.mbart.modeling_tf_mbart" -> "random" [];
	"transformers.models.mbart.modeling_tf_mbart" -> "typing" [];
	"transformers.models.mbart.modeling_tf_mbart" -> "tensorflow" [];
	"transformers.models.mbart.modeling_mbart" -> "copy" [];
	"transformers.models.mbart.modeling_mbart" -> "math" [];
	"transformers.models.mbart.modeling_mbart" -> "typing" [];
	"transformers.models.mbart.modeling_mbart" -> "torch" [];
	"transformers.models.mbart.tokenization_mbart_fast" -> "os" [];
	"transformers.models.mbart.tokenization_mbart_fast" -> "shutil" [];
	"transformers.models.mbart.tokenization_mbart_fast" -> "typing" [];
	"transformers.models.mbart.tokenization_mbart_fast" -> "tokenizers" [];
	"transformers.models.mbart.tokenization_mbart" -> "os" [];
	"transformers.models.mbart.tokenization_mbart" -> "shutil" [];
	"transformers.models.mbart.tokenization_mbart" -> "typing" [];
	"transformers.models.mbart.tokenization_mbart" -> "sentencepiece" [];
	"transformers.models.mbart.configuration_mbart" -> "collections" [];
	"transformers.models.mbart.configuration_mbart" -> "typing" [];
	"transformers.models.mbart.configuration_mbart" -> "transformers" [];
	"transformers.models.mbart.configuration_mbart" -> "torch" [];
	"transformers.models.maskformer" -> "typing" [];
	"transformers.models.maskformer" -> "sys" [];
	"transformers.models.maskformer.modeling_maskformer_swin" -> "math" [];
	"transformers.models.maskformer.modeling_maskformer_swin" -> "dataclasses" [];
	"transformers.models.maskformer.modeling_maskformer_swin" -> "typing" [];
	"transformers.models.maskformer.modeling_maskformer_swin" -> "torch" [];
	"transformers.models.maskformer.modeling_maskformer" -> "math" [];
	"transformers.models.maskformer.modeling_maskformer" -> "dataclasses" [];
	"transformers.models.maskformer.modeling_maskformer" -> "numbers" [];
	"transformers.models.maskformer.modeling_maskformer" -> "typing" [];
	"transformers.models.maskformer.modeling_maskformer" -> "numpy" [];
	"transformers.models.maskformer.modeling_maskformer" -> "torch" [];
	"transformers.models.maskformer.modeling_maskformer" -> "accelerate" [];
	"transformers.models.maskformer.modeling_maskformer" -> "'accelerate.utils'" [];
	"transformers.models.maskformer.modeling_maskformer" -> "'scipy.optimize'" [];
	"transformers.models.maskformer.image_processing_maskformer" -> "math" [];
	"transformers.models.maskformer.image_processing_maskformer" -> "warnings" [];
	"transformers.models.maskformer.image_processing_maskformer" -> "typing" [];
	"transformers.models.maskformer.image_processing_maskformer" -> "numpy" [];
	"transformers.models.maskformer.image_processing_maskformer" -> "transformers" [];
	"transformers.models.maskformer.image_processing_maskformer" -> "torch" [];
	"transformers.models.maskformer.feature_extraction_maskformer" -> "warnings" [];
	"transformers.models.maskformer.configuration_maskformer" -> "typing" [];
	"transformers.models.mask2former" -> "typing" [];
	"transformers.models.mask2former" -> "sys" [];
	"transformers.models.mask2former.modeling_mask2former" -> "math" [];
	"transformers.models.mask2former.modeling_mask2former" -> "warnings" [];
	"transformers.models.mask2former.modeling_mask2former" -> "dataclasses" [];
	"transformers.models.mask2former.modeling_mask2former" -> "typing" [];
	"transformers.models.mask2former.modeling_mask2former" -> "numpy" [];
	"transformers.models.mask2former.modeling_mask2former" -> "torch" [];
	"transformers.models.mask2former.modeling_mask2former" -> "'scipy.optimize'" [];
	"transformers.models.mask2former.modeling_mask2former" -> "accelerate" [];
	"transformers.models.mask2former.modeling_mask2former" -> "'accelerate.utils'" [];
	"transformers.models.mask2former.image_processing_mask2former" -> "math" [];
	"transformers.models.mask2former.image_processing_mask2former" -> "typing" [];
	"transformers.models.mask2former.image_processing_mask2former" -> "numpy" [];
	"transformers.models.mask2former.image_processing_mask2former" -> "torch" [];
	"transformers.models.mask2former.configuration_mask2former" -> "typing" [];
	"transformers.models.markuplm" -> "typing" [];
	"transformers.models.markuplm" -> "sys" [];
	"transformers.models.markuplm.modeling_markuplm" -> "math" [];
	"transformers.models.markuplm.modeling_markuplm" -> "os" [];
	"transformers.models.markuplm.modeling_markuplm" -> "typing" [];
	"transformers.models.markuplm.modeling_markuplm" -> "torch" [];
	"transformers.models.markuplm.tokenization_markuplm_fast" -> "json" [];
	"transformers.models.markuplm.tokenization_markuplm_fast" -> "functools" [];
	"transformers.models.markuplm.tokenization_markuplm_fast" -> "typing" [];
	"transformers.models.markuplm.tokenization_markuplm_fast" -> "tokenizers" [];
	"transformers.models.markuplm.tokenization_markuplm" -> "json" [];
	"transformers.models.markuplm.tokenization_markuplm" -> "os" [];
	"transformers.models.markuplm.tokenization_markuplm" -> "functools" [];
	"transformers.models.markuplm.tokenization_markuplm" -> "typing" [];
	"transformers.models.markuplm.tokenization_markuplm" -> "regex" [];
	"transformers.models.markuplm.processing_markuplm" -> "typing" [];
	"transformers.models.markuplm.feature_extraction_markuplm" -> "html" [];
	"transformers.models.markuplm.feature_extraction_markuplm" -> "bs4" [];
	"transformers.models.marian" -> "typing" [];
	"transformers.models.marian" -> "sys" [];
	"transformers.models.marian.modeling_flax_marian" -> "math" [];
	"transformers.models.marian.modeling_flax_marian" -> "random" [];
	"transformers.models.marian.modeling_flax_marian" -> "functools" [];
	"transformers.models.marian.modeling_flax_marian" -> "typing" [];
	"transformers.models.marian.modeling_flax_marian" -> "'flax.linen'" [];
	"transformers.models.marian.modeling_flax_marian" -> "jax" [];
	"transformers.models.marian.modeling_flax_marian" -> "'jax.numpy'" [];
	"transformers.models.marian.modeling_flax_marian" -> "numpy" [];
	"transformers.models.marian.modeling_flax_marian" -> "'flax.core'" [];
	"transformers.models.marian.modeling_flax_marian" -> "'flax.traverse_util'" [];
	"transformers.models.marian.modeling_flax_marian" -> "'jax.random'" [];
	"transformers.models.marian.modeling_tf_marian" -> "__future__" [];
	"transformers.models.marian.modeling_tf_marian" -> "random" [];
	"transformers.models.marian.modeling_tf_marian" -> "typing" [];
	"transformers.models.marian.modeling_tf_marian" -> "numpy" [];
	"transformers.models.marian.modeling_tf_marian" -> "tensorflow" [];
	"transformers.models.marian.modeling_marian" -> "copy" [];
	"transformers.models.marian.modeling_marian" -> "math" [];
	"transformers.models.marian.modeling_marian" -> "typing" [];
	"transformers.models.marian.modeling_marian" -> "numpy" [];
	"transformers.models.marian.modeling_marian" -> "torch" [];
	"transformers.models.marian.tokenization_marian" -> "json" [];
	"transformers.models.marian.tokenization_marian" -> "os" [];
	"transformers.models.marian.tokenization_marian" -> "re" [];
	"transformers.models.marian.tokenization_marian" -> "warnings" [];
	"transformers.models.marian.tokenization_marian" -> "pathlib" [];
	"transformers.models.marian.tokenization_marian" -> "shutil" [];
	"transformers.models.marian.tokenization_marian" -> "typing" [];
	"transformers.models.marian.tokenization_marian" -> "sentencepiece" [];
	"transformers.models.marian.tokenization_marian" -> "sacremoses" [];
	"transformers.models.marian.configuration_marian" -> "collections" [];
	"transformers.models.marian.configuration_marian" -> "typing" [];
	"transformers.models.marian.configuration_marian" -> "transformers" [];
	"transformers.models.marian.configuration_marian" -> "torch" [];
	"transformers.models.mamba2" -> "typing" [];
	"transformers.models.mamba2" -> "sys" [];
	"transformers.models.mamba2.modeling_mamba2" -> "math" [];
	"transformers.models.mamba2.modeling_mamba2" -> "dataclasses" [];
	"transformers.models.mamba2.modeling_mamba2" -> "typing" [];
	"transformers.models.mamba2.modeling_mamba2" -> "torch" [];
	"transformers.models.mamba2.modeling_mamba2" -> "'mamba_ssm.ops'" [];
	"transformers.models.mamba2.modeling_mamba2" -> "causal_conv1d" [];
	"transformers.models.mamba2.configuration_mamba2" -> "math" [];
	"transformers.models.mamba" -> "typing" [];
	"transformers.models.mamba" -> "sys" [];
	"transformers.models.mamba.modeling_mamba" -> "math" [];
	"transformers.models.mamba.modeling_mamba" -> "dataclasses" [];
	"transformers.models.mamba.modeling_mamba" -> "typing" [];
	"transformers.models.mamba.modeling_mamba" -> "torch" [];
	"transformers.models.mamba.modeling_mamba" -> "'mambapy.pscan'" [];
	"transformers.models.mamba.modeling_mamba" -> "'mamba_ssm.ops'" [];
	"transformers.models.mamba.modeling_mamba" -> "causal_conv1d" [];
	"transformers.models.mamba.configuration_mamba" -> "math" [];
	"transformers.models.m2m_100" -> "typing" [];
	"transformers.models.m2m_100" -> "sys" [];
	"transformers.models.m2m_100.modeling_m2m_100" -> "math" [];
	"transformers.models.m2m_100.modeling_m2m_100" -> "typing" [];
	"transformers.models.m2m_100.modeling_m2m_100" -> "torch" [];
	"transformers.models.m2m_100.tokenization_m2m_100" -> "json" [];
	"transformers.models.m2m_100.tokenization_m2m_100" -> "os" [];
	"transformers.models.m2m_100.tokenization_m2m_100" -> "pathlib" [];
	"transformers.models.m2m_100.tokenization_m2m_100" -> "shutil" [];
	"transformers.models.m2m_100.tokenization_m2m_100" -> "typing" [];
	"transformers.models.m2m_100.tokenization_m2m_100" -> "sentencepiece" [];
	"transformers.models.m2m_100.configuration_m2m_100" -> "collections" [];
	"transformers.models.m2m_100.configuration_m2m_100" -> "typing" [];
	"transformers.models.m2m_100.configuration_m2m_100" -> "transformers" [];
	"transformers.models.m2m_100.configuration_m2m_100" -> "torch" [];
	"transformers.models.lxmert" -> "typing" [];
	"transformers.models.lxmert" -> "sys" [];
	"transformers.models.lxmert.modeling_tf_lxmert" -> "__future__" [];
	"transformers.models.lxmert.modeling_tf_lxmert" -> "warnings" [];
	"transformers.models.lxmert.modeling_tf_lxmert" -> "dataclasses" [];
	"transformers.models.lxmert.modeling_tf_lxmert" -> "typing" [];
	"transformers.models.lxmert.modeling_tf_lxmert" -> "numpy" [];
	"transformers.models.lxmert.modeling_tf_lxmert" -> "tensorflow" [];
	"transformers.models.lxmert.modeling_lxmert" -> "math" [];
	"transformers.models.lxmert.modeling_lxmert" -> "os" [];
	"transformers.models.lxmert.modeling_lxmert" -> "warnings" [];
	"transformers.models.lxmert.modeling_lxmert" -> "dataclasses" [];
	"transformers.models.lxmert.modeling_lxmert" -> "typing" [];
	"transformers.models.lxmert.modeling_lxmert" -> "torch" [];
	"transformers.models.lxmert.modeling_lxmert" -> "re" [];
	"transformers.models.lxmert.modeling_lxmert" -> "numpy" [];
	"transformers.models.lxmert.modeling_lxmert" -> "tensorflow" [];
	"transformers.models.lxmert.tokenization_lxmert_fast" -> "json" [];
	"transformers.models.lxmert.tokenization_lxmert_fast" -> "typing" [];
	"transformers.models.lxmert.tokenization_lxmert_fast" -> "tokenizers" [];
	"transformers.models.lxmert.tokenization_lxmert" -> "collections" [];
	"transformers.models.lxmert.tokenization_lxmert" -> "os" [];
	"transformers.models.lxmert.tokenization_lxmert" -> "unicodedata" [];
	"transformers.models.lxmert.tokenization_lxmert" -> "typing" [];
	"transformers.models.luke" -> "typing" [];
	"transformers.models.luke" -> "sys" [];
	"transformers.models.luke.modeling_luke" -> "math" [];
	"transformers.models.luke.modeling_luke" -> "dataclasses" [];
	"transformers.models.luke.modeling_luke" -> "typing" [];
	"transformers.models.luke.modeling_luke" -> "torch" [];
	"transformers.models.luke.tokenization_luke" -> "itertools" [];
	"transformers.models.luke.tokenization_luke" -> "json" [];
	"transformers.models.luke.tokenization_luke" -> "os" [];
	"transformers.models.luke.tokenization_luke" -> "functools" [];
	"transformers.models.luke.tokenization_luke" -> "typing" [];
	"transformers.models.luke.tokenization_luke" -> "numpy" [];
	"transformers.models.luke.tokenization_luke" -> "regex" [];
	"transformers.models.longt5" -> "typing" [];
	"transformers.models.longt5" -> "sys" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "copy" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "typing" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "'flax.linen'" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "jax" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "'jax.numpy'" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "numpy" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "'flax.core'" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "'flax.traverse_util'" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "'jax.random'" [];
	"transformers.models.longt5.modeling_longt5" -> "copy" [];
	"transformers.models.longt5.modeling_longt5" -> "math" [];
	"transformers.models.longt5.modeling_longt5" -> "warnings" [];
	"transformers.models.longt5.modeling_longt5" -> "typing" [];
	"transformers.models.longt5.modeling_longt5" -> "torch" [];
	"transformers.models.longt5.modeling_longt5" -> "apex" [];
	"transformers.models.longt5.configuration_longt5" -> "typing" [];
	"transformers.models.longformer" -> "typing" [];
	"transformers.models.longformer" -> "sys" [];
	"transformers.models.longformer.modeling_tf_longformer" -> "__future__" [];
	"transformers.models.longformer.modeling_tf_longformer" -> "warnings" [];
	"transformers.models.longformer.modeling_tf_longformer" -> "dataclasses" [];
	"transformers.models.longformer.modeling_tf_longformer" -> "typing" [];
	"transformers.models.longformer.modeling_tf_longformer" -> "numpy" [];
	"transformers.models.longformer.modeling_tf_longformer" -> "tensorflow" [];
	"transformers.models.longformer.modeling_longformer" -> "math" [];
	"transformers.models.longformer.modeling_longformer" -> "dataclasses" [];
	"transformers.models.longformer.modeling_longformer" -> "typing" [];
	"transformers.models.longformer.modeling_longformer" -> "torch" [];
	"transformers.models.longformer.tokenization_longformer_fast" -> "json" [];
	"transformers.models.longformer.tokenization_longformer_fast" -> "typing" [];
	"transformers.models.longformer.tokenization_longformer_fast" -> "tokenizers" [];
	"transformers.models.longformer.tokenization_longformer" -> "json" [];
	"transformers.models.longformer.tokenization_longformer" -> "os" [];
	"transformers.models.longformer.tokenization_longformer" -> "functools" [];
	"transformers.models.longformer.tokenization_longformer" -> "typing" [];
	"transformers.models.longformer.tokenization_longformer" -> "regex" [];
	"transformers.models.longformer.configuration_longformer" -> "collections" [];
	"transformers.models.longformer.configuration_longformer" -> "typing" [];
	"transformers.models.longformer.configuration_longformer" -> "torch" [];
	"transformers.models.llava_onevision" -> "typing" [];
	"transformers.models.llava_onevision" -> "sys" [];
	"transformers.models.llava_onevision.modeling_llava_onevision" -> "math" [];
	"transformers.models.llava_onevision.modeling_llava_onevision" -> "dataclasses" [];
	"transformers.models.llava_onevision.modeling_llava_onevision" -> "typing" [];
	"transformers.models.llava_onevision.modeling_llava_onevision" -> "numpy" [];
	"transformers.models.llava_onevision.modeling_llava_onevision" -> "torch" [];
	"transformers.models.llava_onevision.video_processing_llava_onevision" -> "typing" [];
	"transformers.models.llava_onevision.video_processing_llava_onevision" -> "PIL" [];
	"transformers.models.llava_onevision.image_processing_llava_onevision" -> "math" [];
	"transformers.models.llava_onevision.image_processing_llava_onevision" -> "typing" [];
	"transformers.models.llava_onevision.image_processing_llava_onevision" -> "numpy" [];
	"transformers.models.llava_onevision.image_processing_llava_onevision" -> "PIL" [];
	"transformers.models.llava_onevision.processing_llava_onevision" -> "math" [];
	"transformers.models.llava_onevision.processing_llava_onevision" -> "os" [];
	"transformers.models.llava_onevision.processing_llava_onevision" -> "typing" [];
	"transformers.models.llava_next_video" -> "typing" [];
	"transformers.models.llava_next_video" -> "sys" [];
	"transformers.models.llava_next_video.modeling_llava_next_video" -> "math" [];
	"transformers.models.llava_next_video.modeling_llava_next_video" -> "dataclasses" [];
	"transformers.models.llava_next_video.modeling_llava_next_video" -> "typing" [];
	"transformers.models.llava_next_video.modeling_llava_next_video" -> "numpy" [];
	"transformers.models.llava_next_video.modeling_llava_next_video" -> "torch" [];
	"transformers.models.llava_next_video.image_processing_llava_next_video" -> "typing" [];
	"transformers.models.llava_next_video.image_processing_llava_next_video" -> "numpy" [];
	"transformers.models.llava_next_video.image_processing_llava_next_video" -> "PIL" [];
	"transformers.models.llava_next_video.processing_llava_next_video" -> "typing" [];
	"transformers.models.llava_next" -> "typing" [];
	"transformers.models.llava_next" -> "sys" [];
	"transformers.models.llava_next.image_processing_llava_next" -> "math" [];
	"transformers.models.llava_next.image_processing_llava_next" -> "typing" [];
	"transformers.models.llava_next.image_processing_llava_next" -> "numpy" [];
	"transformers.models.llava_next.image_processing_llava_next" -> "PIL" [];
	"transformers.models.llava_next.modeling_llava_next" -> "math" [];
	"transformers.models.llava_next.modeling_llava_next" -> "dataclasses" [];
	"transformers.models.llava_next.modeling_llava_next" -> "typing" [];
	"transformers.models.llava_next.modeling_llava_next" -> "numpy" [];
	"transformers.models.llava_next.modeling_llava_next" -> "torch" [];
	"transformers.models.llava_next.processing_llava_next" -> "typing" [];
	"transformers.models.llava" -> "typing" [];
	"transformers.models.llava" -> "sys" [];
	"transformers.models.llava.modeling_llava" -> "dataclasses" [];
	"transformers.models.llava.modeling_llava" -> "typing" [];
	"transformers.models.llava.modeling_llava" -> "torch" [];
	"transformers.models.llava.processing_llava" -> "typing" [];
	"transformers.models.llama" -> "typing" [];
	"transformers.models.llama" -> "sys" [];
	"transformers.models.llama.modeling_flax_llama" -> "functools" [];
	"transformers.models.llama.modeling_flax_llama" -> "typing" [];
	"transformers.models.llama.modeling_flax_llama" -> "'flax.linen'" [];
	"transformers.models.llama.modeling_flax_llama" -> "jax" [];
	"transformers.models.llama.modeling_flax_llama" -> "'jax.numpy'" [];
	"transformers.models.llama.modeling_flax_llama" -> "numpy" [];
	"transformers.models.llama.modeling_flax_llama" -> "'flax.core'" [];
	"transformers.models.llama.modeling_flax_llama" -> "'flax.traverse_util'" [];
	"transformers.models.llama.modeling_llama" -> "math" [];
	"transformers.models.llama.modeling_llama" -> "typing" [];
	"transformers.models.llama.modeling_llama" -> "torch" [];
	"transformers.models.llama.tokenization_llama_fast" -> "os" [];
	"transformers.models.llama.tokenization_llama_fast" -> "shutil" [];
	"transformers.models.llama.tokenization_llama_fast" -> "typing" [];
	"transformers.models.llama.tokenization_llama_fast" -> "tokenizers" [];
	"transformers.models.llama.tokenization_llama" -> "os" [];
	"transformers.models.llama.tokenization_llama" -> "shutil" [];
	"transformers.models.llama.tokenization_llama" -> "typing" [];
	"transformers.models.llama.tokenization_llama" -> "sentencepiece" [];
	"transformers.models.lilt" -> "typing" [];
	"transformers.models.lilt" -> "sys" [];
	"transformers.models.lilt.modeling_lilt" -> "math" [];
	"transformers.models.lilt.modeling_lilt" -> "typing" [];
	"transformers.models.lilt.modeling_lilt" -> "torch" [];
	"transformers.models.levit" -> "typing" [];
	"transformers.models.levit" -> "sys" [];
	"transformers.models.levit.modeling_levit" -> "itertools" [];
	"transformers.models.levit.modeling_levit" -> "dataclasses" [];
	"transformers.models.levit.modeling_levit" -> "typing" [];
	"transformers.models.levit.modeling_levit" -> "torch" [];
	"transformers.models.levit.image_processing_levit" -> "typing" [];
	"transformers.models.levit.image_processing_levit" -> "numpy" [];
	"transformers.models.levit.feature_extraction_levit" -> "warnings" [];
	"transformers.models.levit.configuration_levit" -> "collections" [];
	"transformers.models.levit.configuration_levit" -> "typing" [];
	"transformers.models.levit.configuration_levit" -> "packaging" [];
	"transformers.models.led" -> "typing" [];
	"transformers.models.led" -> "sys" [];
	"transformers.models.led.modeling_tf_led" -> "__future__" [];
	"transformers.models.led.modeling_tf_led" -> "random" [];
	"transformers.models.led.modeling_tf_led" -> "dataclasses" [];
	"transformers.models.led.modeling_tf_led" -> "typing" [];
	"transformers.models.led.modeling_tf_led" -> "numpy" [];
	"transformers.models.led.modeling_tf_led" -> "tensorflow" [];
	"transformers.models.led.modeling_led" -> "math" [];
	"transformers.models.led.modeling_led" -> "warnings" [];
	"transformers.models.led.modeling_led" -> "dataclasses" [];
	"transformers.models.led.modeling_led" -> "typing" [];
	"transformers.models.led.modeling_led" -> "torch" [];
	"transformers.models.led.tokenization_led_fast" -> "json" [];
	"transformers.models.led.tokenization_led_fast" -> "typing" [];
	"transformers.models.led.tokenization_led_fast" -> "tokenizers" [];
	"transformers.models.led.tokenization_led" -> "json" [];
	"transformers.models.led.tokenization_led" -> "os" [];
	"transformers.models.led.tokenization_led" -> "functools" [];
	"transformers.models.led.tokenization_led" -> "typing" [];
	"transformers.models.led.tokenization_led" -> "regex" [];
	"transformers.models.led.configuration_led" -> "typing" [];
	"transformers.models.layoutxlm" -> "typing" [];
	"transformers.models.layoutxlm" -> "sys" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm_fast" -> "os" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm_fast" -> "shutil" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm_fast" -> "typing" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm" -> "os" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm" -> "shutil" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm" -> "typing" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm" -> "sentencepiece" [];
	"transformers.models.layoutxlm.processing_layoutxlm" -> "warnings" [];
	"transformers.models.layoutxlm.processing_layoutxlm" -> "typing" [];
	"transformers.models.layoutlmv3" -> "typing" [];
	"transformers.models.layoutlmv3" -> "sys" [];
	"transformers.models.layoutlmv3.image_processing_layoutlmv3" -> "typing" [];
	"transformers.models.layoutlmv3.image_processing_layoutlmv3" -> "numpy" [];
	"transformers.models.layoutlmv3.image_processing_layoutlmv3" -> "PIL" [];
	"transformers.models.layoutlmv3.image_processing_layoutlmv3" -> "pytesseract" [];
	"transformers.models.layoutlmv3.feature_extraction_layoutlmv3" -> "warnings" [];
	"transformers.models.layoutlmv3.modeling_tf_layoutlmv3" -> "__future__" [];
	"transformers.models.layoutlmv3.modeling_tf_layoutlmv3" -> "collections" [];
	"transformers.models.layoutlmv3.modeling_tf_layoutlmv3" -> "math" [];
	"transformers.models.layoutlmv3.modeling_tf_layoutlmv3" -> "typing" [];
	"transformers.models.layoutlmv3.modeling_tf_layoutlmv3" -> "tensorflow" [];
	"transformers.models.layoutlmv3.modeling_layoutlmv3" -> "collections" [];
	"transformers.models.layoutlmv3.modeling_layoutlmv3" -> "math" [];
	"transformers.models.layoutlmv3.modeling_layoutlmv3" -> "typing" [];
	"transformers.models.layoutlmv3.modeling_layoutlmv3" -> "torch" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3_fast" -> "json" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3_fast" -> "typing" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3_fast" -> "tokenizers" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3" -> "json" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3" -> "os" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3" -> "functools" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3" -> "typing" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3" -> "regex" [];
	"transformers.models.layoutlmv3.processing_layoutlmv3" -> "warnings" [];
	"transformers.models.layoutlmv3.processing_layoutlmv3" -> "typing" [];
	"transformers.models.layoutlmv3.configuration_layoutlmv3" -> "collections" [];
	"transformers.models.layoutlmv3.configuration_layoutlmv3" -> "typing" [];
	"transformers.models.layoutlmv3.configuration_layoutlmv3" -> "packaging" [];
	"transformers.models.layoutlmv2" -> "typing" [];
	"transformers.models.layoutlmv2" -> "sys" [];
	"transformers.models.layoutlmv2.modeling_layoutlmv2" -> "math" [];
	"transformers.models.layoutlmv2.modeling_layoutlmv2" -> "typing" [];
	"transformers.models.layoutlmv2.modeling_layoutlmv2" -> "torch" [];
	"transformers.models.layoutlmv2.modeling_layoutlmv2" -> "detectron2" [];
	"transformers.models.layoutlmv2.modeling_layoutlmv2" -> "'detectron2.modeling'" [];
	"transformers.models.layoutlmv2.feature_extraction_layoutlmv2" -> "warnings" [];
	"transformers.models.layoutlmv2.image_processing_layoutlmv2" -> "typing" [];
	"transformers.models.layoutlmv2.image_processing_layoutlmv2" -> "numpy" [];
	"transformers.models.layoutlmv2.image_processing_layoutlmv2" -> "PIL" [];
	"transformers.models.layoutlmv2.image_processing_layoutlmv2" -> "pytesseract" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2_fast" -> "json" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2_fast" -> "typing" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2_fast" -> "tokenizers" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2" -> "collections" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2" -> "os" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2" -> "sys" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2" -> "unicodedata" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2" -> "typing" [];
	"transformers.models.layoutlmv2.processing_layoutlmv2" -> "warnings" [];
	"transformers.models.layoutlmv2.processing_layoutlmv2" -> "typing" [];
	"transformers.models.layoutlmv2.configuration_layoutlmv2" -> "detectron2" [];
	"transformers.models.layoutlm" -> "typing" [];
	"transformers.models.layoutlm" -> "sys" [];
	"transformers.models.layoutlm.modeling_tf_layoutlm" -> "__future__" [];
	"transformers.models.layoutlm.modeling_tf_layoutlm" -> "math" [];
	"transformers.models.layoutlm.modeling_tf_layoutlm" -> "warnings" [];
	"transformers.models.layoutlm.modeling_tf_layoutlm" -> "typing" [];
	"transformers.models.layoutlm.modeling_tf_layoutlm" -> "numpy" [];
	"transformers.models.layoutlm.modeling_tf_layoutlm" -> "tensorflow" [];
	"transformers.models.layoutlm.modeling_layoutlm" -> "math" [];
	"transformers.models.layoutlm.modeling_layoutlm" -> "typing" [];
	"transformers.models.layoutlm.modeling_layoutlm" -> "torch" [];
	"transformers.models.layoutlm.tokenization_layoutlm_fast" -> "json" [];
	"transformers.models.layoutlm.tokenization_layoutlm_fast" -> "typing" [];
	"transformers.models.layoutlm.tokenization_layoutlm_fast" -> "tokenizers" [];
	"transformers.models.layoutlm.tokenization_layoutlm" -> "collections" [];
	"transformers.models.layoutlm.tokenization_layoutlm" -> "os" [];
	"transformers.models.layoutlm.tokenization_layoutlm" -> "unicodedata" [];
	"transformers.models.layoutlm.tokenization_layoutlm" -> "typing" [];
	"transformers.models.layoutlm.configuration_layoutlm" -> "collections" [];
	"transformers.models.layoutlm.configuration_layoutlm" -> "typing" [];
	"transformers.models.layoutlm.configuration_layoutlm" -> "transformers" [];
	"transformers.models.layoutlm.configuration_layoutlm" -> "torch" [];
	"transformers.models.kosmos2" -> "typing" [];
	"transformers.models.kosmos2" -> "sys" [];
	"transformers.models.kosmos2.modeling_kosmos2" -> "math" [];
	"transformers.models.kosmos2.modeling_kosmos2" -> "dataclasses" [];
	"transformers.models.kosmos2.modeling_kosmos2" -> "typing" [];
	"transformers.models.kosmos2.modeling_kosmos2" -> "torch" [];
	"transformers.models.kosmos2.processing_kosmos2" -> "copy" [];
	"transformers.models.kosmos2.processing_kosmos2" -> "math" [];
	"transformers.models.kosmos2.processing_kosmos2" -> "re" [];
	"transformers.models.kosmos2.processing_kosmos2" -> "typing" [];
	"transformers.models.kosmos2.configuration_kosmos2" -> "os" [];
	"transformers.models.kosmos2.configuration_kosmos2" -> "typing" [];
	"transformers.models.jetmoe" -> "typing" [];
	"transformers.models.jetmoe" -> "sys" [];
	"transformers.models.jetmoe.modeling_jetmoe" -> "math" [];
	"transformers.models.jetmoe.modeling_jetmoe" -> "typing" [];
	"transformers.models.jetmoe.modeling_jetmoe" -> "torch" [];
	"transformers.models.jamba" -> "typing" [];
	"transformers.models.jamba" -> "sys" [];
	"transformers.models.jamba.modeling_jamba" -> "math" [];
	"transformers.models.jamba.modeling_jamba" -> "typing" [];
	"transformers.models.jamba.modeling_jamba" -> "torch" [];
	"transformers.models.jamba.modeling_jamba" -> "'mamba_ssm.ops'" [];
	"transformers.models.jamba.modeling_jamba" -> "causal_conv1d" [];
	"transformers.models.jamba.configuration_jamba" -> "math" [];
	"transformers.models.instructblipvideo" -> "typing" [];
	"transformers.models.instructblipvideo" -> "sys" [];
	"transformers.models.instructblipvideo.modeling_instructblipvideo" -> "math" [];
	"transformers.models.instructblipvideo.modeling_instructblipvideo" -> "dataclasses" [];
	"transformers.models.instructblipvideo.modeling_instructblipvideo" -> "typing" [];
	"transformers.models.instructblipvideo.modeling_instructblipvideo" -> "torch" [];
	"transformers.models.instructblipvideo.image_processing_instructblipvideo" -> "typing" [];
	"transformers.models.instructblipvideo.image_processing_instructblipvideo" -> "numpy" [];
	"transformers.models.instructblipvideo.image_processing_instructblipvideo" -> "PIL" [];
	"transformers.models.instructblipvideo.processing_instructblipvideo" -> "os" [];
	"transformers.models.instructblipvideo.processing_instructblipvideo" -> "typing" [];
	"transformers.models.instructblipvideo.configuration_instructblipvideo" -> "os" [];
	"transformers.models.instructblipvideo.configuration_instructblipvideo" -> "typing" [];
	"transformers.models.instructblip" -> "typing" [];
	"transformers.models.instructblip" -> "sys" [];
	"transformers.models.instructblip.modeling_instructblip" -> "math" [];
	"transformers.models.instructblip.modeling_instructblip" -> "dataclasses" [];
	"transformers.models.instructblip.modeling_instructblip" -> "typing" [];
	"transformers.models.instructblip.modeling_instructblip" -> "torch" [];
	"transformers.models.instructblip.processing_instructblip" -> "os" [];
	"transformers.models.instructblip.processing_instructblip" -> "typing" [];
	"transformers.models.instructblip.configuration_instructblip" -> "os" [];
	"transformers.models.instructblip.configuration_instructblip" -> "typing" [];
	"transformers.models.informer" -> "typing" [];
	"transformers.models.informer" -> "sys" [];
	"transformers.models.informer.modeling_informer" -> "typing" [];
	"transformers.models.informer.modeling_informer" -> "numpy" [];
	"transformers.models.informer.modeling_informer" -> "torch" [];
	"transformers.models.informer.configuration_informer" -> "typing" [];
	"transformers.models.imagegpt" -> "typing" [];
	"transformers.models.imagegpt" -> "sys" [];
	"transformers.models.imagegpt.modeling_imagegpt" -> "math" [];
	"transformers.models.imagegpt.modeling_imagegpt" -> "os" [];
	"transformers.models.imagegpt.modeling_imagegpt" -> "warnings" [];
	"transformers.models.imagegpt.modeling_imagegpt" -> "typing" [];
	"transformers.models.imagegpt.modeling_imagegpt" -> "torch" [];
	"transformers.models.imagegpt.modeling_imagegpt" -> "re" [];
	"transformers.models.imagegpt.modeling_imagegpt" -> "tensorflow" [];
	"transformers.models.imagegpt.image_processing_imagegpt" -> "typing" [];
	"transformers.models.imagegpt.image_processing_imagegpt" -> "numpy" [];
	"transformers.models.imagegpt.image_processing_imagegpt" -> "PIL" [];
	"transformers.models.imagegpt.feature_extraction_imagegpt" -> "warnings" [];
	"transformers.models.imagegpt.configuration_imagegpt" -> "collections" [];
	"transformers.models.imagegpt.configuration_imagegpt" -> "typing" [];
	"transformers.models.imagegpt.configuration_imagegpt" -> "transformers" [];
	"transformers.models.idefics3" -> "typing" [];
	"transformers.models.idefics3" -> "sys" [];
	"transformers.models.idefics3.processing_idefics3" -> "re" [];
	"transformers.models.idefics3.processing_idefics3" -> "typing" [];
	"transformers.models.idefics3.modeling_idefics3" -> "dataclasses" [];
	"transformers.models.idefics3.modeling_idefics3" -> "typing" [];
	"transformers.models.idefics3.modeling_idefics3" -> "torch" [];
	"transformers.models.idefics3.modeling_idefics3" -> "transformers" [];
	"transformers.models.idefics3.image_processing_idefics3" -> "math" [];
	"transformers.models.idefics3.image_processing_idefics3" -> "typing" [];
	"transformers.models.idefics3.image_processing_idefics3" -> "numpy" [];
	"transformers.models.idefics3.image_processing_idefics3" -> "PIL" [];
	"transformers.models.idefics3.configuration_idefics3" -> "os" [];
	"transformers.models.idefics3.configuration_idefics3" -> "typing" [];
	"transformers.models.idefics2" -> "typing" [];
	"transformers.models.idefics2" -> "sys" [];
	"transformers.models.idefics2.processing_idefics2" -> "typing" [];
	"transformers.models.idefics2.modeling_idefics2" -> "math" [];
	"transformers.models.idefics2.modeling_idefics2" -> "dataclasses" [];
	"transformers.models.idefics2.modeling_idefics2" -> "typing" [];
	"transformers.models.idefics2.modeling_idefics2" -> "torch" [];
	"transformers.models.idefics2.image_processing_idefics2" -> "typing" [];
	"transformers.models.idefics2.image_processing_idefics2" -> "numpy" [];
	"transformers.models.idefics2.image_processing_idefics2" -> "PIL" [];
	"transformers.models.idefics2.configuration_idefics2" -> "os" [];
	"transformers.models.idefics2.configuration_idefics2" -> "typing" [];
	"transformers.models.idefics" -> "typing" [];
	"transformers.models.idefics" -> "sys" [];
	"transformers.models.idefics.modeling_tf_idefics" -> "__future__" [];
	"transformers.models.idefics.modeling_tf_idefics" -> "dataclasses" [];
	"transformers.models.idefics.modeling_tf_idefics" -> "typing" [];
	"transformers.models.idefics.modeling_tf_idefics" -> "tensorflow" [];
	"transformers.models.idefics.modeling_tf_idefics" -> "transformers" [];
	"transformers.models.idefics.vision_tf" -> "math" [];
	"transformers.models.idefics.vision_tf" -> "dataclasses" [];
	"transformers.models.idefics.vision_tf" -> "typing" [];
	"transformers.models.idefics.vision_tf" -> "tensorflow" [];
	"transformers.models.idefics.perceiver_tf" -> "typing" [];
	"transformers.models.idefics.perceiver_tf" -> "tensorflow" [];
	"transformers.models.idefics.processing_idefics" -> "typing" [];
	"transformers.models.idefics.processing_idefics" -> "torch" [];
	"transformers.models.idefics.processing_idefics" -> "tensorflow" [];
	"transformers.models.idefics.modeling_idefics" -> "dataclasses" [];
	"transformers.models.idefics.modeling_idefics" -> "typing" [];
	"transformers.models.idefics.modeling_idefics" -> "torch" [];
	"transformers.models.idefics.vision" -> "math" [];
	"transformers.models.idefics.vision" -> "dataclasses" [];
	"transformers.models.idefics.vision" -> "typing" [];
	"transformers.models.idefics.vision" -> "torch" [];
	"transformers.models.idefics.perceiver" -> "typing" [];
	"transformers.models.idefics.perceiver" -> "torch" [];
	"transformers.models.idefics.image_processing_idefics" -> "typing" [];
	"transformers.models.idefics.image_processing_idefics" -> "PIL" [];
	"transformers.models.idefics.image_processing_idefics" -> "torch" [];
	"transformers.models.ibert" -> "typing" [];
	"transformers.models.ibert" -> "sys" [];
	"transformers.models.ibert.modeling_ibert" -> "math" [];
	"transformers.models.ibert.modeling_ibert" -> "typing" [];
	"transformers.models.ibert.modeling_ibert" -> "torch" [];
	"transformers.models.ibert.quant_modules" -> "decimal" [];
	"transformers.models.ibert.quant_modules" -> "numpy" [];
	"transformers.models.ibert.quant_modules" -> "torch" [];
	"transformers.models.ibert.configuration_ibert" -> "collections" [];
	"transformers.models.ibert.configuration_ibert" -> "typing" [];
	"transformers.models.hubert" -> "typing" [];
	"transformers.models.hubert" -> "sys" [];
	"transformers.models.hubert.modeling_tf_hubert" -> "__future__" [];
	"transformers.models.hubert.modeling_tf_hubert" -> "warnings" [];
	"transformers.models.hubert.modeling_tf_hubert" -> "typing" [];
	"transformers.models.hubert.modeling_tf_hubert" -> "numpy" [];
	"transformers.models.hubert.modeling_tf_hubert" -> "tensorflow" [];
	"transformers.models.hubert.modeling_hubert" -> "warnings" [];
	"transformers.models.hubert.modeling_hubert" -> "typing" [];
	"transformers.models.hubert.modeling_hubert" -> "numpy" [];
	"transformers.models.hubert.modeling_hubert" -> "torch" [];
	"transformers.models.hubert.modeling_hubert" -> "deepspeed" [];
	"transformers.models.hubert.configuration_hubert" -> "functools" [];
	"transformers.models.hubert.configuration_hubert" -> "operator" [];
	"transformers.models.hiera" -> "typing" [];
	"transformers.models.hiera" -> "sys" [];
	"transformers.models.hiera.modeling_hiera" -> "math" [];
	"transformers.models.hiera.modeling_hiera" -> "dataclasses" [];
	"transformers.models.hiera.modeling_hiera" -> "typing" [];
	"transformers.models.hiera.modeling_hiera" -> "torch" [];
	"transformers.models.herbert" -> "typing" [];
	"transformers.models.herbert" -> "sys" [];
	"transformers.models.herbert.tokenization_herbert_fast" -> "typing" [];
	"transformers.models.herbert.tokenization_herbert" -> "json" [];
	"transformers.models.herbert.tokenization_herbert" -> "os" [];
	"transformers.models.herbert.tokenization_herbert" -> "re" [];
	"transformers.models.herbert.tokenization_herbert" -> "unicodedata" [];
	"transformers.models.herbert.tokenization_herbert" -> "typing" [];
	"transformers.models.herbert.tokenization_herbert" -> "sacremoses" [];
	"transformers.models.herbert.tokenization_herbert" -> "Mykytea" [];
	"transformers.models.groupvit" -> "typing" [];
	"transformers.models.groupvit" -> "sys" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "__future__" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "math" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "dataclasses" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "typing" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "numpy" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "tensorflow" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "tensorflow_probability" [];
	"transformers.models.groupvit.modeling_groupvit" -> "dataclasses" [];
	"transformers.models.groupvit.modeling_groupvit" -> "typing" [];
	"transformers.models.groupvit.modeling_groupvit" -> "numpy" [];
	"transformers.models.groupvit.modeling_groupvit" -> "torch" [];
	"transformers.models.groupvit.configuration_groupvit" -> "os" [];
	"transformers.models.groupvit.configuration_groupvit" -> "collections" [];
	"transformers.models.groupvit.configuration_groupvit" -> "typing" [];
	"transformers.models.grounding_dino" -> "typing" [];
	"transformers.models.grounding_dino" -> "sys" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "io" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "pathlib" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "collections" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "typing" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "numpy" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "torch" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "PIL" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "'scipy.special'" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "'scipy.stats'" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "tensorflow" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "'jax.numpy'" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "pycocotools" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "math" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "os" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "warnings" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "dataclasses" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "pathlib" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "typing" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "torch" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "timm" [];
	"transformers.models.grounding_dino.processing_grounding_dino" -> "pathlib" [];
	"transformers.models.grounding_dino.processing_grounding_dino" -> "typing" [];
	"transformers.models.grounding_dino.processing_grounding_dino" -> "torch" [];
	"transformers.models.granitemoe" -> "typing" [];
	"transformers.models.granitemoe" -> "sys" [];
	"transformers.models.granitemoe.modeling_granitemoe" -> "typing" [];
	"transformers.models.granitemoe.modeling_granitemoe" -> "torch" [];
	"transformers.models.granite" -> "typing" [];
	"transformers.models.granite" -> "sys" [];
	"transformers.models.granite.modeling_granite" -> "typing" [];
	"transformers.models.granite.modeling_granite" -> "torch" [];
	"transformers.models.gptj" -> "typing" [];
	"transformers.models.gptj" -> "sys" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "functools" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "typing" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "'flax.linen'" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "jax" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "'jax.numpy'" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "numpy" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "'flax.core'" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "'flax.traverse_util'" [];
	"transformers.models.gptj.modeling_tf_gptj" -> "__future__" [];
	"transformers.models.gptj.modeling_tf_gptj" -> "typing" [];
	"transformers.models.gptj.modeling_tf_gptj" -> "numpy" [];
	"transformers.models.gptj.modeling_tf_gptj" -> "tensorflow" [];
	"transformers.models.gptj.modeling_gptj" -> "warnings" [];
	"transformers.models.gptj.modeling_gptj" -> "typing" [];
	"transformers.models.gptj.modeling_gptj" -> "torch" [];
	"transformers.models.gptj.configuration_gptj" -> "collections" [];
	"transformers.models.gptj.configuration_gptj" -> "typing" [];
	"transformers.models.gptj.configuration_gptj" -> "transformers" [];
	"transformers.models.gptj.configuration_gptj" -> "torch" [];
	"transformers.models.gpt_neox_japanese" -> "typing" [];
	"transformers.models.gpt_neox_japanese" -> "sys" [];
	"transformers.models.gpt_neox_japanese.modeling_gpt_neox_japanese" -> "math" [];
	"transformers.models.gpt_neox_japanese.modeling_gpt_neox_japanese" -> "typing" [];
	"transformers.models.gpt_neox_japanese.modeling_gpt_neox_japanese" -> "torch" [];
	"transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" -> "collections" [];
	"transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" -> "json" [];
	"transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" -> "os" [];
	"transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" -> "re" [];
	"transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" -> "typing" [];
	"transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" -> "numpy" [];
	"transformers.models.gpt_neox" -> "typing" [];
	"transformers.models.gpt_neox" -> "sys" [];
	"transformers.models.gpt_neox.modeling_gpt_neox" -> "typing" [];
	"transformers.models.gpt_neox.modeling_gpt_neox" -> "torch" [];
	"transformers.models.gpt_neox.modeling_gpt_neox" -> "packaging" [];
	"transformers.models.gpt_neox.tokenization_gpt_neox_fast" -> "json" [];
	"transformers.models.gpt_neox.tokenization_gpt_neox_fast" -> "typing" [];
	"transformers.models.gpt_neox.tokenization_gpt_neox_fast" -> "tokenizers" [];
	"transformers.models.gpt_neo" -> "typing" [];
	"transformers.models.gpt_neo" -> "sys" [];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" -> "functools" [];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" -> "typing" [];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" -> "'flax.linen'" [];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" -> "jax" [];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" -> "'jax.numpy'" [];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" -> "'flax.core'" [];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" -> "'flax.traverse_util'" [];
	"transformers.models.gpt_neo.modeling_gpt_neo" -> "os" [];
	"transformers.models.gpt_neo.modeling_gpt_neo" -> "typing" [];
	"transformers.models.gpt_neo.modeling_gpt_neo" -> "torch" [];
	"transformers.models.gpt_neo.modeling_gpt_neo" -> "re" [];
	"transformers.models.gpt_neo.modeling_gpt_neo" -> "tensorflow" [];
	"transformers.models.gpt_neo.configuration_gpt_neo" -> "collections" [];
	"transformers.models.gpt_neo.configuration_gpt_neo" -> "typing" [];
	"transformers.models.gpt_neo.configuration_gpt_neo" -> "transformers" [];
	"transformers.models.gpt_neo.configuration_gpt_neo" -> "torch" [];
	"transformers.models.gpt_bigcode" -> "typing" [];
	"transformers.models.gpt_bigcode" -> "sys" [];
	"transformers.models.gpt_bigcode.modeling_gpt_bigcode" -> "math" [];
	"transformers.models.gpt_bigcode.modeling_gpt_bigcode" -> "typing" [];
	"transformers.models.gpt_bigcode.modeling_gpt_bigcode" -> "torch" [];
	"transformers.models.gpt2" -> "typing" [];
	"transformers.models.gpt2" -> "sys" [];
	"transformers.models.gpt2.modeling_flax_gpt2" -> "typing" [];
	"transformers.models.gpt2.modeling_flax_gpt2" -> "'flax.linen'" [];
	"transformers.models.gpt2.modeling_flax_gpt2" -> "jax" [];
	"transformers.models.gpt2.modeling_flax_gpt2" -> "'jax.numpy'" [];
	"transformers.models.gpt2.modeling_flax_gpt2" -> "'flax.core'" [];
	"transformers.models.gpt2.modeling_flax_gpt2" -> "'flax.traverse_util'" [];
	"transformers.models.gpt2.tokenization_gpt2_tf" -> "os" [];
	"transformers.models.gpt2.tokenization_gpt2_tf" -> "typing" [];
	"transformers.models.gpt2.tokenization_gpt2_tf" -> "tensorflow" [];
	"transformers.models.gpt2.tokenization_gpt2_tf" -> "keras_nlp" [];
	"transformers.models.gpt2.tokenization_gpt2_tf" -> "tensorflow_text" [];
	"transformers.models.gpt2.modeling_tf_gpt2" -> "__future__" [];
	"transformers.models.gpt2.modeling_tf_gpt2" -> "dataclasses" [];
	"transformers.models.gpt2.modeling_tf_gpt2" -> "typing" [];
	"transformers.models.gpt2.modeling_tf_gpt2" -> "numpy" [];
	"transformers.models.gpt2.modeling_tf_gpt2" -> "tensorflow" [];
	"transformers.models.gpt2.modeling_gpt2" -> "math" [];
	"transformers.models.gpt2.modeling_gpt2" -> "os" [];
	"transformers.models.gpt2.modeling_gpt2" -> "warnings" [];
	"transformers.models.gpt2.modeling_gpt2" -> "dataclasses" [];
	"transformers.models.gpt2.modeling_gpt2" -> "typing" [];
	"transformers.models.gpt2.modeling_gpt2" -> "torch" [];
	"transformers.models.gpt2.modeling_gpt2" -> "packaging" [];
	"transformers.models.gpt2.modeling_gpt2" -> "re" [];
	"transformers.models.gpt2.modeling_gpt2" -> "tensorflow" [];
	"transformers.models.gpt2.tokenization_gpt2_fast" -> "json" [];
	"transformers.models.gpt2.tokenization_gpt2_fast" -> "typing" [];
	"transformers.models.gpt2.tokenization_gpt2_fast" -> "tokenizers" [];
	"transformers.models.gpt2.tokenization_gpt2" -> "json" [];
	"transformers.models.gpt2.tokenization_gpt2" -> "os" [];
	"transformers.models.gpt2.tokenization_gpt2" -> "functools" [];
	"transformers.models.gpt2.tokenization_gpt2" -> "typing" [];
	"transformers.models.gpt2.tokenization_gpt2" -> "regex" [];
	"transformers.models.gpt2.configuration_gpt2" -> "collections" [];
	"transformers.models.gpt2.configuration_gpt2" -> "typing" [];
	"transformers.models.gpt2.configuration_gpt2" -> "transformers" [];
	"transformers.models.gpt2.configuration_gpt2" -> "torch" [];
	"transformers.models.glpn" -> "typing" [];
	"transformers.models.glpn" -> "sys" [];
	"transformers.models.glpn.modeling_glpn" -> "math" [];
	"transformers.models.glpn.modeling_glpn" -> "typing" [];
	"transformers.models.glpn.modeling_glpn" -> "torch" [];
	"transformers.models.glpn.image_processing_glpn" -> "typing" [];
	"transformers.models.glpn.image_processing_glpn" -> "numpy" [];
	"transformers.models.glpn.image_processing_glpn" -> "'PIL.Image'" [];
	"transformers.models.glpn.feature_extraction_glpn" -> "warnings" [];
	"transformers.models.glm" -> "typing" [];
	"transformers.models.glm" -> "sys" [];
	"transformers.models.glm.modeling_glm" -> "math" [];
	"transformers.models.glm.modeling_glm" -> "typing" [];
	"transformers.models.glm.modeling_glm" -> "torch" [];
	"transformers.models.git" -> "typing" [];
	"transformers.models.git" -> "sys" [];
	"transformers.models.git.modeling_git" -> "math" [];
	"transformers.models.git.modeling_git" -> "dataclasses" [];
	"transformers.models.git.modeling_git" -> "typing" [];
	"transformers.models.git.modeling_git" -> "torch" [];
	"transformers.models.git.processing_git" -> "typing" [];
	"transformers.models.git.configuration_git" -> "os" [];
	"transformers.models.git.configuration_git" -> "typing" [];
	"transformers.models.gemma2" -> "typing" [];
	"transformers.models.gemma2" -> "sys" [];
	"transformers.models.gemma2.modeling_gemma2" -> "typing" [];
	"transformers.models.gemma2.modeling_gemma2" -> "torch" [];
	"transformers.models.gemma" -> "typing" [];
	"transformers.models.gemma" -> "sys" [];
	"transformers.models.gemma.modeling_flax_gemma" -> "typing" [];
	"transformers.models.gemma.modeling_flax_gemma" -> "'flax.linen'" [];
	"transformers.models.gemma.modeling_flax_gemma" -> "jax" [];
	"transformers.models.gemma.modeling_flax_gemma" -> "'jax.numpy'" [];
	"transformers.models.gemma.modeling_flax_gemma" -> "numpy" [];
	"transformers.models.gemma.modeling_flax_gemma" -> "'flax.core'" [];
	"transformers.models.gemma.modeling_flax_gemma" -> "'flax.traverse_util'" [];
	"transformers.models.gemma.modeling_gemma" -> "math" [];
	"transformers.models.gemma.modeling_gemma" -> "typing" [];
	"transformers.models.gemma.modeling_gemma" -> "torch" [];
	"transformers.models.gemma.tokenization_gemma_fast" -> "os" [];
	"transformers.models.gemma.tokenization_gemma_fast" -> "shutil" [];
	"transformers.models.gemma.tokenization_gemma_fast" -> "typing" [];
	"transformers.models.gemma.tokenization_gemma_fast" -> "tokenizers" [];
	"transformers.models.gemma.tokenization_gemma" -> "os" [];
	"transformers.models.gemma.tokenization_gemma" -> "shutil" [];
	"transformers.models.gemma.tokenization_gemma" -> "typing" [];
	"transformers.models.gemma.tokenization_gemma" -> "sentencepiece" [];
	"transformers.models.fuyu" -> "typing" [];
	"transformers.models.fuyu" -> "sys" [];
	"transformers.models.fuyu.modeling_fuyu" -> "typing" [];
	"transformers.models.fuyu.modeling_fuyu" -> "torch" [];
	"transformers.models.fuyu.processing_fuyu" -> "re" [];
	"transformers.models.fuyu.processing_fuyu" -> "typing" [];
	"transformers.models.fuyu.processing_fuyu" -> "numpy" [];
	"transformers.models.fuyu.processing_fuyu" -> "torch" [];
	"transformers.models.fuyu.image_processing_fuyu" -> "math" [];
	"transformers.models.fuyu.image_processing_fuyu" -> "typing" [];
	"transformers.models.fuyu.image_processing_fuyu" -> "numpy" [];
	"transformers.models.fuyu.image_processing_fuyu" -> "torch" [];
	"transformers.models.funnel" -> "typing" [];
	"transformers.models.funnel" -> "sys" [];
	"transformers.models.funnel.modeling_tf_funnel" -> "__future__" [];
	"transformers.models.funnel.modeling_tf_funnel" -> "warnings" [];
	"transformers.models.funnel.modeling_tf_funnel" -> "dataclasses" [];
	"transformers.models.funnel.modeling_tf_funnel" -> "typing" [];
	"transformers.models.funnel.modeling_tf_funnel" -> "numpy" [];
	"transformers.models.funnel.modeling_tf_funnel" -> "tensorflow" [];
	"transformers.models.funnel.modeling_funnel" -> "os" [];
	"transformers.models.funnel.modeling_funnel" -> "dataclasses" [];
	"transformers.models.funnel.modeling_funnel" -> "typing" [];
	"transformers.models.funnel.modeling_funnel" -> "numpy" [];
	"transformers.models.funnel.modeling_funnel" -> "torch" [];
	"transformers.models.funnel.modeling_funnel" -> "re" [];
	"transformers.models.funnel.modeling_funnel" -> "tensorflow" [];
	"transformers.models.funnel.tokenization_funnel_fast" -> "json" [];
	"transformers.models.funnel.tokenization_funnel_fast" -> "typing" [];
	"transformers.models.funnel.tokenization_funnel_fast" -> "tokenizers" [];
	"transformers.models.funnel.tokenization_funnel" -> "collections" [];
	"transformers.models.funnel.tokenization_funnel" -> "os" [];
	"transformers.models.funnel.tokenization_funnel" -> "unicodedata" [];
	"transformers.models.funnel.tokenization_funnel" -> "typing" [];
	"transformers.models.fsmt" -> "typing" [];
	"transformers.models.fsmt" -> "sys" [];
	"transformers.models.fsmt.modeling_fsmt" -> "math" [];
	"transformers.models.fsmt.modeling_fsmt" -> "typing" [];
	"transformers.models.fsmt.modeling_fsmt" -> "torch" [];
	"transformers.models.fsmt.modeling_fsmt" -> "deepspeed" [];
	"transformers.models.fsmt.tokenization_fsmt" -> "json" [];
	"transformers.models.fsmt.tokenization_fsmt" -> "os" [];
	"transformers.models.fsmt.tokenization_fsmt" -> "re" [];
	"transformers.models.fsmt.tokenization_fsmt" -> "unicodedata" [];
	"transformers.models.fsmt.tokenization_fsmt" -> "typing" [];
	"transformers.models.fsmt.tokenization_fsmt" -> "sacremoses" [];
	"transformers.models.focalnet" -> "typing" [];
	"transformers.models.focalnet" -> "sys" [];
	"transformers.models.focalnet.modeling_focalnet" -> "math" [];
	"transformers.models.focalnet.modeling_focalnet" -> "dataclasses" [];
	"transformers.models.focalnet.modeling_focalnet" -> "typing" [];
	"transformers.models.focalnet.modeling_focalnet" -> "torch" [];
	"transformers.models.fnet" -> "typing" [];
	"transformers.models.fnet" -> "sys" [];
	"transformers.models.fnet.modeling_fnet" -> "warnings" [];
	"transformers.models.fnet.modeling_fnet" -> "dataclasses" [];
	"transformers.models.fnet.modeling_fnet" -> "functools" [];
	"transformers.models.fnet.modeling_fnet" -> "typing" [];
	"transformers.models.fnet.modeling_fnet" -> "torch" [];
	"transformers.models.fnet.modeling_fnet" -> "scipy" [];
	"transformers.models.fnet.tokenization_fnet_fast" -> "os" [];
	"transformers.models.fnet.tokenization_fnet_fast" -> "shutil" [];
	"transformers.models.fnet.tokenization_fnet_fast" -> "typing" [];
	"transformers.models.fnet.tokenization_fnet" -> "os" [];
	"transformers.models.fnet.tokenization_fnet" -> "unicodedata" [];
	"transformers.models.fnet.tokenization_fnet" -> "shutil" [];
	"transformers.models.fnet.tokenization_fnet" -> "typing" [];
	"transformers.models.fnet.tokenization_fnet" -> "sentencepiece" [];
	"transformers.models.flava" -> "typing" [];
	"transformers.models.flava" -> "sys" [];
	"transformers.models.flava.modeling_flava" -> "collections" [];
	"transformers.models.flava.modeling_flava" -> "math" [];
	"transformers.models.flava.modeling_flava" -> "dataclasses" [];
	"transformers.models.flava.modeling_flava" -> "typing" [];
	"transformers.models.flava.modeling_flava" -> "torch" [];
	"transformers.models.flava.processing_flava" -> "warnings" [];
	"transformers.models.flava.processing_flava" -> "typing" [];
	"transformers.models.flava.image_processing_flava" -> "math" [];
	"transformers.models.flava.image_processing_flava" -> "random" [];
	"transformers.models.flava.image_processing_flava" -> "functools" [];
	"transformers.models.flava.image_processing_flava" -> "typing" [];
	"transformers.models.flava.image_processing_flava" -> "numpy" [];
	"transformers.models.flava.image_processing_flava" -> "PIL" [];
	"transformers.models.flava.feature_extraction_flava" -> "warnings" [];
	"transformers.models.flava.configuration_flava" -> "os" [];
	"transformers.models.flava.configuration_flava" -> "typing" [];
	"transformers.models.flaubert" -> "typing" [];
	"transformers.models.flaubert" -> "sys" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "__future__" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "itertools" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "random" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "warnings" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "dataclasses" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "typing" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "numpy" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "tensorflow" [];
	"transformers.models.flaubert.modeling_flaubert" -> "itertools" [];
	"transformers.models.flaubert.modeling_flaubert" -> "math" [];
	"transformers.models.flaubert.modeling_flaubert" -> "dataclasses" [];
	"transformers.models.flaubert.modeling_flaubert" -> "typing" [];
	"transformers.models.flaubert.modeling_flaubert" -> "numpy" [];
	"transformers.models.flaubert.modeling_flaubert" -> "torch" [];
	"transformers.models.flaubert.tokenization_flaubert" -> "json" [];
	"transformers.models.flaubert.tokenization_flaubert" -> "os" [];
	"transformers.models.flaubert.tokenization_flaubert" -> "re" [];
	"transformers.models.flaubert.tokenization_flaubert" -> "unicodedata" [];
	"transformers.models.flaubert.tokenization_flaubert" -> "typing" [];
	"transformers.models.flaubert.tokenization_flaubert" -> "sacremoses" [];
	"transformers.models.flaubert.tokenization_flaubert" -> "Mykytea" [];
	"transformers.models.flaubert.configuration_flaubert" -> "collections" [];
	"transformers.models.flaubert.configuration_flaubert" -> "typing" [];
	"transformers.models.fastspeech2_conformer" -> "typing" [];
	"transformers.models.fastspeech2_conformer" -> "sys" [];
	"transformers.models.fastspeech2_conformer.modeling_fastspeech2_conformer" -> "math" [];
	"transformers.models.fastspeech2_conformer.modeling_fastspeech2_conformer" -> "dataclasses" [];
	"transformers.models.fastspeech2_conformer.modeling_fastspeech2_conformer" -> "typing" [];
	"transformers.models.fastspeech2_conformer.modeling_fastspeech2_conformer" -> "torch" [];
	"transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer" -> "json" [];
	"transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer" -> "os" [];
	"transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer" -> "typing" [];
	"transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer" -> "regex" [];
	"transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer" -> "g2p_en" [];
	"transformers.models.fastspeech2_conformer.configuration_fastspeech2_conformer" -> "typing" [];
	"transformers.models.falcon_mamba" -> "typing" [];
	"transformers.models.falcon_mamba" -> "sys" [];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" -> "math" [];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" -> "dataclasses" [];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" -> "typing" [];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" -> "torch" [];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" -> "mambapy" [];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" -> "'mamba_ssm.ops'" [];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" -> "causal_conv1d" [];
	"transformers.kernels.falcon_mamba.selective_scan_with_ln_interface" -> "torch" [];
	"transformers.kernels.falcon_mamba.selective_scan_with_ln_interface" -> "einops" [];
	"transformers.kernels.falcon_mamba.selective_scan_with_ln_interface" -> "causal_conv1d_cuda" [];
	"transformers.kernels.falcon_mamba.selective_scan_with_ln_interface" -> "mamba_ssm" [];
	"transformers.kernels.falcon_mamba.selective_scan_with_ln_interface" -> "selective_scan_cuda" [];
	"transformers.kernels.falcon_mamba.selective_scan_with_ln_interface" -> "'mamba_ssm.ops'" [];
	"transformers.models.falcon_mamba.configuration_falcon_mamba" -> "math" [];
	"transformers.models.falcon" -> "typing" [];
	"transformers.models.falcon" -> "sys" [];
	"transformers.models.falcon.modeling_falcon" -> "math" [];
	"transformers.models.falcon.modeling_falcon" -> "typing" [];
	"transformers.models.falcon.modeling_falcon" -> "torch" [];
	"transformers.models.esm" -> "typing" [];
	"transformers.models.esm" -> "sys" [];
	"transformers.models.esm.modeling_tf_esm" -> "__future__" [];
	"transformers.models.esm.modeling_tf_esm" -> "os" [];
	"transformers.models.esm.modeling_tf_esm" -> "typing" [];
	"transformers.models.esm.modeling_tf_esm" -> "numpy" [];
	"transformers.models.esm.modeling_tf_esm" -> "tensorflow" [];
	"transformers.models.esm.modeling_esmfold" -> "math" [];
	"transformers.models.esm.modeling_esmfold" -> "sys" [];
	"transformers.models.esm.modeling_esmfold" -> "dataclasses" [];
	"transformers.models.esm.modeling_esmfold" -> "functools" [];
	"transformers.models.esm.modeling_esmfold" -> "typing" [];
	"transformers.models.esm.modeling_esmfold" -> "numpy" [];
	"transformers.models.esm.modeling_esmfold" -> "torch" [];
	"transformers.models.esm.modeling_esmfold" -> "deepspeed" [];
	"transformers.models.esm.modeling_esmfold" -> "'scipy.stats'" [];
	"transformers.models.esm.openfold_utils.residue_constants" -> "collections" [];
	"transformers.models.esm.openfold_utils.residue_constants" -> "copy" [];
	"transformers.models.esm.openfold_utils.residue_constants" -> "functools" [];
	"transformers.models.esm.openfold_utils.residue_constants" -> "importlib" [];
	"transformers.models.esm.openfold_utils.residue_constants" -> "typing" [];
	"transformers.models.esm.openfold_utils.residue_constants" -> "numpy" [];
	"transformers.models.esm.openfold_utils.tensor_utils" -> "functools" [];
	"transformers.models.esm.openfold_utils.tensor_utils" -> "typing" [];
	"transformers.models.esm.openfold_utils.tensor_utils" -> "torch" [];
	"transformers.models.esm.openfold_utils.rigid_utils" -> "__future__" [];
	"transformers.models.esm.openfold_utils.rigid_utils" -> "functools" [];
	"transformers.models.esm.openfold_utils.rigid_utils" -> "typing" [];
	"transformers.models.esm.openfold_utils.rigid_utils" -> "numpy" [];
	"transformers.models.esm.openfold_utils.rigid_utils" -> "torch" [];
	"transformers.models.esm.openfold_utils.protein" -> "dataclasses" [];
	"transformers.models.esm.openfold_utils.protein" -> "re" [];
	"transformers.models.esm.openfold_utils.protein" -> "string" [];
	"transformers.models.esm.openfold_utils.protein" -> "typing" [];
	"transformers.models.esm.openfold_utils.protein" -> "numpy" [];
	"transformers.models.esm.openfold_utils.loss" -> "typing" [];
	"transformers.models.esm.openfold_utils.loss" -> "torch" [];
	"transformers.models.esm.openfold_utils.feats" -> "typing" [];
	"transformers.models.esm.openfold_utils.feats" -> "torch" [];
	"transformers.models.esm.openfold_utils.data_transforms" -> "typing" [];
	"transformers.models.esm.openfold_utils.data_transforms" -> "numpy" [];
	"transformers.models.esm.openfold_utils.data_transforms" -> "torch" [];
	"transformers.models.esm.openfold_utils.chunk_utils" -> "logging" [];
	"transformers.models.esm.openfold_utils.chunk_utils" -> "math" [];
	"transformers.models.esm.openfold_utils.chunk_utils" -> "functools" [];
	"transformers.models.esm.openfold_utils.chunk_utils" -> "typing" [];
	"transformers.models.esm.openfold_utils.chunk_utils" -> "torch" [];
	"transformers.models.esm.modeling_esm" -> "math" [];
	"transformers.models.esm.modeling_esm" -> "typing" [];
	"transformers.models.esm.modeling_esm" -> "torch" [];
	"transformers.models.esm.tokenization_esm" -> "os" [];
	"transformers.models.esm.tokenization_esm" -> "typing" [];
	"transformers.models.esm.configuration_esm" -> "dataclasses" [];
	"transformers.models.esm.configuration_esm" -> "typing" [];
	"transformers.models.ernie" -> "typing" [];
	"transformers.models.ernie" -> "sys" [];
	"transformers.models.ernie.modeling_ernie" -> "math" [];
	"transformers.models.ernie.modeling_ernie" -> "warnings" [];
	"transformers.models.ernie.modeling_ernie" -> "dataclasses" [];
	"transformers.models.ernie.modeling_ernie" -> "typing" [];
	"transformers.models.ernie.modeling_ernie" -> "torch" [];
	"transformers.models.ernie.configuration_ernie" -> "collections" [];
	"transformers.models.ernie.configuration_ernie" -> "typing" [];
	"transformers.models.encoder_decoder" -> "typing" [];
	"transformers.models.encoder_decoder" -> "sys" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "os" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "typing" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "flax" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "jax" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "'jax.numpy'" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "'flax.core'" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "'flax.traverse_util'" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "'jax.random'" [];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" -> "__future__" [];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" -> "inspect" [];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" -> "re" [];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" -> "warnings" [];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" -> "typing" [];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" -> "numpy" [];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" -> "tensorflow" [];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" -> "gc" [];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" -> "inspect" [];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" -> "os" [];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" -> "tempfile" [];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" -> "warnings" [];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" -> "typing" [];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" -> "torch" [];
	"transformers.models.encoder_decoder.modeling_encoder_decoder" -> "transformers" [];
	"transformers.models.encodec" -> "typing" [];
	"transformers.models.encodec" -> "sys" [];
	"transformers.models.encodec.modeling_encodec" -> "math" [];
	"transformers.models.encodec.modeling_encodec" -> "dataclasses" [];
	"transformers.models.encodec.modeling_encodec" -> "typing" [];
	"transformers.models.encodec.modeling_encodec" -> "torch" [];
	"transformers.models.encodec.feature_extraction_encodec" -> "typing" [];
	"transformers.models.encodec.feature_extraction_encodec" -> "numpy" [];
	"transformers.models.encodec.configuration_encodec" -> "math" [];
	"transformers.models.encodec.configuration_encodec" -> "typing" [];
	"transformers.models.encodec.configuration_encodec" -> "numpy" [];
	"transformers.models.electra" -> "typing" [];
	"transformers.models.electra" -> "sys" [];
	"transformers.models.electra.modeling_flax_electra" -> "typing" [];
	"transformers.models.electra.modeling_flax_electra" -> "flax" [];
	"transformers.models.electra.modeling_flax_electra" -> "'flax.linen'" [];
	"transformers.models.electra.modeling_flax_electra" -> "jax" [];
	"transformers.models.electra.modeling_flax_electra" -> "'jax.numpy'" [];
	"transformers.models.electra.modeling_flax_electra" -> "numpy" [];
	"transformers.models.electra.modeling_flax_electra" -> "'flax.core'" [];
	"transformers.models.electra.modeling_flax_electra" -> "'flax.traverse_util'" [];
	"transformers.models.electra.modeling_tf_electra" -> "__future__" [];
	"transformers.models.electra.modeling_tf_electra" -> "math" [];
	"transformers.models.electra.modeling_tf_electra" -> "warnings" [];
	"transformers.models.electra.modeling_tf_electra" -> "dataclasses" [];
	"transformers.models.electra.modeling_tf_electra" -> "typing" [];
	"transformers.models.electra.modeling_tf_electra" -> "numpy" [];
	"transformers.models.electra.modeling_tf_electra" -> "tensorflow" [];
	"transformers.models.electra.modeling_electra" -> "math" [];
	"transformers.models.electra.modeling_electra" -> "os" [];
	"transformers.models.electra.modeling_electra" -> "dataclasses" [];
	"transformers.models.electra.modeling_electra" -> "typing" [];
	"transformers.models.electra.modeling_electra" -> "torch" [];
	"transformers.models.electra.modeling_electra" -> "re" [];
	"transformers.models.electra.modeling_electra" -> "numpy" [];
	"transformers.models.electra.modeling_electra" -> "tensorflow" [];
	"transformers.models.electra.tokenization_electra_fast" -> "json" [];
	"transformers.models.electra.tokenization_electra_fast" -> "typing" [];
	"transformers.models.electra.tokenization_electra_fast" -> "tokenizers" [];
	"transformers.models.electra.tokenization_electra" -> "collections" [];
	"transformers.models.electra.tokenization_electra" -> "os" [];
	"transformers.models.electra.tokenization_electra" -> "unicodedata" [];
	"transformers.models.electra.tokenization_electra" -> "typing" [];
	"transformers.models.electra.configuration_electra" -> "collections" [];
	"transformers.models.electra.configuration_electra" -> "typing" [];
	"transformers.models.efficientnet" -> "typing" [];
	"transformers.models.efficientnet" -> "sys" [];
	"transformers.models.efficientnet.modeling_efficientnet" -> "math" [];
	"transformers.models.efficientnet.modeling_efficientnet" -> "typing" [];
	"transformers.models.efficientnet.modeling_efficientnet" -> "torch" [];
	"transformers.models.efficientnet.image_processing_efficientnet" -> "typing" [];
	"transformers.models.efficientnet.image_processing_efficientnet" -> "numpy" [];
	"transformers.models.efficientnet.image_processing_efficientnet" -> "PIL" [];
	"transformers.models.efficientnet.configuration_efficientnet" -> "collections" [];
	"transformers.models.efficientnet.configuration_efficientnet" -> "typing" [];
	"transformers.models.efficientnet.configuration_efficientnet" -> "packaging" [];
	"transformers.models.dpt" -> "typing" [];
	"transformers.models.dpt" -> "sys" [];
	"transformers.models.dpt.modeling_dpt" -> "math" [];
	"transformers.models.dpt.modeling_dpt" -> "dataclasses" [];
	"transformers.models.dpt.modeling_dpt" -> "typing" [];
	"transformers.models.dpt.modeling_dpt" -> "torch" [];
	"transformers.models.dpt.image_processing_dpt" -> "math" [];
	"transformers.models.dpt.image_processing_dpt" -> "typing" [];
	"transformers.models.dpt.image_processing_dpt" -> "numpy" [];
	"transformers.models.dpt.image_processing_dpt" -> "torch" [];
	"transformers.models.dpt.image_processing_dpt" -> "PIL" [];
	"transformers.models.dpt.feature_extraction_dpt" -> "warnings" [];
	"transformers.models.dpt.configuration_dpt" -> "copy" [];
	"transformers.models.dpr" -> "typing" [];
	"transformers.models.dpr" -> "sys" [];
	"transformers.models.dpr.modeling_tf_dpr" -> "__future__" [];
	"transformers.models.dpr.modeling_tf_dpr" -> "dataclasses" [];
	"transformers.models.dpr.modeling_tf_dpr" -> "typing" [];
	"transformers.models.dpr.modeling_tf_dpr" -> "tensorflow" [];
	"transformers.models.bert.modeling_tf_bert" -> "__future__" [];
	"transformers.models.bert.modeling_tf_bert" -> "math" [];
	"transformers.models.bert.modeling_tf_bert" -> "warnings" [];
	"transformers.models.bert.modeling_tf_bert" -> "dataclasses" [];
	"transformers.models.bert.modeling_tf_bert" -> "typing" [];
	"transformers.models.bert.modeling_tf_bert" -> "numpy" [];
	"transformers.models.bert.modeling_tf_bert" -> "tensorflow" [];
	"transformers.models.bert.configuration_bert" -> "collections" [];
	"transformers.models.bert.configuration_bert" -> "typing" [];
	"transformers.models.dpr.modeling_dpr" -> "dataclasses" [];
	"transformers.models.dpr.modeling_dpr" -> "typing" [];
	"transformers.models.dpr.modeling_dpr" -> "torch" [];
	"transformers.models.bert.modeling_bert" -> "math" [];
	"transformers.models.bert.modeling_bert" -> "os" [];
	"transformers.models.bert.modeling_bert" -> "warnings" [];
	"transformers.models.bert.modeling_bert" -> "dataclasses" [];
	"transformers.models.bert.modeling_bert" -> "typing" [];
	"transformers.models.bert.modeling_bert" -> "torch" [];
	"transformers.models.bert.modeling_bert" -> "packaging" [];
	"transformers.models.bert.modeling_bert" -> "re" [];
	"transformers.models.bert.modeling_bert" -> "numpy" [];
	"transformers.models.bert.modeling_bert" -> "tensorflow" [];
	"transformers.models.dpr.tokenization_dpr_fast" -> "collections" [];
	"transformers.models.dpr.tokenization_dpr_fast" -> "typing" [];
	"transformers.models.bert.tokenization_bert_fast" -> "json" [];
	"transformers.models.bert.tokenization_bert_fast" -> "typing" [];
	"transformers.models.bert.tokenization_bert_fast" -> "tokenizers" [];
	"transformers.models.dpr.tokenization_dpr" -> "collections" [];
	"transformers.models.dpr.tokenization_dpr" -> "typing" [];
	"transformers.models.donut" -> "typing" [];
	"transformers.models.donut" -> "sys" [];
	"transformers.models.donut.image_processing_donut" -> "typing" [];
	"transformers.models.donut.image_processing_donut" -> "numpy" [];
	"transformers.models.donut.image_processing_donut" -> "PIL" [];
	"transformers.models.donut.feature_extraction_donut" -> "warnings" [];
	"transformers.models.donut.modeling_donut_swin" -> "math" [];
	"transformers.models.donut.modeling_donut_swin" -> "dataclasses" [];
	"transformers.models.donut.modeling_donut_swin" -> "typing" [];
	"transformers.models.donut.modeling_donut_swin" -> "torch" [];
	"transformers.models.donut.processing_donut" -> "re" [];
	"transformers.models.donut.processing_donut" -> "warnings" [];
	"transformers.models.donut.processing_donut" -> "contextlib" [];
	"transformers.models.donut.processing_donut" -> "typing" [];
	"transformers.models.distilbert" -> "typing" [];
	"transformers.models.distilbert" -> "sys" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "math" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "typing" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "'flax.linen'" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "jax" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "'jax.numpy'" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "numpy" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "'flax.core'" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "'flax.traverse_util'" [];
	"transformers.models.distilbert.modeling_tf_distilbert" -> "__future__" [];
	"transformers.models.distilbert.modeling_tf_distilbert" -> "warnings" [];
	"transformers.models.distilbert.modeling_tf_distilbert" -> "typing" [];
	"transformers.models.distilbert.modeling_tf_distilbert" -> "numpy" [];
	"transformers.models.distilbert.modeling_tf_distilbert" -> "tensorflow" [];
	"transformers.models.distilbert.modeling_distilbert" -> "math" [];
	"transformers.models.distilbert.modeling_distilbert" -> "typing" [];
	"transformers.models.distilbert.modeling_distilbert" -> "numpy" [];
	"transformers.models.distilbert.modeling_distilbert" -> "torch" [];
	"transformers.models.distilbert.modeling_distilbert" -> "deepspeed" [];
	"transformers.models.distilbert.tokenization_distilbert_fast" -> "json" [];
	"transformers.models.distilbert.tokenization_distilbert_fast" -> "typing" [];
	"transformers.models.distilbert.tokenization_distilbert_fast" -> "tokenizers" [];
	"transformers.models.distilbert.tokenization_distilbert" -> "collections" [];
	"transformers.models.distilbert.tokenization_distilbert" -> "os" [];
	"transformers.models.distilbert.tokenization_distilbert" -> "unicodedata" [];
	"transformers.models.distilbert.tokenization_distilbert" -> "typing" [];
	"transformers.models.distilbert.configuration_distilbert" -> "collections" [];
	"transformers.models.distilbert.configuration_distilbert" -> "typing" [];
	"transformers.models.dinov2" -> "typing" [];
	"transformers.models.dinov2" -> "sys" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "math" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "typing" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "'flax.linen'" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "jax" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "'jax.numpy'" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "'flax.core'" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "'flax.traverse_util'" [];
	"transformers.models.dinov2.modeling_dinov2" -> "math" [];
	"transformers.models.dinov2.modeling_dinov2" -> "typing" [];
	"transformers.models.dinov2.modeling_dinov2" -> "torch" [];
	"transformers.models.dinov2.configuration_dinov2" -> "collections" [];
	"transformers.models.dinov2.configuration_dinov2" -> "typing" [];
	"transformers.models.dinov2.configuration_dinov2" -> "packaging" [];
	"transformers.models.dinat" -> "typing" [];
	"transformers.models.dinat" -> "sys" [];
	"transformers.models.dinat.modeling_dinat" -> "math" [];
	"transformers.models.dinat.modeling_dinat" -> "dataclasses" [];
	"transformers.models.dinat.modeling_dinat" -> "typing" [];
	"transformers.models.dinat.modeling_dinat" -> "torch" [];
	"transformers.models.dinat.modeling_dinat" -> "natten" [];
	"transformers.models.detr" -> "typing" [];
	"transformers.models.detr" -> "sys" [];
	"transformers.models.detr.modeling_detr" -> "math" [];
	"transformers.models.detr.modeling_detr" -> "dataclasses" [];
	"transformers.models.detr.modeling_detr" -> "typing" [];
	"transformers.models.detr.modeling_detr" -> "torch" [];
	"transformers.models.detr.modeling_detr" -> "timm" [];
	"transformers.models.detr.image_processing_detr_fast" -> "functools" [];
	"transformers.models.detr.image_processing_detr_fast" -> "io" [];
	"transformers.models.detr.image_processing_detr_fast" -> "pathlib" [];
	"transformers.models.detr.image_processing_detr_fast" -> "collections" [];
	"transformers.models.detr.image_processing_detr_fast" -> "typing" [];
	"transformers.models.detr.image_processing_detr_fast" -> "torch" [];
	"transformers.models.detr.image_processing_detr_fast" -> "PIL" [];
	"transformers.models.detr.image_processing_detr_fast" -> "'torchvision.io'" [];
	"transformers.models.detr.image_processing_detr_fast" -> "'torchvision.transforms'" [];
	"transformers.models.detr.image_processing_detr_fast" -> "pycocotools" [];
	"transformers.models.detr.image_processing_detr" -> "io" [];
	"transformers.models.detr.image_processing_detr" -> "pathlib" [];
	"transformers.models.detr.image_processing_detr" -> "collections" [];
	"transformers.models.detr.image_processing_detr" -> "typing" [];
	"transformers.models.detr.image_processing_detr" -> "numpy" [];
	"transformers.models.detr.image_processing_detr" -> "torch" [];
	"transformers.models.detr.image_processing_detr" -> "PIL" [];
	"transformers.models.detr.image_processing_detr" -> "'scipy.special'" [];
	"transformers.models.detr.image_processing_detr" -> "'scipy.stats'" [];
	"transformers.models.detr.image_processing_detr" -> "tensorflow" [];
	"transformers.models.detr.image_processing_detr" -> "'jax.numpy'" [];
	"transformers.models.detr.image_processing_detr" -> "pycocotools" [];
	"transformers.models.detr.feature_extraction_detr" -> "warnings" [];
	"transformers.models.detr.configuration_detr" -> "collections" [];
	"transformers.models.detr.configuration_detr" -> "typing" [];
	"transformers.models.detr.configuration_detr" -> "packaging" [];
	"transformers.models.depth_anything" -> "typing" [];
	"transformers.models.depth_anything" -> "sys" [];
	"transformers.models.depth_anything.modeling_depth_anything" -> "typing" [];
	"transformers.models.depth_anything.modeling_depth_anything" -> "torch" [];
	"transformers.models.depth_anything.configuration_depth_anything" -> "copy" [];
	"transformers.models.deprecated.xlm_prophetnet" -> "typing" [];
	"transformers.models.deprecated.xlm_prophetnet" -> "sys" [];
	"transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" -> "copy" [];
	"transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" -> "math" [];
	"transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" -> "warnings" [];
	"transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" -> "dataclasses" [];
	"transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" -> "typing" [];
	"transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" -> "torch" [];
	"transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet" -> "collections" [];
	"transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet" -> "os" [];
	"transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet" -> "shutil" [];
	"transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet" -> "typing" [];
	"transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet" -> "sentencepiece" [];
	"transformers.models.deprecated.xlm_prophetnet.configuration_xlm_prophetnet" -> "typing" [];
	"transformers.models.deprecated.vit_hybrid" -> "typing" [];
	"transformers.models.deprecated.vit_hybrid" -> "sys" [];
	"transformers.models.deprecated.vit_hybrid.image_processing_vit_hybrid" -> "typing" [];
	"transformers.models.deprecated.vit_hybrid.image_processing_vit_hybrid" -> "numpy" [];
	"transformers.models.deprecated.vit_hybrid.image_processing_vit_hybrid" -> "PIL" [];
	"transformers.models.deprecated.vit_hybrid.modeling_vit_hybrid" -> "math" [];
	"transformers.models.deprecated.vit_hybrid.modeling_vit_hybrid" -> "typing" [];
	"transformers.models.deprecated.vit_hybrid.modeling_vit_hybrid" -> "torch" [];
	"transformers.models.deprecated.van" -> "typing" [];
	"transformers.models.deprecated.van" -> "sys" [];
	"transformers.models.deprecated.van.modeling_van" -> "math" [];
	"transformers.models.deprecated.van.modeling_van" -> "collections" [];
	"transformers.models.deprecated.van.modeling_van" -> "typing" [];
	"transformers.models.deprecated.van.modeling_van" -> "torch" [];
	"transformers.models.deprecated.tvlt" -> "typing" [];
	"transformers.models.deprecated.tvlt" -> "sys" [];
	"transformers.models.deprecated.tvlt.image_processing_tvlt" -> "typing" [];
	"transformers.models.deprecated.tvlt.image_processing_tvlt" -> "numpy" [];
	"transformers.models.deprecated.tvlt.modeling_tvlt" -> "math" [];
	"transformers.models.deprecated.tvlt.modeling_tvlt" -> "copy" [];
	"transformers.models.deprecated.tvlt.modeling_tvlt" -> "dataclasses" [];
	"transformers.models.deprecated.tvlt.modeling_tvlt" -> "typing" [];
	"transformers.models.deprecated.tvlt.modeling_tvlt" -> "torch" [];
	"transformers.models.deprecated.tvlt.feature_extraction_tvlt" -> "math" [];
	"transformers.models.deprecated.tvlt.feature_extraction_tvlt" -> "typing" [];
	"transformers.models.deprecated.tvlt.feature_extraction_tvlt" -> "numpy" [];
	"transformers.models.deprecated.transfo_xl" -> "typing" [];
	"transformers.models.deprecated.transfo_xl" -> "sys" [];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl" -> "__future__" [];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl" -> "dataclasses" [];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl" -> "typing" [];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl" -> "numpy" [];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl" -> "tensorflow" [];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl_utilities" -> "tensorflow" [];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl" -> "warnings" [];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl" -> "dataclasses" [];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl" -> "typing" [];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl" -> "torch" [];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl" -> "numpy" [];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl" -> "tensorflow" [];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl_utilities" -> "torch" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "glob" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "os" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "pickle" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "re" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "collections" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "typing" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "numpy" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "sacremoses" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "torch" [];
	"transformers.models.deprecated.trajectory_transformer" -> "typing" [];
	"transformers.models.deprecated.trajectory_transformer" -> "sys" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "math" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "os" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "dataclasses" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "typing" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "numpy" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "torch" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "re" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "tensorflow" [];
	"transformers.models.deprecated.tapex" -> "typing" [];
	"transformers.models.deprecated.tapex" -> "sys" [];
	"transformers.models.deprecated.tapex.tokenization_tapex" -> "json" [];
	"transformers.models.deprecated.tapex.tokenization_tapex" -> "os" [];
	"transformers.models.deprecated.tapex.tokenization_tapex" -> "random" [];
	"transformers.models.deprecated.tapex.tokenization_tapex" -> "functools" [];
	"transformers.models.deprecated.tapex.tokenization_tapex" -> "typing" [];
	"transformers.models.deprecated.tapex.tokenization_tapex" -> "regex" [];
	"transformers.models.deprecated.tapex.tokenization_tapex" -> "pandas" [];
	"transformers.models.deprecated.speech_to_text_2" -> "typing" [];
	"transformers.models.deprecated.speech_to_text_2" -> "sys" [];
	"transformers.models.deprecated.speech_to_text_2.modeling_speech_to_text_2" -> "copy" [];
	"transformers.models.deprecated.speech_to_text_2.modeling_speech_to_text_2" -> "math" [];
	"transformers.models.deprecated.speech_to_text_2.modeling_speech_to_text_2" -> "typing" [];
	"transformers.models.deprecated.speech_to_text_2.modeling_speech_to_text_2" -> "torch" [];
	"transformers.models.deprecated.speech_to_text_2.tokenization_speech_to_text_2" -> "json" [];
	"transformers.models.deprecated.speech_to_text_2.tokenization_speech_to_text_2" -> "os" [];
	"transformers.models.deprecated.speech_to_text_2.tokenization_speech_to_text_2" -> "typing" [];
	"transformers.models.deprecated.speech_to_text_2.processing_speech_to_text_2" -> "warnings" [];
	"transformers.models.deprecated.speech_to_text_2.processing_speech_to_text_2" -> "contextlib" [];
	"transformers.models.deprecated.retribert" -> "typing" [];
	"transformers.models.deprecated.retribert" -> "sys" [];
	"transformers.models.deprecated.retribert.modeling_retribert" -> "math" [];
	"transformers.models.deprecated.retribert.modeling_retribert" -> "typing" [];
	"transformers.models.deprecated.retribert.modeling_retribert" -> "torch" [];
	"transformers.models.deprecated.retribert.tokenization_retribert_fast" -> "json" [];
	"transformers.models.deprecated.retribert.tokenization_retribert_fast" -> "typing" [];
	"transformers.models.deprecated.retribert.tokenization_retribert_fast" -> "tokenizers" [];
	"transformers.models.deprecated.retribert.tokenization_retribert" -> "collections" [];
	"transformers.models.deprecated.retribert.tokenization_retribert" -> "os" [];
	"transformers.models.deprecated.retribert.tokenization_retribert" -> "unicodedata" [];
	"transformers.models.deprecated.retribert.tokenization_retribert" -> "typing" [];
	"transformers.models.deprecated.realm" -> "typing" [];
	"transformers.models.deprecated.realm" -> "sys" [];
	"transformers.models.deprecated.realm.retrieval_realm" -> "os" [];
	"transformers.models.deprecated.realm.retrieval_realm" -> "typing" [];
	"transformers.models.deprecated.realm.retrieval_realm" -> "numpy" [];
	"transformers.models.deprecated.realm.retrieval_realm" -> "huggingface_hub" [];
	"transformers.models.deprecated.realm.retrieval_realm" -> "transformers" [];
	"transformers.models.deprecated.realm.retrieval_realm" -> "'tensorflow.compat'" [];
	"transformers.models.deprecated.realm.retrieval_realm" -> "scann" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "math" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "os" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "dataclasses" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "typing" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "torch" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "re" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "numpy" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "tensorflow" [];
	"transformers.models.deprecated.realm.tokenization_realm" -> "collections" [];
	"transformers.models.deprecated.realm.tokenization_realm" -> "os" [];
	"transformers.models.deprecated.realm.tokenization_realm" -> "unicodedata" [];
	"transformers.models.deprecated.realm.tokenization_realm" -> "typing" [];
	"transformers.models.deprecated.qdqbert" -> "typing" [];
	"transformers.models.deprecated.qdqbert" -> "sys" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "math" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "os" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "warnings" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "typing" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "torch" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "pytorch_quantization" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "'pytorch_quantization.nn'" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "re" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "numpy" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "tensorflow" [];
	"transformers.models.deprecated.open_llama" -> "typing" [];
	"transformers.models.deprecated.open_llama" -> "transformers" [];
	"transformers.models.deprecated.open_llama" -> "sys" [];
	"transformers.models.deprecated.open_llama.modeling_open_llama" -> "math" [];
	"transformers.models.deprecated.open_llama.modeling_open_llama" -> "typing" [];
	"transformers.models.deprecated.open_llama.modeling_open_llama" -> "torch" [];
	"transformers.models.deprecated.open_llama.modeling_open_llama" -> "xformers" [];
	"transformers.models.deprecated.nezha" -> "typing" [];
	"transformers.models.deprecated.nezha" -> "sys" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "math" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "os" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "warnings" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "dataclasses" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "typing" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "torch" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "re" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "numpy" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "tensorflow" [];
	"transformers.models.deprecated.nezha.configuration_nezha" -> "transformers" [];
	"transformers.models.deprecated.nat" -> "typing" [];
	"transformers.models.deprecated.nat" -> "sys" [];
	"transformers.models.deprecated.nat.modeling_nat" -> "math" [];
	"transformers.models.deprecated.nat.modeling_nat" -> "dataclasses" [];
	"transformers.models.deprecated.nat.modeling_nat" -> "typing" [];
	"transformers.models.deprecated.nat.modeling_nat" -> "torch" [];
	"transformers.models.deprecated.nat.modeling_nat" -> "'natten.functional'" [];
	"transformers.models.deprecated.mmbt" -> "typing" [];
	"transformers.models.deprecated.mmbt" -> "sys" [];
	"transformers.models.deprecated.mmbt.modeling_mmbt" -> "torch" [];
	"transformers.models.deprecated.mega" -> "typing" [];
	"transformers.models.deprecated.mega" -> "sys" [];
	"transformers.models.deprecated.mega.modeling_mega" -> "math" [];
	"transformers.models.deprecated.mega.modeling_mega" -> "typing" [];
	"transformers.models.deprecated.mega.modeling_mega" -> "torch" [];
	"transformers.models.deprecated.mega.configuration_mega" -> "collections" [];
	"transformers.models.deprecated.mega.configuration_mega" -> "typing" [];
	"transformers.models.deprecated.mctct" -> "typing" [];
	"transformers.models.deprecated.mctct" -> "sys" [];
	"transformers.models.deprecated.mctct.modeling_mctct" -> "math" [];
	"transformers.models.deprecated.mctct.modeling_mctct" -> "typing" [];
	"transformers.models.deprecated.mctct.modeling_mctct" -> "torch" [];
	"transformers.models.deprecated.mctct.processing_mctct" -> "warnings" [];
	"transformers.models.deprecated.mctct.processing_mctct" -> "contextlib" [];
	"transformers.models.deprecated.mctct.feature_extraction_mctct" -> "typing" [];
	"transformers.models.deprecated.mctct.feature_extraction_mctct" -> "numpy" [];
	"transformers.models.deprecated.jukebox" -> "typing" [];
	"transformers.models.deprecated.jukebox" -> "sys" [];
	"transformers.models.deprecated.jukebox.modeling_jukebox" -> "math" [];
	"transformers.models.deprecated.jukebox.modeling_jukebox" -> "os" [];
	"transformers.models.deprecated.jukebox.modeling_jukebox" -> "typing" [];
	"transformers.models.deprecated.jukebox.modeling_jukebox" -> "numpy" [];
	"transformers.models.deprecated.jukebox.modeling_jukebox" -> "torch" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "json" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "os" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "re" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "unicodedata" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "typing" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "numpy" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "regex" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "tensorflow" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "torch" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "'jax.numpy'" [];
	"transformers.models.deprecated.jukebox.configuration_jukebox" -> "os" [];
	"transformers.models.deprecated.jukebox.configuration_jukebox" -> "typing" [];
	"transformers.models.deprecated.graphormer" -> "typing" [];
	"transformers.models.deprecated.graphormer" -> "sys" [];
	"transformers.models.deprecated.graphormer.modeling_graphormer" -> "math" [];
	"transformers.models.deprecated.graphormer.modeling_graphormer" -> "typing" [];
	"transformers.models.deprecated.graphormer.modeling_graphormer" -> "torch" [];
	"transformers.models.deprecated.gptsan_japanese" -> "typing" [];
	"transformers.models.deprecated.gptsan_japanese" -> "sys" [];
	"transformers.models.deprecated.gptsan_japanese.modeling_gptsan_japanese" -> "copy" [];
	"transformers.models.deprecated.gptsan_japanese.modeling_gptsan_japanese" -> "typing" [];
	"transformers.models.deprecated.gptsan_japanese.modeling_gptsan_japanese" -> "torch" [];
	"transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" -> "collections" [];
	"transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" -> "json" [];
	"transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" -> "os" [];
	"transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" -> "re" [];
	"transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" -> "typing" [];
	"transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" -> "numpy" [];
	"transformers.models.deprecated.ernie_m" -> "typing" [];
	"transformers.models.deprecated.ernie_m" -> "sys" [];
	"transformers.models.deprecated.ernie_m.modeling_ernie_m" -> "math" [];
	"transformers.models.deprecated.ernie_m.modeling_ernie_m" -> "typing" [];
	"transformers.models.deprecated.ernie_m.modeling_ernie_m" -> "torch" [];
	"transformers.models.deprecated.ernie_m.tokenization_ernie_m" -> "io" [];
	"transformers.models.deprecated.ernie_m.tokenization_ernie_m" -> "os" [];
	"transformers.models.deprecated.ernie_m.tokenization_ernie_m" -> "unicodedata" [];
	"transformers.models.deprecated.ernie_m.tokenization_ernie_m" -> "typing" [];
	"transformers.models.deprecated.ernie_m.tokenization_ernie_m" -> "sentencepiece" [];
	"transformers.models.deprecated.ernie_m.configuration_ernie_m" -> "__future__" [];
	"transformers.models.deprecated.ernie_m.configuration_ernie_m" -> "typing" [];
	"transformers.models.deprecated.efficientformer" -> "typing" [];
	"transformers.models.deprecated.efficientformer" -> "sys" [];
	"transformers.models.deprecated.efficientformer.modeling_tf_efficientformer" -> "itertools" [];
	"transformers.models.deprecated.efficientformer.modeling_tf_efficientformer" -> "dataclasses" [];
	"transformers.models.deprecated.efficientformer.modeling_tf_efficientformer" -> "typing" [];
	"transformers.models.deprecated.efficientformer.modeling_tf_efficientformer" -> "tensorflow" [];
	"transformers.models.deprecated.efficientformer.modeling_efficientformer" -> "itertools" [];
	"transformers.models.deprecated.efficientformer.modeling_efficientformer" -> "dataclasses" [];
	"transformers.models.deprecated.efficientformer.modeling_efficientformer" -> "typing" [];
	"transformers.models.deprecated.efficientformer.modeling_efficientformer" -> "torch" [];
	"transformers.models.deprecated.efficientformer.image_processing_efficientformer" -> "typing" [];
	"transformers.models.deprecated.efficientformer.image_processing_efficientformer" -> "numpy" [];
	"transformers.models.deprecated.efficientformer.configuration_efficientformer" -> "typing" [];
	"transformers.models.deprecated.deta" -> "typing" [];
	"transformers.models.deprecated.deta" -> "sys" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "copy" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "math" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "os" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "warnings" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "dataclasses" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "pathlib" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "typing" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "torch" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "accelerate" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "'accelerate.utils'" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "'torchvision.ops'" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "'scipy.optimize'" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "pathlib" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "typing" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "numpy" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "torch" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "'torchvision.ops'" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "PIL" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "tensorflow" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "'jax.numpy'" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "pycocotools" [];
	"transformers.models.deit" -> "typing" [];
	"transformers.models.deit" -> "sys" [];
	"transformers.models.deit.modeling_tf_deit" -> "__future__" [];
	"transformers.models.deit.modeling_tf_deit" -> "math" [];
	"transformers.models.deit.modeling_tf_deit" -> "dataclasses" [];
	"transformers.models.deit.modeling_tf_deit" -> "typing" [];
	"transformers.models.deit.modeling_tf_deit" -> "tensorflow" [];
	"transformers.models.deit.modeling_deit" -> "math" [];
	"transformers.models.deit.modeling_deit" -> "dataclasses" [];
	"transformers.models.deit.modeling_deit" -> "typing" [];
	"transformers.models.deit.modeling_deit" -> "torch" [];
	"transformers.models.deit.image_processing_deit" -> "typing" [];
	"transformers.models.deit.image_processing_deit" -> "numpy" [];
	"transformers.models.deit.image_processing_deit" -> "PIL" [];
	"transformers.models.deit.feature_extraction_deit" -> "warnings" [];
	"transformers.models.deit.configuration_deit" -> "collections" [];
	"transformers.models.deit.configuration_deit" -> "typing" [];
	"transformers.models.deit.configuration_deit" -> "packaging" [];
	"transformers.models.deformable_detr" -> "typing" [];
	"transformers.models.deformable_detr" -> "sys" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "copy" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "math" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "os" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "warnings" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "dataclasses" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "pathlib" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "typing" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "torch" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "timm" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "io" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "pathlib" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "collections" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "typing" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "numpy" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "torch" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "PIL" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "'scipy.special'" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "'scipy.stats'" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "tensorflow" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "'jax.numpy'" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "pycocotools" [];
	"transformers.models.deformable_detr.feature_extraction_deformable_detr" -> "warnings" [];
	"transformers.models.decision_transformer" -> "typing" [];
	"transformers.models.decision_transformer" -> "sys" [];
	"transformers.models.decision_transformer.modeling_decision_transformer" -> "math" [];
	"transformers.models.decision_transformer.modeling_decision_transformer" -> "os" [];
	"transformers.models.decision_transformer.modeling_decision_transformer" -> "dataclasses" [];
	"transformers.models.decision_transformer.modeling_decision_transformer" -> "typing" [];
	"transformers.models.decision_transformer.modeling_decision_transformer" -> "torch" [];
	"transformers.models.decision_transformer.modeling_decision_transformer" -> "re" [];
	"transformers.models.decision_transformer.modeling_decision_transformer" -> "tensorflow" [];
	"transformers.models.deberta_v2" -> "typing" [];
	"transformers.models.deberta_v2" -> "sys" [];
	"transformers.models.deberta_v2.modeling_deberta_v2" -> "typing" [];
	"transformers.models.deberta_v2.modeling_deberta_v2" -> "torch" [];
	"transformers.models.deberta_v2.modeling_tf_deberta_v2" -> "__future__" [];
	"transformers.models.deberta_v2.modeling_tf_deberta_v2" -> "typing" [];
	"transformers.models.deberta_v2.modeling_tf_deberta_v2" -> "numpy" [];
	"transformers.models.deberta_v2.modeling_tf_deberta_v2" -> "tensorflow" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2_fast" -> "os" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2_fast" -> "shutil" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2_fast" -> "typing" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2" -> "os" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2" -> "unicodedata" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2" -> "typing" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2" -> "sentencepiece" [];
	"transformers.models.deberta_v2.configuration_deberta_v2" -> "collections" [];
	"transformers.models.deberta_v2.configuration_deberta_v2" -> "typing" [];
	"transformers.models.deberta_v2.configuration_deberta_v2" -> "transformers" [];
	"transformers.models.deberta" -> "typing" [];
	"transformers.models.deberta" -> "sys" [];
	"transformers.models.deberta.modeling_tf_deberta" -> "__future__" [];
	"transformers.models.deberta.modeling_tf_deberta" -> "math" [];
	"transformers.models.deberta.modeling_tf_deberta" -> "typing" [];
	"transformers.models.deberta.modeling_tf_deberta" -> "numpy" [];
	"transformers.models.deberta.modeling_tf_deberta" -> "tensorflow" [];
	"transformers.models.deberta.modeling_deberta" -> "typing" [];
	"transformers.models.deberta.modeling_deberta" -> "torch" [];
	"transformers.models.deberta.tokenization_deberta_fast" -> "json" [];
	"transformers.models.deberta.tokenization_deberta_fast" -> "typing" [];
	"transformers.models.deberta.tokenization_deberta_fast" -> "tokenizers" [];
	"transformers.models.deberta.tokenization_deberta" -> "json" [];
	"transformers.models.deberta.tokenization_deberta" -> "os" [];
	"transformers.models.deberta.tokenization_deberta" -> "typing" [];
	"transformers.models.deberta.tokenization_deberta" -> "regex" [];
	"transformers.models.deberta.configuration_deberta" -> "collections" [];
	"transformers.models.deberta.configuration_deberta" -> "typing" [];
	"transformers.models.deberta.configuration_deberta" -> "transformers" [];
	"transformers.models.dbrx" -> "typing" [];
	"transformers.models.dbrx" -> "sys" [];
	"transformers.models.dbrx.modeling_dbrx" -> "math" [];
	"transformers.models.dbrx.modeling_dbrx" -> "typing" [];
	"transformers.models.dbrx.modeling_dbrx" -> "torch" [];
	"transformers.models.dbrx.configuration_dbrx" -> "typing" [];
	"transformers.models.data2vec" -> "typing" [];
	"transformers.models.data2vec" -> "sys" [];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" -> "__future__" [];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" -> "math" [];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" -> "dataclasses" [];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" -> "typing" [];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" -> "numpy" [];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" -> "tensorflow" [];
	"transformers.models.data2vec.modeling_data2vec_vision" -> "math" [];
	"transformers.models.data2vec.modeling_data2vec_vision" -> "dataclasses" [];
	"transformers.models.data2vec.modeling_data2vec_vision" -> "typing" [];
	"transformers.models.data2vec.modeling_data2vec_vision" -> "torch" [];
	"transformers.models.data2vec.modeling_data2vec_text" -> "math" [];
	"transformers.models.data2vec.modeling_data2vec_text" -> "typing" [];
	"transformers.models.data2vec.modeling_data2vec_text" -> "torch" [];
	"transformers.models.data2vec.modeling_data2vec_audio" -> "math" [];
	"transformers.models.data2vec.modeling_data2vec_audio" -> "warnings" [];
	"transformers.models.data2vec.modeling_data2vec_audio" -> "typing" [];
	"transformers.models.data2vec.modeling_data2vec_audio" -> "numpy" [];
	"transformers.models.data2vec.modeling_data2vec_audio" -> "torch" [];
	"transformers.models.data2vec.modeling_data2vec_audio" -> "peft" [];
	"transformers.models.data2vec.configuration_data2vec_vision" -> "collections" [];
	"transformers.models.data2vec.configuration_data2vec_vision" -> "typing" [];
	"transformers.models.data2vec.configuration_data2vec_vision" -> "packaging" [];
	"transformers.models.data2vec.configuration_data2vec_text" -> "collections" [];
	"transformers.models.data2vec.configuration_data2vec_text" -> "typing" [];
	"transformers.models.data2vec.configuration_data2vec_audio" -> "math" [];
	"transformers.models.dac" -> "typing" [];
	"transformers.models.dac" -> "sys" [];
	"transformers.models.dac.modeling_dac" -> "math" [];
	"transformers.models.dac.modeling_dac" -> "dataclasses" [];
	"transformers.models.dac.modeling_dac" -> "typing" [];
	"transformers.models.dac.modeling_dac" -> "numpy" [];
	"transformers.models.dac.modeling_dac" -> "torch" [];
	"transformers.models.dac.feature_extraction_dac" -> "typing" [];
	"transformers.models.dac.feature_extraction_dac" -> "numpy" [];
	"transformers.models.dac.configuration_dac" -> "math" [];
	"transformers.models.dac.configuration_dac" -> "numpy" [];
	"transformers.models.cvt" -> "typing" [];
	"transformers.models.cvt" -> "sys" [];
	"transformers.models.cvt.modeling_tf_cvt" -> "__future__" [];
	"transformers.models.cvt.modeling_tf_cvt" -> "dataclasses" [];
	"transformers.models.cvt.modeling_tf_cvt" -> "typing" [];
	"transformers.models.cvt.modeling_tf_cvt" -> "tensorflow" [];
	"transformers.models.cvt.modeling_cvt" -> "dataclasses" [];
	"transformers.models.cvt.modeling_cvt" -> "typing" [];
	"transformers.models.cvt.modeling_cvt" -> "torch" [];
	"transformers.models.ctrl" -> "typing" [];
	"transformers.models.ctrl" -> "sys" [];
	"transformers.models.ctrl.modeling_tf_ctrl" -> "__future__" [];
	"transformers.models.ctrl.modeling_tf_ctrl" -> "typing" [];
	"transformers.models.ctrl.modeling_tf_ctrl" -> "numpy" [];
	"transformers.models.ctrl.modeling_tf_ctrl" -> "tensorflow" [];
	"transformers.models.ctrl.modeling_ctrl" -> "typing" [];
	"transformers.models.ctrl.modeling_ctrl" -> "numpy" [];
	"transformers.models.ctrl.modeling_ctrl" -> "torch" [];
	"transformers.models.ctrl.tokenization_ctrl" -> "json" [];
	"transformers.models.ctrl.tokenization_ctrl" -> "os" [];
	"transformers.models.ctrl.tokenization_ctrl" -> "typing" [];
	"transformers.models.ctrl.tokenization_ctrl" -> "regex" [];
	"transformers.models.cpmant" -> "typing" [];
	"transformers.models.cpmant" -> "sys" [];
	"transformers.models.cpmant.modeling_cpmant" -> "math" [];
	"transformers.models.cpmant.modeling_cpmant" -> "typing" [];
	"transformers.models.cpmant.modeling_cpmant" -> "torch" [];
	"transformers.models.cpmant.tokenization_cpmant" -> "collections" [];
	"transformers.models.cpmant.tokenization_cpmant" -> "os" [];
	"transformers.models.cpmant.tokenization_cpmant" -> "typing" [];
	"transformers.models.cpmant.tokenization_cpmant" -> "jieba" [];
	"transformers.models.convnextv2" -> "typing" [];
	"transformers.models.convnextv2" -> "sys" [];
	"transformers.models.convnextv2.modeling_tf_convnextv2" -> "__future__" [];
	"transformers.models.convnextv2.modeling_tf_convnextv2" -> "typing" [];
	"transformers.models.convnextv2.modeling_tf_convnextv2" -> "numpy" [];
	"transformers.models.convnextv2.modeling_tf_convnextv2" -> "tensorflow" [];
	"transformers.models.convnextv2.modeling_convnextv2" -> "typing" [];
	"transformers.models.convnextv2.modeling_convnextv2" -> "torch" [];
	"transformers.models.convnext" -> "typing" [];
	"transformers.models.convnext" -> "sys" [];
	"transformers.models.convnext.modeling_tf_convnext" -> "__future__" [];
	"transformers.models.convnext.modeling_tf_convnext" -> "typing" [];
	"transformers.models.convnext.modeling_tf_convnext" -> "numpy" [];
	"transformers.models.convnext.modeling_tf_convnext" -> "tensorflow" [];
	"transformers.models.convnext.modeling_convnext" -> "typing" [];
	"transformers.models.convnext.modeling_convnext" -> "torch" [];
	"transformers.models.convnext.image_processing_convnext" -> "typing" [];
	"transformers.models.convnext.image_processing_convnext" -> "numpy" [];
	"transformers.models.convnext.image_processing_convnext" -> "PIL" [];
	"transformers.models.convnext.feature_extraction_convnext" -> "warnings" [];
	"transformers.models.convnext.configuration_convnext" -> "collections" [];
	"transformers.models.convnext.configuration_convnext" -> "typing" [];
	"transformers.models.convnext.configuration_convnext" -> "packaging" [];
	"transformers.models.convbert" -> "typing" [];
	"transformers.models.convbert" -> "sys" [];
	"transformers.models.convbert.modeling_tf_convbert" -> "__future__" [];
	"transformers.models.convbert.modeling_tf_convbert" -> "typing" [];
	"transformers.models.convbert.modeling_tf_convbert" -> "numpy" [];
	"transformers.models.convbert.modeling_tf_convbert" -> "tensorflow" [];
	"transformers.models.convbert.modeling_convbert" -> "math" [];
	"transformers.models.convbert.modeling_convbert" -> "os" [];
	"transformers.models.convbert.modeling_convbert" -> "operator" [];
	"transformers.models.convbert.modeling_convbert" -> "typing" [];
	"transformers.models.convbert.modeling_convbert" -> "torch" [];
	"transformers.models.convbert.modeling_convbert" -> "tensorflow" [];
	"transformers.models.convbert.tokenization_convbert_fast" -> "json" [];
	"transformers.models.convbert.tokenization_convbert_fast" -> "typing" [];
	"transformers.models.convbert.tokenization_convbert_fast" -> "tokenizers" [];
	"transformers.models.convbert.tokenization_convbert" -> "collections" [];
	"transformers.models.convbert.tokenization_convbert" -> "os" [];
	"transformers.models.convbert.tokenization_convbert" -> "unicodedata" [];
	"transformers.models.convbert.tokenization_convbert" -> "typing" [];
	"transformers.models.convbert.configuration_convbert" -> "collections" [];
	"transformers.models.convbert.configuration_convbert" -> "typing" [];
	"transformers.models.conditional_detr" -> "typing" [];
	"transformers.models.conditional_detr" -> "sys" [];
	"transformers.models.conditional_detr.modeling_conditional_detr" -> "math" [];
	"transformers.models.conditional_detr.modeling_conditional_detr" -> "dataclasses" [];
	"transformers.models.conditional_detr.modeling_conditional_detr" -> "typing" [];
	"transformers.models.conditional_detr.modeling_conditional_detr" -> "torch" [];
	"transformers.models.conditional_detr.modeling_conditional_detr" -> "timm" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "io" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "pathlib" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "collections" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "typing" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "numpy" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "torch" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "PIL" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "'scipy.special'" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "'scipy.stats'" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "tensorflow" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "'jax.numpy'" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "pycocotools" [];
	"transformers.models.conditional_detr.feature_extraction_conditional_detr" -> "warnings" [];
	"transformers.models.conditional_detr.configuration_conditional_detr" -> "collections" [];
	"transformers.models.conditional_detr.configuration_conditional_detr" -> "typing" [];
	"transformers.models.conditional_detr.configuration_conditional_detr" -> "packaging" [];
	"transformers.models.cohere" -> "typing" [];
	"transformers.models.cohere" -> "sys" [];
	"transformers.models.cohere.modeling_cohere" -> "math" [];
	"transformers.models.cohere.modeling_cohere" -> "typing" [];
	"transformers.models.cohere.modeling_cohere" -> "torch" [];
	"transformers.models.cohere.tokenization_cohere_fast" -> "pickle" [];
	"transformers.models.cohere.tokenization_cohere_fast" -> "typing" [];
	"transformers.models.cohere.tokenization_cohere_fast" -> "tokenizers" [];
	"transformers.models.codegen" -> "typing" [];
	"transformers.models.codegen" -> "sys" [];
	"transformers.models.codegen.modeling_codegen" -> "typing" [];
	"transformers.models.codegen.modeling_codegen" -> "torch" [];
	"transformers.models.codegen.tokenization_codegen_fast" -> "json" [];
	"transformers.models.codegen.tokenization_codegen_fast" -> "re" [];
	"transformers.models.codegen.tokenization_codegen_fast" -> "typing" [];
	"transformers.models.codegen.tokenization_codegen_fast" -> "numpy" [];
	"transformers.models.codegen.tokenization_codegen_fast" -> "torch" [];
	"transformers.models.codegen.tokenization_codegen_fast" -> "tensorflow" [];
	"transformers.models.codegen.tokenization_codegen_fast" -> "tokenizers" [];
	"transformers.models.codegen.tokenization_codegen" -> "json" [];
	"transformers.models.codegen.tokenization_codegen" -> "os" [];
	"transformers.models.codegen.tokenization_codegen" -> "functools" [];
	"transformers.models.codegen.tokenization_codegen" -> "typing" [];
	"transformers.models.codegen.tokenization_codegen" -> "numpy" [];
	"transformers.models.codegen.tokenization_codegen" -> "regex" [];
	"transformers.models.codegen.tokenization_codegen" -> "torch" [];
	"transformers.models.codegen.tokenization_codegen" -> "tensorflow" [];
	"transformers.models.codegen.configuration_codegen" -> "collections" [];
	"transformers.models.codegen.configuration_codegen" -> "typing" [];
	"transformers.models.codegen.configuration_codegen" -> "transformers" [];
	"transformers.models.codegen.configuration_codegen" -> "torch" [];
	"transformers.models.clvp" -> "typing" [];
	"transformers.models.clvp" -> "sys" [];
	"transformers.models.clvp.modeling_clvp" -> "copy" [];
	"transformers.models.clvp.modeling_clvp" -> "math" [];
	"transformers.models.clvp.modeling_clvp" -> "dataclasses" [];
	"transformers.models.clvp.modeling_clvp" -> "typing" [];
	"transformers.models.clvp.modeling_clvp" -> "torch" [];
	"transformers.models.clvp.tokenization_clvp" -> "json" [];
	"transformers.models.clvp.tokenization_clvp" -> "os" [];
	"transformers.models.clvp.tokenization_clvp" -> "functools" [];
	"transformers.models.clvp.tokenization_clvp" -> "typing" [];
	"transformers.models.clvp.tokenization_clvp" -> "regex" [];
	"transformers.models.clvp.number_normalizer" -> "re" [];
	"transformers.models.clvp.feature_extraction_clvp" -> "typing" [];
	"transformers.models.clvp.feature_extraction_clvp" -> "numpy" [];
	"transformers.models.clvp.configuration_clvp" -> "os" [];
	"transformers.models.clvp.configuration_clvp" -> "typing" [];
	"transformers.models.clipseg" -> "typing" [];
	"transformers.models.clipseg" -> "sys" [];
	"transformers.models.clipseg.modeling_clipseg" -> "copy" [];
	"transformers.models.clipseg.modeling_clipseg" -> "math" [];
	"transformers.models.clipseg.modeling_clipseg" -> "dataclasses" [];
	"transformers.models.clipseg.modeling_clipseg" -> "typing" [];
	"transformers.models.clipseg.modeling_clipseg" -> "torch" [];
	"transformers.models.clipseg.processing_clipseg" -> "warnings" [];
	"transformers.models.clipseg.configuration_clipseg" -> "os" [];
	"transformers.models.clipseg.configuration_clipseg" -> "typing" [];
	"transformers.models.clip" -> "typing" [];
	"transformers.models.clip" -> "sys" [];
	"transformers.models.clip.image_processing_clip" -> "typing" [];
	"transformers.models.clip.image_processing_clip" -> "numpy" [];
	"transformers.models.clip.image_processing_clip" -> "PIL" [];
	"transformers.models.clip.feature_extraction_clip" -> "warnings" [];
	"transformers.models.clip.tokenization_clip_fast" -> "typing" [];
	"transformers.models.clip.tokenization_clip_fast" -> "tokenizers" [];
	"transformers.models.clip.tokenization_clip" -> "json" [];
	"transformers.models.clip.tokenization_clip" -> "os" [];
	"transformers.models.clip.tokenization_clip" -> "unicodedata" [];
	"transformers.models.clip.tokenization_clip" -> "functools" [];
	"transformers.models.clip.tokenization_clip" -> "typing" [];
	"transformers.models.clip.tokenization_clip" -> "regex" [];
	"transformers.models.clip.tokenization_clip" -> "ftfy" [];
	"transformers.models.clip.processing_clip" -> "warnings" [];
	"transformers.models.clap" -> "typing" [];
	"transformers.models.clap" -> "sys" [];
	"transformers.models.clap.modeling_clap" -> "collections" [];
	"transformers.models.clap.modeling_clap" -> "math" [];
	"transformers.models.clap.modeling_clap" -> "dataclasses" [];
	"transformers.models.clap.modeling_clap" -> "typing" [];
	"transformers.models.clap.modeling_clap" -> "torch" [];
	"transformers.models.clap.feature_extraction_clap" -> "copy" [];
	"transformers.models.clap.feature_extraction_clap" -> "typing" [];
	"transformers.models.clap.feature_extraction_clap" -> "numpy" [];
	"transformers.models.clap.feature_extraction_clap" -> "torch" [];
	"transformers.models.clap.configuration_clap" -> "os" [];
	"transformers.models.clap.configuration_clap" -> "typing" [];
	"transformers.models.chinese_clip" -> "typing" [];
	"transformers.models.chinese_clip" -> "sys" [];
	"transformers.models.chinese_clip.modeling_chinese_clip" -> "math" [];
	"transformers.models.chinese_clip.modeling_chinese_clip" -> "dataclasses" [];
	"transformers.models.chinese_clip.modeling_chinese_clip" -> "typing" [];
	"transformers.models.chinese_clip.modeling_chinese_clip" -> "torch" [];
	"transformers.models.chinese_clip.feature_extraction_chinese_clip" -> "warnings" [];
	"transformers.models.chinese_clip.image_processing_chinese_clip" -> "typing" [];
	"transformers.models.chinese_clip.image_processing_chinese_clip" -> "numpy" [];
	"transformers.models.chinese_clip.image_processing_chinese_clip" -> "PIL" [];
	"transformers.models.chinese_clip.processing_chinese_clip" -> "warnings" [];
	"transformers.models.chinese_clip.processing_chinese_clip" -> "typing" [];
	"transformers.models.chameleon" -> "typing" [];
	"transformers.models.chameleon" -> "sys" [];
	"transformers.models.chameleon.image_processing_chameleon" -> "typing" [];
	"transformers.models.chameleon.image_processing_chameleon" -> "numpy" [];
	"transformers.models.chameleon.image_processing_chameleon" -> "PIL" [];
	"transformers.models.chameleon.modeling_chameleon" -> "math" [];
	"transformers.models.chameleon.modeling_chameleon" -> "functools" [];
	"transformers.models.chameleon.modeling_chameleon" -> "typing" [];
	"transformers.models.chameleon.modeling_chameleon" -> "torch" [];
	"transformers.models.chameleon.modeling_chameleon" -> "'flash_attn.bert_padding'" [];
	"transformers.models.chameleon.processing_chameleon" -> "typing" [];
	"transformers.models.chameleon.configuration_chameleon" -> "typing" [];
	"transformers.models.canine" -> "typing" [];
	"transformers.models.canine" -> "sys" [];
	"transformers.models.canine.modeling_canine" -> "copy" [];
	"transformers.models.canine.modeling_canine" -> "math" [];
	"transformers.models.canine.modeling_canine" -> "os" [];
	"transformers.models.canine.modeling_canine" -> "dataclasses" [];
	"transformers.models.canine.modeling_canine" -> "typing" [];
	"transformers.models.canine.modeling_canine" -> "torch" [];
	"transformers.models.canine.modeling_canine" -> "re" [];
	"transformers.models.canine.modeling_canine" -> "numpy" [];
	"transformers.models.canine.modeling_canine" -> "tensorflow" [];
	"transformers.models.canine.tokenization_canine" -> "typing" [];
	"transformers.models.camembert" -> "typing" [];
	"transformers.models.camembert" -> "sys" [];
	"transformers.models.camembert.modeling_tf_camembert" -> "__future__" [];
	"transformers.models.camembert.modeling_tf_camembert" -> "math" [];
	"transformers.models.camembert.modeling_tf_camembert" -> "warnings" [];
	"transformers.models.camembert.modeling_tf_camembert" -> "typing" [];
	"transformers.models.camembert.modeling_tf_camembert" -> "numpy" [];
	"transformers.models.camembert.modeling_tf_camembert" -> "tensorflow" [];
	"transformers.models.camembert.modeling_camembert" -> "math" [];
	"transformers.models.camembert.modeling_camembert" -> "typing" [];
	"transformers.models.camembert.modeling_camembert" -> "torch" [];
	"transformers.models.camembert.modeling_camembert" -> "packaging" [];
	"transformers.models.camembert.tokenization_camembert_fast" -> "os" [];
	"transformers.models.camembert.tokenization_camembert_fast" -> "shutil" [];
	"transformers.models.camembert.tokenization_camembert_fast" -> "typing" [];
	"transformers.models.camembert.tokenization_camembert" -> "os" [];
	"transformers.models.camembert.tokenization_camembert" -> "shutil" [];
	"transformers.models.camembert.tokenization_camembert" -> "typing" [];
	"transformers.models.camembert.tokenization_camembert" -> "sentencepiece" [];
	"transformers.models.camembert.configuration_camembert" -> "collections" [];
	"transformers.models.camembert.configuration_camembert" -> "typing" [];
	"transformers.models.byt5" -> "typing" [];
	"transformers.models.byt5" -> "sys" [];
	"transformers.models.byt5.tokenization_byt5" -> "warnings" [];
	"transformers.models.byt5.tokenization_byt5" -> "typing" [];
	"transformers.models.bros" -> "typing" [];
	"transformers.models.bros" -> "sys" [];
	"transformers.models.bros.modeling_bros" -> "math" [];
	"transformers.models.bros.modeling_bros" -> "dataclasses" [];
	"transformers.models.bros.modeling_bros" -> "typing" [];
	"transformers.models.bros.modeling_bros" -> "torch" [];
	"transformers.models.bros.processing_bros" -> "typing" [];
	"transformers.models.bridgetower" -> "typing" [];
	"transformers.models.bridgetower" -> "sys" [];
	"transformers.models.bridgetower.modeling_bridgetower" -> "math" [];
	"transformers.models.bridgetower.modeling_bridgetower" -> "collections" [];
	"transformers.models.bridgetower.modeling_bridgetower" -> "dataclasses" [];
	"transformers.models.bridgetower.modeling_bridgetower" -> "typing" [];
	"transformers.models.bridgetower.modeling_bridgetower" -> "torch" [];
	"transformers.models.bridgetower.image_processing_bridgetower" -> "typing" [];
	"transformers.models.bridgetower.image_processing_bridgetower" -> "numpy" [];
	"transformers.models.bridgetower.image_processing_bridgetower" -> "PIL" [];
	"transformers.models.bridgetower.processing_bridgetower" -> "typing" [];
	"transformers.models.bridgetower.configuration_bridgetower" -> "os" [];
	"transformers.models.bridgetower.configuration_bridgetower" -> "typing" [];
	"transformers.models.bloom" -> "typing" [];
	"transformers.models.bloom" -> "sys" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "math" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "functools" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "typing" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "'flax.linen'" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "jax" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "'jax.numpy'" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "'flax.core'" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "'flax.traverse_util'" [];
	"transformers.models.bloom.modeling_bloom" -> "math" [];
	"transformers.models.bloom.modeling_bloom" -> "warnings" [];
	"transformers.models.bloom.modeling_bloom" -> "typing" [];
	"transformers.models.bloom.modeling_bloom" -> "torch" [];
	"transformers.models.bloom.tokenization_bloom_fast" -> "pickle" [];
	"transformers.models.bloom.tokenization_bloom_fast" -> "typing" [];
	"transformers.models.bloom.configuration_bloom" -> "collections" [];
	"transformers.models.bloom.configuration_bloom" -> "typing" [];
	"transformers.models.bloom.configuration_bloom" -> "packaging" [];
	"transformers.models.bloom.configuration_bloom" -> "transformers" [];
	"transformers.models.bloom.configuration_bloom" -> "torch" [];
	"transformers.models.blip_2" -> "typing" [];
	"transformers.models.blip_2" -> "sys" [];
	"transformers.models.blip_2.modeling_blip_2" -> "math" [];
	"transformers.models.blip_2.modeling_blip_2" -> "dataclasses" [];
	"transformers.models.blip_2.modeling_blip_2" -> "typing" [];
	"transformers.models.blip_2.modeling_blip_2" -> "torch" [];
	"transformers.models.blip_2.processing_blip_2" -> "typing" [];
	"transformers.models.blip_2.configuration_blip_2" -> "os" [];
	"transformers.models.blip_2.configuration_blip_2" -> "typing" [];
	"transformers.models.blip" -> "typing" [];
	"transformers.models.blip" -> "sys" [];
	"transformers.models.blip.modeling_tf_blip" -> "__future__" [];
	"transformers.models.blip.modeling_tf_blip" -> "warnings" [];
	"transformers.models.blip.modeling_tf_blip" -> "dataclasses" [];
	"transformers.models.blip.modeling_tf_blip" -> "typing" [];
	"transformers.models.blip.modeling_tf_blip" -> "tensorflow" [];
	"transformers.models.blip.modeling_tf_blip_text" -> "__future__" [];
	"transformers.models.blip.modeling_tf_blip_text" -> "math" [];
	"transformers.models.blip.modeling_tf_blip_text" -> "typing" [];
	"transformers.models.blip.modeling_tf_blip_text" -> "tensorflow" [];
	"transformers.models.blip.modeling_blip" -> "warnings" [];
	"transformers.models.blip.modeling_blip" -> "dataclasses" [];
	"transformers.models.blip.modeling_blip" -> "typing" [];
	"transformers.models.blip.modeling_blip" -> "torch" [];
	"transformers.models.blip.modeling_blip_text" -> "math" [];
	"transformers.models.blip.modeling_blip_text" -> "typing" [];
	"transformers.models.blip.modeling_blip_text" -> "torch" [];
	"transformers.models.blip.image_processing_blip" -> "typing" [];
	"transformers.models.blip.image_processing_blip" -> "numpy" [];
	"transformers.models.blip.image_processing_blip" -> "PIL" [];
	"transformers.models.blip.processing_blip" -> "typing" [];
	"transformers.models.blip.configuration_blip" -> "os" [];
	"transformers.models.blip.configuration_blip" -> "typing" [];
	"transformers.models.blenderbot_small" -> "typing" [];
	"transformers.models.blenderbot_small" -> "sys" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "math" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "random" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "functools" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "typing" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "'flax.linen'" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "jax" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "'jax.numpy'" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "'flax.core'" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "'flax.traverse_util'" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "'jax.random'" [];
	"transformers.models.blenderbot_small.modeling_tf_blenderbot_small" -> "__future__" [];
	"transformers.models.blenderbot_small.modeling_tf_blenderbot_small" -> "random" [];
	"transformers.models.blenderbot_small.modeling_tf_blenderbot_small" -> "typing" [];
	"transformers.models.blenderbot_small.modeling_tf_blenderbot_small" -> "numpy" [];
	"transformers.models.blenderbot_small.modeling_tf_blenderbot_small" -> "tensorflow" [];
	"transformers.models.blenderbot_small.modeling_blenderbot_small" -> "copy" [];
	"transformers.models.blenderbot_small.modeling_blenderbot_small" -> "math" [];
	"transformers.models.blenderbot_small.modeling_blenderbot_small" -> "typing" [];
	"transformers.models.blenderbot_small.modeling_blenderbot_small" -> "torch" [];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small_fast" -> "typing" [];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small_fast" -> "tokenizers" [];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small" -> "json" [];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small" -> "os" [];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small" -> "typing" [];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small" -> "regex" [];
	"transformers.models.blenderbot_small.configuration_blenderbot_small" -> "collections" [];
	"transformers.models.blenderbot_small.configuration_blenderbot_small" -> "typing" [];
	"transformers.models.blenderbot_small.configuration_blenderbot_small" -> "transformers" [];
	"transformers.models.blenderbot_small.configuration_blenderbot_small" -> "torch" [];
	"transformers.models.blenderbot" -> "typing" [];
	"transformers.models.blenderbot" -> "sys" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "math" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "random" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "functools" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "typing" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "'flax.linen'" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "jax" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "'jax.numpy'" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "'flax.core'" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "'flax.traverse_util'" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "'jax.random'" [];
	"transformers.models.blenderbot.modeling_tf_blenderbot" -> "__future__" [];
	"transformers.models.blenderbot.modeling_tf_blenderbot" -> "os" [];
	"transformers.models.blenderbot.modeling_tf_blenderbot" -> "random" [];
	"transformers.models.blenderbot.modeling_tf_blenderbot" -> "warnings" [];
	"transformers.models.blenderbot.modeling_tf_blenderbot" -> "typing" [];
	"transformers.models.blenderbot.modeling_tf_blenderbot" -> "tensorflow" [];
	"transformers.models.blenderbot.modeling_blenderbot" -> "copy" [];
	"transformers.models.blenderbot.modeling_blenderbot" -> "math" [];
	"transformers.models.blenderbot.modeling_blenderbot" -> "os" [];
	"transformers.models.blenderbot.modeling_blenderbot" -> "warnings" [];
	"transformers.models.blenderbot.modeling_blenderbot" -> "typing" [];
	"transformers.models.blenderbot.modeling_blenderbot" -> "torch" [];
	"transformers.models.blenderbot.tokenization_blenderbot_fast" -> "json" [];
	"transformers.models.blenderbot.tokenization_blenderbot_fast" -> "typing" [];
	"transformers.models.blenderbot.tokenization_blenderbot_fast" -> "tokenizers" [];
	"transformers.models.blenderbot.tokenization_blenderbot" -> "json" [];
	"transformers.models.blenderbot.tokenization_blenderbot" -> "os" [];
	"transformers.models.blenderbot.tokenization_blenderbot" -> "functools" [];
	"transformers.models.blenderbot.tokenization_blenderbot" -> "typing" [];
	"transformers.models.blenderbot.tokenization_blenderbot" -> "regex" [];
	"transformers.models.blenderbot.configuration_blenderbot" -> "collections" [];
	"transformers.models.blenderbot.configuration_blenderbot" -> "typing" [];
	"transformers.models.blenderbot.configuration_blenderbot" -> "transformers" [];
	"transformers.models.blenderbot.configuration_blenderbot" -> "torch" [];
	"transformers.models.bit" -> "typing" [];
	"transformers.models.bit" -> "sys" [];
	"transformers.models.bit.image_processing_bit" -> "typing" [];
	"transformers.models.bit.image_processing_bit" -> "numpy" [];
	"transformers.models.bit.image_processing_bit" -> "PIL" [];
	"transformers.models.bit.modeling_bit" -> "collections" [];
	"transformers.models.bit.modeling_bit" -> "math" [];
	"transformers.models.bit.modeling_bit" -> "typing" [];
	"transformers.models.bit.modeling_bit" -> "numpy" [];
	"transformers.models.bit.modeling_bit" -> "torch" [];
	"transformers.models.biogpt" -> "typing" [];
	"transformers.models.biogpt" -> "sys" [];
	"transformers.models.biogpt.modeling_biogpt" -> "math" [];
	"transformers.models.biogpt.modeling_biogpt" -> "typing" [];
	"transformers.models.biogpt.modeling_biogpt" -> "torch" [];
	"transformers.models.biogpt.tokenization_biogpt" -> "json" [];
	"transformers.models.biogpt.tokenization_biogpt" -> "os" [];
	"transformers.models.biogpt.tokenization_biogpt" -> "typing" [];
	"transformers.models.biogpt.tokenization_biogpt" -> "sacremoses" [];
	"transformers.models.bigbird_pegasus" -> "typing" [];
	"transformers.models.bigbird_pegasus" -> "sys" [];
	"transformers.models.bigbird_pegasus.modeling_bigbird_pegasus" -> "copy" [];
	"transformers.models.bigbird_pegasus.modeling_bigbird_pegasus" -> "math" [];
	"transformers.models.bigbird_pegasus.modeling_bigbird_pegasus" -> "typing" [];
	"transformers.models.bigbird_pegasus.modeling_bigbird_pegasus" -> "numpy" [];
	"transformers.models.bigbird_pegasus.modeling_bigbird_pegasus" -> "torch" [];
	"transformers.models.bigbird_pegasus.configuration_bigbird_pegasus" -> "collections" [];
	"transformers.models.bigbird_pegasus.configuration_bigbird_pegasus" -> "typing" [];
	"transformers.models.bigbird_pegasus.configuration_bigbird_pegasus" -> "transformers" [];
	"transformers.models.bigbird_pegasus.configuration_bigbird_pegasus" -> "torch" [];
	"transformers.models.big_bird" -> "typing" [];
	"transformers.models.big_bird" -> "sys" [];
	"transformers.models.big_bird.modeling_flax_big_bird" -> "typing" [];
	"transformers.models.big_bird.modeling_flax_big_bird" -> "flax" [];
	"transformers.models.big_bird.modeling_flax_big_bird" -> "'flax.linen'" [];
	"transformers.models.big_bird.modeling_flax_big_bird" -> "jax" [];
	"transformers.models.big_bird.modeling_flax_big_bird" -> "'jax.numpy'" [];
	"transformers.models.big_bird.modeling_flax_big_bird" -> "'flax.core'" [];
	"transformers.models.big_bird.modeling_flax_big_bird" -> "'flax.traverse_util'" [];
	"transformers.models.big_bird.modeling_big_bird" -> "math" [];
	"transformers.models.big_bird.modeling_big_bird" -> "os" [];
	"transformers.models.big_bird.modeling_big_bird" -> "dataclasses" [];
	"transformers.models.big_bird.modeling_big_bird" -> "typing" [];
	"transformers.models.big_bird.modeling_big_bird" -> "numpy" [];
	"transformers.models.big_bird.modeling_big_bird" -> "torch" [];
	"transformers.models.big_bird.modeling_big_bird" -> "re" [];
	"transformers.models.big_bird.modeling_big_bird" -> "tensorflow" [];
	"transformers.models.big_bird.tokenization_big_bird_fast" -> "os" [];
	"transformers.models.big_bird.tokenization_big_bird_fast" -> "shutil" [];
	"transformers.models.big_bird.tokenization_big_bird_fast" -> "typing" [];
	"transformers.models.big_bird.tokenization_big_bird" -> "os" [];
	"transformers.models.big_bird.tokenization_big_bird" -> "re" [];
	"transformers.models.big_bird.tokenization_big_bird" -> "shutil" [];
	"transformers.models.big_bird.tokenization_big_bird" -> "typing" [];
	"transformers.models.big_bird.tokenization_big_bird" -> "sentencepiece" [];
	"transformers.models.big_bird.configuration_big_bird" -> "collections" [];
	"transformers.models.big_bird.configuration_big_bird" -> "typing" [];
	"transformers.models.bertweet" -> "typing" [];
	"transformers.models.bertweet" -> "sys" [];
	"transformers.models.bertweet.tokenization_bertweet" -> "html" [];
	"transformers.models.bertweet.tokenization_bertweet" -> "os" [];
	"transformers.models.bertweet.tokenization_bertweet" -> "re" [];
	"transformers.models.bertweet.tokenization_bertweet" -> "shutil" [];
	"transformers.models.bertweet.tokenization_bertweet" -> "typing" [];
	"transformers.models.bertweet.tokenization_bertweet" -> "regex" [];
	"transformers.models.bertweet.tokenization_bertweet" -> "emoji" [];
	"transformers.models.bert_japanese" -> "typing" [];
	"transformers.models.bert_japanese" -> "sys" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "collections" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "copy" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "os" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "unicodedata" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "typing" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "sentencepiece" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "fugashi" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "ipadic" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "unidic_lite" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "unidic" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "sudachipy" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "rhoknp" [];
	"transformers.models.bert_generation" -> "typing" [];
	"transformers.models.bert_generation" -> "sys" [];
	"transformers.models.bert_generation.modeling_bert_generation" -> "math" [];
	"transformers.models.bert_generation.modeling_bert_generation" -> "typing" [];
	"transformers.models.bert_generation.modeling_bert_generation" -> "torch" [];
	"transformers.models.bert_generation.modeling_bert_generation" -> "numpy" [];
	"transformers.models.bert_generation.modeling_bert_generation" -> "'tensorflow.compat'" [];
	"transformers.models.bert_generation.modeling_bert_generation" -> "tensorflow_hub" [];
	"transformers.models.bert_generation.modeling_bert_generation" -> "tensorflow_text" [];
	"transformers.models.bert_generation.tokenization_bert_generation" -> "os" [];
	"transformers.models.bert_generation.tokenization_bert_generation" -> "shutil" [];
	"transformers.models.bert_generation.tokenization_bert_generation" -> "typing" [];
	"transformers.models.bert_generation.tokenization_bert_generation" -> "sentencepiece" [];
	"transformers.models.bert" -> "typing" [];
	"transformers.models.bert" -> "sys" [];
	"transformers.models.bert.modeling_flax_bert" -> "typing" [];
	"transformers.models.bert.modeling_flax_bert" -> "flax" [];
	"transformers.models.bert.modeling_flax_bert" -> "'flax.linen'" [];
	"transformers.models.bert.modeling_flax_bert" -> "jax" [];
	"transformers.models.bert.modeling_flax_bert" -> "'jax.numpy'" [];
	"transformers.models.bert.modeling_flax_bert" -> "numpy" [];
	"transformers.models.bert.modeling_flax_bert" -> "'flax.core'" [];
	"transformers.models.bert.modeling_flax_bert" -> "'flax.traverse_util'" [];
	"transformers.models.bert.tokenization_bert_tf" -> "os" [];
	"transformers.models.bert.tokenization_bert_tf" -> "typing" [];
	"transformers.models.bert.tokenization_bert_tf" -> "tensorflow" [];
	"transformers.models.bert.tokenization_bert_tf" -> "tensorflow_text" [];
	"transformers.models.beit" -> "typing" [];
	"transformers.models.beit" -> "sys" [];
	"transformers.models.beit.modeling_flax_beit" -> "typing" [];
	"transformers.models.beit.modeling_flax_beit" -> "flax" [];
	"transformers.models.beit.modeling_flax_beit" -> "'flax.linen'" [];
	"transformers.models.beit.modeling_flax_beit" -> "jax" [];
	"transformers.models.beit.modeling_flax_beit" -> "'jax.numpy'" [];
	"transformers.models.beit.modeling_flax_beit" -> "numpy" [];
	"transformers.models.beit.modeling_flax_beit" -> "'flax.core'" [];
	"transformers.models.beit.modeling_flax_beit" -> "'flax.traverse_util'" [];
	"transformers.models.beit.modeling_beit" -> "math" [];
	"transformers.models.beit.modeling_beit" -> "dataclasses" [];
	"transformers.models.beit.modeling_beit" -> "typing" [];
	"transformers.models.beit.modeling_beit" -> "torch" [];
	"transformers.models.beit.image_processing_beit" -> "typing" [];
	"transformers.models.beit.image_processing_beit" -> "numpy" [];
	"transformers.models.beit.image_processing_beit" -> "PIL" [];
	"transformers.models.beit.image_processing_beit" -> "torch" [];
	"transformers.models.beit.feature_extraction_beit" -> "warnings" [];
	"transformers.models.beit.configuration_beit" -> "warnings" [];
	"transformers.models.beit.configuration_beit" -> "collections" [];
	"transformers.models.beit.configuration_beit" -> "typing" [];
	"transformers.models.beit.configuration_beit" -> "packaging" [];
	"transformers.models.bart" -> "typing" [];
	"transformers.models.bart" -> "sys" [];
	"transformers.models.bart.modeling_flax_bart" -> "math" [];
	"transformers.models.bart.modeling_flax_bart" -> "random" [];
	"transformers.models.bart.modeling_flax_bart" -> "functools" [];
	"transformers.models.bart.modeling_flax_bart" -> "typing" [];
	"transformers.models.bart.modeling_flax_bart" -> "'flax.linen'" [];
	"transformers.models.bart.modeling_flax_bart" -> "jax" [];
	"transformers.models.bart.modeling_flax_bart" -> "'jax.numpy'" [];
	"transformers.models.bart.modeling_flax_bart" -> "'flax.core'" [];
	"transformers.models.bart.modeling_flax_bart" -> "'flax.traverse_util'" [];
	"transformers.models.bart.modeling_flax_bart" -> "'jax.random'" [];
	"transformers.models.bart.modeling_tf_bart" -> "__future__" [];
	"transformers.models.bart.modeling_tf_bart" -> "random" [];
	"transformers.models.bart.modeling_tf_bart" -> "typing" [];
	"transformers.models.bart.modeling_tf_bart" -> "numpy" [];
	"transformers.models.bart.modeling_tf_bart" -> "tensorflow" [];
	"transformers.models.bart.modeling_bart" -> "copy" [];
	"transformers.models.bart.modeling_bart" -> "math" [];
	"transformers.models.bart.modeling_bart" -> "warnings" [];
	"transformers.models.bart.modeling_bart" -> "typing" [];
	"transformers.models.bart.modeling_bart" -> "torch" [];
	"transformers.models.bart.tokenization_bart_fast" -> "json" [];
	"transformers.models.bart.tokenization_bart_fast" -> "typing" [];
	"transformers.models.bart.tokenization_bart_fast" -> "tokenizers" [];
	"transformers.models.bart.tokenization_bart" -> "json" [];
	"transformers.models.bart.tokenization_bart" -> "os" [];
	"transformers.models.bart.tokenization_bart" -> "functools" [];
	"transformers.models.bart.tokenization_bart" -> "typing" [];
	"transformers.models.bart.tokenization_bart" -> "regex" [];
	"transformers.models.bart.configuration_bart" -> "warnings" [];
	"transformers.models.bart.configuration_bart" -> "collections" [];
	"transformers.models.bart.configuration_bart" -> "typing" [];
	"transformers.models.bart.configuration_bart" -> "transformers" [];
	"transformers.models.bart.configuration_bart" -> "torch" [];
	"transformers.models.bark" -> "typing" [];
	"transformers.models.bark" -> "sys" [];
	"transformers.models.bark.modeling_bark" -> "math" [];
	"transformers.models.bark.modeling_bark" -> "typing" [];
	"transformers.models.bark.modeling_bark" -> "numpy" [];
	"transformers.models.bark.modeling_bark" -> "torch" [];
	"transformers.models.bark.modeling_bark" -> "accelerate" [];
	"transformers.models.bark.generation_configuration_bark" -> "copy" [];
	"transformers.models.bark.generation_configuration_bark" -> "typing" [];
	"transformers.models.bark.processing_bark" -> "json" [];
	"transformers.models.bark.processing_bark" -> "os" [];
	"transformers.models.bark.processing_bark" -> "typing" [];
	"transformers.models.bark.processing_bark" -> "numpy" [];
	"transformers.models.bark.configuration_bark" -> "os" [];
	"transformers.models.bark.configuration_bark" -> "typing" [];
	"transformers.models.autoformer" -> "typing" [];
	"transformers.models.autoformer" -> "sys" [];
	"transformers.models.autoformer.modeling_autoformer" -> "math" [];
	"transformers.models.autoformer.modeling_autoformer" -> "dataclasses" [];
	"transformers.models.autoformer.modeling_autoformer" -> "typing" [];
	"transformers.models.autoformer.modeling_autoformer" -> "numpy" [];
	"transformers.models.autoformer.modeling_autoformer" -> "torch" [];
	"transformers.models.autoformer.configuration_autoformer" -> "typing" [];
	"transformers.models.auto" -> "typing" [];
	"transformers.models.auto" -> "sys" [];
	"transformers.models.audio_spectrogram_transformer" -> "typing" [];
	"transformers.models.audio_spectrogram_transformer" -> "sys" [];
	"transformers.models.audio_spectrogram_transformer.modeling_audio_spectrogram_transformer" -> "math" [];
	"transformers.models.audio_spectrogram_transformer.modeling_audio_spectrogram_transformer" -> "typing" [];
	"transformers.models.audio_spectrogram_transformer.modeling_audio_spectrogram_transformer" -> "torch" [];
	"transformers.models.audio_spectrogram_transformer.feature_extraction_audio_spectrogram_transformer" -> "typing" [];
	"transformers.models.audio_spectrogram_transformer.feature_extraction_audio_spectrogram_transformer" -> "numpy" [];
	"transformers.models.audio_spectrogram_transformer.feature_extraction_audio_spectrogram_transformer" -> "'torchaudio.compliance'" [];
	"transformers.models.audio_spectrogram_transformer.feature_extraction_audio_spectrogram_transformer" -> "torch" [];
	"transformers.models.audio_spectrogram_transformer.configuration_audio_spectrogram_transformer" -> "typing" [];
	"transformers.models.altclip" -> "typing" [];
	"transformers.models.altclip" -> "sys" [];
	"transformers.models.altclip.processing_altclip" -> "typing" [];
	"transformers.models.altclip.modeling_altclip" -> "math" [];
	"transformers.models.altclip.modeling_altclip" -> "dataclasses" [];
	"transformers.models.altclip.modeling_altclip" -> "typing" [];
	"transformers.models.altclip.modeling_altclip" -> "torch" [];
	"transformers.models.altclip.configuration_altclip" -> "os" [];
	"transformers.models.altclip.configuration_altclip" -> "typing" [];
	"transformers.models.align" -> "typing" [];
	"transformers.models.align" -> "sys" [];
	"transformers.models.align.processing_align" -> "typing" [];
	"transformers.models.align.modeling_align" -> "math" [];
	"transformers.models.align.modeling_align" -> "dataclasses" [];
	"transformers.models.align.modeling_align" -> "typing" [];
	"transformers.models.align.modeling_align" -> "torch" [];
	"transformers.models.align.configuration_align" -> "os" [];
	"transformers.models.align.configuration_align" -> "typing" [];
	"transformers.models.albert" -> "typing" [];
	"transformers.models.albert" -> "sys" [];
	"transformers.models.albert.tokenization_albert_fast" -> "os" [];
	"transformers.models.albert.tokenization_albert_fast" -> "shutil" [];
	"transformers.models.albert.tokenization_albert_fast" -> "typing" [];
	"transformers.models.albert.tokenization_albert" -> "os" [];
	"transformers.models.albert.tokenization_albert" -> "unicodedata" [];
	"transformers.models.albert.tokenization_albert" -> "shutil" [];
	"transformers.models.albert.tokenization_albert" -> "typing" [];
	"transformers.models.albert.tokenization_albert" -> "sentencepiece" [];
	"transformers.models.albert.modeling_tf_albert" -> "__future__" [];
	"transformers.models.albert.modeling_tf_albert" -> "math" [];
	"transformers.models.albert.modeling_tf_albert" -> "dataclasses" [];
	"transformers.models.albert.modeling_tf_albert" -> "typing" [];
	"transformers.models.albert.modeling_tf_albert" -> "numpy" [];
	"transformers.models.albert.modeling_tf_albert" -> "tensorflow" [];
	"transformers.models.albert.modeling_flax_albert" -> "typing" [];
	"transformers.models.albert.modeling_flax_albert" -> "flax" [];
	"transformers.models.albert.modeling_flax_albert" -> "'flax.linen'" [];
	"transformers.models.albert.modeling_flax_albert" -> "jax" [];
	"transformers.models.albert.modeling_flax_albert" -> "'jax.numpy'" [];
	"transformers.models.albert.modeling_flax_albert" -> "numpy" [];
	"transformers.models.albert.modeling_flax_albert" -> "'flax.core'" [];
	"transformers.models.albert.modeling_flax_albert" -> "'flax.traverse_util'" [];
	"transformers.models.albert.modeling_albert" -> "math" [];
	"transformers.models.albert.modeling_albert" -> "os" [];
	"transformers.models.albert.modeling_albert" -> "dataclasses" [];
	"transformers.models.albert.modeling_albert" -> "typing" [];
	"transformers.models.albert.modeling_albert" -> "torch" [];
	"transformers.models.albert.modeling_albert" -> "re" [];
	"transformers.models.albert.modeling_albert" -> "numpy" [];
	"transformers.models.albert.modeling_albert" -> "tensorflow" [];
	"transformers.models.albert.configuration_albert" -> "collections" [];
	"transformers.models.albert.configuration_albert" -> "typing" [];
	"transformers.modeling_tf_pytorch_utils" -> "os" [];
	"transformers.modeling_tf_pytorch_utils" -> "re" [];
	"transformers.modeling_tf_pytorch_utils" -> "numpy" [];
	"transformers.modeling_tf_pytorch_utils" -> "safetensors" [];
	"transformers.modeling_tf_pytorch_utils" -> "tensorflow" [];
	"transformers.modeling_tf_pytorch_utils" -> "torch" [];
	"transformers.modelcard" -> "copy" [];
	"transformers.modelcard" -> "json" [];
	"transformers.modelcard" -> "os" [];
	"transformers.modelcard" -> "warnings" [];
	"transformers.modelcard" -> "dataclasses" [];
	"transformers.modelcard" -> "pathlib" [];
	"transformers.modelcard" -> "typing" [];
	"transformers.modelcard" -> "requests" [];
	"transformers.modelcard" -> "yaml" [];
	"transformers.modelcard" -> "huggingface_hub" [];
	"transformers.modelcard" -> "datasets" [];
	"transformers.modelcard" -> "torch" [];
	"transformers.modelcard" -> "tensorflow" [];
	"transformers.modelcard" -> "tokenizers" [];
	"transformers.integrations" -> "typing" [];
	"transformers.integrations" -> "sys" [];
	"transformers.integrations.quanto" -> "torch" [];
	"transformers.integrations.quanto" -> "accelerate" [];
	"transformers.integrations.quanto" -> "'optimum.quanto'" [];
	"transformers.integrations.quanto" -> "quanto" [];
	"transformers.integrations.peft" -> "importlib" [];
	"transformers.integrations.peft" -> "inspect" [];
	"transformers.integrations.peft" -> "warnings" [];
	"transformers.integrations.peft" -> "typing" [];
	"transformers.integrations.peft" -> "packaging" [];
	"transformers.integrations.peft" -> "torch" [];
	"transformers.integrations.peft" -> "accelerate" [];
	"transformers.integrations.peft" -> "'accelerate.utils'" [];
	"transformers.integrations.peft" -> "peft" [];
	"transformers.integrations.peft" -> "'peft.utils'" [];
	"transformers.integrations.peft" -> "'peft.tuners'" [];
	"transformers.integrations.integration_utils" -> "functools" [];
	"transformers.integrations.integration_utils" -> "json" [];
	"transformers.integrations.integration_utils" -> "numbers" [];
	"transformers.integrations.integration_utils" -> "os" [];
	"transformers.integrations.integration_utils" -> "pickle" [];
	"transformers.integrations.integration_utils" -> "shutil" [];
	"transformers.integrations.integration_utils" -> "sys" [];
	"transformers.integrations.integration_utils" -> "tempfile" [];
	"transformers.integrations.integration_utils" -> "dataclasses" [];
	"transformers.integrations.integration_utils" -> "enum" [];
	"transformers.integrations.integration_utils" -> "pathlib" [];
	"transformers.integrations.integration_utils" -> "typing" [];
	"transformers.integrations.integration_utils" -> "numpy" [];
	"transformers.integrations.integration_utils" -> "transformers" [];
	"transformers.integrations.integration_utils" -> "torch" [];
	"transformers.integrations.integration_utils" -> "comet_ml" [];
	"transformers.integrations.integration_utils" -> "optuna" [];
	"transformers.integrations.integration_utils" -> "ray" [];
	"transformers.integrations.integration_utils" -> "'ray.train'" [];
	"transformers.integrations.integration_utils" -> "'ray.tune'" [];
	"transformers.integrations.integration_utils" -> "'datasets.load'" [];
	"transformers.integrations.integration_utils" -> "sigopt" [];
	"transformers.integrations.integration_utils" -> "wandb" [];
	"transformers.integrations.integration_utils" -> "tensorboardX" [];
	"transformers.integrations.integration_utils" -> "'wandb.sdk'" [];
	"transformers.integrations.integration_utils" -> "azureml" [];
	"transformers.integrations.integration_utils" -> "mlflow" [];
	"transformers.integrations.integration_utils" -> "dagshub" [];
	"transformers.integrations.integration_utils" -> "neptune" [];
	"transformers.integrations.integration_utils" -> "'neptune.internal'" [];
	"transformers.integrations.integration_utils" -> "'neptune.new'" [];
	"transformers.integrations.integration_utils" -> "'neptune.exceptions'" [];
	"transformers.integrations.integration_utils" -> "'neptune.utils'" [];
	"transformers.integrations.integration_utils" -> "codecarbon" [];
	"transformers.integrations.integration_utils" -> "clearml" [];
	"transformers.integrations.integration_utils" -> "flytekit" [];
	"transformers.integrations.integration_utils" -> "pandas" [];
	"transformers.integrations.integration_utils" -> "flytekitplugins" [];
	"transformers.integrations.integration_utils" -> "dvclive" [];
	"transformers.integrations.integration_utils" -> "'dvclive.plots'" [];
	"transformers.integrations.integration_utils" -> "'dvclive.utils'" [];
	"transformers.integrations.hqq" -> "torch" [];
	"transformers.integrations.hqq" -> "'hqq.core'" [];
	"transformers.integrations.fbgemm_fp8" -> "torch" [];
	"transformers.integrations.fbgemm_fp8" -> "accelerate" [];
	"transformers.integrations.fbgemm_fp8" -> "fbgemm_gpu" [];
	"transformers.integrations.eetq" -> "eetq" [];
	"transformers.integrations.eetq" -> "accelerate" [];
	"transformers.integrations.bitsandbytes" -> "inspect" [];
	"transformers.integrations.bitsandbytes" -> "warnings" [];
	"transformers.integrations.bitsandbytes" -> "copy" [];
	"transformers.integrations.bitsandbytes" -> "packaging" [];
	"transformers.integrations.bitsandbytes" -> "bitsandbytes" [];
	"transformers.integrations.bitsandbytes" -> "torch" [];
	"transformers.integrations.bitsandbytes" -> "accelerate" [];
	"transformers.integrations.bitsandbytes" -> "'accelerate.hooks'" [];
	"transformers.integrations.bitsandbytes" -> "'accelerate.utils'" [];
	"transformers.integrations.bitnet" -> "accelerate" [];
	"transformers.integrations.bitnet" -> "torch" [];
	"transformers.integrations.awq" -> "importlib" [];
	"transformers.integrations.awq" -> "packaging" [];
	"transformers.integrations.awq" -> "torch" [];
	"transformers.integrations.awq" -> "awq" [];
	"transformers.integrations.awq" -> "'awq.modules'" [];
	"transformers.integrations.awq" -> "'awq.quantize'" [];
	"transformers.integrations.aqlm" -> "accelerate" [];
	"transformers.integrations.aqlm" -> "aqlm" [];
	"transformers.hf_argparser" -> "dataclasses" [];
	"transformers.hf_argparser" -> "json" [];
	"transformers.hf_argparser" -> "os" [];
	"transformers.hf_argparser" -> "sys" [];
	"transformers.hf_argparser" -> "types" [];
	"transformers.hf_argparser" -> "argparse" [];
	"transformers.hf_argparser" -> "copy" [];
	"transformers.hf_argparser" -> "enum" [];
	"transformers.hf_argparser" -> "inspect" [];
	"transformers.hf_argparser" -> "pathlib" [];
	"transformers.hf_argparser" -> "typing" [];
	"transformers.hf_argparser" -> "yaml" [];
	"transformers.generation" -> "typing" [];
	"transformers.generation" -> "sys" [];
	"transformers.generation.flax_utils" -> "copy" [];
	"transformers.generation.flax_utils" -> "inspect" [];
	"transformers.generation.flax_utils" -> "warnings" [];
	"transformers.generation.flax_utils" -> "functools" [];
	"transformers.generation.flax_utils" -> "typing" [];
	"transformers.generation.flax_utils" -> "flax" [];
	"transformers.generation.flax_utils" -> "jax" [];
	"transformers.generation.flax_utils" -> "'jax.numpy'" [];
	"transformers.generation.flax_utils" -> "numpy" [];
	"transformers.generation.tf_utils" -> "copy" [];
	"transformers.generation.tf_utils" -> "inspect" [];
	"transformers.generation.tf_utils" -> "warnings" [];
	"transformers.generation.tf_utils" -> "dataclasses" [];
	"transformers.generation.tf_utils" -> "typing" [];
	"transformers.generation.tf_utils" -> "numpy" [];
	"transformers.generation.tf_utils" -> "tensorflow" [];
	"transformers.generation.tf_utils" -> "'tensorflow.compiler'" [];
	"transformers.generation.watermarking" -> "collections" [];
	"transformers.generation.watermarking" -> "dataclasses" [];
	"transformers.generation.watermarking" -> "functools" [];
	"transformers.generation.watermarking" -> "typing" [];
	"transformers.generation.watermarking" -> "numpy" [];
	"transformers.generation.watermarking" -> "torch" [];
	"transformers.generation.utils" -> "copy" [];
	"transformers.generation.utils" -> "inspect" [];
	"transformers.generation.utils" -> "warnings" [];
	"transformers.generation.utils" -> "dataclasses" [];
	"transformers.generation.utils" -> "typing" [];
	"transformers.generation.utils" -> "numpy" [];
	"transformers.generation.utils" -> "torch" [];
	"transformers.generation.utils" -> "'accelerate.hooks'" [];
	"transformers.generation.candidate_generator" -> "copy" [];
	"transformers.generation.candidate_generator" -> "typing" [];
	"transformers.generation.candidate_generator" -> "numpy" [];
	"transformers.generation.candidate_generator" -> "torch" [];
	"transformers.generation.beam_search" -> "abc" [];
	"transformers.generation.beam_search" -> "collections" [];
	"transformers.generation.beam_search" -> "typing" [];
	"transformers.generation.beam_search" -> "numpy" [];
	"transformers.generation.beam_search" -> "torch" [];
	"transformers.generation.beam_constraints" -> "abc" [];
	"transformers.generation.beam_constraints" -> "typing" [];
	"transformers.feature_extraction_utils" -> "copy" [];
	"transformers.feature_extraction_utils" -> "json" [];
	"transformers.feature_extraction_utils" -> "os" [];
	"transformers.feature_extraction_utils" -> "warnings" [];
	"transformers.feature_extraction_utils" -> "collections" [];
	"transformers.feature_extraction_utils" -> "typing" [];
	"transformers.feature_extraction_utils" -> "numpy" [];
	"transformers.feature_extraction_utils" -> "torch" [];
	"transformers.feature_extraction_utils" -> "tensorflow" [];
	"transformers.feature_extraction_utils" -> "jax" [];
	"transformers.feature_extraction_sequence_utils" -> "typing" [];
	"transformers.feature_extraction_sequence_utils" -> "numpy" [];
	"transformers.data.data_collator" -> "random" [];
	"transformers.data.data_collator" -> "warnings" [];
	"transformers.data.data_collator" -> "dataclasses" [];
	"transformers.data.data_collator" -> "typing" [];
	"transformers.data.data_collator" -> "numpy" [];
	"transformers.data.data_collator" -> "torch" [];
	"transformers.data.data_collator" -> "tensorflow" [];
	"transformers.data.metrics" -> "warnings" [];
	"transformers.data.metrics" -> "'scipy.stats'" [];
	"transformers.data.metrics" -> "sklearn" [];
	"transformers.configuration_utils" -> "copy" [];
	"transformers.configuration_utils" -> "json" [];
	"transformers.configuration_utils" -> "os" [];
	"transformers.configuration_utils" -> "re" [];
	"transformers.configuration_utils" -> "warnings" [];
	"transformers.configuration_utils" -> "typing" [];
	"transformers.configuration_utils" -> "packaging" [];
	"transformers.configuration_utils" -> "torch" [];
	"transformers.agents" -> "typing" [];
	"transformers.agents" -> "sys" [];
	"transformers.agents.text_to_speech" -> "torch" [];
	"transformers.agents.text_to_speech" -> "datasets" [];
	"transformers.agents.search" -> "re" [];
	"transformers.agents.search" -> "requests" [];
	"transformers.agents.search" -> "duckduckgo_search" [];
	"transformers.agents.search" -> "markdownify" [];
	"transformers.agents.image_question_answering" -> "torch" [];
	"transformers.agents.image_question_answering" -> "PIL" [];
	"transformers.agents.document_question_answering" -> "re" [];
	"transformers.agents.document_question_answering" -> "numpy" [];
	"transformers.agents.document_question_answering" -> "torch" [];
	"transformers.agents.document_question_answering" -> "PIL" [];
	"transformers.agents.default_tools" -> "json" [];
	"transformers.agents.default_tools" -> "math" [];
	"transformers.agents.default_tools" -> "dataclasses" [];
	"transformers.agents.default_tools" -> "typing" [];
	"transformers.agents.default_tools" -> "huggingface_hub" [];
	"transformers.agents.python_interpreter" -> "ast" [];
	"transformers.agents.python_interpreter" -> "builtins" [];
	"transformers.agents.python_interpreter" -> "difflib" [];
	"transformers.agents.python_interpreter" -> "importlib" [];
	"transformers.agents.python_interpreter" -> "typing" [];
	"transformers.agents.python_interpreter" -> "numpy" [];
	"transformers.agents.python_interpreter" -> "pandas" [];
	"transformers.agents.tools" -> "base64" [];
	"transformers.agents.tools" -> "importlib" [];
	"transformers.agents.tools" -> "inspect" [];
	"transformers.agents.tools" -> "io" [];
	"transformers.agents.tools" -> "json" [];
	"transformers.agents.tools" -> "os" [];
	"transformers.agents.tools" -> "tempfile" [];
	"transformers.agents.tools" -> "functools" [];
	"transformers.agents.tools" -> "typing" [];
	"transformers.agents.tools" -> "huggingface_hub" [];
	"transformers.agents.tools" -> "packaging" [];
	"transformers.agents.tools" -> "torch" [];
	"transformers.agents.tools" -> "accelerate" [];
	"transformers.agents.tools" -> "'accelerate.utils'" [];
	"transformers.agents.tools" -> "jinja2" [];
	"transformers.agents.tools" -> "gradio" [];
	"transformers.agents.tools" -> "PIL" [];
	"transformers.agents.agent_types" -> "os" [];
	"transformers.agents.agent_types" -> "pathlib" [];
	"transformers.agents.agent_types" -> "tempfile" [];
	"transformers.agents.agent_types" -> "uuid" [];
	"transformers.agents.agent_types" -> "numpy" [];
	"transformers.agents.agent_types" -> "PIL" [];
	"transformers.agents.agent_types" -> "'PIL.Image'" [];
	"transformers.agents.agent_types" -> "torch" [];
	"transformers.agents.agent_types" -> "soundfile" [];
	"transformers.agents.agent_types" -> "'IPython.display'" [];
	"transformers.agents.monitoring" -> "gradio" [];
	"transformers.agents.llm_engine" -> "copy" [];
	"transformers.agents.llm_engine" -> "enum" [];
	"transformers.agents.llm_engine" -> "typing" [];
	"transformers.agents.llm_engine" -> "huggingface_hub" [];
	"transformers.agents.agents" -> "json" [];
	"transformers.agents.agents" -> "logging" [];
	"transformers.agents.agents" -> "re" [];
	"transformers.agents.agents" -> "typing" [];
	"transformers.agents.agents" -> "transformers" [];
	"transformers.agents.agents" -> "pygments" [];
	"transformers.agents.prompts" -> "re" [];
	"transformers.utils.logging" -> "functools" [];
	"transformers.utils.logging" -> "logging" [];
	"transformers.utils.logging" -> "os" [];
	"transformers.utils.logging" -> "sys" [];
	"transformers.utils.logging" -> "threading" [];
	"transformers.utils.logging" -> "typing" [];
	"transformers.utils.logging" -> "tqdm" [];
	"transformers.utils" -> "functools" [];
	"transformers.utils" -> "typing" [];
	"transformers.utils" -> "huggingface_hub" [];
	"transformers.utils" -> "packaging" [];
	"transformers.utils.peft_utils" -> "importlib" [];
	"transformers.utils.peft_utils" -> "os" [];
	"transformers.utils.peft_utils" -> "typing" [];
	"transformers.utils.peft_utils" -> "packaging" [];
	"transformers.utils.doc" -> "functools" [];
	"transformers.utils.doc" -> "re" [];
	"transformers.utils.doc" -> "types" [];
	"torch" -> "builtins" [];
	"torch" -> "ctypes" [];
	"torch" -> "glob" [];
	"torch" -> "importlib" [];
	"torch" -> "inspect" [];
	"torch" -> "math" [];
	"torch" -> "os" [];
	"torch" -> "platform" [];
	"torch" -> "sys" [];
	"torch" -> "textwrap" [];
	"torch" -> "threading" [];
	"torch" -> "typing" [];
	"torch" -> "typing_extensions" [];
	"torch" -> "sysconfig" [];
	"torch" -> "sympy" [];
	"torch" -> "numpy" [];
	"torch" -> "'torch._C._VariableFunctions'" [];
	"torch" -> "warnings" [];
	"torch.xpu._gpu_trace" -> "typing" [];
	"torch.utils.viz._cycles" -> "gc" [];
	"torch.utils.viz._cycles" -> "sys" [];
	"torch.utils.viz._cycles" -> "typing" [];
	"torch.utils.viz._cycles" -> "types" [];
	"torch.utils.viz._cycles" -> "weakref" [];
	"torch.utils.viz._cycles" -> "json" [];
	"torch.utils.viz._cycles" -> "tempfile" [];
	"torch.utils.viz._cycles" -> "torch" [];
	"torch.utils.viz._cycles" -> "atexit" [];
	"torch.utils.viz._cycles" -> "logging" [];
	"torch.utils.show_pickle" -> "sys" [];
	"torch.utils.show_pickle" -> "pickle" [];
	"torch.utils.show_pickle" -> "struct" [];
	"torch.utils.show_pickle" -> "pprint" [];
	"torch.utils.show_pickle" -> "zipfile" [];
	"torch.utils.show_pickle" -> "fnmatch" [];
	"torch.utils.show_pickle" -> "typing" [];
	"torch.utils.model_dump.__main__" -> "sys" [];
	"torch.utils.model_dump" -> "argparse" [];
	"torch.utils.model_dump" -> "io" [];
	"torch.utils.model_dump" -> "json" [];
	"torch.utils.model_dump" -> "os" [];
	"torch.utils.model_dump" -> "pickle" [];
	"torch.utils.model_dump" -> "pprint" [];
	"torch.utils.model_dump" -> "re" [];
	"torch.utils.model_dump" -> "sys" [];
	"torch.utils.model_dump" -> "zipfile" [];
	"torch.utils.model_dump" -> "pathlib" [];
	"torch.utils.model_dump" -> "typing" [];
	"torch.utils.mobile_optimizer" -> "torch" [];
	"torch.utils.mobile_optimizer" -> "enum" [];
	"torch.utils.mobile_optimizer" -> "typing" [];
	"torch.utils.jit.log_extract" -> "contextlib" [];
	"torch.utils.jit.log_extract" -> "typing" [];
	"torch.utils.jit.log_extract" -> "random" [];
	"torch.utils.jit.log_extract" -> "torch" [];
	"torch.utils.jit.log_extract" -> "time" [];
	"torch.utils.data.datapipes.gen_pyi" -> "os" [];
	"torch.utils.data.datapipes.gen_pyi" -> "pathlib" [];
	"torch.utils.data.datapipes.gen_pyi" -> "collections" [];
	"torch.utils.data.datapipes.gen_pyi" -> "typing" [];
	"torch.utils.data.backward_compatibility" -> "typing_extensions" [];
	"torch.utils.bundled_inputs" -> "typing" [];
	"torch.utils.bundled_inputs" -> "textwrap" [];
	"torch.utils.bundled_inputs" -> "torch" [];
	"torch.utils.bottleneck.__main__" -> "argparse" [];
	"torch.utils.bottleneck.__main__" -> "cProfile" [];
	"torch.utils.bottleneck.__main__" -> "pstats" [];
	"torch.utils.bottleneck.__main__" -> "sys" [];
	"torch.utils.bottleneck.__main__" -> "os" [];
	"torch.utils.bottleneck.__main__" -> "typing" [];
	"torch.utils.bottleneck.__main__" -> "torch" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "collections" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "enum" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "dataclasses" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "itertools" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "os" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "pickle" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "re" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "shutil" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "subprocess" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "sys" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "textwrap" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "typing" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "torch" [];
	"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" -> "operator" [];
	"torch.utils.benchmark.utils.timer" -> "enum" [];
	"torch.utils.benchmark.utils.timer" -> "timeit" [];
	"torch.utils.benchmark.utils.timer" -> "textwrap" [];
	"torch.utils.benchmark.utils.timer" -> "typing" [];
	"torch.utils.benchmark.utils.timer" -> "torch" [];
	"torch.utils.benchmark.utils.sparse_fuzzer" -> "typing" [];
	"torch.utils.benchmark.utils.sparse_fuzzer" -> "numbers" [];
	"torch.utils.benchmark.utils.sparse_fuzzer" -> "torch" [];
	"torch.utils.benchmark.utils.sparse_fuzzer" -> "math" [];
	"torch.utils.benchmark.utils.fuzzer" -> "functools" [];
	"torch.utils.benchmark.utils.fuzzer" -> "itertools" [];
	"torch.utils.benchmark.utils.fuzzer" -> "typing" [];
	"torch.utils.benchmark.utils.fuzzer" -> "torch" [];
	"torch.utils.benchmark.utils.fuzzer" -> "numpy" [];
	"torch.utils.benchmark.utils.cpp_jit" -> "atexit" [];
	"torch.utils.benchmark.utils.cpp_jit" -> "os" [];
	"torch.utils.benchmark.utils.cpp_jit" -> "re" [];
	"torch.utils.benchmark.utils.cpp_jit" -> "shutil" [];
	"torch.utils.benchmark.utils.cpp_jit" -> "textwrap" [];
	"torch.utils.benchmark.utils.cpp_jit" -> "threading" [];
	"torch.utils.benchmark.utils.cpp_jit" -> "typing" [];
	"torch.utils.benchmark.utils.cpp_jit" -> "torch" [];
	"torch.utils.benchmark.utils.compile" -> "typing" [];
	"torch.utils.benchmark.utils.compile" -> "torch" [];
	"torch.utils.benchmark.utils.compile" -> "tabulate" [];
	"torch.utils.benchmark.utils.compare" -> "collections" [];
	"torch.utils.benchmark.utils.compare" -> "enum" [];
	"torch.utils.benchmark.utils.compare" -> "itertools" [];
	"torch.utils.benchmark.utils.compare" -> "typing" [];
	"torch.utils.benchmark.utils.compare" -> "torch" [];
	"torch.utils.benchmark.utils.compare" -> "operator" [];
	"torch.utils.benchmark.utils.common" -> "collections" [];
	"torch.utils.benchmark.utils.common" -> "contextlib" [];
	"torch.utils.benchmark.utils.common" -> "dataclasses" [];
	"torch.utils.benchmark.utils.common" -> "os" [];
	"torch.utils.benchmark.utils.common" -> "shutil" [];
	"torch.utils.benchmark.utils.common" -> "tempfile" [];
	"torch.utils.benchmark.utils.common" -> "textwrap" [];
	"torch.utils.benchmark.utils.common" -> "time" [];
	"torch.utils.benchmark.utils.common" -> "typing" [];
	"torch.utils.benchmark.utils.common" -> "uuid" [];
	"torch.utils.benchmark.utils.common" -> "torch" [];
	"torch.utils.benchmark.utils._stubs" -> "typing" [];
	"torch.utils.benchmark.op_fuzzers.unary" -> "numpy" [];
	"torch.utils.benchmark.op_fuzzers.unary" -> "torch" [];
	"torch.utils.benchmark.op_fuzzers.spectral" -> "math" [];
	"torch.utils.benchmark.op_fuzzers.spectral" -> "torch" [];
	"torch.utils.benchmark.op_fuzzers.sparse_unary" -> "numpy" [];
	"torch.utils.benchmark.op_fuzzers.sparse_unary" -> "torch" [];
	"torch.utils.benchmark.op_fuzzers.sparse_binary" -> "numpy" [];
	"torch.utils.benchmark.op_fuzzers.sparse_binary" -> "torch" [];
	"torch.utils.benchmark.op_fuzzers.binary" -> "numpy" [];
	"torch.utils.benchmark.op_fuzzers.binary" -> "torch" [];
	"torch.utils.benchmark.examples.spectral_ops_fuzz_test" -> "argparse" [];
	"torch.utils.benchmark.examples.spectral_ops_fuzz_test" -> "collections" [];
	"torch.utils.benchmark.examples.spectral_ops_fuzz_test" -> "torch" [];
	"torch.utils.benchmark.examples.simple_timeit" -> "torch" [];
	"torch.utils.benchmark.examples.op_benchmark" -> "numpy" [];
	"torch.utils.benchmark.examples.op_benchmark" -> "torch" [];
	"torch.utils.benchmark.examples.op_benchmark" -> "operator" [];
	"torch.utils.benchmark.examples.fuzzer" -> "sys" [];
	"torch.utils.benchmark.examples.compare" -> "pickle" [];
	"torch.utils.benchmark.examples.compare" -> "sys" [];
	"torch.utils.benchmark.examples.compare" -> "time" [];
	"torch.utils.benchmark.examples.compare" -> "torch" [];
	"torch.utils.benchmark.examples.blas_compare_setup" -> "collections" [];
	"torch.utils.benchmark.examples.blas_compare_setup" -> "os" [];
	"torch.utils.benchmark.examples.blas_compare_setup" -> "shutil" [];
	"torch.utils.benchmark.examples.blas_compare_setup" -> "subprocess" [];
	"torch.utils.benchmark.examples.blas_compare_setup" -> "conda" [];
	"torch.utils.benchmark.examples.blas_compare_setup" -> "'conda.cli'" [];
	"torch.utils._zip" -> "argparse" [];
	"torch.utils._zip" -> "glob" [];
	"torch.utils._zip" -> "os" [];
	"torch.utils._zip" -> "pathlib" [];
	"torch.utils._zip" -> "zipfile" [];
	"torch.utils._strobelight.cli_function_profiler" -> "functools" [];
	"torch.utils._strobelight.cli_function_profiler" -> "logging" [];
	"torch.utils._strobelight.cli_function_profiler" -> "os" [];
	"torch.utils._strobelight.cli_function_profiler" -> "re" [];
	"torch.utils._strobelight.cli_function_profiler" -> "subprocess" [];
	"torch.utils._strobelight.cli_function_profiler" -> "time" [];
	"torch.utils._strobelight.cli_function_profiler" -> "threading" [];
	"torch.utils._strobelight.cli_function_profiler" -> "typing" [];
	"torch.utils._get_clean_triton" -> "argparse" [];
	"torch.utils._get_clean_triton" -> "os" [];
	"torch.utils._get_clean_triton" -> "re" [];
	"torch.utils._get_clean_triton" -> "pathlib" [];
	"torch.utils._get_clean_triton" -> "typing" [];
	"torch.utils._freeze" -> "argparse" [];
	"torch.utils._freeze" -> "functools" [];
	"torch.utils._freeze" -> "itertools" [];
	"torch.utils._freeze" -> "marshal" [];
	"torch.utils._freeze" -> "os" [];
	"torch.utils._freeze" -> "types" [];
	"torch.utils._freeze" -> "dataclasses" [];
	"torch.utils._freeze" -> "pathlib" [];
	"torch.utils._freeze" -> "typing" [];
	"torch.testing._internal.two_tensor" -> "torch" [];
	"torch.testing._internal.triton_utils" -> "unittest" [];
	"torch.testing._internal.triton_utils" -> "triton" [];
	"torch.testing._internal.triton_utils" -> "'triton.language'" [];
	"torch.testing._internal.torchbind_impls" -> "contextlib" [];
	"torch.testing._internal.torchbind_impls" -> "typing" [];
	"torch.testing._internal.torchbind_impls" -> "torch" [];
	"torch.testing._internal.torchbind_impls" -> "unittest" [];
	"torch.testing._internal.test_module.no_future_div" -> "torch" [];
	"torch.testing._internal.static_module" -> "torch" [];
	"torch.testing._internal.quantization_torch_package_models" -> "math" [];
	"torch.testing._internal.quantization_torch_package_models" -> "torch" [];
	"torch.testing._internal.logging_utils" -> "os" [];
	"torch.testing._internal.logging_utils" -> "contextlib" [];
	"torch.testing._internal.logging_utils" -> "logging" [];
	"torch.testing._internal.logging_utils" -> "io" [];
	"torch.testing._internal.jit_metaprogramming_utils" -> "torch" [];
	"torch.testing._internal.jit_metaprogramming_utils" -> "collections" [];
	"torch.testing._internal.jit_metaprogramming_utils" -> "copy" [];
	"torch.testing._internal.jit_metaprogramming_utils" -> "typing" [];
	"torch.testing._internal.jit_metaprogramming_utils" -> "math" [];
	"torch.testing._internal.inductor_utils" -> "logging" [];
	"torch.testing._internal.inductor_utils" -> "torch" [];
	"torch.testing._internal.inductor_utils" -> "re" [];
	"torch.testing._internal.inductor_utils" -> "unittest" [];
	"torch.testing._internal.inductor_utils" -> "functools" [];
	"torch.testing._internal.inductor_utils" -> "os" [];
	"torch.testing._internal.inductor_utils" -> "subprocess" [];
	"torch.testing._internal.inductor_utils" -> "sys" [];
	"torch.testing._internal.hypothesis_utils" -> "collections" [];
	"torch.testing._internal.hypothesis_utils" -> "numpy" [];
	"torch.testing._internal.hypothesis_utils" -> "torch" [];
	"torch.testing._internal.hypothesis_utils" -> "hypothesis" [];
	"torch.testing._internal.hypothesis_utils" -> "functools" [];
	"torch.testing._internal.hypothesis_utils" -> "'hypothesis.extra'" [];
	"torch.testing._internal.hypothesis_utils" -> "'hypothesis.strategies'" [];
	"torch.testing._internal.hypothesis_utils" -> "warnings" [];
	"torch.testing._internal.hop_db" -> "torch" [];
	"torch.testing._internal.hop_db" -> "functools" [];
	"torch.testing._internal.hop_db" -> "unittest" [];
	"torch.testing._internal.opinfo.core" -> "collections" [];
	"torch.testing._internal.opinfo.core" -> "math" [];
	"torch.testing._internal.opinfo.core" -> "operator" [];
	"torch.testing._internal.opinfo.core" -> "unittest" [];
	"torch.testing._internal.opinfo.core" -> "dataclasses" [];
	"torch.testing._internal.opinfo.core" -> "enum" [];
	"torch.testing._internal.opinfo.core" -> "functools" [];
	"torch.testing._internal.opinfo.core" -> "itertools" [];
	"torch.testing._internal.opinfo.core" -> "typing" [];
	"torch.testing._internal.opinfo.core" -> "torch" [];
	"torch.testing._internal.opinfo.utils" -> "collections" [];
	"torch.testing._internal.opinfo.utils" -> "warnings" [];
	"torch.testing._internal.opinfo.utils" -> "functools" [];
	"torch.testing._internal.opinfo.utils" -> "typing" [];
	"torch.testing._internal.opinfo.utils" -> "numpy" [];
	"torch.testing._internal.opinfo.utils" -> "torch" [];
	"torch.testing._internal.opinfo.definitions" -> "typing" [];
	"torch.testing._internal.opinfo.definitions.special" -> "unittest" [];
	"torch.testing._internal.opinfo.definitions.special" -> "functools" [];
	"torch.testing._internal.opinfo.definitions.special" -> "itertools" [];
	"torch.testing._internal.opinfo.definitions.special" -> "typing" [];
	"torch.testing._internal.opinfo.definitions.special" -> "numpy" [];
	"torch.testing._internal.opinfo.definitions.special" -> "torch" [];
	"torch.testing._internal.opinfo.definitions.special" -> "'scipy.special'" [];
	"torch.testing._internal.opinfo.definitions.signal" -> "unittest" [];
	"torch.testing._internal.opinfo.definitions.signal" -> "functools" [];
	"torch.testing._internal.opinfo.definitions.signal" -> "itertools" [];
	"torch.testing._internal.opinfo.definitions.signal" -> "typing" [];
	"torch.testing._internal.opinfo.definitions.signal" -> "numpy" [];
	"torch.testing._internal.opinfo.definitions.signal" -> "torch" [];
	"torch.testing._internal.opinfo.definitions.signal" -> "'scipy.signal'" [];
	"torch.testing._internal.opinfo.definitions.linalg" -> "itertools" [];
	"torch.testing._internal.opinfo.definitions.linalg" -> "random" [];
	"torch.testing._internal.opinfo.definitions.linalg" -> "unittest" [];
	"torch.testing._internal.opinfo.definitions.linalg" -> "functools" [];
	"torch.testing._internal.opinfo.definitions.linalg" -> "typing" [];
	"torch.testing._internal.opinfo.definitions.linalg" -> "numpy" [];
	"torch.testing._internal.opinfo.definitions.linalg" -> "torch" [];
	"torch.testing._internal.opinfo.definitions.fft" -> "unittest" [];
	"torch.testing._internal.opinfo.definitions.fft" -> "functools" [];
	"torch.testing._internal.opinfo.definitions.fft" -> "typing" [];
	"torch.testing._internal.opinfo.definitions.fft" -> "numpy" [];
	"torch.testing._internal.opinfo.definitions.fft" -> "torch" [];
	"torch.testing._internal.opinfo.definitions.fft" -> "'scipy.fft'" [];
	"torch.testing._internal.opinfo.definitions._masked" -> "unittest" [];
	"torch.testing._internal.opinfo.definitions._masked" -> "functools" [];
	"torch.testing._internal.opinfo.definitions._masked" -> "typing" [];
	"torch.testing._internal.opinfo.definitions._masked" -> "numpy" [];
	"torch.testing._internal.opinfo.definitions._masked" -> "torch" [];
	"torch.testing._internal.generated.annotated_fn_args" -> "torch" [];
	"torch.testing._internal.distributed.rpc_utils" -> "os" [];
	"torch.testing._internal.distributed.rpc_utils" -> "sys" [];
	"torch.testing._internal.distributed.rpc_utils" -> "unittest" [];
	"torch.testing._internal.distributed.rpc_utils" -> "typing" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "contextlib" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "json" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "os" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "sys" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "threading" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "time" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "collections" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "functools" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "unittest" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "torch" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "operator" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "datetime" [];
	"torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" -> "os" [];
	"torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" -> "abc" [];
	"torch.testing._internal.distributed.rpc.jit.rpc_test_faulty" -> "typing" [];
	"torch.testing._internal.distributed.rpc.jit.rpc_test_faulty" -> "torch" [];
	"torch.testing._internal.distributed.rpc.jit.rpc_test" -> "time" [];
	"torch.testing._internal.distributed.rpc.jit.rpc_test" -> "io" [];
	"torch.testing._internal.distributed.rpc.jit.rpc_test" -> "typing" [];
	"torch.testing._internal.distributed.rpc.jit.rpc_test" -> "torch" [];
	"torch.testing._internal.distributed.rpc.jit.dist_autograd_test" -> "typing" [];
	"torch.testing._internal.distributed.rpc.jit.dist_autograd_test" -> "torch" [];
	"torch.testing._internal.distributed.rpc.faulty_agent_rpc_test" -> "torch" [];
	"torch.testing._internal.distributed.rpc.faulty_agent_rpc_test" -> "time" [];
	"torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test" -> "numpy" [];
	"torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test" -> "itertools" [];
	"torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test" -> "torch" [];
	"torch.testing._internal.distributed.rpc.examples.parameter_server_test" -> "threading" [];
	"torch.testing._internal.distributed.rpc.examples.parameter_server_test" -> "datetime" [];
	"torch.testing._internal.distributed.rpc.examples.parameter_server_test" -> "time" [];
	"torch.testing._internal.distributed.rpc.examples.parameter_server_test" -> "torch" [];
	"torch.testing._internal.distributed.rpc.dist_optimizer_test" -> "threading" [];
	"torch.testing._internal.distributed.rpc.dist_optimizer_test" -> "torch" [];
	"torch.testing._internal.distributed.rpc.dist_autograd_test" -> "sys" [];
	"torch.testing._internal.distributed.rpc.dist_autograd_test" -> "threading" [];
	"torch.testing._internal.distributed.rpc.dist_autograd_test" -> "time" [];
	"torch.testing._internal.distributed.rpc.dist_autograd_test" -> "enum" [];
	"torch.testing._internal.distributed.rpc.dist_autograd_test" -> "random" [];
	"torch.testing._internal.distributed.rpc.dist_autograd_test" -> "torch" [];
	"torch.testing._internal.distributed.rpc.dist_autograd_test" -> "datetime" [];
	"torch.testing._internal.distributed.nn.api.remote_module_test" -> "enum" [];
	"torch.testing._internal.distributed.nn.api.remote_module_test" -> "typing" [];
	"torch.testing._internal.distributed.nn.api.remote_module_test" -> "torch" [];
	"torch.testing._internal.distributed.multi_threaded_pg" -> "sys" [];
	"torch.testing._internal.distributed.multi_threaded_pg" -> "threading" [];
	"torch.testing._internal.distributed.multi_threaded_pg" -> "dataclasses" [];
	"torch.testing._internal.distributed.multi_threaded_pg" -> "typing" [];
	"torch.testing._internal.distributed.multi_threaded_pg" -> "functools" [];
	"torch.testing._internal.distributed.multi_threaded_pg" -> "torch" [];
	"torch.testing._internal.distributed.multi_threaded_pg" -> "weakref" [];
	"torch.testing._internal.distributed.multi_threaded_pg" -> "'torch._C._distributed_c10d'" [];
	"torch.testing._internal.distributed.distributed_utils" -> "contextlib" [];
	"torch.testing._internal.distributed.distributed_utils" -> "datetime" [];
	"torch.testing._internal.distributed.distributed_utils" -> "functools" [];
	"torch.testing._internal.distributed.distributed_test" -> "copy" [];
	"torch.testing._internal.distributed.distributed_test" -> "json" [];
	"torch.testing._internal.distributed.distributed_test" -> "itertools" [];
	"torch.testing._internal.distributed.distributed_test" -> "math" [];
	"torch.testing._internal.distributed.distributed_test" -> "os" [];
	"torch.testing._internal.distributed.distributed_test" -> "random" [];
	"torch.testing._internal.distributed.distributed_test" -> "sys" [];
	"torch.testing._internal.distributed.distributed_test" -> "tempfile" [];
	"torch.testing._internal.distributed.distributed_test" -> "time" [];
	"torch.testing._internal.distributed.distributed_test" -> "collections" [];
	"torch.testing._internal.distributed.distributed_test" -> "contextlib" [];
	"torch.testing._internal.distributed.distributed_test" -> "dataclasses" [];
	"torch.testing._internal.distributed.distributed_test" -> "datetime" [];
	"torch.testing._internal.distributed.distributed_test" -> "functools" [];
	"torch.testing._internal.distributed.distributed_test" -> "typing" [];
	"torch.testing._internal.distributed.distributed_test" -> "unittest" [];
	"torch.testing._internal.distributed.distributed_test" -> "numpy" [];
	"torch.testing._internal.distributed.distributed_test" -> "torch" [];
	"torch.testing._internal.distributed.distributed_test" -> "operator" [];
	"torch.testing._internal.distributed.distributed_test" -> "torchvision" [];
	"torch.testing._internal.distributed.distributed_test" -> "msvcrt" [];
	"torch.testing._internal.distributed.distributed_test" -> "fcntl" [];
	"torch.testing._internal.distributed.distributed_test" -> "threading" [];
	"torch.testing._internal.distributed.ddp_under_dist_autograd_test" -> "contextlib" [];
	"torch.testing._internal.distributed.ddp_under_dist_autograd_test" -> "enum" [];
	"torch.testing._internal.distributed.ddp_under_dist_autograd_test" -> "logging" [];
	"torch.testing._internal.distributed.ddp_under_dist_autograd_test" -> "os" [];
	"torch.testing._internal.distributed.ddp_under_dist_autograd_test" -> "threading" [];
	"torch.testing._internal.distributed.ddp_under_dist_autograd_test" -> "typing" [];
	"torch.testing._internal.distributed.ddp_under_dist_autograd_test" -> "torch" [];
	"torch.testing._internal.distributed.common_state_dict" -> "copy" [];
	"torch.testing._internal.distributed.common_state_dict" -> "itertools" [];
	"torch.testing._internal.distributed.common_state_dict" -> "typing" [];
	"torch.testing._internal.distributed.common_state_dict" -> "torch" [];
	"torch.testing._internal.distributed.checkpoint_utils" -> "os" [];
	"torch.testing._internal.distributed.checkpoint_utils" -> "shutil" [];
	"torch.testing._internal.distributed.checkpoint_utils" -> "tempfile" [];
	"torch.testing._internal.distributed.checkpoint_utils" -> "functools" [];
	"torch.testing._internal.distributed.checkpoint_utils" -> "typing" [];
	"torch.testing._internal.distributed._tensor.common_dtensor" -> "itertools" [];
	"torch.testing._internal.distributed._tensor.common_dtensor" -> "sys" [];
	"torch.testing._internal.distributed._tensor.common_dtensor" -> "dataclasses" [];
	"torch.testing._internal.distributed._tensor.common_dtensor" -> "functools" [];
	"torch.testing._internal.distributed._tensor.common_dtensor" -> "typing" [];
	"torch.testing._internal.distributed._tensor.common_dtensor" -> "torch" [];
	"torch.testing._internal.distributed._shard.test_common" -> "torch" [];
	"torch.testing._internal.dist_utils" -> "re" [];
	"torch.testing._internal.dist_utils" -> "sys" [];
	"torch.testing._internal.dist_utils" -> "time" [];
	"torch.testing._internal.dist_utils" -> "functools" [];
	"torch.testing._internal.dist_utils" -> "typing" [];
	"torch.testing._internal.custom_tensor" -> "torch" [];
	"torch.testing._internal.custom_op_db" -> "torch" [];
	"torch.testing._internal.custom_op_db" -> "functools" [];
	"torch.testing._internal.custom_op_db" -> "numpy" [];
	"torch.testing._internal.custom_op_db" -> "typing" [];
	"torch.testing._internal.composite_compliance" -> "torch" [];
	"torch.testing._internal.composite_compliance" -> "itertools" [];
	"torch.testing._internal.composite_compliance" -> "functools" [];
	"torch.testing._internal.composite_compliance" -> "typing" [];
	"torch.testing._internal.composite_compliance" -> "re" [];
	"torch.testing._internal.common_subclass" -> "torch" [];
	"torch.testing._internal.common_subclass" -> "copy" [];
	"torch.testing._internal.common_quantized" -> "numpy" [];
	"torch.testing._internal.common_quantized" -> "torch" [];
	"torch.testing._internal.common_quantized" -> "contextlib" [];
	"torch.testing._internal.common_quantization" -> "torch" [];
	"torch.testing._internal.common_quantization" -> "copy" [];
	"torch.testing._internal.common_quantization" -> "io" [];
	"torch.testing._internal.common_quantization" -> "functools" [];
	"torch.testing._internal.common_quantization" -> "time" [];
	"torch.testing._internal.common_quantization" -> "os" [];
	"torch.testing._internal.common_quantization" -> "unittest" [];
	"torch.testing._internal.common_quantization" -> "numpy" [];
	"torch.testing._internal.common_quantization" -> "typing" [];
	"torch.testing._internal.common_quantization" -> "contextlib" [];
	"torch.testing._internal.common_quantization" -> "torchvision" [];
	"torch.testing._internal.common_pruning" -> "typing" [];
	"torch.testing._internal.common_pruning" -> "torch" [];
	"torch.testing._internal.common_optimizers" -> "functools" [];
	"torch.testing._internal.common_optimizers" -> "itertools" [];
	"torch.testing._internal.common_optimizers" -> "sys" [];
	"torch.testing._internal.common_optimizers" -> "unittest" [];
	"torch.testing._internal.common_optimizers" -> "copy" [];
	"torch.testing._internal.common_optimizers" -> "enum" [];
	"torch.testing._internal.common_optimizers" -> "typing" [];
	"torch.testing._internal.common_optimizers" -> "torch" [];
	"torch.testing._internal.common_nn" -> "abc" [];
	"torch.testing._internal.common_nn" -> "tempfile" [];
	"torch.testing._internal.common_nn" -> "unittest" [];
	"torch.testing._internal.common_nn" -> "copy" [];
	"torch.testing._internal.common_nn" -> "functools" [];
	"torch.testing._internal.common_nn" -> "itertools" [];
	"torch.testing._internal.common_nn" -> "operator" [];
	"torch.testing._internal.common_nn" -> "torch" [];
	"torch.testing._internal.common_nn" -> "typing" [];
	"torch.testing._internal.common_modules" -> "torch" [];
	"torch.testing._internal.common_modules" -> "unittest" [];
	"torch.testing._internal.common_modules" -> "copy" [];
	"torch.testing._internal.common_modules" -> "enum" [];
	"torch.testing._internal.common_modules" -> "functools" [];
	"torch.testing._internal.common_modules" -> "itertools" [];
	"torch.testing._internal.common_modules" -> "math" [];
	"torch.testing._internal.common_modules" -> "types" [];
	"torch.testing._internal.common_modules" -> "typing" [];
	"torch.testing._internal.common_modules" -> "operator" [];
	"torch.testing._internal.common_mkldnn" -> "contextlib" [];
	"torch.testing._internal.common_mkldnn" -> "functools" [];
	"torch.testing._internal.common_mkldnn" -> "inspect" [];
	"torch.testing._internal.common_mkldnn" -> "torch" [];
	"torch.testing._internal.common_methods_invocations" -> "functools" [];
	"torch.testing._internal.common_methods_invocations" -> "itertools" [];
	"torch.testing._internal.common_methods_invocations" -> "copy" [];
	"torch.testing._internal.common_methods_invocations" -> "operator" [];
	"torch.testing._internal.common_methods_invocations" -> "random" [];
	"torch.testing._internal.common_methods_invocations" -> "unittest" [];
	"torch.testing._internal.common_methods_invocations" -> "math" [];
	"torch.testing._internal.common_methods_invocations" -> "enum" [];
	"torch.testing._internal.common_methods_invocations" -> "torch" [];
	"torch.testing._internal.common_methods_invocations" -> "numpy" [];
	"torch.testing._internal.common_methods_invocations" -> "typing" [];
	"torch.testing._internal.common_methods_invocations" -> "packaging" [];
	"torch.testing._internal.common_methods_invocations" -> "scipy" [];
	"torch.testing._internal.common_methods_invocations" -> "'scipy.spatial'" [];
	"torch.testing._internal.common_methods_invocations" -> "'scipy.special'" [];
	"torch.testing._internal.opinfo.definitions.sparse" -> "os" [];
	"torch.testing._internal.opinfo.definitions.sparse" -> "torch" [];
	"torch.testing._internal.common_fsdp" -> "contextlib" [];
	"torch.testing._internal.common_fsdp" -> "os" [];
	"torch.testing._internal.common_fsdp" -> "re" [];
	"torch.testing._internal.common_fsdp" -> "sys" [];
	"torch.testing._internal.common_fsdp" -> "warnings" [];
	"torch.testing._internal.common_fsdp" -> "abc" [];
	"torch.testing._internal.common_fsdp" -> "copy" [];
	"torch.testing._internal.common_fsdp" -> "enum" [];
	"torch.testing._internal.common_fsdp" -> "functools" [];
	"torch.testing._internal.common_fsdp" -> "typing" [];
	"torch.testing._internal.common_fsdp" -> "unittest" [];
	"torch.testing._internal.common_fsdp" -> "torch" [];
	"torch.testing._internal.common_distributed" -> "abc" [];
	"torch.testing._internal.common_distributed" -> "faulthandler" [];
	"torch.testing._internal.common_distributed" -> "itertools" [];
	"torch.testing._internal.common_distributed" -> "logging" [];
	"torch.testing._internal.common_distributed" -> "multiprocessing" [];
	"torch.testing._internal.common_distributed" -> "os" [];
	"torch.testing._internal.common_distributed" -> "queue" [];
	"torch.testing._internal.common_distributed" -> "subprocess" [];
	"torch.testing._internal.common_distributed" -> "sys" [];
	"torch.testing._internal.common_distributed" -> "tempfile" [];
	"torch.testing._internal.common_distributed" -> "threading" [];
	"torch.testing._internal.common_distributed" -> "time" [];
	"torch.testing._internal.common_distributed" -> "traceback" [];
	"torch.testing._internal.common_distributed" -> "types" [];
	"torch.testing._internal.common_distributed" -> "unittest" [];
	"torch.testing._internal.common_distributed" -> "contextlib" [];
	"torch.testing._internal.common_distributed" -> "dataclasses" [];
	"torch.testing._internal.common_distributed" -> "datetime" [];
	"torch.testing._internal.common_distributed" -> "enum" [];
	"torch.testing._internal.common_distributed" -> "functools" [];
	"torch.testing._internal.common_distributed" -> "io" [];
	"torch.testing._internal.common_distributed" -> "typing" [];
	"torch.testing._internal.common_distributed" -> "torch" [];
	"torch.testing._internal.common_distributed" -> "operator" [];
	"torch.testing._internal.common_distributed" -> "transformers" [];
	"torch.testing._internal.common_dist_composable" -> "typing" [];
	"torch.testing._internal.common_dist_composable" -> "torch" [];
	"torch.testing._internal.check_kernel_launches" -> "os" [];
	"torch.testing._internal.check_kernel_launches" -> "re" [];
	"torch.testing._internal.check_kernel_launches" -> "sys" [];
	"torch.testing._internal.check_kernel_launches" -> "typing" [];
	"torch.testing._internal.autograd_function_db" -> "torch" [];
	"torch.testing._internal.autograd_function_db" -> "functools" [];
	"torch.testing._internal.autograd_function_db" -> "numpy" [];
	"torch.testing._internal.autocast_test_lists" -> "collections" [];
	"torch.testing._internal.autocast_test_lists" -> "torch" [];
	"torch.signal.windows.windows" -> "typing" [];
	"torch.signal.windows.windows" -> "torch" [];
	"torch.signal.windows.windows" -> "math" [];
	"torch.quantization._quantized_conversions" -> "torch" [];
	"torch.profiler.python_tracer" -> "os" [];
	"torch.profiler.python_tracer" -> "site" [];
	"torch.profiler.python_tracer" -> "sys" [];
	"torch.profiler.python_tracer" -> "typing" [];
	"torch.profiler.python_tracer" -> "torch" [];
	"torch.profiler._pattern_matcher" -> "json" [];
	"torch.profiler._pattern_matcher" -> "math" [];
	"torch.profiler._pattern_matcher" -> "os" [];
	"torch.profiler._pattern_matcher" -> "re" [];
	"torch.profiler._pattern_matcher" -> "typing" [];
	"torch.profiler._pattern_matcher" -> "torch" [];
	"torch.profiler._pattern_matcher" -> "'torch._C._profiler'" [];
	"torch.optim._multi_tensor" -> "functools" [];
	"torch.optim._multi_tensor" -> "torch" [];
	"torch.onnx.verification" -> "__future__" [];
	"torch.onnx.verification" -> "contextlib" [];
	"torch.onnx.verification" -> "copy" [];
	"torch.onnx.verification" -> "dataclasses" [];
	"torch.onnx.verification" -> "datetime" [];
	"torch.onnx.verification" -> "difflib" [];
	"torch.onnx.verification" -> "enum" [];
	"torch.onnx.verification" -> "functools" [];
	"torch.onnx.verification" -> "io" [];
	"torch.onnx.verification" -> "itertools" [];
	"torch.onnx.verification" -> "os" [];
	"torch.onnx.verification" -> "tempfile" [];
	"torch.onnx.verification" -> "warnings" [];
	"torch.onnx.verification" -> "typing" [];
	"torch.onnx.verification" -> "numpy" [];
	"torch.onnx.verification" -> "torch" [];
	"torch.onnx.verification" -> "'torch._C._onnx'" [];
	"torch.onnx.verification" -> "onnxruntime" [];
	"torch.onnx.verification" -> "onnx" [];
	"torch.onnx._onnx_supported_ops" -> "inspect" [];
	"torch.onnx._onnx_supported_ops" -> "typing" [];
	"torch.onnx._onnx_supported_ops" -> "torch" [];
	"torch.onnx._experimental" -> "dataclasses" [];
	"torch.onnx._experimental" -> "typing" [];
	"torch.onnx._experimental" -> "torch" [];
	"torch.onnx._experimental" -> "'torch._C._onnx'" [];
	"torch.nn.utils.prune" -> "numbers" [];
	"torch.nn.utils.prune" -> "abc" [];
	"torch.nn.utils.prune" -> "typing" [];
	"torch.nn.utils.prune" -> "torch" [];
	"torch.nn.utils._per_sample_grad" -> "functools" [];
	"torch.nn.utils._per_sample_grad" -> "torch" [];
	"torch.nn.utils._expanded_weights.linear_expanded_weights" -> "typing" [];
	"torch.nn.utils._expanded_weights.linear_expanded_weights" -> "torch" [];
	"torch.nn.utils._expanded_weights.layer_norm_expanded_weights" -> "typing" [];
	"torch.nn.utils._expanded_weights.layer_norm_expanded_weights" -> "torch" [];
	"torch.nn.utils._expanded_weights.instance_norm_expanded_weights" -> "functools" [];
	"torch.nn.utils._expanded_weights.instance_norm_expanded_weights" -> "typing" [];
	"torch.nn.utils._expanded_weights.instance_norm_expanded_weights" -> "torch" [];
	"torch.nn.utils._expanded_weights.group_norm_expanded_weights" -> "operator" [];
	"torch.nn.utils._expanded_weights.group_norm_expanded_weights" -> "functools" [];
	"torch.nn.utils._expanded_weights.group_norm_expanded_weights" -> "typing" [];
	"torch.nn.utils._expanded_weights.group_norm_expanded_weights" -> "torch" [];
	"torch.nn.utils._expanded_weights.expanded_weights_utils" -> "typing" [];
	"torch.nn.utils._expanded_weights.expanded_weights_utils" -> "torch" [];
	"torch.nn.utils._expanded_weights.expanded_weights_impl" -> "functools" [];
	"torch.nn.utils._expanded_weights.expanded_weights_impl" -> "contextlib" [];
	"torch.nn.utils._expanded_weights.expanded_weights_impl" -> "typing" [];
	"torch.nn.utils._expanded_weights.expanded_weights_impl" -> "torch" [];
	"torch.nn.utils._expanded_weights.embedding_expanded_weights" -> "typing" [];
	"torch.nn.utils._expanded_weights.embedding_expanded_weights" -> "torch" [];
	"torch.nn.utils._expanded_weights.conv_utils" -> "typing" [];
	"torch.nn.utils._expanded_weights.conv_utils" -> "numpy" [];
	"torch.nn.utils._expanded_weights.conv_utils" -> "torch" [];
	"torch.nn.utils._expanded_weights.conv_expanded_weights" -> "torch" [];
	"torch.nn.utils._deprecation_utils" -> "importlib" [];
	"torch.nn.utils._deprecation_utils" -> "warnings" [];
	"torch.nn.utils._deprecation_utils" -> "typing" [];
	"torch.nn.cpp" -> "torch" [];
	"torch.nn.attention.bias" -> "enum" [];
	"torch.nn.attention.bias" -> "typing" [];
	"torch.nn.attention.bias" -> "warnings" [];
	"torch.nn.attention.bias" -> "torch" [];
	"torch.multiprocessing.queue" -> "io" [];
	"torch.multiprocessing.queue" -> "pickle" [];
	"torch.multiprocessing.pool" -> "gc" [];
	"torch.mtia._utils" -> "typing" [];
	"torch.mtia._utils" -> "torch" [];
	"torch.masked.maskedtensor.unary" -> "torch" [];
	"torch.masked.maskedtensor.reductions" -> "warnings" [];
	"torch.masked.maskedtensor.reductions" -> "torch" [];
	"torch.masked.maskedtensor.passthrough" -> "torch" [];
	"torch.masked.maskedtensor.core" -> "warnings" [];
	"torch.masked.maskedtensor.core" -> "typing" [];
	"torch.masked.maskedtensor.core" -> "typing_extensions" [];
	"torch.masked.maskedtensor.core" -> "torch" [];
	"torch.masked.maskedtensor.binary" -> "torch" [];
	"torch.masked.maskedtensor._ops_refs" -> "functools" [];
	"torch.masked.maskedtensor._ops_refs" -> "typing" [];
	"torch.masked.maskedtensor._ops_refs" -> "torch" [];
	"torch.masked._ops" -> "warnings" [];
	"torch.masked._ops" -> "typing" [];
	"torch.masked._ops" -> "torch" [];
	"torch.jit.unsupported_tensor_ops" -> "textwrap" [];
	"torch.jit.unsupported_tensor_ops" -> "typing" [];
	"torch.jit.supported_ops" -> "inspect" [];
	"torch.jit.supported_ops" -> "textwrap" [];
	"torch.jit.mobile" -> "os" [];
	"torch.jit.mobile" -> "torch" [];
	"torch.jit.generate_bytecode" -> "typing" [];
	"torch.jit._shape_functions" -> "math" [];
	"torch.jit._shape_functions" -> "typing" [];
	"torch.jit._shape_functions" -> "torch" [];
	"torch.jit._passes._property_propagation" -> "typing" [];
	"torch.jit._passes._property_propagation" -> "torch" [];
	"torch.jit._decompositions" -> "torch" [];
	"torch.jit._decompositions" -> "inspect" [];
	"torch.jit._decompositions" -> "warnings" [];
	"torch.jit._decompositions" -> "typing" [];
	"torch.jit._decompositions" -> "typing_extensions" [];
	"torch.fx.passes.utils.source_matcher_utils" -> "dataclasses" [];
	"torch.fx.passes.utils.source_matcher_utils" -> "typing" [];
	"torch.fx.passes.utils.source_matcher_utils" -> "logging" [];
	"torch.fx.passes.utils.source_matcher_utils" -> "os" [];
	"torch.fx.passes.tests.test_pass_manager" -> "unittest" [];
	"torch.fx.passes.pass_manager" -> "functools" [];
	"torch.fx.passes.pass_manager" -> "inspect" [];
	"torch.fx.passes.pass_manager" -> "typing" [];
	"torch.fx.passes.pass_manager" -> "logging" [];
	"torch.fx.passes.dialect.common.cse_pass" -> "typing" [];
	"torch.fx.passes.dialect.common.cse_pass" -> "torch" [];
	"torch.fx.passes.backends.cudagraphs" -> "torch" [];
	"torch.fx.passes.backends.cudagraphs" -> "operator" [];
	"torch.fx.passes.annotate_getitem_nodes" -> "operator" [];
	"torch.fx.passes.annotate_getitem_nodes" -> "torch" [];
	"torch.fx.experimental.unification.variable" -> "contextlib" [];
	"torch.fx.experimental.unification.unification_tools" -> "collections" [];
	"torch.fx.experimental.unification.unification_tools" -> "operator" [];
	"torch.fx.experimental.unification.unification_tools" -> "functools" [];
	"torch.fx.experimental.unification.multipledispatch.utils" -> "collections" [];
	"torch.fx.experimental.unification.multipledispatch.dispatcher" -> "warnings" [];
	"torch.fx.experimental.unification.multipledispatch.dispatcher" -> "inspect" [];
	"torch.fx.experimental.unification.multipledispatch.dispatcher" -> "typing_extensions" [];
	"torch.fx.experimental.unification.multipledispatch.dispatcher" -> "itertools" [];
	"torch.fx.experimental.unification.multipledispatch.core" -> "inspect" [];
	"torch.fx.experimental.unification.multipledispatch.core" -> "sys" [];
	"torch.fx.experimental.unification.multipledispatch.conflict" -> "operator" [];
	"torch.fx.experimental.unification.dispatch" -> "functools" [];
	"torch.fx.experimental.unification.core" -> "functools" [];
	"torch.fx.experimental.schema_type_annotation" -> "torch" [];
	"torch.fx.experimental.schema_type_annotation" -> "inspect" [];
	"torch.fx.experimental.schema_type_annotation" -> "typing" [];
	"torch.fx.experimental.rewriter" -> "ast" [];
	"torch.fx.experimental.rewriter" -> "inspect" [];
	"torch.fx.experimental.rewriter" -> "textwrap" [];
	"torch.fx.experimental.rewriter" -> "copy" [];
	"torch.fx.experimental.rewriter" -> "functools" [];
	"torch.fx.experimental.rewriter" -> "types" [];
	"torch.fx.experimental.rewriter" -> "typing" [];
	"torch.fx.experimental.rewriter" -> "torch" [];
	"torch.fx.experimental.partitioner_utils" -> "enum" [];
	"torch.fx.experimental.partitioner_utils" -> "typing" [];
	"torch.fx.experimental.normalize" -> "operator" [];
	"torch.fx.experimental.normalize" -> "typing" [];
	"torch.fx.experimental.normalize" -> "torch" [];
	"torch.fx.experimental.migrate_gradual_types.z3_types" -> "z3" [];
	"torch.fx.experimental.migrate_gradual_types.transform_to_z3" -> "z3" [];
	"torch.fx.experimental.migrate_gradual_types.constraint_transformation" -> "copy" [];
	"torch.fx.experimental.migrate_gradual_types.constraint_transformation" -> "itertools" [];
	"torch.fx.experimental.migrate_gradual_types.constraint_transformation" -> "typing" [];
	"torch.fx.experimental.migrate_gradual_types.constraint_generator" -> "torch" [];
	"torch.fx.experimental.migrate_gradual_types.constraint_generator" -> "operator" [];
	"torch.fx.experimental.migrate_gradual_types.constraint_generator" -> "warnings" [];
	"torch.fx.experimental.migrate_gradual_types.constraint_generator" -> "typing" [];
	"torch.fx.experimental.meta_tracer" -> "torch" [];
	"torch.fx.experimental.meta_tracer" -> "warnings" [];
	"torch.fx.experimental.meta_tracer" -> "functools" [];
	"torch.fx.experimental.meta_tracer" -> "builtins" [];
	"torch.fx.experimental.meta_tracer" -> "typing" [];
	"torch.fx.experimental.merge_matmul" -> "torch" [];
	"torch.fx.experimental.merge_matmul" -> "itertools" [];
	"torch.fx.experimental.merge_matmul" -> "operator" [];
	"torch.fx.experimental.merge_matmul" -> "typing" [];
	"torch.fx.experimental.graph_gradual_typechecker" -> "functools" [];
	"torch.fx.experimental.graph_gradual_typechecker" -> "torch" [];
	"torch.fx.experimental.graph_gradual_typechecker" -> "operator" [];
	"torch.fx.experimental.graph_gradual_typechecker" -> "typing" [];
	"torch.fx.experimental.graph_gradual_typechecker" -> "itertools" [];
	"torch.fx.experimental.graph_gradual_typechecker" -> "sympy" [];
	"torch.fx.experimental.accelerator_partitioner" -> "operator" [];
	"torch.fx.experimental.accelerator_partitioner" -> "collections" [];
	"torch.fx.experimental.accelerator_partitioner" -> "typing" [];
	"torch.fx.experimental.accelerator_partitioner" -> "torch" [];
	"torch.export.passes" -> "typing" [];
	"torch.export.passes" -> "torch" [];
	"torch.export.experimental" -> "copy" [];
	"torch.export.experimental" -> "typing" [];
	"torch.export.experimental" -> "torch" [];
	"torch.export.custom_obj" -> "dataclasses" [];
	"torch.export._remove_auto_functionalized_pass" -> "torch" [];
	"torch.distributed.tensor.parallel.input_reshard" -> "functools" [];
	"torch.distributed.tensor.parallel.input_reshard" -> "typing" [];
	"torch.distributed.tensor.parallel.input_reshard" -> "torch" [];
	"torch.distributed.tensor.experimental._tp_transform" -> "copy" [];
	"torch.distributed.tensor.experimental._tp_transform" -> "operator" [];
	"torch.distributed.tensor.experimental._tp_transform" -> "typing" [];
	"torch.distributed.tensor.experimental._tp_transform" -> "torch" [];
	"torch.distributed.tensor.experimental._register_sharding" -> "functools" [];
	"torch.distributed.tensor.experimental._register_sharding" -> "typing" [];
	"torch.distributed.tensor.experimental._register_sharding" -> "torch" [];
	"torch.distributed.tensor.experimental._func_map" -> "typing" [];
	"torch.distributed.tensor.experimental._func_map" -> "torch" [];
	"torch.distributed.tensor.experimental._attention" -> "contextlib" [];
	"torch.distributed.tensor.experimental._attention" -> "itertools" [];
	"torch.distributed.tensor.experimental._attention" -> "logging" [];
	"torch.distributed.tensor.experimental._attention" -> "types" [];
	"torch.distributed.tensor.experimental._attention" -> "weakref" [];
	"torch.distributed.tensor.experimental._attention" -> "enum" [];
	"torch.distributed.tensor.experimental._attention" -> "typing" [];
	"torch.distributed.tensor.experimental._attention" -> "torch" [];
	"torch.distributed.tensor.experimental" -> "contextlib" [];
	"torch.distributed.tensor.debug._visualize_sharding" -> "typing" [];
	"torch.distributed.tensor.debug._visualize_sharding" -> "numpy" [];
	"torch.distributed.tensor.debug._visualize_sharding" -> "tabulate" [];
	"torch.distributed.tensor.debug._op_coverage" -> "operator" [];
	"torch.distributed.tensor.debug._op_coverage" -> "typing" [];
	"torch.distributed.tensor.debug._op_coverage" -> "torch" [];
	"torch.distributed.tensor.debug._op_coverage" -> "csv" [];
	"torch.distributed.tensor.debug._op_coverage" -> "tabulate" [];
	"torch.distributed.tensor.debug._comm_mode" -> "copy" [];
	"torch.distributed.tensor.debug._comm_mode" -> "json" [];
	"torch.distributed.tensor.debug._comm_mode" -> "re" [];
	"torch.distributed.tensor.debug._comm_mode" -> "weakref" [];
	"torch.distributed.tensor.debug._comm_mode" -> "collections" [];
	"torch.distributed.tensor.debug._comm_mode" -> "typing" [];
	"torch.distributed.tensor.debug._comm_mode" -> "torch" [];
	"torch.distributed.tensor._shards_wrapper" -> "typing" [];
	"torch.distributed.tensor._shards_wrapper" -> "torch" [];
	"torch.distributed.run" -> "logging" [];
	"torch.distributed.run" -> "os" [];
	"torch.distributed.run" -> "sys" [];
	"torch.distributed.run" -> "uuid" [];
	"torch.distributed.run" -> "argparse" [];
	"torch.distributed.run" -> "importlib" [];
	"torch.distributed.run" -> "typing" [];
	"torch.distributed.run" -> "torch" [];
	"torch.distributed.run" -> "runpy" [];
	"torch.distributed.rpc.rref_proxy" -> "functools" [];
	"torch.distributed.rpc.rref_proxy" -> "torch" [];
	"torch.distributed.rpc._testing" -> "torch" [];
	"torch.distributed.rpc._testing" -> "'torch._C._distributed_rpc_testing'" [];
	"torch.distributed.pipelining.stage" -> "logging" [];
	"torch.distributed.pipelining.stage" -> "operator" [];
	"torch.distributed.pipelining.stage" -> "abc" [];
	"torch.distributed.pipelining.stage" -> "typing" [];
	"torch.distributed.pipelining.stage" -> "torch" [];
	"torch.distributed.pipelining.schedules" -> "csv" [];
	"torch.distributed.pipelining.schedules" -> "itertools" [];
	"torch.distributed.pipelining.schedules" -> "logging" [];
	"torch.distributed.pipelining.schedules" -> "re" [];
	"torch.distributed.pipelining.schedules" -> "abc" [];
	"torch.distributed.pipelining.schedules" -> "collections" [];
	"torch.distributed.pipelining.schedules" -> "enum" [];
	"torch.distributed.pipelining.schedules" -> "typing" [];
	"torch.distributed.pipelining.schedules" -> "torch" [];
	"torch.distributed.pipelining.microbatch" -> "logging" [];
	"torch.distributed.pipelining.microbatch" -> "typing" [];
	"torch.distributed.pipelining.microbatch" -> "torch" [];
	"torch.distributed.pipelining._utils" -> "logging" [];
	"torch.distributed.pipelining._utils" -> "dataclasses" [];
	"torch.distributed.pipelining._utils" -> "typing" [];
	"torch.distributed.pipelining._utils" -> "torch" [];
	"torch.distributed.pipelining._unflatten" -> "typing" [];
	"torch.distributed.pipelining._unflatten" -> "torch" [];
	"torch.distributed.pipelining._debug" -> "torch" [];
	"torch.distributed.pipelining._backward" -> "collections" [];
	"torch.distributed.pipelining._backward" -> "logging" [];
	"torch.distributed.pipelining._backward" -> "weakref" [];
	"torch.distributed.pipelining._backward" -> "typing" [];
	"torch.distributed.pipelining._backward" -> "torch" [];
	"torch.distributed.pipelining._IR" -> "copy" [];
	"torch.distributed.pipelining._IR" -> "logging" [];
	"torch.distributed.pipelining._IR" -> "operator" [];
	"torch.distributed.pipelining._IR" -> "collections" [];
	"torch.distributed.pipelining._IR" -> "enum" [];
	"torch.distributed.pipelining._IR" -> "inspect" [];
	"torch.distributed.pipelining._IR" -> "types" [];
	"torch.distributed.pipelining._IR" -> "typing" [];
	"torch.distributed.pipelining._IR" -> "torch" [];
	"torch.distributed.launcher.api" -> "sys" [];
	"torch.distributed.launcher.api" -> "uuid" [];
	"torch.distributed.launcher.api" -> "dataclasses" [];
	"torch.distributed.launcher.api" -> "typing" [];
	"torch.distributed.launch" -> "typing_extensions" [];
	"torch.distributed.fsdp.sharded_grad_scaler" -> "logging" [];
	"torch.distributed.fsdp.sharded_grad_scaler" -> "collections" [];
	"torch.distributed.fsdp.sharded_grad_scaler" -> "typing" [];
	"torch.distributed.fsdp.sharded_grad_scaler" -> "torch" [];
	"torch.distributed.fsdp._trace_utils" -> "functools" [];
	"torch.distributed.fsdp._trace_utils" -> "contextlib" [];
	"torch.distributed.fsdp._trace_utils" -> "dataclasses" [];
	"torch.distributed.fsdp._trace_utils" -> "typing" [];
	"torch.distributed.fsdp._trace_utils" -> "torch" [];
	"torch.distributed.elastic.utils.store" -> "contextlib" [];
	"torch.distributed.elastic.utils.store" -> "datetime" [];
	"torch.distributed.elastic.utils.store" -> "typing" [];
	"torch.distributed.elastic.utils.store" -> "torch" [];
	"torch.distributed.elastic.utils.logging" -> "inspect" [];
	"torch.distributed.elastic.utils.logging" -> "logging" [];
	"torch.distributed.elastic.utils.logging" -> "os" [];
	"torch.distributed.elastic.utils.logging" -> "warnings" [];
	"torch.distributed.elastic.utils.logging" -> "typing" [];
	"torch.distributed.elastic.utils.distributed" -> "datetime" [];
	"torch.distributed.elastic.utils.distributed" -> "os" [];
	"torch.distributed.elastic.utils.distributed" -> "socket" [];
	"torch.distributed.elastic.utils.distributed" -> "contextlib" [];
	"torch.distributed.elastic.utils.distributed" -> "typing" [];
	"torch.distributed.elastic.utils.data.elastic_distributed_sampler" -> "math" [];
	"torch.distributed.elastic.utils.data.elastic_distributed_sampler" -> "torch" [];
	"torch.distributed.elastic.utils.api" -> "os" [];
	"torch.distributed.elastic.utils.api" -> "socket" [];
	"torch.distributed.elastic.utils.api" -> "string" [];
	"torch.distributed.elastic.utils.api" -> "typing" [];
	"torch.distributed.elastic.timer.local_timer" -> "logging" [];
	"torch.distributed.elastic.timer.local_timer" -> "multiprocessing" [];
	"torch.distributed.elastic.timer.local_timer" -> "os" [];
	"torch.distributed.elastic.timer.local_timer" -> "signal" [];
	"torch.distributed.elastic.timer.local_timer" -> "time" [];
	"torch.distributed.elastic.timer.local_timer" -> "queue" [];
	"torch.distributed.elastic.timer.local_timer" -> "typing" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "io" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "json" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "os" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "select" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "signal" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "sys" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "threading" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "time" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "typing" [];
	"torch.distributed.elastic.timer.debug_info_logging" -> "typing" [];
	"torch.distributed.elastic.timer.api" -> "abc" [];
	"torch.distributed.elastic.timer.api" -> "logging" [];
	"torch.distributed.elastic.timer.api" -> "threading" [];
	"torch.distributed.elastic.timer.api" -> "time" [];
	"torch.distributed.elastic.timer.api" -> "contextlib" [];
	"torch.distributed.elastic.timer.api" -> "inspect" [];
	"torch.distributed.elastic.timer.api" -> "typing" [];
	"torch.distributed.elastic.rendezvous.utils" -> "ipaddress" [];
	"torch.distributed.elastic.rendezvous.utils" -> "random" [];
	"torch.distributed.elastic.rendezvous.utils" -> "re" [];
	"torch.distributed.elastic.rendezvous.utils" -> "socket" [];
	"torch.distributed.elastic.rendezvous.utils" -> "time" [];
	"torch.distributed.elastic.rendezvous.utils" -> "weakref" [];
	"torch.distributed.elastic.rendezvous.utils" -> "datetime" [];
	"torch.distributed.elastic.rendezvous.utils" -> "threading" [];
	"torch.distributed.elastic.rendezvous.utils" -> "typing" [];
	"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" -> "datetime" [];
	"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" -> "logging" [];
	"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" -> "typing" [];
	"torch.distributed.elastic.rendezvous.etcd_store" -> "datetime" [];
	"torch.distributed.elastic.rendezvous.etcd_store" -> "random" [];
	"torch.distributed.elastic.rendezvous.etcd_store" -> "time" [];
	"torch.distributed.elastic.rendezvous.etcd_store" -> "base64" [];
	"torch.distributed.elastic.rendezvous.etcd_store" -> "typing" [];
	"torch.distributed.elastic.rendezvous.etcd_store" -> "etcd" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "atexit" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "logging" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "os" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "shlex" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "shutil" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "socket" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "subprocess" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "tempfile" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "time" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "typing" [];
	"torch.distributed.elastic.rendezvous.etcd_server" -> "etcd" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "binascii" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "base64" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "typing" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "etcd" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "json" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "logging" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "sys" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "threading" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "time" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "typing" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "etcd" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "inspect" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "logging" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "os" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "pickle" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "socket" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "threading" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "time" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "weakref" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "abc" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "dataclasses" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "datetime" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "enum" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "typing" [];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "binascii" [];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "logging" [];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "os" [];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "tempfile" [];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "base64" [];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "datetime" [];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "typing" [];
	"torch.distributed.elastic.rendezvous.api" -> "socket" [];
	"torch.distributed.elastic.rendezvous.api" -> "abc" [];
	"torch.distributed.elastic.rendezvous.api" -> "dataclasses" [];
	"torch.distributed.elastic.rendezvous.api" -> "typing" [];
	"torch.distributed.elastic.multiprocessing.tail_log" -> "logging" [];
	"torch.distributed.elastic.multiprocessing.tail_log" -> "os" [];
	"torch.distributed.elastic.multiprocessing.tail_log" -> "time" [];
	"torch.distributed.elastic.multiprocessing.tail_log" -> "threading" [];
	"torch.distributed.elastic.multiprocessing.tail_log" -> "typing" [];
	"torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" -> "os" [];
	"torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" -> "signal" [];
	"torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" -> "subprocess" [];
	"torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" -> "sys" [];
	"torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" -> "typing" [];
	"torch.distributed.elastic.multiprocessing.subprocess_handler.handlers" -> "typing" [];
	"torch.distributed.elastic.multiprocessing.redirects" -> "ctypes" [];
	"torch.distributed.elastic.multiprocessing.redirects" -> "logging" [];
	"torch.distributed.elastic.multiprocessing.redirects" -> "os" [];
	"torch.distributed.elastic.multiprocessing.redirects" -> "sys" [];
	"torch.distributed.elastic.multiprocessing.redirects" -> "contextlib" [];
	"torch.distributed.elastic.multiprocessing.redirects" -> "functools" [];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" -> "faulthandler" [];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" -> "json" [];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" -> "logging" [];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" -> "os" [];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" -> "time" [];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" -> "traceback" [];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" -> "warnings" [];
	"torch.distributed.elastic.multiprocessing.errors.error_handler" -> "typing" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "json" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "os" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "signal" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "socket" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "time" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "warnings" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "dataclasses" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "datetime" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "functools" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "string" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "typing" [];
	"torch.distributed.elastic.multiprocessing.api" -> "abc" [];
	"torch.distributed.elastic.multiprocessing.api" -> "logging" [];
	"torch.distributed.elastic.multiprocessing.api" -> "os" [];
	"torch.distributed.elastic.multiprocessing.api" -> "re" [];
	"torch.distributed.elastic.multiprocessing.api" -> "shutil" [];
	"torch.distributed.elastic.multiprocessing.api" -> "signal" [];
	"torch.distributed.elastic.multiprocessing.api" -> "subprocess" [];
	"torch.distributed.elastic.multiprocessing.api" -> "sys" [];
	"torch.distributed.elastic.multiprocessing.api" -> "tempfile" [];
	"torch.distributed.elastic.multiprocessing.api" -> "threading" [];
	"torch.distributed.elastic.multiprocessing.api" -> "time" [];
	"torch.distributed.elastic.multiprocessing.api" -> "contextlib" [];
	"torch.distributed.elastic.multiprocessing.api" -> "dataclasses" [];
	"torch.distributed.elastic.multiprocessing.api" -> "enum" [];
	"torch.distributed.elastic.multiprocessing.api" -> "multiprocessing" [];
	"torch.distributed.elastic.multiprocessing.api" -> "types" [];
	"torch.distributed.elastic.multiprocessing.api" -> "typing" [];
	"torch.distributed.elastic.multiprocessing" -> "typing" [];
	"torch.distributed.elastic.metrics.api" -> "abc" [];
	"torch.distributed.elastic.metrics.api" -> "time" [];
	"torch.distributed.elastic.metrics.api" -> "collections" [];
	"torch.distributed.elastic.metrics.api" -> "functools" [];
	"torch.distributed.elastic.metrics.api" -> "typing" [];
	"torch.distributed.elastic.metrics.api" -> "typing_extensions" [];
	"torch.distributed.elastic.metrics" -> "typing" [];
	"torch.distributed.elastic.metrics" -> "'torch.distributed.elastic.metrics.static_init'" [];
	"torch.distributed.elastic.events.handlers" -> "logging" [];
	"torch.distributed.elastic.events.handlers" -> "typing" [];
	"torch.distributed.elastic.events.api" -> "json" [];
	"torch.distributed.elastic.events.api" -> "dataclasses" [];
	"torch.distributed.elastic.events.api" -> "enum" [];
	"torch.distributed.elastic.events.api" -> "typing" [];
	"torch.distributed.elastic.events" -> "inspect" [];
	"torch.distributed.elastic.events" -> "logging" [];
	"torch.distributed.elastic.events" -> "os" [];
	"torch.distributed.elastic.events" -> "socket" [];
	"torch.distributed.elastic.events" -> "traceback" [];
	"torch.distributed.elastic.events" -> "typing" [];
	"torch.distributed.elastic.control_plane" -> "os" [];
	"torch.distributed.elastic.control_plane" -> "contextlib" [];
	"torch.distributed.elastic.control_plane" -> "typing" [];
	"torch.distributed.elastic.control_plane" -> "'torch._C._distributed_c10d'" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "json" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "os" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "signal" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "socket" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "time" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "uuid" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "string" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "typing" [];
	"torch.distributed.elastic.agent.server.health_check_server" -> "typing" [];
	"torch.distributed.elastic.agent.server.api" -> "abc" [];
	"torch.distributed.elastic.agent.server.api" -> "json" [];
	"torch.distributed.elastic.agent.server.api" -> "os" [];
	"torch.distributed.elastic.agent.server.api" -> "signal" [];
	"torch.distributed.elastic.agent.server.api" -> "socket" [];
	"torch.distributed.elastic.agent.server.api" -> "time" [];
	"torch.distributed.elastic.agent.server.api" -> "traceback" [];
	"torch.distributed.elastic.agent.server.api" -> "warnings" [];
	"torch.distributed.elastic.agent.server.api" -> "collections" [];
	"torch.distributed.elastic.agent.server.api" -> "contextlib" [];
	"torch.distributed.elastic.agent.server.api" -> "dataclasses" [];
	"torch.distributed.elastic.agent.server.api" -> "enum" [];
	"torch.distributed.elastic.agent.server.api" -> "typing" [];
	"torch.distributed.collective_utils" -> "__future__" [];
	"torch.distributed.collective_utils" -> "dataclasses" [];
	"torch.distributed.collective_utils" -> "typing" [];
	"torch.distributed.checkpoint.state_dict" -> "contextlib" [];
	"torch.distributed.checkpoint.state_dict" -> "functools" [];
	"torch.distributed.checkpoint.state_dict" -> "gc" [];
	"torch.distributed.checkpoint.state_dict" -> "warnings" [];
	"torch.distributed.checkpoint.state_dict" -> "dataclasses" [];
	"torch.distributed.checkpoint.state_dict" -> "itertools" [];
	"torch.distributed.checkpoint.state_dict" -> "typing" [];
	"torch.distributed.checkpoint.state_dict" -> "torch" [];
	"torch.distributed.checkpoint.format_utils" -> "argparse" [];
	"torch.distributed.checkpoint.format_utils" -> "os" [];
	"torch.distributed.checkpoint.format_utils" -> "enum" [];
	"torch.distributed.checkpoint.format_utils" -> "typing" [];
	"torch.distributed.checkpoint.format_utils" -> "torch" [];
	"torch.distributed.checkpoint._dedup_tensors" -> "dataclasses" [];
	"torch.distributed.checkpoint._dedup_tensors" -> "logging" [];
	"torch.distributed.checkpoint._dedup_tensors" -> "typing" [];
	"torch.distributed.checkpoint._checkpointer" -> "typing" [];
	"torch.distributed.argparse_util" -> "os" [];
	"torch.distributed.argparse_util" -> "argparse" [];
	"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" -> "logging" [];
	"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" -> "warnings" [];
	"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" -> "collections" [];
	"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" -> "typing" [];
	"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook" -> "logging" [];
	"torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook" -> "weakref" [];
	"torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook" -> "typing" [];
	"torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook" -> "torch" [];
	"torch.distributed.algorithms._quantization.quantization" -> "functools" [];
	"torch.distributed.algorithms._quantization.quantization" -> "enum" [];
	"torch.distributed.algorithms._quantization.quantization" -> "torch" [];
	"torch.distributed._tools.runtime_estimator" -> "math" [];
	"torch.distributed._tools.runtime_estimator" -> "os" [];
	"torch.distributed._tools.runtime_estimator" -> "collections" [];
	"torch.distributed._tools.runtime_estimator" -> "typing" [];
	"torch.distributed._tools.runtime_estimator" -> "typing_extensions" [];
	"torch.distributed._tools.runtime_estimator" -> "torch" [];
	"torch.distributed._tools.mod_tracker" -> "warnings" [];
	"torch.distributed._tools.mod_tracker" -> "weakref" [];
	"torch.distributed._tools.mod_tracker" -> "typing" [];
	"torch.distributed._tools.mod_tracker" -> "torch" [];
	"torch.distributed._tools.memory_tracker" -> "operator" [];
	"torch.distributed._tools.memory_tracker" -> "pickle" [];
	"torch.distributed._tools.memory_tracker" -> "collections" [];
	"torch.distributed._tools.memory_tracker" -> "itertools" [];
	"torch.distributed._tools.memory_tracker" -> "typing" [];
	"torch.distributed._tools.memory_tracker" -> "torch" [];
	"torch.distributed._tools.memory_tracker" -> "'matplotlib.pyplot'" [];
	"torch.distributed._tools.mem_tracker" -> "math" [];
	"torch.distributed._tools.mem_tracker" -> "os" [];
	"torch.distributed._tools.mem_tracker" -> "re" [];
	"torch.distributed._tools.mem_tracker" -> "warnings" [];
	"torch.distributed._tools.mem_tracker" -> "copy" [];
	"torch.distributed._tools.mem_tracker" -> "enum" [];
	"torch.distributed._tools.mem_tracker" -> "functools" [];
	"torch.distributed._tools.mem_tracker" -> "typing" [];
	"torch.distributed._tools.mem_tracker" -> "typing_extensions" [];
	"torch.distributed._tools.mem_tracker" -> "torch" [];
	"torch.distributed._tools.mem_tracker" -> "tabulate" [];
	"torch.distributed._tools.fsdp2_mem_tracker" -> "copy" [];
	"torch.distributed._tools.fsdp2_mem_tracker" -> "datetime" [];
	"torch.distributed._tools.fsdp2_mem_tracker" -> "functools" [];
	"torch.distributed._tools.fsdp2_mem_tracker" -> "typing" [];
	"torch.distributed._tools.fsdp2_mem_tracker" -> "torch" [];
	"torch.distributed._tensor" -> "sys" [];
	"torch.distributed._tensor" -> "importlib" [];
	"torch.distributed._sharding_spec" -> "sys" [];
	"torch.distributed._sharding_spec" -> "warnings" [];
	"torch.distributed._sharding_spec" -> "torch" [];
	"torch.distributed._sharded_tensor" -> "sys" [];
	"torch.distributed._sharded_tensor" -> "warnings" [];
	"torch.distributed._sharded_tensor" -> "torch" [];
	"torch.distributed._shard.sharded_tensor.logging_handlers" -> "logging" [];
	"torch.distributed._shard.sharded_tensor.logging_handlers" -> "typing" [];
	"torch.distributed._shard.sharded_tensor.logger" -> "logging" [];
	"torch.distributed._shard.sharded_tensor.logger" -> "typing" [];
	"torch.distributed._shard.sharded_optim.api" -> "typing" [];
	"torch.distributed._shard.sharded_optim.api" -> "torch" [];
	"torch.distributed._shard.sharded_optim" -> "typing" [];
	"torch.distributed._shard.checkpoint" -> "sys" [];
	"torch.distributed._shard.checkpoint" -> "warnings" [];
	"torch.distributed._shard.checkpoint" -> "torch" [];
	"torch.distributed._checkpointable" -> "typing" [];
	"torch.distributed._checkpointable" -> "torch" [];
	"torch.cuda._gpu_trace" -> "typing" [];
	"torch.cpu.amp.grad_scaler" -> "typing_extensions" [];
	"torch.cpu.amp.grad_scaler" -> "torch" [];
	"torch.cpu.amp.autocast_mode" -> "typing" [];
	"torch.cpu.amp.autocast_mode" -> "typing_extensions" [];
	"torch.cpu.amp.autocast_mode" -> "torch" [];
	"torch.contrib._tensorboard_vis" -> "time" [];
	"torch.contrib._tensorboard_vis" -> "collections" [];
	"torch.contrib._tensorboard_vis" -> "functools" [];
	"torch.contrib._tensorboard_vis" -> "typing" [];
	"torch.contrib._tensorboard_vis" -> "torch" [];
	"torch.contrib._tensorboard_vis" -> "'tensorflow.core'" [];
	"torch.contrib._tensorboard_vis" -> "'tensorflow.python'" [];
	"torch.backends.xeon.run_cpu" -> "glob" [];
	"torch.backends.xeon.run_cpu" -> "logging" [];
	"torch.backends.xeon.run_cpu" -> "os" [];
	"torch.backends.xeon.run_cpu" -> "platform" [];
	"torch.backends.xeon.run_cpu" -> "re" [];
	"torch.backends.xeon.run_cpu" -> "subprocess" [];
	"torch.backends.xeon.run_cpu" -> "sys" [];
	"torch.backends.xeon.run_cpu" -> "argparse" [];
	"torch.backends.xeon.run_cpu" -> "os.path" [];
	"torch.backends.xeon.run_cpu" -> "typing" [];
	"torch.backends._nnapi.serializer" -> "array" [];
	"torch.backends._nnapi.serializer" -> "enum" [];
	"torch.backends._nnapi.serializer" -> "functools" [];
	"torch.backends._nnapi.serializer" -> "logging" [];
	"torch.backends._nnapi.serializer" -> "operator" [];
	"torch.backends._nnapi.serializer" -> "struct" [];
	"torch.backends._nnapi.serializer" -> "sys" [];
	"torch.backends._nnapi.serializer" -> "typing" [];
	"torch.backends._nnapi.serializer" -> "torch" [];
	"torch.backends._nnapi.prepare" -> "typing" [];
	"torch.backends._nnapi.prepare" -> "torch" [];
	"torch.backends._coreml.preprocess" -> "hashlib" [];
	"torch.backends._coreml.preprocess" -> "json" [];
	"torch.backends._coreml.preprocess" -> "typing" [];
	"torch.backends._coreml.preprocess" -> "coremltools" [];
	"torch.backends._coreml.preprocess" -> "'coremltools.converters'" [];
	"torch.backends._coreml.preprocess" -> "'coremltools.models'" [];
	"torch.backends._coreml.preprocess" -> "torch" [];
	"torch.autograd._functions.utils" -> "operator" [];
	"torch.autograd._functions.utils" -> "functools" [];
	"torch.autograd._functions.tensor" -> "operator" [];
	"torch.autograd._functions.tensor" -> "functools" [];
	"torch.autograd._functions.tensor" -> "typing_extensions" [];
	"torch.autograd._functions.tensor" -> "torch" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" -> "itertools" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" -> "dataclasses" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" -> "typing" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" -> "torch" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer" -> "__future__" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer" -> "copy" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer" -> "functools" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer" -> "typing" [];
	"torch.ao.quantization.quantizer.xnnpack_quantizer" -> "torch" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "copy" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "functools" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "itertools" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "operator" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "warnings" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "dataclasses" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "typing" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "typing_extensions" [];
	"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "torch" [];
	"torch.ao.quantization.quantizer.utils" -> "typing" [];
	"torch.ao.quantization.quantizer.embedding_quantizer" -> "__future__" [];
	"torch.ao.quantization.quantizer.embedding_quantizer" -> "copy" [];
	"torch.ao.quantization.quantizer.embedding_quantizer" -> "typing" [];
	"torch.ao.quantization.quantizer.embedding_quantizer" -> "torch" [];
	"torch.ao.quantization.quantizer.composable_quantizer" -> "__future__" [];
	"torch.ao.quantization.quantizer.composable_quantizer" -> "typing" [];
	"torch.ao.quantization.quantizer.composable_quantizer" -> "torch" [];
	"torch.ao.quantization.quantize_pt2e" -> "torch" [];
	"torch.ao.quantization.pt2e.representation.rewrite" -> "dataclasses" [];
	"torch.ao.quantization.pt2e.representation.rewrite" -> "functools" [];
	"torch.ao.quantization.pt2e.representation.rewrite" -> "typing" [];
	"torch.ao.quantization.pt2e.representation.rewrite" -> "torch" [];
	"torch.ao.quantization.pt2e.qat_utils" -> "dataclasses" [];
	"torch.ao.quantization.pt2e.qat_utils" -> "itertools" [];
	"torch.ao.quantization.pt2e.qat_utils" -> "operator" [];
	"torch.ao.quantization.pt2e.qat_utils" -> "typing" [];
	"torch.ao.quantization.pt2e.qat_utils" -> "torch" [];
	"torch.ao.quantization.pt2e.prepare" -> "typing" [];
	"torch.ao.quantization.pt2e.prepare" -> "torch" [];
	"torch.ao.quantization.pt2e.port_metadata_pass" -> "logging" [];
	"torch.ao.quantization.pt2e.port_metadata_pass" -> "typing" [];
	"torch.ao.quantization.pt2e.port_metadata_pass" -> "torch" [];
	"torch.ao.quantization.pt2e.port_metadata_pass" -> "collections" [];
	"torch.ao.quantization.pt2e.graph_utils" -> "itertools" [];
	"torch.ao.quantization.pt2e.graph_utils" -> "operator" [];
	"torch.ao.quantization.pt2e.graph_utils" -> "typing" [];
	"torch.ao.quantization.pt2e.graph_utils" -> "torch" [];
	"torch.ao.quantization.pt2e.duplicate_dq_pass" -> "logging" [];
	"torch.ao.quantization.pt2e.duplicate_dq_pass" -> "operator" [];
	"torch.ao.quantization.pt2e.duplicate_dq_pass" -> "torch" [];
	"torch.ao.quantization.fx.lstm_utils" -> "copy" [];
	"torch.ao.quantization.fx.lstm_utils" -> "operator" [];
	"torch.ao.quantization.fx.lstm_utils" -> "typing" [];
	"torch.ao.quantization.fx.lstm_utils" -> "torch" [];
	"torch.ao.quantization.fx.lower_to_qnnpack" -> "typing" [];
	"torch.ao.quantization.fx._model_report.model_report_visualizer" -> "collections" [];
	"torch.ao.quantization.fx._model_report.model_report_visualizer" -> "typing" [];
	"torch.ao.quantization.fx._model_report.model_report_visualizer" -> "torch" [];
	"torch.ao.quantization.fx._model_report.model_report_visualizer" -> "tabulate" [];
	"torch.ao.quantization.fx._model_report.model_report_visualizer" -> "'matplotlib.pyplot'" [];
	"torch.ao.quantization.fx._model_report.model_report_observer" -> "torch" [];
	"torch.ao.quantization.fx._model_report.model_report" -> "collections" [];
	"torch.ao.quantization.fx._model_report.model_report" -> "typing" [];
	"torch.ao.quantization.fx._model_report.model_report" -> "torch" [];
	"torch.ao.quantization.fx._model_report.detector" -> "abc" [];
	"torch.ao.quantization.fx._model_report.detector" -> "typing" [];
	"torch.ao.quantization.fx._model_report.detector" -> "torch" [];
	"torch.ao.quantization.backend_config.x86" -> "torch" [];
	"torch.ao.quantization.backend_config._qnnpack_pt2e" -> "operator" [];
	"torch.ao.quantization.backend_config._qnnpack_pt2e" -> "torch" [];
	"torch.ao.quantization.backend_config._qnnpack_pt2e" -> "typing" [];
	"torch.ao.quantization._learnable_fake_quantize" -> "typing" [];
	"torch.ao.quantization._learnable_fake_quantize" -> "torch" [];
	"torch.ao.quantization._equalize" -> "copy" [];
	"torch.ao.quantization._equalize" -> "typing" [];
	"torch.ao.quantization._equalize" -> "torch" [];
	"torch.ao.quantization._correct_bias" -> "torch" [];
	"torch.ao.pruning.sparsifier.weight_norm_sparsifier" -> "operator" [];
	"torch.ao.pruning.sparsifier.weight_norm_sparsifier" -> "functools" [];
	"torch.ao.pruning.sparsifier.weight_norm_sparsifier" -> "typing" [];
	"torch.ao.pruning.sparsifier.weight_norm_sparsifier" -> "torch" [];
	"torch.ao.pruning.sparsifier.utils" -> "itertools" [];
	"torch.ao.pruning.sparsifier.utils" -> "typing" [];
	"torch.ao.pruning.sparsifier.utils" -> "torch" [];
	"torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier" -> "torch" [];
	"torch.ao.pruning.sparsifier.base_sparsifier" -> "abc" [];
	"torch.ao.pruning.sparsifier.base_sparsifier" -> "copy" [];
	"torch.ao.pruning.sparsifier.base_sparsifier" -> "collections" [];
	"torch.ao.pruning.sparsifier.base_sparsifier" -> "typing" [];
	"torch.ao.pruning.sparsifier.base_sparsifier" -> "torch" [];
	"torch.ao.pruning.scheduler.lambda_scheduler" -> "warnings" [];
	"torch.ao.pruning.scheduler.cubic_scheduler" -> "warnings" [];
	"torch.ao.pruning.scheduler.base_scheduler" -> "warnings" [];
	"torch.ao.pruning.scheduler.base_scheduler" -> "weakref" [];
	"torch.ao.pruning.scheduler.base_scheduler" -> "functools" [];
	"torch.ao.pruning._experimental.pruner.prune_functions" -> "typing" [];
	"torch.ao.pruning._experimental.pruner.prune_functions" -> "torch" [];
	"torch.ao.pruning._experimental.pruner.parametrization" -> "torch" [];
	"torch.ao.pruning._experimental.pruner.match_utils" -> "typing" [];
	"torch.ao.pruning._experimental.pruner.match_utils" -> "torch" [];
	"torch.ao.pruning._experimental.pruner.lstm_saliency_pruner" -> "typing" [];
	"torch.ao.pruning._experimental.pruner.lstm_saliency_pruner" -> "torch" [];
	"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" -> "itertools" [];
	"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" -> "operator" [];
	"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" -> "typing" [];
	"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" -> "torch" [];
	"torch.ao.pruning._experimental.pruner.FPGM_pruner" -> "typing" [];
	"torch.ao.pruning._experimental.pruner.FPGM_pruner" -> "torch" [];
	"torch.ao.pruning._experimental.data_sparsifier.quantization_utils" -> "typing" [];
	"torch.ao.pruning._experimental.data_sparsifier.quantization_utils" -> "torch" [];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" -> "collections" [];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" -> "copy" [];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" -> "typing" [];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" -> "pytorch_lightning" [];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" -> "torch" [];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks._data_sparstity_utils" -> "logging" [];
	"torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" -> "operator" [];
	"torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" -> "functools" [];
	"torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" -> "typing" [];
	"torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" -> "torch" [];
	"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" -> "abc" [];
	"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" -> "copy" [];
	"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" -> "sys" [];
	"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" -> "warnings" [];
	"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" -> "collections" [];
	"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" -> "typing" [];
	"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" -> "torch" [];
	"torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" -> "abc" [];
	"torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" -> "warnings" [];
	"torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" -> "weakref" [];
	"torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" -> "functools" [];
	"torch.ao.pruning._experimental.activation_sparsifier.activation_sparsifier" -> "copy" [];
	"torch.ao.pruning._experimental.activation_sparsifier.activation_sparsifier" -> "warnings" [];
	"torch.ao.pruning._experimental.activation_sparsifier.activation_sparsifier" -> "collections" [];
	"torch.ao.pruning._experimental.activation_sparsifier.activation_sparsifier" -> "typing" [];
	"torch.ao.pruning._experimental.activation_sparsifier.activation_sparsifier" -> "torch" [];
	"torch.ao.ns._numeric_suite" -> "typing" [];
	"torch.ao.ns._numeric_suite" -> "torch" [];
	"torch._python_dispatcher" -> "re" [];
	"torch._numpy.testing.utils" -> "contextlib" [];
	"torch._numpy.testing.utils" -> "gc" [];
	"torch._numpy.testing.utils" -> "operator" [];
	"torch._numpy.testing.utils" -> "os" [];
	"torch._numpy.testing.utils" -> "platform" [];
	"torch._numpy.testing.utils" -> "pprint" [];
	"torch._numpy.testing.utils" -> "re" [];
	"torch._numpy.testing.utils" -> "shutil" [];
	"torch._numpy.testing.utils" -> "sys" [];
	"torch._numpy.testing.utils" -> "warnings" [];
	"torch._numpy.testing.utils" -> "functools" [];
	"torch._numpy.testing.utils" -> "io" [];
	"torch._numpy.testing.utils" -> "tempfile" [];
	"torch._numpy.testing.utils" -> "numpy" [];
	"torch._numpy.testing.utils" -> "traceback" [];
	"torch._numpy.testing.utils" -> "difflib" [];
	"torch._numpy.testing.utils" -> "unittest" [];
	"torch._numpy.testing.utils" -> "inspect" [];
	"torch._numpy.testing.utils" -> "pytest" [];
	"torch._numpy.testing.utils" -> "psutil" [];
	"torch._lowrank" -> "typing" [];
	"torch._logging.scribe" -> "typing" [];
	"torch._logging.scribe" -> "typing_extensions" [];
	"torch._logging.scribe" -> "fbscribelogger" [];
	"torch._lazy.tensor_factory_functions" -> "torch" [];
	"torch._lazy.ir_cache" -> "'torch._C._lazy'" [];
	"torch._lazy.extract_compiled_graph" -> "copy" [];
	"torch._lazy.extract_compiled_graph" -> "dataclasses" [];
	"torch._lazy.extract_compiled_graph" -> "itertools" [];
	"torch._lazy.extract_compiled_graph" -> "os" [];
	"torch._lazy.extract_compiled_graph" -> "typing" [];
	"torch._lazy.extract_compiled_graph" -> "torch" [];
	"torch._lazy.debug" -> "'torch._C._lazy'" [];
	"torch._lazy.config" -> "'torch._C._lazy'" [];
	"torch._lazy.computation" -> "'torch._C._lazy'" [];
	"torch._lazy.computation" -> "'torch._C._lazy_ts_backend'" [];
	"torch._inductor.test_case" -> "contextlib" [];
	"torch._inductor.test_case" -> "os" [];
	"torch._inductor.runtime.triton_helpers" -> "triton" [];
	"torch._inductor.runtime.triton_helpers" -> "'triton.language'" [];
	"torch._inductor.runtime.halide_helpers" -> "halide" [];
	"torch._inductor.fx_passes.serialized_patterns.mm_pattern" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns.bmm_pattern" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns.addmm_pattern" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_9" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_8" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_7" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_6" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_5" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_4" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_3" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_2" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_19" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_18" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_17" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_16" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_15" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_14" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_13" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_12" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_11" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_10" -> "torch" [];
	"torch._inductor.fx_passes.serialized_patterns._sfdp_pattern_1" -> "torch" [];
	"torch._inductor.compile_worker.__main__" -> "argparse" [];
	"torch._inductor.compile_worker.__main__" -> "logging" [];
	"torch._inductor.compile_worker.__main__" -> "os" [];
	"torch._inductor.compile_worker.__main__" -> "sys" [];
	"torch._inductor.compile_worker.__main__" -> "triton" [];
	"torch._inductor.codegen.cuda.cutlass_lib_extensions.gemm_operation_extensions" -> "enum" [];
	"torch._inductor.codegen.cuda.cutlass_lib_extensions.gemm_operation_extensions" -> "'cutlass_library.gemm_operation'" [];
	"torch._inductor.codegen.cuda.cutlass_lib_extensions.gemm_operation_extensions" -> "'cutlass_library.library'" [];
	"torch._inductor.codegen.cuda.cutlass_epilogue_gen" -> "typing" [];
	"torch._inductor.codegen.cuda.cutlass_epilogue_gen" -> "sympy" [];
	"torch._inductor.autoheuristic.artifacts._MixedMMH100" -> "typing" [];
	"torch._inductor.autoheuristic.artifacts._MixedMMA100" -> "typing" [];
	"torch._inductor.autoheuristic.artifacts._MMRankingH100" -> "typing" [];
	"torch._inductor.autoheuristic.artifacts._MMRankingA100" -> "typing" [];
	"torch._inductor.aoti_eager" -> "json" [];
	"torch._inductor.aoti_eager" -> "logging" [];
	"torch._inductor.aoti_eager" -> "os" [];
	"torch._inductor.aoti_eager" -> "pathlib" [];
	"torch._inductor.aoti_eager" -> "typing" [];
	"torch._inductor.aoti_eager" -> "unittest" [];
	"torch._inductor.aoti_eager" -> "torch" [];
	"torch._inductor.aoti_eager" -> "filelock" [];
	"torch._higher_order_ops.run_const_graph" -> "torch" [];
	"torch._higher_order_ops.executorch_call_delegate" -> "__future__" [];
	"torch._higher_order_ops.executorch_call_delegate" -> "typing" [];
	"torch._higher_order_ops.executorch_call_delegate" -> "torch" [];
	"torch._functorch.top_operators_github_usage" -> "operator" [];
	"torch._functorch.pytree_hacks" -> "warnings" [];
	"torch._functorch.benchmark_utils" -> "contextlib" [];
	"torch._functorch.benchmark_utils" -> "json" [];
	"torch._functorch.benchmark_utils" -> "operator" [];
	"torch._functorch.benchmark_utils" -> "os" [];
	"torch._functorch.benchmark_utils" -> "time" [];
	"torch._functorch.benchmark_utils" -> "torch" [];
	"torch._export.tools" -> "logging" [];
	"torch._export.tools" -> "warnings" [];
	"torch._export.tools" -> "typing" [];
	"torch._export.tools" -> "torch" [];
	"torch._export.serde.schema_check" -> "dataclasses" [];
	"torch._export.serde.schema_check" -> "hashlib" [];
	"torch._export.serde.schema_check" -> "re" [];
	"torch._export.serde.schema_check" -> "typing" [];
	"torch._export.serde.schema_check" -> "enum" [];
	"torch._export.serde.schema_check" -> "yaml" [];
	"torch._export.serde.dynamic_shapes" -> "dataclasses" [];
	"torch._export.serde.dynamic_shapes" -> "typing" [];
	"torch._export.serde.dynamic_shapes" -> "torch" [];
	"torch._export.serde.dynamic_shapes" -> "sympy" [];
	"torch._export.passes.remove_runtime_assertions" -> "torch" [];
	"torch._export.passes.functionalize_side_effectful_ops_pass" -> "copy" [];
	"torch._export.passes.functionalize_side_effectful_ops_pass" -> "typing" [];
	"torch._export.passes.functionalize_side_effectful_ops_pass" -> "torch" [];
	"torch._export.passes.constant_folding" -> "collections" [];
	"torch._export.passes.constant_folding" -> "typing" [];
	"torch._export.passes.constant_folding" -> "torch" [];
	"torch._export.db.gen_example" -> "os" [];
	"torch._export.db.gen_example" -> "sys" [];
	"torch._export.db.examples.user_input_mutation" -> "torch" [];
	"torch._export.db.examples.unsupported_operator" -> "torch" [];
	"torch._export.db.examples.type_reflection_method" -> "torch" [];
	"torch._export.db.examples.tensor_setattr" -> "torch" [];
	"torch._export.db.examples.static_if" -> "torch" [];
	"torch._export.db.examples.static_for_loop" -> "torch" [];
	"torch._export.db.examples.specialized_attribute" -> "enum" [];
	"torch._export.db.examples.specialized_attribute" -> "torch" [];
	"torch._export.db.examples.scalar_output" -> "torch" [];
	"torch._export.db.examples.pytree_flatten" -> "torch" [];
	"torch._export.db.examples.optional_input" -> "torch" [];
	"torch._export.db.examples.null_context_manager" -> "contextlib" [];
	"torch._export.db.examples.null_context_manager" -> "torch" [];
	"torch._export.db.examples.nested_function" -> "torch" [];
	"torch._export.db.examples.model_attr_mutation" -> "torch" [];
	"torch._export.db.examples.list_unpack" -> "typing" [];
	"torch._export.db.examples.list_unpack" -> "torch" [];
	"torch._export.db.examples.list_contains" -> "torch" [];
	"torch._export.db.examples.fn_with_kwargs" -> "torch" [];
	"torch._export.db.examples.dynamic_shape_view" -> "torch" [];
	"torch._export.db.examples.dynamic_shape_slicing" -> "torch" [];
	"torch._export.db.examples.dynamic_shape_round" -> "torch" [];
	"torch._export.db.examples.dynamic_shape_map" -> "torch" [];
	"torch._export.db.examples.dynamic_shape_if_guard" -> "torch" [];
	"torch._export.db.examples.dynamic_shape_constructor" -> "torch" [];
	"torch._export.db.examples.dynamic_shape_assert" -> "torch" [];
	"torch._export.db.examples.dictionary" -> "torch" [];
	"torch._export.db.examples.decorator" -> "functools" [];
	"torch._export.db.examples.decorator" -> "torch" [];
	"torch._export.db.examples.constrain_as_value_example" -> "torch" [];
	"torch._export.db.examples.constrain_as_size_example" -> "torch" [];
	"torch._export.db.examples.cond_predicate" -> "torch" [];
	"torch._export.db.examples.cond_operands" -> "torch" [];
	"torch._export.db.examples.cond_closed_over_variable" -> "torch" [];
	"torch._export.db.examples.cond_branch_nonlocal_variables" -> "torch" [];
	"torch._export.db.examples.cond_branch_nested_function" -> "torch" [];
	"torch._export.db.examples.cond_branch_class_method" -> "torch" [];
	"torch._export.db.examples.class_method" -> "torch" [];
	"torch._export.db.examples.autograd_function" -> "torch" [];
	"torch._export.db.examples.assume_constant_result" -> "torch" [];
	"torch._dynamo.test_minifier_common" -> "dataclasses" [];
	"torch._dynamo.test_minifier_common" -> "io" [];
	"torch._dynamo.test_minifier_common" -> "logging" [];
	"torch._dynamo.test_minifier_common" -> "os" [];
	"torch._dynamo.test_minifier_common" -> "re" [];
	"torch._dynamo.test_minifier_common" -> "shutil" [];
	"torch._dynamo.test_minifier_common" -> "subprocess" [];
	"torch._dynamo.test_minifier_common" -> "sys" [];
	"torch._dynamo.test_minifier_common" -> "tempfile" [];
	"torch._dynamo.test_minifier_common" -> "traceback" [];
	"torch._dynamo.test_minifier_common" -> "typing" [];
	"torch._dynamo.test_minifier_common" -> "torch" [];
	"torch._dynamo.test_case" -> "contextlib" [];
	"torch._dynamo.test_case" -> "importlib" [];
	"torch._dynamo.test_case" -> "logging" [];
	"torch._dynamo.test_case" -> "torch" [];
	"torch._dynamo.profiler" -> "dataclasses" [];
	"torch._dynamo.profiler" -> "os" [];
	"torch._dynamo.profiler" -> "typing" [];
	"torch._dynamo.profiler" -> "torch" [];
	"torch._dynamo.backends.tvm" -> "functools" [];
	"torch._dynamo.backends.tvm" -> "importlib" [];
	"torch._dynamo.backends.tvm" -> "logging" [];
	"torch._dynamo.backends.tvm" -> "os" [];
	"torch._dynamo.backends.tvm" -> "sys" [];
	"torch._dynamo.backends.tvm" -> "tempfile" [];
	"torch._dynamo.backends.tvm" -> "types" [];
	"torch._dynamo.backends.tvm" -> "typing" [];
	"torch._dynamo.backends.tvm" -> "torch" [];
	"torch._dynamo.backends.tvm" -> "tvm" [];
	"torch._dynamo.backends.tvm" -> "'tvm.contrib'" [];
	"torch._dynamo.backends.torchxla" -> "logging" [];
	"torch._dynamo.backends.torchxla" -> "'torch_xla.core'" [];
	"torch._dynamo.backends.cudagraphs" -> "functools" [];
	"torch._dynamo.backends.cudagraphs" -> "collections" [];
	"torch._dynamo.backends.cudagraphs" -> "typing" [];
	"torch._dynamo.backends.cudagraphs" -> "torch" [];
	"torch._deploy" -> "io" [];
	"torch._custom_op.functional" -> "weakref" [];
	"torch._custom_op.functional" -> "torch" [];
	"torch.cuda._sanitizer" -> "enum" [];
	"torch.cuda._sanitizer" -> "functools" [];
	"torch.cuda._sanitizer" -> "inspect" [];
	"torch.cuda._sanitizer" -> "io" [];
	"torch.cuda._sanitizer" -> "logging" [];
	"torch.cuda._sanitizer" -> "sys" [];
	"torch.cuda._sanitizer" -> "textwrap" [];
	"torch.cuda._sanitizer" -> "traceback" [];
	"torch.cuda._sanitizer" -> "dataclasses" [];
	"torch.cuda._sanitizer" -> "typing" [];
	"torch.cuda._sanitizer" -> "torch" [];
	"torch._linalg_utils" -> "typing" [];
	"torch._lobpcg" -> "typing" [];
	"torch.multiprocessing._atfork" -> "sys" [];
	"torch.multiprocessing._atfork" -> "os" [];
	"torch.quasirandom" -> "typing" [];
	"torch.mtia" -> "threading" [];
	"torch.mtia" -> "warnings" [];
	"torch.mtia" -> "typing" [];
	"torch.fft" -> "sys" [];
	"torch.cpu" -> "contextlib" [];
	"torch.cpu" -> "typing" [];
	"torch.functional" -> "itertools" [];
	"torch.functional" -> "operator" [];
	"torch.functional" -> "typing" [];
	"torch._compile" -> "functools" [];
	"torch._tensor" -> "copyreg" [];
	"torch._tensor" -> "enum" [];
	"torch._tensor" -> "functools" [];
	"torch._tensor" -> "warnings" [];
	"torch._tensor" -> "collections" [];
	"torch._tensor" -> "copy" [];
	"torch._tensor" -> "numbers" [];
	"torch._tensor" -> "typing" [];
	"sre_constants" -> "warnings" [];
	"sre_constants" -> "re" [];
	"linecache" -> "functools" [];
	"linecache" -> "sys" [];
	"linecache" -> "os" [];
	"linecache" -> "tokenize" [];
	"sre_compile" -> "warnings" [];
	"sre_compile" -> "re" [];
	"warnings" -> "sys" [];
	"warnings" -> "linecache" [];
	"warnings" -> "tracemalloc" [];
	"warnings" -> "re" [];
	"warnings" -> "builtins" [];
	"warnings" -> "traceback" [];
	"warnings" -> "_warnings" [];
	"re._parser" -> "warnings" [];
	"re._parser" -> "unicodedata" [];
	"re._constants" -> "_sre" [];
	"re._compiler" -> "_sre" [];
	"re._compiler" -> "sys" [];
	"re" -> "enum" [];
	"re" -> "functools" [];
	"re" -> "warnings" [];
	"re" -> "copyreg" [];
	"collections.abc" -> "_collections_abc" [];
	"collections" -> "_collections_abc" [];
	"collections" -> "sys" [];
	"collections" -> "itertools" [];
	"collections" -> "keyword" [];
	"collections" -> "operator" [];
	"collections" -> "reprlib" [];
	"collections" -> "_weakref" [];
	"collections" -> "_collections" [];
	"collections" -> "heapq" [];
	"collections" -> "copy" [];
	"locale" -> "sys" [];
	"locale" -> "encodings" [];
	"locale" -> "re" [];
	"locale" -> "_collections_abc" [];
	"locale" -> "builtins" [];
	"locale" -> "functools" [];
	"locale" -> "_locale" [];
	"locale" -> "warnings" [];
	"locale" -> "os" [];
	"copyreg" -> "functools" [];
	"copyreg" -> "operator" [];
	"enum" -> "sys" [];
	"enum" -> "builtins" [];
	"enum" -> "types" [];
	"enum" -> "operator" [];
	"enum" -> "functools" [];
	"enum" -> "warnings" [];
	"heapq" -> "_heapq" [];
	"sre_parse" -> "warnings" [];
	"sre_parse" -> "re" [];
	"encodings.zlib_codec" -> "codecs" [];
	"encodings.zlib_codec" -> "zlib" [];
	"encodings.uu_codec" -> "codecs" [];
	"encodings.uu_codec" -> "binascii" [];
	"encodings.uu_codec" -> "io" [];
	"encodings.utf_8_sig" -> "codecs" [];
	"encodings.utf_8" -> "codecs" [];
	"encodings.utf_7" -> "codecs" [];
	"encodings.utf_32_le" -> "codecs" [];
	"encodings.utf_32_be" -> "codecs" [];
	"encodings.utf_32" -> "codecs" [];
	"encodings.utf_32" -> "sys" [];
	"encodings.utf_16_le" -> "codecs" [];
	"encodings.utf_16_be" -> "codecs" [];
	"encodings.utf_16" -> "codecs" [];
	"encodings.utf_16" -> "sys" [];
	"encodings.unicode_escape" -> "codecs" [];
	"encodings.undefined" -> "codecs" [];
	"encodings.tis_620" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_codecs_jp" [];
	"encodings.shift_jisx0213" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_multibytecodec" [];
	"encodings.shift_jis_2004" -> "_codecs_jp" [];
	"encodings.shift_jis_2004" -> "codecs" [];
	"encodings.shift_jis_2004" -> "_multibytecodec" [];
	"encodings.shift_jis" -> "_codecs_jp" [];
	"encodings.shift_jis" -> "codecs" [];
	"encodings.shift_jis" -> "_multibytecodec" [];
	"encodings.rot_13" -> "codecs" [];
	"encodings.rot_13" -> "sys" [];
	"encodings.raw_unicode_escape" -> "codecs" [];
	"encodings.quopri_codec" -> "codecs" [];
	"encodings.quopri_codec" -> "quopri" [];
	"encodings.quopri_codec" -> "io" [];
	"encodings.punycode" -> "codecs" [];
	"encodings.ptcp154" -> "codecs" [];
	"encodings.palmos" -> "codecs" [];
	"encodings.oem" -> "codecs" [];
	"encodings.mbcs" -> "codecs" [];
	"encodings.mac_turkish" -> "codecs" [];
	"encodings.mac_romanian" -> "codecs" [];
	"encodings.mac_roman" -> "codecs" [];
	"encodings.mac_latin2" -> "codecs" [];
	"encodings.mac_iceland" -> "codecs" [];
	"encodings.mac_greek" -> "codecs" [];
	"encodings.mac_farsi" -> "codecs" [];
	"encodings.mac_cyrillic" -> "codecs" [];
	"encodings.mac_croatian" -> "codecs" [];
	"encodings.mac_arabic" -> "codecs" [];
	"encodings.latin_1" -> "codecs" [];
	"encodings.kz1048" -> "codecs" [];
	"encodings.koi8_u" -> "codecs" [];
	"encodings.koi8_t" -> "codecs" [];
	"encodings.koi8_r" -> "codecs" [];
	"encodings.johab" -> "_codecs_kr" [];
	"encodings.johab" -> "codecs" [];
	"encodings.johab" -> "_multibytecodec" [];
	"encodings.iso8859_9" -> "codecs" [];
	"encodings.iso8859_8" -> "codecs" [];
	"encodings.iso8859_7" -> "codecs" [];
	"encodings.iso8859_6" -> "codecs" [];
	"encodings.iso8859_5" -> "codecs" [];
	"encodings.iso8859_4" -> "codecs" [];
	"encodings.iso8859_3" -> "codecs" [];
	"encodings.iso8859_2" -> "codecs" [];
	"encodings.iso8859_16" -> "codecs" [];
	"encodings.iso8859_15" -> "codecs" [];
	"encodings.iso8859_14" -> "codecs" [];
	"encodings.iso8859_13" -> "codecs" [];
	"encodings.iso8859_11" -> "codecs" [];
	"encodings.iso8859_10" -> "codecs" [];
	"encodings.iso8859_1" -> "codecs" [];
	"encodings.iso2022_kr" -> "_codecs_iso2022" [];
	"encodings.iso2022_kr" -> "codecs" [];
	"encodings.iso2022_kr" -> "_multibytecodec" [];
	"encodings.iso2022_jp_ext" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_ext" -> "codecs" [];
	"encodings.iso2022_jp_ext" -> "_multibytecodec" [];
	"encodings.iso2022_jp_3" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_3" -> "codecs" [];
	"encodings.iso2022_jp_3" -> "_multibytecodec" [];
	"encodings.iso2022_jp_2004" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2004" -> "codecs" [];
	"encodings.iso2022_jp_2004" -> "_multibytecodec" [];
	"encodings.iso2022_jp_2" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2" -> "codecs" [];
	"encodings.iso2022_jp_2" -> "_multibytecodec" [];
	"encodings.iso2022_jp_1" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_1" -> "codecs" [];
	"encodings.iso2022_jp_1" -> "_multibytecodec" [];
	"encodings.iso2022_jp" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp" -> "codecs" [];
	"encodings.iso2022_jp" -> "_multibytecodec" [];
	"encodings.idna" -> "stringprep" [];
	"encodings.idna" -> "re" [];
	"encodings.idna" -> "codecs" [];
	"encodings.idna" -> "unicodedata" [];
	"stringprep" -> "unicodedata" [];
	"encodings.hz" -> "_codecs_cn" [];
	"encodings.hz" -> "codecs" [];
	"encodings.hz" -> "_multibytecodec" [];
	"encodings.hp_roman8" -> "codecs" [];
	"encodings.hex_codec" -> "codecs" [];
	"encodings.hex_codec" -> "binascii" [];
	"encodings.gbk" -> "_codecs_cn" [];
	"encodings.gbk" -> "codecs" [];
	"encodings.gbk" -> "_multibytecodec" [];
	"encodings.gb2312" -> "_codecs_cn" [];
	"encodings.gb2312" -> "codecs" [];
	"encodings.gb2312" -> "_multibytecodec" [];
	"encodings.gb18030" -> "_codecs_cn" [];
	"encodings.gb18030" -> "codecs" [];
	"encodings.gb18030" -> "_multibytecodec" [];
	"encodings.euc_kr" -> "_codecs_kr" [];
	"encodings.euc_kr" -> "codecs" [];
	"encodings.euc_kr" -> "_multibytecodec" [];
	"encodings.euc_jp" -> "_codecs_jp" [];
	"encodings.euc_jp" -> "codecs" [];
	"encodings.euc_jp" -> "_multibytecodec" [];
	"encodings.euc_jisx0213" -> "_codecs_jp" [];
	"encodings.euc_jisx0213" -> "codecs" [];
	"encodings.euc_jisx0213" -> "_multibytecodec" [];
	"encodings.euc_jis_2004" -> "_codecs_jp" [];
	"encodings.euc_jis_2004" -> "codecs" [];
	"encodings.euc_jis_2004" -> "_multibytecodec" [];
	"encodings.cp950" -> "_codecs_tw" [];
	"encodings.cp950" -> "codecs" [];
	"encodings.cp950" -> "_multibytecodec" [];
	"encodings.cp949" -> "_codecs_kr" [];
	"encodings.cp949" -> "codecs" [];
	"encodings.cp949" -> "_multibytecodec" [];
	"encodings.cp932" -> "_codecs_jp" [];
	"encodings.cp932" -> "codecs" [];
	"encodings.cp932" -> "_multibytecodec" [];
	"encodings.cp875" -> "codecs" [];
	"encodings.cp874" -> "codecs" [];
	"encodings.cp869" -> "codecs" [];
	"encodings.cp866" -> "codecs" [];
	"encodings.cp865" -> "codecs" [];
	"encodings.cp864" -> "codecs" [];
	"encodings.cp863" -> "codecs" [];
	"encodings.cp862" -> "codecs" [];
	"encodings.cp861" -> "codecs" [];
	"encodings.cp860" -> "codecs" [];
	"encodings.cp858" -> "codecs" [];
	"encodings.cp857" -> "codecs" [];
	"encodings.cp856" -> "codecs" [];
	"encodings.cp855" -> "codecs" [];
	"encodings.cp852" -> "codecs" [];
	"encodings.cp850" -> "codecs" [];
	"encodings.cp775" -> "codecs" [];
	"encodings.cp737" -> "codecs" [];
	"encodings.cp720" -> "codecs" [];
	"encodings.cp500" -> "codecs" [];
	"encodings.cp437" -> "codecs" [];
	"encodings.cp424" -> "codecs" [];
	"encodings.cp273" -> "codecs" [];
	"encodings.cp1258" -> "codecs" [];
	"encodings.cp1257" -> "codecs" [];
	"encodings.cp1256" -> "codecs" [];
	"encodings.cp1255" -> "codecs" [];
	"encodings.cp1254" -> "codecs" [];
	"encodings.cp1253" -> "codecs" [];
	"encodings.cp1252" -> "codecs" [];
	"encodings.cp1251" -> "codecs" [];
	"encodings.cp1250" -> "codecs" [];
	"encodings.cp1140" -> "codecs" [];
	"encodings.cp1125" -> "codecs" [];
	"encodings.cp1026" -> "codecs" [];
	"encodings.cp1006" -> "codecs" [];
	"encodings.cp037" -> "codecs" [];
	"encodings.charmap" -> "codecs" [];
	"encodings.bz2_codec" -> "codecs" [];
	"encodings.bz2_codec" -> "bz2" [];
	"encodings.big5hkscs" -> "_codecs_hk" [];
	"encodings.big5hkscs" -> "codecs" [];
	"encodings.big5hkscs" -> "_multibytecodec" [];
	"encodings.big5" -> "_codecs_tw" [];
	"encodings.big5" -> "codecs" [];
	"encodings.big5" -> "_multibytecodec" [];
	"encodings.base64_codec" -> "codecs" [];
	"encodings.base64_codec" -> "base64" [];
	"encodings.ascii" -> "codecs" [];
	"encodings" -> "codecs" [];
	"encodings" -> "sys" [];
	"encodings" -> "_winapi" [];
	"operator" -> "builtins" [];
	"operator" -> "functools" [];
	"operator" -> "_operator" [];
	"traceback" -> "itertools" [];
	"traceback" -> "linecache" [];
	"traceback" -> "sys" [];
	"traceback" -> "textwrap" [];
	"traceback" -> "contextlib" [];
	"traceback" -> "ast" [];
	"os" -> "abc" [];
	"os" -> "sys" [];
	"os" -> "stat" [];
	"os" -> "_collections_abc" [];
	"os" -> "posix" [];
	"os" -> "posixpath" [];
	"os" -> "nt" [];
	"os" -> "ntpath" [];
	"os" -> "os.path" [];
	"os" -> "warnings" [];
	"os" -> "subprocess" [];
	"os" -> "io" [];
	"abc" -> "_abc" [];
	"abc" -> "_py_abc" [];
	"_py_abc" -> "_weakrefset" [];
	"_weakrefset" -> "_weakref" [];
	"_weakrefset" -> "types" [];
	"_collections_abc" -> "abc" [];
	"_collections_abc" -> "sys" [];
	"stat" -> "_stat" [];
	"reprlib" -> "builtins" [];
	"reprlib" -> "itertools" [];
	"reprlib" -> "_thread" [];
	"io" -> "_io" [];
	"io" -> "abc" [];
	"io" -> "warnings" [];
	"posixpath" -> "os" [];
	"posixpath" -> "sys" [];
	"posixpath" -> "stat" [];
	"posixpath" -> "genericpath" [];
	"posixpath" -> "pwd" [];
	"posixpath" -> "re" [];
	"posixpath" -> "posix" [];
	"genericpath" -> "os" [];
	"genericpath" -> "stat" [];
	"functools" -> "abc" [];
	"functools" -> "collections" [];
	"functools" -> "reprlib" [];
	"functools" -> "_thread" [];
	"functools" -> "types" [];
	"functools" -> "_functools" [];
	"functools" -> "weakref" [];
	"functools" -> "typing" [];
	"weakref" -> "_weakref" [];
	"weakref" -> "_weakrefset" [];
	"weakref" -> "_collections_abc" [];
	"weakref" -> "sys" [];
	"weakref" -> "itertools" [];
	"weakref" -> "copy" [];
	"weakref" -> "atexit" [];
	"weakref" -> "gc" [];
	"types" -> "sys" [];
	"types" -> "functools" [];
	"types" -> "_collections_abc" [];
	"_sre" -> "copy" [];
	"_sre" -> "re" [];
	"_posixsubprocess" -> "gc" [];
	"datetime" -> "time" [];
	"datetime" -> "math" [];
	"datetime" -> "sys" [];
	"datetime" -> "operator" [];
	"datetime" -> "_strptime" [];
	"datetime" -> "_datetime" [];
	"_datetime" -> "time" [];
	"_datetime" -> "_strptime" [];
	"_pickle" -> "codecs" [];
	"_pickle" -> "copyreg" [];
	"_pickle" -> "_compat_pickle" [];
	"ntpath" -> "os" [];
	"ntpath" -> "sys" [];
	"ntpath" -> "stat" [];
	"ntpath" -> "genericpath" [];
	"ntpath" -> "_winapi" [];
	"ntpath" -> "nt" [];
	"ntpath" -> "string" [];
	"posix" -> "resource" [];
	"codecs" -> "builtins" [];
	"codecs" -> "sys" [];
	"codecs" -> "_codecs" [];
	"codecs" -> "encodings" [];
	"time" -> "_strptime" [];
	"gc" -> "time" [];
	"xml.sax.expatreader" -> "xml" [];
	"xml.sax.saxutils" -> "urllib" [];
	"urllib.request" -> "http" [];
	"nturl2path" -> "urllib" [];
	"mimetypes" -> "urllib" [];
	"email.utils" -> "urllib" [];
	"zipfile" -> "importlib" [];
	"py_compile" -> "importlib" [];
	"importlib.metadata._adapters" -> "email" [];
	"pathlib" -> "urllib" [];
	"http.cookiejar" -> "urllib" [];
	"logging" -> "collections" [];
	"http.client" -> "email" [];
	"http.client" -> "collections" [];
	"http.client" -> "urllib" [];
	"xml.etree.ElementTree" -> "xml" [];
	"xml.etree.ElementInclude" -> "urllib" [];
	"setuptools" -> "collections" [];
	"setuptools" -> "distutils" [];
	"setuptools._distutils.util" -> "importlib" [];
	"setuptools._distutils.util" -> "jaraco" [];
	"distutils" -> "setuptools" [];
	"setuptools._distutils.unixccompiler" -> "distutils" [];
	"distutils.util" -> "importlib" [];
	"setuptools._distutils.sysconfig" -> "jaraco" [];
	"setuptools._distutils.sysconfig" -> "distutils" [];
	"setuptools._distutils.filelist" -> "distutils" [];
	"setuptools._distutils.extension" -> "distutils" [];
	"setuptools._distutils.dist" -> "collections" [];
	"setuptools._distutils.dist" -> "packaging" [];
	"setuptools._distutils.dist" -> "distutils" [];
	"pkg_resources" -> "email" [];
	"pkg_resources" -> "jaraco" [];
	"packaging.metadata" -> "email" [];
	"platformdirs.windows" -> "collections" [];
	"packaging.tags" -> "importlib" [];
	"setuptools._distutils.command.install_lib" -> "importlib" [];
	"setuptools._distutils.command.install_egg_info" -> "setuptools" [];
	"setuptools._distutils.command.install" -> "jaraco" [];
	"jaraco.collections" -> "collections" [];
	"pydoc" -> "importlib" [];
	"pydoc" -> "urllib" [];
	"pydoc" -> "pydoc_data" [];
	"pydoc" -> "http" [];
	"pydoc" -> "email" [];
	"http.server" -> "email" [];
	"http.server" -> "urllib" [];
	"setuptools._distutils.command.config" -> "collections" [];
	"setuptools._distutils.command.build_py" -> "importlib" [];
	"setuptools._distutils.command.build_ext" -> "concurrent" [];
	"runpy" -> "importlib" [];
	"multiprocessing.connection" -> "xmlrpc" [];
	"xmlrpc.client" -> "http" [];
	"xmlrpc.client" -> "urllib" [];
	"xmlrpc.client" -> "xml" [];
	"setuptools._distutils.cmd" -> "distutils" [];
	"setuptools._distutils.ccompiler" -> "distutils" [];
	"setuptools._distutils._msvccompiler" -> "unittest" [];
	"asyncio.base_events" -> "concurrent" [];
	"asyncio.tasks" -> "concurrent" [];
	"asyncio.futures" -> "concurrent" [];
	"asyncio.coroutines" -> "collections" [];
	"setuptools._distutils._modified" -> "jaraco" [];
	"setuptools.msvc" -> "distutils" [];
	"distutils.command.build_ext" -> "concurrent" [];
	"cgi" -> "collections" [];
	"cgi" -> "urllib" [];
	"cgi" -> "email" [];
	"setuptools._importlib" -> "importlib" [];
	"setuptools.extension" -> "distutils" [];
	"setuptools.dist" -> "collections" [];
	"setuptools.dist" -> "packaging" [];
	"setuptools.dist" -> "distutils" [];
	"setuptools.command.bdist_wheel" -> "email" [];
	"setuptools.command._requirestxt" -> "jaraco" [];
	"setuptools.command._requirestxt" -> "packaging" [];
	"setuptools.command.sdist" -> "setuptools" [];
	"setuptools.command.build" -> "setuptools" [];
	"distutils.command.build" -> "distutils" [];
	"setuptools._vendor.wheel.cli.tags" -> "email" [];
	"setuptools._vendor.wheel.cli.tags" -> "collections" [];
	"setuptools._vendor.wheel.cli.convert" -> "distutils" [];
	"setuptools._vendor.wheel.bdist_wheel" -> "email" [];
	"setuptools._vendor.wheel.vendored.packaging.tags" -> "importlib" [];
	"setuptools._vendor.wheel.cli.pack" -> "email" [];
	"setuptools._vendor.wheel.metadata" -> "email" [];
	"setuptools.wheel" -> "packaging" [];
	"setuptools.archive_util" -> "distutils" [];
	"setuptools.config.setupcfg" -> "packaging" [];
	"setuptools.config.setupcfg" -> "setuptools" [];
	"setuptools.config.setupcfg" -> "distutils" [];
	"setuptools.config.expand" -> "setuptools" [];
	"setuptools.config.expand" -> "distutils" [];
	"setuptools.config.pyprojecttoml" -> "setuptools" [];
	"setuptools.config._validate_pyproject.formats" -> "email" [];
	"setuptools.config._validate_pyproject.formats" -> "urllib" [];
	"setuptools._vendor.packaging.tags" -> "importlib" [];
	"tomllib._parser" -> "collections" [];
	"setuptools.config._apply_pyprojecttoml" -> "email" [];
	"setuptools.config._apply_pyprojecttoml" -> "setuptools" [];
	"setuptools.config._apply_pyprojecttoml" -> "distutils" [];
	"setuptools.config._apply_pyprojecttoml" -> "packaging" [];
	"distutils.command.bdist" -> "distutils" [];
	"setuptools._entry_points" -> "jaraco" [];
	"setuptools.discovery" -> "collections" [];
	"setuptools.discovery" -> "_distutils_hack" [];
	"setuptools.depends" -> "packaging" [];
	"setuptools._imp" -> "importlib" [];
	"setuptools.logging" -> "distutils" [];
	"setuptools.monkey" -> "distutils" [];
	"setuptools._core_metadata" -> "packaging" [];
	"setuptools._core_metadata" -> "distutils" [];
	"setuptools._reqs" -> "jaraco" [];
	"setuptools._reqs" -> "packaging" [];
	"setuptools._vendor.tomli._parser" -> "collections" [];
	"setuptools._vendor.importlib_metadata._adapters" -> "email" [];
	"setuptools._vendor.jaraco.text" -> "importlib" [];
	"setuptools._vendor.jaraco.text" -> "jaraco" [];
	"setuptools._vendor.jaraco.context" -> "urllib" [];
	"setuptools._vendor.jaraco.functools" -> "collections" [];
	"_json" -> "json" [];
	"zipimport" -> "importlib" [];
	"D:\ai\main.py" -> "kivy" [];
	"kivy.core.window" -> "kivy" [];
	"kivy.core.image" -> "kivy" [];
	"kivy.uix.scatter" -> "kivy" [];
	"kivy.uix.recycleview.views" -> "kivy" [];
	"kivy.uix.recycleview" -> "kivy" [];
	"kivy.core.text.text_pygame" -> "kivy" [];
	"kivy.uix.camera" -> "kivy" [];
	"kivy.uix.recycleview.datamodel" -> "kivy" [];
	"kivy.uix.splitter" -> "kivy" [];
	"kivy.core.video" -> "kivy" [];
	"kivy.core.text.text_pango" -> "kivy" [];
	"kivy.uix.screenmanager" -> "kivy" [];
	"kivy.core.image.img_pygame" -> "kivy" [];
	"kivy.uix.modalview" -> "kivy" [];
	"kivy.core.image.img_pil" -> "kivy" [];
	"kivy.core.image.img_tex" -> "kivy" [];
	"kivy.uix.rst" -> "kivy" [];
	"docutils.parsers.rst.languages" -> "docutils" [];
	"xml.dom.pulldom" -> "xml" [];
	"xml.dom.expatbuilder" -> "xml" [];
	"xml.dom.xmlbuilder" -> "urllib" [];
	"docutils.parsers.rst.directives.tables" -> "urllib" [];
	"docutils.parsers.rst.directives.misc" -> "urllib" [];
	"docutils.parsers.rst.directives.images" -> "urllib" [];
	"pygments.formatters.html" -> "pygments" [];
	"pygments.plugin" -> "importlib" [];
	"pygments.styles.zenburn" -> "pygments" [];
	"pygments.styles.xcode" -> "pygments" [];
	"pygments.styles.vs" -> "pygments" [];
	"pygments.styles.vim" -> "pygments" [];
	"pygments.styles.trac" -> "pygments" [];
	"pygments.styles.tango" -> "pygments" [];
	"pygments.styles.stata_light" -> "pygments" [];
	"pygments.styles.stata_dark" -> "pygments" [];
	"pygments.styles.staroffice" -> "pygments" [];
	"pygments.styles.solarized" -> "pygments" [];
	"pygments.styles.sas" -> "pygments" [];
	"pygments.styles.rrt" -> "pygments" [];
	"pygments.styles.rainbow_dash" -> "pygments" [];
	"pygments.styles.perldoc" -> "pygments" [];
	"pygments.styles.pastie" -> "pygments" [];
	"pygments.styles.paraiso_light" -> "pygments" [];
	"pygments.styles.paraiso_dark" -> "pygments" [];
	"pygments.styles.onedark" -> "pygments" [];
	"pygments.styles.nord" -> "pygments" [];
	"pygments.styles.native" -> "pygments" [];
	"pygments.styles.murphy" -> "pygments" [];
	"pygments.styles.monokai" -> "pygments" [];
	"pygments.styles.material" -> "pygments" [];
	"pygments.styles.manni" -> "pygments" [];
	"pygments.styles.lovelace" -> "pygments" [];
	"pygments.styles.lilypond" -> "pygments" [];
	"pygments.styles.lightbulb" -> "pygments" [];
	"pygments.styles.inkpot" -> "pygments" [];
	"pygments.styles.igor" -> "pygments" [];
	"pygments.styles.gruvbox" -> "pygments" [];
	"pygments.styles.gh_dark" -> "pygments" [];
	"pygments.styles.fruity" -> "pygments" [];
	"pygments.styles.friendly_grayscale" -> "pygments" [];
	"pygments.styles.friendly" -> "pygments" [];
	"pygments.styles.emacs" -> "pygments" [];
	"pygments.styles.dracula" -> "pygments" [];
	"pygments.styles.default" -> "pygments" [];
	"pygments.styles.colorful" -> "pygments" [];
	"pygments.styles.coffee" -> "pygments" [];
	"pygments.styles.bw" -> "pygments" [];
	"pygments.styles.borland" -> "pygments" [];
	"pygments.styles.autumn" -> "pygments" [];
	"pygments.styles.arduino" -> "pygments" [];
	"pygments.styles.algol_nu" -> "pygments" [];
	"pygments.styles.algol" -> "pygments" [];
	"pygments.styles.abap" -> "pygments" [];
	"pygments.lexers.zig" -> "pygments" [];
	"pygments.lexers.yara" -> "pygments" [];
	"pygments.lexers.yang" -> "pygments" [];
	"pygments.lexers.xorg" -> "pygments" [];
	"pygments.lexers.x10" -> "pygments" [];
	"pygments.lexers.wren" -> "pygments" [];
	"pygments.lexers.wowtoc" -> "pygments" [];
	"pygments.lexers.whiley" -> "pygments" [];
	"pygments.lexers.webmisc" -> "pygments" [];
	"pygments.lexers.webidl" -> "pygments" [];
	"pygments.lexers.webassembly" -> "pygments" [];
	"pygments.lexers.vyper" -> "pygments" [];
	"pygments.lexers.vip" -> "pygments" [];
	"pygments.lexers.verifpal" -> "pygments" [];
	"pygments.lexers.verification" -> "pygments" [];
	"pygments.lexers.varnish" -> "pygments" [];
	"pygments.lexers.usd" -> "pygments" [];
	"pygments.lexers.urbi" -> "pygments" [];
	"pygments.lexers.unicon" -> "pygments" [];
	"pygments.lexers.ul4" -> "pygments" [];
	"pygments.lexers.typst" -> "pygments" [];
	"pygments.lexers.typoscript" -> "pygments" [];
	"pygments.lexers.trafficscript" -> "pygments" [];
	"pygments.lexers.tnt" -> "pygments" [];
	"pygments.lexers.tls" -> "pygments" [];
	"pygments.lexers.tlb" -> "pygments" [];
	"pygments.lexers.thingsdb" -> "pygments" [];
	"pygments.lexers.theorem" -> "pygments" [];
	"pygments.lexers.textfmts" -> "pygments" [];
	"pygments.lexers.textedit" -> "pygments" [];
	"pygments.lexers.testing" -> "pygments" [];
	"pygments.lexers.teraterm" -> "pygments" [];
	"pygments.lexers.templates" -> "pygments" [];
	"pygments.lexers.teal" -> "pygments" [];
	"pygments.lexers.tcl" -> "pygments" [];
	"pygments.lexers.tal" -> "pygments" [];
	"pygments.lexers.tact" -> "pygments" [];
	"pygments.lexers.supercollider" -> "pygments" [];
	"pygments.lexers.stata" -> "pygments" [];
	"pygments.lexers.srcinfo" -> "pygments" [];
	"pygments.lexers.sql" -> "pygments" [];
	"pygments.lexers.spice" -> "pygments" [];
	"pygments.lexers.special" -> "pygments" [];
	"pygments.lexers.sophia" -> "pygments" [];
	"pygments.lexers.soong" -> "pygments" [];
	"pygments.lexers.solidity" -> "pygments" [];
	"pygments.lexers.snobol" -> "pygments" [];
	"pygments.lexers.smv" -> "pygments" [];
	"pygments.lexers.smithy" -> "pygments" [];
	"pygments.lexers.smalltalk" -> "pygments" [];
	"pygments.lexers.slash" -> "pygments" [];
	"pygments.lexers.sieve" -> "pygments" [];
	"pygments.lexers.shell" -> "pygments" [];
	"pygments.lexers.sgf" -> "pygments" [];
	"pygments.lexers.scripting" -> "pygments" [];
	"pygments.lexers.scdoc" -> "pygments" [];
	"pygments.lexers.savi" -> "pygments" [];
	"pygments.lexers.sas" -> "pygments" [];
	"pygments.lexers.rust" -> "pygments" [];
	"pygments.lexers.ruby" -> "pygments" [];
	"pygments.lexers.robotframework" -> "pygments" [];
	"pygments.lexers.roboconf" -> "pygments" [];
	"pygments.lexers.rnc" -> "pygments" [];
	"pygments.lexers.rita" -> "pygments" [];
	"pygments.lexers.ride" -> "pygments" [];
	"pygments.lexers.resource" -> "pygments" [];
	"pygments.lexers.rebol" -> "pygments" [];
	"pygments.lexers.rdf" -> "pygments" [];
	"pygments.lexers.r" -> "pygments" [];
	"pygments.lexers.qvt" -> "pygments" [];
	"pygments.lexers.qlik" -> "pygments" [];
	"pygments.lexers.q" -> "pygments" [];
	"pygments.lexers.ptx" -> "pygments" [];
	"pygments.lexers.prql" -> "pygments" [];
	"pygments.lexers.promql" -> "pygments" [];
	"pygments.lexers.prolog" -> "pygments" [];
	"pygments.lexers.procfile" -> "pygments" [];
	"pygments.lexers.praat" -> "pygments" [];
	"pygments.lexers.pony" -> "pygments" [];
	"pygments.lexers.pointless" -> "pygments" [];
	"pygments.lexers.php" -> "pygments" [];
	"pygments.lexers.phix" -> "pygments" [];
	"pygments.lexers.perl" -> "pygments" [];
	"pygments.lexers.pawn" -> "pygments" [];
	"pygments.lexers.pascal" -> "pygments" [];
	"pygments.lexers.parsers" -> "pygments" [];
	"pygments.lexers.parasail" -> "pygments" [];
	"pygments.lexers.openscad" -> "pygments" [];
	"pygments.lexers.ooc" -> "pygments" [];
	"pygments.lexers.objective" -> "pygments" [];
	"pygments.lexers.oberon" -> "pygments" [];
	"pygments.lexers.nix" -> "pygments" [];
	"pygments.lexers.nit" -> "pygments" [];
	"pygments.lexers.nimrod" -> "pygments" [];
	"pygments.lexers.ncl" -> "pygments" [];
	"pygments.lexers.mosel" -> "pygments" [];
	"pygments.lexers.monte" -> "pygments" [];
	"pygments.lexers.modula2" -> "pygments" [];
	"pygments.lexers.modeling" -> "pygments" [];
	"pygments.lexers.ml" -> "pygments" [];
	"pygments.lexers.mips" -> "pygments" [];
	"pygments.lexers.minecraft" -> "pygments" [];
	"pygments.lexers.mime" -> "pygments" [];
	"pygments.lexers.meson" -> "pygments" [];
	"pygments.lexers.maxima" -> "pygments" [];
	"pygments.lexers.matlab" -> "pygments" [];
	"pygments.lexers.markup" -> "pygments" [];
	"pygments.lexers.make" -> "pygments" [];
	"pygments.lexers.macaulay2" -> "pygments" [];
	"pygments.lexers.lisp" -> "pygments" [];
	"pygments.lexers.lilypond" -> "pygments" [];
	"pygments.lexers.lean" -> "pygments" [];
	"pygments.lexers.ldap" -> "pygments" [];
	"pygments.lexers.kusto" -> "pygments" [];
	"pygments.lexers.kuin" -> "pygments" [];
	"pygments.lexers.julia" -> "pygments" [];
	"pygments.lexers.jsx" -> "pygments" [];
	"pygments.lexers.jsonnet" -> "pygments" [];
	"pygments.lexers.jslt" -> "pygments" [];
	"pygments.lexers.jmespath" -> "pygments" [];
	"pygments.lexers.javascript" -> "pygments" [];
	"pygments.lexers.j" -> "pygments" [];
	"pygments.lexers.iolang" -> "pygments" [];
	"pygments.lexers.int_fiction" -> "pygments" [];
	"pygments.lexers.installers" -> "pygments" [];
	"pygments.lexers.inferno" -> "pygments" [];
	"pygments.lexers.igor" -> "pygments" [];
	"pygments.lexers.idl" -> "pygments" [];
	"pygments.lexers.html" -> "pygments" [];
	"pygments.lexers.hexdump" -> "pygments" [];
	"pygments.lexers.hdl" -> "pygments" [];
	"pygments.lexers.haxe" -> "pygments" [];
	"pygments.lexers.gsql" -> "pygments" [];
	"pygments.lexers.graphviz" -> "pygments" [];
	"pygments.lexers.graphql" -> "pygments" [];
	"pygments.lexers.graphics" -> "pygments" [];
	"pygments.lexers.graph" -> "pygments" [];
	"pygments.lexers.grammar_notation" -> "pygments" [];
	"pygments.lexers.go" -> "pygments" [];
	"pygments.lexers.gdscript" -> "pygments" [];
	"pygments.lexers.gcodelexer" -> "pygments" [];
	"pygments.lexers.func" -> "pygments" [];
	"pygments.lexers.freefem" -> "pygments" [];
	"pygments.lexers.foxpro" -> "pygments" [];
	"pygments.lexers.fortran" -> "pygments" [];
	"pygments.lexers.forth" -> "pygments" [];
	"pygments.lexers.floscript" -> "pygments" [];
	"pygments.lexers.fift" -> "pygments" [];
	"pygments.lexers.felix" -> "pygments" [];
	"pygments.lexers.fantom" -> "pygments" [];
	"pygments.lexers.factor" -> "pygments" [];
	"pygments.lexers.ezhil" -> "pygments" [];
	"pygments.lexers.esoteric" -> "pygments" [];
	"pygments.lexers.erlang" -> "pygments" [];
	"pygments.lexers.email" -> "pygments" [];
	"pygments.lexers.elpi" -> "pygments" [];
	"pygments.lexers.elm" -> "pygments" [];
	"pygments.lexers.eiffel" -> "pygments" [];
	"pygments.lexers.ecl" -> "pygments" [];
	"pygments.lexers.dylan" -> "pygments" [];
	"pygments.lexers.dsls" -> "pygments" [];
	"pygments.lexers.dns" -> "pygments" [];
	"pygments.lexers.diff" -> "pygments" [];
	"pygments.lexers.devicetree" -> "pygments" [];
	"pygments.lexers.dax" -> "pygments" [];
	"pygments.lexers.data" -> "pygments" [];
	"pygments.lexers.dalvik" -> "pygments" [];
	"pygments.lexers.d" -> "pygments" [];
	"pygments.lexers.css" -> "pygments" [];
	"pygments.lexers.csound" -> "pygments" [];
	"pygments.lexers.crystal" -> "pygments" [];
	"pygments.lexers.cplint" -> "pygments" [];
	"pygments.lexers.console" -> "pygments" [];
	"pygments.lexers.configs" -> "pygments" [];
	"pygments.lexers.comal" -> "pygments" [];
	"pygments.lexers.clean" -> "pygments" [];
	"pygments.lexers.chapel" -> "pygments" [];
	"pygments.lexers.cddl" -> "pygments" [];
	"pygments.lexers.carbon" -> "pygments" [];
	"pygments.lexers.capnproto" -> "pygments" [];
	"pygments.lexers.c_like" -> "pygments" [];
	"pygments.lexers.c_cpp" -> "pygments" [];
	"pygments.lexers.business" -> "pygments" [];
	"pygments.lexers.bqn" -> "pygments" [];
	"pygments.lexers.boa" -> "pygments" [];
	"pygments.lexers.blueprint" -> "pygments" [];
	"pygments.lexers.bibtex" -> "pygments" [];
	"pygments.lexers.berry" -> "pygments" [];
	"pygments.lexers.bdd" -> "pygments" [];
	"pygments.lexers.basic" -> "pygments" [];
	"pygments.lexers.bare" -> "pygments" [];
	"pygments.lexers.automation" -> "pygments" [];
	"pygments.lexers.asn1" -> "pygments" [];
	"pygments.lexers.asm" -> "pygments" [];
	"pygments.lexers.asc" -> "pygments" [];
	"pygments.lexers.arturo" -> "pygments" [];
	"pygments.lexers.arrow" -> "pygments" [];
	"pygments.lexers.archetype" -> "pygments" [];
	"pygments.lexers.apl" -> "pygments" [];
	"pygments.lexers.apdlexer" -> "pygments" [];
	"pygments.lexers.ampl" -> "pygments" [];
	"pygments.lexers.amdgpu" -> "pygments" [];
	"pygments.lexers.ambient" -> "pygments" [];
	"pygments.lexers.algebra" -> "pygments" [];
	"pygments.lexers.ada" -> "pygments" [];
	"pygments.lexers.actionscript" -> "pygments" [];
	"pygments.lexers._sourcemod_builtins" -> "urllib" [];
	"pygments.lexers._sourcemod_builtins" -> "pygments" [];
	"pygments.lexers._scilab_builtins" -> "pygments" [];
	"pygments.lexers._postgres_builtins" -> "urllib" [];
	"pygments.lexers._postgres_builtins" -> "pygments" [];
	"pygments.lexers._php_builtins" -> "urllib" [];
	"pygments.lexers._mysql_builtins" -> "urllib" [];
	"pygments.lexers._mysql_builtins" -> "pygments" [];
	"pygments.lexers._lua_builtins" -> "urllib" [];
	"pygments.formatters.terminal256" -> "pygments" [];
	"pygments.formatters.terminal" -> "pygments" [];
	"pygments.formatters.svg" -> "pygments" [];
	"pygments.formatters.rtf" -> "pygments" [];
	"pygments.formatters.pangomarkup" -> "pygments" [];
	"pygments.formatters.other" -> "pygments" [];
	"pygments.formatters.latex" -> "pygments" [];
	"pygments.formatters.irc" -> "pygments" [];
	"pygments.formatters.img" -> "pygments" [];
	"pygments.formatters.groff" -> "pygments" [];
	"pygments.formatters.bbcode" -> "pygments" [];
	"docutils.writers.odf_odt.prepstyles" -> "xml" [];
	"docutils.writers.odf_odt" -> "xml" [];
	"docutils.writers.latex2e" -> "urllib" [];
	"kivy.core.clipboard.clipboard_winctypes" -> "kivy" [];
	"kivy.input.postproc.calibration" -> "kivy" [];
	"kivy.input.postproc.dejitter" -> "kivy" [];
	"kivy.input.postproc.retaintouch" -> "kivy" [];
	"kivy.input.postproc.ignorelist" -> "kivy" [];
	"kivy.input.postproc.tripletap" -> "kivy" [];
	"kivy.input.postproc.doubletap" -> "kivy" [];
	"kivy.input.providers" -> "kivy" [];
	"kivy.input.providers.leapfinger" -> "kivy" [];
	"kivy.input.providers.androidjoystick" -> "kivy" [];
	"kivy.input.providers.linuxwacom" -> "kivy" [];
	"kivy.input.providers.hidinput" -> "kivy" [];
	"kivy.input.providers.mtdev" -> "kivy" [];
	"kivy.input.providers.probesysfs" -> "kivy" [];
	"kivy.input.providers.mouse" -> "kivy" [];
	"kivy.input.providers.tuio" -> "kivy" [];
	"kivy.input.motionevent" -> "kivy" [];
	"kivy.uix.tabbedpanel" -> "kivy" [];
	"kivy.core.audio.audio_ffpyplayer" -> "kivy" [];
	"kivy.uix.switch" -> "kivy" [];
	"kivy.uix.scrollview" -> "kivy" [];
	"kivy.uix.sandbox" -> "kivy" [];
	"kivy.uix.layout" -> "kivy" [];
	"kivy.core.camera.camera_gi" -> "kivy" [];
	"kivy.uix.behaviors.knspace" -> "kivy" [];
	"kivy.uix.accordion" -> "kivy" [];
	"kivy.uix.video" -> "kivy" [];
	"kivy.uix.gridlayout" -> "kivy" [];
	"kivy.uix.behaviors.codenavigation" -> "kivy" [];
	"kivy.core.video.video_gstplayer" -> "kivy" [];
	"kivy.core.camera" -> "kivy" [];
	"kivy.uix.image" -> "kivy" [];
	"kivy.uix.progressbar" -> "kivy" [];
	"kivy.core.clipboard.clipboard_xsel" -> "kivy" [];
	"kivy.core.clipboard.clipboard_gtk3" -> "kivy" [];
	"kivy.uix.behaviors.focus" -> "kivy" [];
	"kivy.uix.popup" -> "kivy" [];
	"kivy.uix.pagelayout" -> "kivy" [];
	"kivy.effects.kinetic" -> "kivy" [];
	"kivy.uix.anchorlayout" -> "kivy" [];
	"kivy.core.clipboard.clipboard_nspaste" -> "kivy" [];
	"kivy.loader" -> "urllib" [];
	"certifi.core" -> "importlib" [];
	"kivy.uix.behaviors.cover" -> "kivy" [];
	"kivy.uix.filechooser" -> "kivy" [];
	"kivy.uix.filechooser" -> "collections" [];
	"ffmpeg._utils" -> "past" [];
	"past.builtins" -> "future" [];
	"past.builtins.misc" -> "future" [];
	"past.types.oldstr" -> "past" [];
	"past.types.olddict" -> "past" [];
	"past.types.basestring" -> "past" [];
	"past.builtins.noniterators" -> "past" [];
	"future.moves.dbm.ndbm" -> "future" [];
	"future.moves.dbm.gnu" -> "future" [];
	"future.moves.dbm.gnu" -> "dbm" [];
	"future.moves.dbm.dumb" -> "future" [];
	"future.moves.dbm.dumb" -> "dbm" [];
	"dbm.dumb" -> "collections" [];
	"future.moves.dbm" -> "future" [];
	"future.moves.test.support" -> "future" [];
	"future.moves.test.support" -> "test" [];
	"test.support.socket_helper" -> "urllib" [];
	"test.support.os_helper" -> "collections" [];
	"test.support" -> "urllib" [];
	"test.support" -> "asyncio" [];
	"tracemalloc" -> "collections" [];
	"ctypes.util" -> "importlib" [];
	"test.support.testresult" -> "xml" [];
	"future.moves.test" -> "future" [];
	"future.backports.urllib.robotparser" -> "future" [];
	"future.backports.misc" -> "future" [];
	"future.backports.email" -> "future" [];
	"future.backports.email._policybase" -> "future" [];
	"future.backports.email.charset" -> "future" [];
	"future.backports.email.encoders" -> "future" [];
	"future.backports.email.feedparser" -> "future" [];
	"future.backports.email.message" -> "future" [];
	"future.backports.email.generator" -> "future" [];
	"future.backports.email._encoded_words" -> "future" [];
	"future.backports.email.header" -> "future" [];
	"future.backports.email.quoprimime" -> "future" [];
	"future.backports.email.base64mime" -> "future" [];
	"future.backports.email._parseaddr" -> "future" [];
	"future.backports.email.errors" -> "future" [];
	"future.backports.datetime" -> "future" [];
	"future.types.newstr" -> "future" [];
	"future.types.newrange" -> "future" [];
	"future.types.newlist" -> "future" [];
	"future.types.newint" -> "future" [];
	"future.types.newdict" -> "future" [];
	"future.types.newbytes" -> "future" [];
	"future.builtins.newsuper" -> "future" [];
	"future.builtins.newround" -> "future" [];
	"future.backports.urllib.parse" -> "future" [];
	"future.backports.urllib.response" -> "future" [];
	"future.backports.urllib.request" -> "future" [];
	"future.backports.http.cookiejar" -> "future" [];
	"future.backports.http.client" -> "future" [];
	"ffmpeg._ffmpeg" -> "past" [];
	"ffmpeg.nodes" -> "past" [];
	"kivy.effects.dampedscroll" -> "kivy" [];
	"kivy.uix.gesturesurface" -> "kivy" [];
	"kivy.uix.treeview" -> "kivy" [];
	"kivy.uix.spinner" -> "kivy" [];
	"kivy.core.camera.camera_opencv" -> "kivy" [];
	"kivy.uix.checkbox" -> "kivy" [];
	"kivy.uix.codeinput" -> "kivy" [];
	"kivy.uix.behaviors.emacs" -> "kivy" [];
	"kivy.core.spelling.spelling_enchant" -> "kivy" [];
	"kivy.uix.bubble" -> "kivy" [];
	"kivy.core.text.markup" -> "kivy" [];
	"kivy.core.audio" -> "kivy" [];
	"kivy.core.clipboard.clipboard_xclip" -> "kivy" [];
	"kivy.core.camera.camera_android" -> "kivy" [];
	"kivy.uix.videoplayer" -> "kivy" [];
	"kivy.core.text.text_pil" -> "kivy" [];
	"kivy.uix.stacklayout" -> "kivy" [];
	"kivy.core.audio.audio_pygame" -> "kivy" [];
	"kivy.uix.recyclelayout" -> "kivy" [];
	"kivy.uix.behaviors.button" -> "kivy" [];
	"kivy.uix.behaviors.compoundselection" -> "kivy" [];
	"kivy.uix.scatterlayout" -> "kivy" [];
	"kivy.core.video.video_ffpyplayer" -> "kivy" [];
	"kivy.uix.slider" -> "kivy" [];
	"kivy.core.clipboard.clipboard_sdl2" -> "kivy" [];
	"kivy.core.audio.audio_gstplayer" -> "kivy" [];
	"kivy.effects.scroll" -> "kivy" [];
	"kivy.uix.behaviors.drag" -> "kivy" [];
	"kivy.core.window.window_egl_rpi" -> "kivy" [];
	"kivy.core.text.text_sdl2" -> "kivy" [];
	"kivy.core.clipboard.clipboard_pygame" -> "kivy" [];
	"kivy.uix.actionbar" -> "kivy" [];
	"kivy.core.camera.camera_picamera" -> "kivy" [];
	"kivy.core.clipboard.clipboard_dbusklipper" -> "kivy" [];
	"kivy.uix.recycleview.__init__" -> "kivy" [];
	"kivy.uix.colorpicker" -> "kivy" [];
	"kivy.uix.behaviors.togglebutton" -> "kivy" [];
	"kivy.uix.effectwidget" -> "kivy" [];
	"kivy.core.image.img_dds" -> "kivy" [];
	"kivy.uix.carousel" -> "kivy" [];
	"kivy.uix.dropdown" -> "kivy" [];
	"kivy.uix.behaviors.touchripple" -> "kivy" [];
	"kivy.core.image.img_ffpyplayer" -> "kivy" [];
	"kivy.uix.recycleview.layout" -> "kivy" [];
	"kivy.core.image.img_sdl2" -> "kivy" [];
	"kivy.uix.widget" -> "kivy" [];
	"kivy.core.gl" -> "kivy" [];
	"kivy.uix.button" -> "kivy" [];
	"kivy.uix.textinput" -> "kivy" [];
	"kivy.uix.label" -> "kivy" [];
	"kivy.uix.boxlayout" -> "kivy" [];
	"requests" -> "urllib" [];
	"requests.compat" -> "urllib" [];
	"requests.models" -> "encodings" [];
	"urllib3.response" -> "http" [];
	"urllib3.connection" -> "http" [];
	"urllib3.http2" -> "importlib" [];
	"urllib3._request_methods" -> "urllib" [];
	"urllib3.util.response" -> "http" [];
	"urllib3.util.response" -> "email" [];
	"urllib3.fields" -> "email" [];
	"urllib3.poolmanager" -> "urllib" [];
	"urllib3.exceptions" -> "email" [];
	"urllib3.exceptions" -> "http" [];
	"urllib3.contrib.pyopenssl" -> "urllib" [];
	"charset_normalizer.utils" -> "encodings" [];
	"charset_normalizer.constant" -> "encodings" [];
	"charset_normalizer.models" -> "encodings" [];
	"urllib3.contrib.emscripten.connection" -> "http" [];
	"urllib3.contrib.emscripten.response" -> "http" [];
	"urllib3.contrib.emscripten.fetch" -> "email" [];
	"urllib3.contrib.emscripten.fetch" -> "importlib" [];
	"ollama._client" -> "http" [];
	"ollama._client" -> "urllib" [];
	"ollama._client" -> "collections" [];
	"httpx._main" -> "pygments" [];
	"httpcore._backends.trio" -> "httpcore" [];
	"httpcore._backends.anyio" -> "httpcore" [];
	"anyio._backends._trio" -> "collections" [];
	"anyio._backends._trio" -> "concurrent" [];
	"anyio.abc._eventloop" -> "collections" [];
	"anyio.abc._eventloop" -> "anyio" [];
	"anyio.abc._testing" -> "collections" [];
	"anyio.abc._tasks" -> "collections" [];
	"anyio.abc._streams" -> "collections" [];
	"anyio.abc._sockets" -> "collections" [];
	"anyio.from_thread" -> "collections" [];
	"anyio.from_thread" -> "concurrent" [];
	"anyio._backends._asyncio" -> "concurrent" [];
	"anyio._core._typedattr" -> "collections" [];
	"anyio._core._testing" -> "collections" [];
	"anyio._core._tasks" -> "collections" [];
	"anyio._core._synchronization" -> "anyio" [];
	"anyio._core._subprocesses" -> "collections" [];
	"anyio._core._subprocesses" -> "anyio" [];
	"anyio._core._sockets" -> "collections" [];
	"anyio.streams.tls" -> "collections" [];
	"anyio.streams.stapled" -> "collections" [];
	"anyio._core._signals" -> "collections" [];
	"anyio._core._resources" -> "anyio" [];
	"anyio._core._fileio" -> "collections" [];
	"anyio._core._exceptions" -> "collections" [];
	"anyio._core._eventloop" -> "collections" [];
	"anyio._core._eventloop" -> "anyio" [];
	"anyio.to_thread" -> "collections" [];
	"httpcore._sync.socks_proxy" -> "httpcore" [];
	"httpcore._sync.http2" -> "httpcore" [];
	"httpcore._sync.interfaces" -> "httpcore" [];
	"httpcore._sync.http_proxy" -> "httpcore" [];
	"httpcore._sync.http11" -> "httpcore" [];
	"httpcore._sync.connection_pool" -> "httpcore" [];
	"httpcore._sync.connection" -> "httpcore" [];
	"httpcore._models" -> "urllib" [];
	"httpcore._backends.sync" -> "httpcore" [];
	"httpcore._backends.mock" -> "httpcore" [];
	"httpcore._async.socks_proxy" -> "httpcore" [];
	"httpcore._backends.auto" -> "httpcore" [];
	"httpcore._async.http2" -> "httpcore" [];
	"httpcore._async.interfaces" -> "httpcore" [];
	"httpcore._async.http_proxy" -> "httpcore" [];
	"httpcore._async.http11" -> "httpcore" [];
	"httpcore._async.connection_pool" -> "httpcore" [];
	"httpcore._async.connection" -> "httpcore" [];
	"click._termui_impl" -> "urllib" [];
	"httpx._urls" -> "urllib" [];
	"httpx._utils" -> "email" [];
	"httpx._utils" -> "urllib" [];
	"httpx._types" -> "http" [];
	"httpx._models" -> "email" [];
	"httpx._models" -> "urllib" [];
	"httpx._models" -> "collections" [];
	"httpx._models" -> "http" [];
	"httpx._content" -> "urllib" [];
	"httpx._auth" -> "urllib" [];
	"numpy._core.overrides" -> "numpy" [];
	"numpy._core._exceptions" -> "numpy" [];
	"numpy._core._ufunc_config" -> "collections" [];
	"numpy._core._ufunc_config" -> "numpy" [];
	"numpy._core.numerictypes" -> "numpy" [];
	"numpy._core.records" -> "numpy" [];
	"numpy._typing._array_like" -> "collections" [];
	"numpy._typing._nested_sequence" -> "collections" [];
	"numpy._typing._dtype_like" -> "collections" [];
	"numpy._typing._shape" -> "collections" [];
	"numpy.f2py._backends._distutils" -> "numpy" [];
	"numpy.f2py.__version__" -> "numpy" [];
	"numpy.matrixlib.defmatrix" -> "numpy" [];
	"numpy.testing._private.extbuild" -> "importlib" [];
	"numpy.testing._private.utils" -> "concurrent" [];
	"numpy.lib._array_utils_impl" -> "numpy" [];
	"numpy.fft._helper" -> "numpy" [];
	"numpy.fft._pocketfft" -> "numpy" [];
	"numpy.lib._npyio_impl" -> "collections" [];
	"numpy.lib._datasource" -> "numpy" [];
	"numpy.lib._datasource" -> "urllib" [];
	"numpy.lib._polynomial_impl" -> "numpy" [];
	"numpy.lib._type_check_impl" -> "numpy" [];
	"numpy._core.getlimits" -> "numpy" [];
	"numpy._core._machar" -> "numpy" [];
	"numpy.lib._shape_base_impl" -> "numpy" [];
	"numpy.lib._function_base_impl" -> "collections" [];
	"numpy.lib.mixins" -> "numpy" [];
	"yaml.constructor" -> "collections" [];
	"transformers.utils.import_utils" -> "importlib" [];
	"transformers.utils.import_utils" -> "transformers" [];
	"torch.hub" -> "urllib" [];
	"torch.hub" -> "importlib" [];
	"torch.utils.throughput_benchmark" -> "torch" [];
	"torch.distributed.rendezvous" -> "urllib" [];
	"torch.distributed.device_mesh" -> "numpy" [];
	"torch.utils.data._utils" -> "torch" [];
	"torch.utils.data.graph" -> "collections" [];
	"torch.utils.data._utils.signal_handling" -> "torch" [];
	"torch.utils.data.datapipes.dataframe.dataframes" -> "unittest" [];
	"torch.utils._import_utils" -> "importlib" [];
	"torch._inductor.codegen.rocm.rocm_cpp_scheduling" -> "torch" [];
	"torch._inductor.codegen.cuda.cuda_cpp_scheduling" -> "torch" [];
	"torch._inductor.codegen.cuda.cutlass_utils" -> "unittest" [];
	"torch._dynamo.backends.debugging" -> "functorch" [];
	"torch._dynamo.backends.common" -> "unittest" [];
	"torch._dynamo.backends.common" -> "functorch" [];
	"torch._functorch.aot_autograd" -> "unittest" [];
	"torch._dynamo.source" -> "torch" [];
	"torch._dynamo.variables.torch" -> "torch" [];
	"torch.utils.weak" -> "collections" [];
	"torch.package.package_exporter" -> "importlib" [];
	"torch.distributed.rpc" -> "urllib" [];
	"sqlite3.dbapi2" -> "collections" [];
	"torch.testing._creation" -> "collections" [];
	"torch.testing._comparison" -> "collections" [];
	"torch.testing._internal.common_utils" -> "collections" [];
	"torch._export" -> "unittest" [];
	"torch.ao.nn.quantized.modules.linear" -> "collections" [];
	"torch.jit._dataclass_impls" -> "torch" [];
	"torch.ao.quantization.fuser_method_mappings" -> "torch" [];
	"torch.ao.quantization.fx.fuse" -> "torch" [];
	"torch.ao.quantization.fx.lower_to_fbgemm" -> "torch" [];
	"torch.ao.quantization.fuse_modules" -> "torch" [];
	"torch.fx.experimental.const_fold" -> "torch" [];
	"torch._custom_op.impl" -> "torchgen" [];
	"torchgen.api.ufunc" -> "torchgen" [];
	"torchgen.api.structured" -> "torchgen" [];
	"torchgen.api.types.signatures" -> "torchgen" [];
	"torchgen.api.functionalization" -> "torchgen" [];
	"torchgen.api.dispatcher" -> "torchgen" [];
	"torchgen.api.types.types_base" -> "torchgen" [];
	"torchgen.api.types.types" -> "torchgen" [];
	"torch.fx.passes.split_utils" -> "torch" [];
	"torch.fx.passes.utils.common" -> "torch" [];
	"torch.fx.passes.utils.fuser_utils" -> "torch" [];
	"sympy.logic.boolalg" -> "sympy" [];
	"sympy.functions.elementary.complexes" -> "sympy" [];
	"sympy.integrals.integrals" -> "sympy" [];
	"sympy.integrals.trigonometry" -> "sympy" [];
	"sympy.simplify.radsimp" -> "sympy" [];
	"sympy.simplify.sqrtdenest" -> "sympy" [];
	"sympy.matrices.immutable" -> "sympy" [];
	"sympy.matrices.sparse" -> "collections" [];
	"sympy.functions.special.tensor_functions" -> "sympy" [];
	"sympy.external.ntheory" -> "mpmath" [];
	"sympy.matrices.expressions.permutation" -> "sympy" [];
	"sympy.combinatorics.permutations" -> "sympy" [];
	"sympy.combinatorics.perm_groups" -> "sympy" [];
	"sympy.categories.diagram_drawing" -> "sympy" [];
	"sympy.sets.handlers.comparison" -> "sympy" [];
	"sympy.sets.ordinals" -> "sympy" [];
	"sympy.sets.contains" -> "sympy" [];
	"sympy.sets.fancysets" -> "sympy" [];
	"sympy.sets.setexpr" -> "sympy" [];
	"sympy.categories.baseclasses" -> "sympy" [];
	"sympy.physics.control.control_plots" -> "sympy" [];
	"sympy.plotting.series" -> "collections" [];
	"sympy.plotting.series" -> "sympy" [];
	"sympy.plotting.pygletplot.util" -> "sympy" [];
	"sympy.plotting.pygletplot.plot_axes" -> "sympy" [];
	"sympy.geometry.entity" -> "sympy" [];
	"sympy.geometry.polygon" -> "sympy" [];
	"sympy.geometry.ellipse" -> "sympy" [];
	"sympy.polys.polyutils" -> "sympy" [];
	"sympy.polys.domains.modularinteger" -> "sympy" [];
	"sympy.polys.domains.gmpyrationalfield" -> "sympy" [];
	"sympy.polys.domains.pythonrationalfield" -> "sympy" [];
	"sympy.polys.domains.gmpyintegerring" -> "sympy" [];
	"sympy.polys.domains.pythonintegerring" -> "sympy" [];
	"sympy.polys.domains.gmpyfinitefield" -> "sympy" [];
	"sympy.polys.domains.pythonfinitefield" -> "sympy" [];
	"sympy.polys.domains.pythonrational" -> "sympy" [];
	"sympy.polys.domains.expressionrawdomain" -> "sympy" [];
	"sympy.polys.domains.simpledomain" -> "sympy" [];
	"sympy.polys.domains.field" -> "sympy" [];
	"sympy.polys.domains.ring" -> "sympy" [];
	"sympy.polys.domains.quotientring" -> "sympy" [];
	"sympy.polys.agca.modules" -> "sympy" [];
	"sympy.polys.monomials" -> "sympy" [];
	"sympy.polys.domains.old_polynomialring" -> "sympy" [];
	"sympy.polys.domains.old_fractionfield" -> "sympy" [];
	"sympy.polys.domains.compositedomain" -> "sympy" [];
	"sympy.polys.agca.homomorphisms" -> "sympy" [];
	"sympy.polys.factortools" -> "sympy" [];
	"sympy.polys.galoistools" -> "sympy" [];
	"sympy.polys.euclidtools" -> "sympy" [];
	"sympy.polys.densetools" -> "sympy" [];
	"sympy.polys.densebasic" -> "sympy" [];
	"sympy.polys.orderings" -> "sympy" [];
	"sympy.polys.domains.characteristiczero" -> "sympy" [];
	"sympy.polys.domains.expressiondomain" -> "sympy" [];
	"sympy.polys.domains.fractionfield" -> "sympy" [];
	"sympy.polys.fields" -> "sympy" [];
	"sympy.polys.rings" -> "sympy" [];
	"sympy.polys.compatibility" -> "sympy" [];
	"sympy.polys.specialpolys" -> "sympy" [];
	"sympy.polys.numberfields.galoisgroups" -> "sympy" [];
	"sympy.combinatorics.generators" -> "sympy" [];
	"sympy.polys.polyroots" -> "sympy" [];
	"sympy.polys.rationaltools" -> "sympy" [];
	"sympy.polys.polyquinticconst" -> "sympy" [];
	"sympy.codegen.ast" -> "sympy" [];
	"sympy.simplify.cse_main" -> "sympy" [];
	"sympy.simplify.cse_opts" -> "sympy" [];
	"sympy.polys.rootoftools" -> "sympy" [];
	"sympy.polys.polyfuncs" -> "sympy" [];
	"sympy.tensor.array.expressions.utils" -> "sympy" [];
	"sympy.tensor.array.expressions.from_array_to_indexed" -> "collections" [];
	"sympy.tensor.array.ndim_array" -> "collections" [];
	"sympy.tensor.array.ndim_array" -> "sympy" [];
	"sympy.tensor.index_methods" -> "sympy" [];
	"sympy.tensor.array.dense_ndim_array" -> "sympy" [];
	"sympy.tensor.array.arrayop" -> "collections" [];
	"sympy.tensor.array.arrayop" -> "sympy" [];
	"sympy.tensor.array.sparse_ndim_array" -> "sympy" [];
	"sympy.tensor.indexed" -> "collections" [];
	"sympy.tensor.indexed" -> "sympy" [];
	"sympy.printing.numpy" -> "sympy" [];
	"sympy.parsing.sympy_parser" -> "sympy" [];
	"sympy.printing.codeprinter" -> "sympy" [];
	"sympy.printing.fortran" -> "sympy" [];
	"sympy.codegen.fnodes" -> "sympy" [];
	"sympy.printing.c" -> "sympy" [];
	"sympy.polys.numberfields.subfield" -> "sympy" [];
	"sympy.polys.numberfields.minpoly" -> "sympy" [];
	"sympy.polys.ring_series" -> "sympy" [];
	"sympy.polys.orthopolys" -> "sympy" [];
	"sympy.polys.constructor" -> "sympy" [];
	"sympy.polys.domains.polynomialring" -> "sympy" [];
	"sympy.polys.domains.complexfield" -> "sympy" [];
	"sympy.polys.domains.mpelements" -> "sympy" [];
	"sympy.polys.domains.mpelements" -> "mpmath" [];
	"sympy.polys.domains.realfield" -> "sympy" [];
	"sympy.polys.domains.algebraicfield" -> "sympy" [];
	"sympy.polys.domains.rationalfield" -> "sympy" [];
	"sympy.polys.domains.integerring" -> "sympy" [];
	"sympy.polys.domains.finitefield" -> "sympy" [];
	"sympy.polys.domains.domain" -> "sympy" [];
	"sympy.polys.domains.domainelement" -> "sympy" [];
	"sympy.polys.polyoptions" -> "sympy" [];
	"sympy.polys.polyerrors" -> "sympy" [];
	"sympy.geometry.plane" -> "sympy" [];
	"sympy.simplify.trigsimp" -> "sympy" [];
	"sympy.simplify.ratsimp" -> "sympy" [];
	"sympy.strategies.core" -> "collections" [];
	"sympy.geometry.line" -> "sympy" [];
	"sympy.geometry.point" -> "sympy" [];
	"sympy.sets.handlers.union" -> "sympy" [];
	"sympy.sets.handlers.intersection" -> "sympy" [];
	"sympy.plotting.pygletplot.plot_modes" -> "sympy" [];
	"sympy.plotting.pygletplot.plot_surface" -> "sympy" [];
	"sympy.plotting.pygletplot.plot_mode_base" -> "sympy" [];
	"sympy.plotting.pygletplot.plot_curve" -> "sympy" [];
	"sympy.plotting.plot" -> "sympy" [];
	"sympy.plotting.plotgrid" -> "sympy" [];
	"sympy.plotting.backends.matplotlibbackend.matplotlib" -> "collections" [];
	"sympy.plotting.backends.matplotlibbackend.matplotlib" -> "sympy" [];
	"sympy.plotting.intervalmath.lib_interval" -> "sympy" [];
	"sympy.utilities.lambdify" -> "sympy" [];
	"sympy.printing.tensorflow" -> "collections" [];
	"sympy.printing.pycode" -> "sympy" [];
	"sympy.polys.partfrac" -> "sympy" [];
	"sympy.physics.units.util" -> "collections" [];
	"sympy.functions.special.beta_functions" -> "sympy" [];
	"sympy.functions.combinatorial.numbers" -> "sympy" [];
	"sympy.functions.special.polynomials" -> "sympy" [];
	"sympy.polys.appellseqs" -> "sympy" [];
	"sympy.ntheory.partitions_" -> "mpmath" [];
	"sympy.ntheory.residue_ntheory" -> "sympy" [];
	"sympy.vector.integrals" -> "sympy" [];
	"sympy.vector.parametricregion" -> "sympy" [];
	"sympy.vector.implicitregion" -> "sympy" [];
	"sympy.vector.operators" -> "sympy" [];
	"sympy.vector.functions" -> "sympy" [];
	"sympy.vector.deloperator" -> "sympy" [];
	"sympy.vector.scalar" -> "sympy" [];
	"sympy.vector.dyadic" -> "sympy" [];
	"sympy.vector.coordsysrect" -> "collections" [];
	"sympy.vector.coordsysrect" -> "sympy" [];
	"sympy.concrete.products" -> "sympy" [];
	"sympy.concrete.delta" -> "sympy" [];
	"sympy.vector.basisdependent" -> "sympy" [];
	"sympy.tensor.array.array_comprehension" -> "sympy" [];
	"sympy.printing.conventions" -> "collections" [];
	"sympy.printing.str" -> "sympy" [];
	"sympy.printing.str" -> "mpmath" [];
	"sympy.utilities.mathml" -> "importlib" [];
	"sympy.printing.rust" -> "sympy" [];
	"sympy.printing.octave" -> "sympy" [];
	"sympy.printing.mathematica" -> "sympy" [];
	"sympy.printing.julia" -> "sympy" [];
	"sympy.printing.jscode" -> "sympy" [];
	"sympy.printing.rcode" -> "sympy" [];
	"sympy.printing.glsl" -> "sympy" [];
	"sympy.assumptions.relation.equality" -> "sympy" [];
	"sympy.assumptions.relation.binrel" -> "sympy" [];
	"sympy.printing.mathml" -> "mpmath" [];
	"sympy.printing.mathml" -> "sympy" [];
	"sympy.printing.pretty.pretty" -> "sympy" [];
	"sympy.combinatorics.free_groups" -> "sympy" [];
	"sympy.combinatorics.fp_groups" -> "sympy" [];
	"sympy.ntheory.egyptian_fraction" -> "sympy" [];
	"sympy.ntheory.continued_fraction" -> "sympy" [];
	"sympy.combinatorics.util" -> "sympy" [];
	"sympy.printing.repr" -> "mpmath" [];
	"sympy.combinatorics.graycode" -> "sympy" [];
	"sympy.combinatorics.polyhedron" -> "sympy" [];
	"sympy.combinatorics.partitions" -> "sympy" [];
	"sympy.combinatorics.prufer" -> "sympy" [];
	"sympy.polys.polytools" -> "sympy" [];
	"sympy.polys.dispersion" -> "sympy" [];
	"sympy.matrices.expressions.kronecker" -> "sympy" [];
	"sympy.matrices.expressions.dotproduct" -> "sympy" [];
	"sympy.matrices.expressions.diagonal" -> "sympy" [];
	"sympy.matrices.expressions.hadamard" -> "sympy" [];
	"sympy.matrices.expressions.adjoint" -> "sympy" [];
	"sympy.assumptions.refine" -> "sympy" [];
	"sympy.matrices.expressions.matpow" -> "sympy" [];
	"sympy.matrices.expressions.matmul" -> "sympy" [];
	"sympy.matrices.expressions.matexpr" -> "sympy" [];
	"sympy.matrices.expressions.matadd" -> "sympy" [];
	"sympy.matrices.expressions.inverse" -> "sympy" [];
	"sympy.matrices.expressions.funcmatrix" -> "sympy" [];
	"sympy.matrices.expressions.blockmatrix" -> "sympy" [];
	"sympy.matrices.determinant" -> "sympy" [];
	"sympy.matrices.eigen" -> "sympy" [];
	"sympy.matrices.matrixbase" -> "sympy" [];
	"sympy.discrete.recurrences" -> "sympy" [];
	"sympy.discrete.convolutions" -> "sympy" [];
	"sympy.discrete.transforms" -> "sympy" [];
	"sympy.matrices.decompositions" -> "sympy" [];
	"sympy.utilities.decorator" -> "sympy" [];
	"sympy.testing.runtests" -> "sympy" [];
	"sympy.testing.runtests_pytest" -> "importlib" [];
	"sympy.interactive.printing" -> "sympy" [];
	"sympy.interactive.traversal" -> "sympy" [];
	"sympy.solvers.decompogen" -> "sympy" [];
	"sympy.solvers.inequalities" -> "sympy" [];
	"sympy.solvers.deutils" -> "sympy" [];
	"sympy.solvers.pde" -> "sympy" [];
	"sympy.solvers.polysys" -> "sympy" [];
	"sympy.solvers.ode.systems" -> "sympy" [];
	"sympy.solvers.ode.subscheck" -> "sympy" [];
	"sympy.solvers.ode.lie_group" -> "sympy" [];
	"sympy.solvers.ode.ode" -> "sympy" [];
	"sympy.solvers.ode.single" -> "sympy" [];
	"sympy.solvers.ode.nonhomogeneous" -> "sympy" [];
	"sympy.solvers.ode.hypergeometric" -> "sympy" [];
	"sympy.solvers.ode.riccati" -> "sympy" [];
	"sympy.solvers.recurr" -> "sympy" [];
	"sympy.solvers.diophantine.diophantine" -> "sympy" [];
	"sympy.calculus.accumulationbounds" -> "sympy" [];
	"sympy.series.fourier" -> "sympy" [];
	"sympy.series.sequences" -> "sympy" [];
	"sympy.series.approximants" -> "sympy" [];
	"sympy.integrals.transforms" -> "sympy" [];
	"sympy.simplify.gammasimp" -> "sympy" [];
	"sympy.simplify.powsimp" -> "sympy" [];
	"sympy.simplify.combsimp" -> "sympy" [];
	"sympy.simplify.epathtools" -> "sympy" [];
	"sympy.functions.special.gamma_functions" -> "sympy" [];
	"sympy.functions.special.elliptic_integrals" -> "sympy" [];
	"sympy.functions.special.bessel" -> "sympy" [];
	"sympy.functions.elementary.hyperbolic" -> "sympy" [];
	"sympy.functions.combinatorial.factorials" -> "sympy" [];
	"sympy.integrals.deltafunctions" -> "sympy" [];
	"sympy.geometry.parabola" -> "sympy" [];
	"sympy.geometry.curve" -> "sympy" [];
	"sympy.integrals.heurisch" -> "sympy" [];
	"sympy.integrals.singularityfunctions" -> "sympy" [];
	"sympy.integrals.rde" -> "sympy" [];
	"sympy.integrals.prde" -> "sympy" [];
	"sympy.concrete.gosper" -> "sympy" [];
	"sympy.solvers.solvers" -> "sympy" [];
	"sympy.tensor.functions" -> "collections" [];
	"sympy.tensor.functions" -> "sympy" [];
	"sympy.series.order" -> "sympy" [];
	"sympy.series.limits" -> "sympy" [];
	"sympy.series.formal" -> "sympy" [];
	"sympy.integrals.rationaltools" -> "sympy" [];
	"sympy.functions.special.singularity_functions" -> "sympy" [];
	"sympy.functions.special.spherical_harmonics" -> "sympy" [];
	"sympy.functions.special.bsplines" -> "sympy" [];
	"sympy.concrete.expr_with_limits" -> "sympy" [];
	"sympy.functions.elementary.integers" -> "sympy" [];
	"sympy.functions.elementary.trigonometric" -> "sympy" [];
	"sympy.functions.elementary.exponential" -> "sympy" [];
	"sympy.functions.special.delta_functions" -> "sympy" [];
	"sympy.core.power" -> "sympy" [];
	"sympy.core.expr" -> "mpmath" [];
	"sympy.functions.elementary.miscellaneous" -> "sympy" [];
	"sympy.sets.sets" -> "sympy" [];
	"sympy.sets.handlers.functions" -> "sympy" [];
	"sympy.sets.handlers.power" -> "sympy" [];
	"sympy.sets.handlers.mul" -> "sympy" [];
	"sympy.sets.handlers.add" -> "sympy" [];
	"sympy.sets.handlers.issubset" -> "sympy" [];
	"sympy.solvers.solveset" -> "sympy" [];
	"sympy.functions.elementary.piecewise" -> "sympy" [];
	"sympy.simplify.simplify" -> "sympy" [];
	"sympy.assumptions.ask" -> "sympy" [];
	"sympy.logic.algorithms.lra_theory" -> "sympy" [];
	"sympy.assumptions.satask" -> "sympy" [];
	"sympy.assumptions.sathandlers" -> "sympy" [];
	"sympy.assumptions.predicates.matrices" -> "sympy" [];
	"sympy.assumptions.handlers.matrices" -> "sympy" [];
	"sympy.assumptions.handlers.common" -> "sympy" [];
	"sympy.assumptions.predicates.common" -> "sympy" [];
	"sympy.assumptions.handlers.ntheory" -> "sympy" [];
	"sympy.assumptions.predicates.ntheory" -> "sympy" [];
	"sympy.assumptions.handlers.order" -> "sympy" [];
	"sympy.assumptions.predicates.order" -> "sympy" [];
	"sympy.assumptions.handlers.calculus" -> "sympy" [];
	"sympy.assumptions.predicates.calculus" -> "sympy" [];
	"sympy.assumptions.predicates.sets" -> "sympy" [];
	"sympy.assumptions.handlers.sets" -> "sympy" [];
	"sympy.calculus.util" -> "sympy" [];
	"sympy.core.relational" -> "sympy" [];
	"sympy.logic.algorithms.z3_wrapper" -> "sympy" [];
	"sympy.core.sympify" -> "mpmath" [];
	"sympy.core.numbers" -> "sympy" [];
	"sympy.tensor.tensor" -> "sympy" [];
	"torch.utils._sympy.numbers" -> "mpmath" [];
	"torch._functorch.batch_norm_replacement" -> "torch" [];
	"torch._functorch.apis" -> "torch" [];
	"torch._functorch.deprecated" -> "torch" [];
	"torch._export.verifier" -> "collections" [];
	"torch._higher_order_ops.wrap" -> "torch" [];
	"torch._export.db.logging" -> "torch" [];
	"torch.fx._pytree" -> "torch" [];
	"torch.fx.passes.infra.pass_manager" -> "torch" [];
	"torch.onnx._internal.fx.registration" -> "torch" [];
	"torch.onnx._internal.fx.passes._utils" -> "torch" [];
	"torch.onnx._internal.diagnostics.infra.formatter" -> "torch" [];
	"torch.onnx._internal.diagnostics._diagnostic" -> "collections" [];
	"torch.onnx._internal.fx.dynamo_graph_extractor" -> "torch" [];
	"torch.onnx._internal.exporter._schemas" -> "collections" [];
	"torch.onnx._internal.registration" -> "torch" [];
	"torch.onnx._internal.onnxruntime" -> "functorch" [];
	"torch.fx.passes.fake_tensor_prop" -> "torch" [];
	"torch._prims.executor" -> "torch" [];
	"torch.cuda.nvtx" -> "torch" [];
	"torch.cuda.amp.common" -> "importlib" [];
	"torch.cuda._memory_viz" -> "urllib" [];
	"torch.profiler._memory_profiler" -> "importlib" [];
	"torch.profiler.itt" -> "torch" [];
	"torch.multiprocessing.spawn" -> "concurrent" [];
	"torch._inductor.compile_fx" -> "torch" [];
	"torch._inductor.compile_fx" -> "functorch" [];
	"torch._inductor.lowering" -> "unittest" [];
	"torch._inductor.select_algorithm" -> "concurrent" [];
	"torch._inductor.select_algorithm" -> "unittest" [];
	"torch._inductor.codegen.cuda.cuda_template" -> "unittest" [];
	"markupsafe" -> "collections" [];
	"markupsafe" -> "importlib" [];
	"jinja2.utils" -> "urllib" [];
	"torch._inductor.autotune_process" -> "concurrent" [];
	"torch._inductor.autotune_process" -> "multiprocessing" [];
	"torch._inductor.codegen.cpp_utils" -> "unittest" [];
	"torch._inductor.codegen.cpp_gemm_template" -> "unittest" [];
	"setuptools.command.build_ext" -> "importlib" [];
	"setuptools.command.build_ext" -> "setuptools" [];
	"torch.utils.hipify.hipify_python" -> "collections" [];
	"torch._appdirs" -> "win32com" [];
	"pywin.dialogs.status" -> "pywin" [];
	"pywin.dialogs.list" -> "pywin" [];
	"pywintypes" -> "importlib" [];
	"torch._inductor.codegen.cpp_template" -> "unittest" [];
	"torch._inductor.codegen.cpp_template" -> "torch" [];
	"torch._inductor.codegen.rocm.rocm_template" -> "unittest" [];
	"torch._inductor.codegen.cuda.gemm_template" -> "torch" [];
	"torch._inductor.ops_handler" -> "unittest" [];
	"torch._dynamo.repro.after_aot" -> "functorch" [];
	"torch._dynamo.mutation_guard" -> "torch" [];
	"torch.distributed.checkpoint.storage" -> "torch" [];
	"torch.distributed.checkpoint.state_dict_saver" -> "concurrent" [];
	"fsspec.utils" -> "urllib" [];
	"fsspec.mapping" -> "collections" [];
	"fsspec.dircache" -> "collections" [];
	"fsspec.caching" -> "concurrent" [];
	"fsspec" -> "importlib" [];
	"torch.distributed.fsdp.wrap" -> "torch" [];
	"torch.distributed.fsdp._wrap_utils" -> "torch" [];
	"torch.distributed.fsdp._dynamo_utils" -> "torch" [];
	"torch.distributed._composable_state" -> "torch" [];
	"torch.distributed.fsdp._traversal_utils" -> "torch" [];
	"torch.distributed.tensor.parallel.ddp" -> "torch" [];
	"torch.testing._internal.distributed.fake_pg" -> "torch" [];
	"torch.distributed._shard.sharding_plan.api" -> "torch" [];
	"torch.distributed._shard.sharder" -> "torch" [];
	"torch.distributed._shard.sharded_tensor.utils" -> "collections" [];
	"torch.distributed.checkpoint._sharded_tensor_utils" -> "torch" [];
	"torch._dynamo.codegen" -> "torch" [];
	"torch._dynamo.side_effects" -> "collections" [];
	"torch._dynamo.side_effects" -> "torch" [];
	"torch._dynamo.polyfills.loader" -> "torch" [];
	"torch._dynamo.variables.sdpa" -> "torch" [];
	"torch._dynamo.variables.nn_module" -> "torch" [];
	"torch._dynamo.variables.misc" -> "torch" [];
	"torch._dynamo.variables.iter" -> "torch" [];
	"torch._dynamo.variables.higher_order_ops" -> "torch" [];
	"torch.fx.experimental._backward_state" -> "torch" [];
	"torch._dynamo.variables.dicts" -> "torch" [];
	"torch._dynamo.variables.user_defined" -> "torch" [];
	"torch.testing._internal.jit_utils" -> "importlib" [];
	"torch._dynamo.variables.tensor" -> "torch" [];
	"torch._dynamo.variables.ctx_manager" -> "torch" [];
	"torch._dynamo.variables.base" -> "torch" [];
	"networkx.readwrite.gml" -> "html" [];
	"networkx.generators.interval_graph" -> "collections" [];
	"networkx.generators.atlas" -> "importlib" [];
	"networkx.classes.reportviews" -> "collections" [];
	"networkx.classes.coreviews" -> "collections" [];
	"networkx.convert" -> "collections" [];
	"networkx.utils.backends" -> "importlib" [];
	"networkx.utils.backends" -> "collections" [];
	"torch._functorch._aot_autograd.traced_function_transforms" -> "unittest" [];
	"torch._dynamo.logging" -> "torch" [];
	"torch._functorch.compilers" -> "functorch" [];
	"functorch.compile" -> "torch" [];
	"torch._dynamo.types" -> "torch" [];
	"torch._dynamo.repro.after_dynamo" -> "functorch" [];
	"torch._dynamo.backends.registry" -> "importlib" [];
	"torch._dynamo.symbolic_convert" -> "unittest" [];
	"torch._dynamo.hooks" -> "torch" [];
	"torch._dynamo.eval_frame" -> "unittest" [];
	"torch._dynamo.cache_size" -> "torch" [];
	"torch._dynamo.exc" -> "torch" [];
	"torch.distributed.algorithms._optimizer_overlap.optimizer_overlap" -> "torch" [];
	"torch.distributed.algorithms.ddp_comm_hooks" -> "torch" [];
	"torch._logging._internal" -> "torch" [];
	"torch._guards" -> "unittest" [];
	"torch._dynamo.distributed" -> "torch" [];
	"torch._inductor.debug" -> "unittest" [];
	"torch._inductor.debug" -> "functorch" [];
	"torch._inductor.loop_body" -> "torch" [];
	"torch._inductor.dependencies" -> "unittest" [];
	"torch._inductor.codegen.triton_combo_kernel" -> "torch" [];
	"torch._inductor.codegen.triton_split_scan" -> "torch" [];
	"torch.utils._ordered_set" -> "collections" [];
	"torch._inductor.codecache" -> "collections" [];
	"torch._inductor.codecache" -> "concurrent" [];
	"torch._inductor.codegen.rocm.compile_command" -> "torch" [];
	"torch._inductor.async_compile" -> "concurrent" [];
	"torch._inductor.compile_worker.subproc_pool" -> "concurrent" [];
	"torch._inductor.compile_worker.subproc_pool" -> "torch" [];
	"torch._inductor.codegen.multi_kernel" -> "torch" [];
	"torch._inductor.ir" -> "unittest" [];
	"torch._inductor.ir" -> "torch" [];
	"torch._library.utils" -> "torchgen" [];
	"torch._dispatch.python" -> "unittest" [];
	"torch.testing._internal.optests.fake_tensor" -> "torch" [];
	"torch.testing._internal.optests.aot_autograd" -> "functorch" [];
	"torch.utils.cpp_backtrace" -> "torch" [];
	"torch.utils.backcompat" -> "torch" [];
	"torch.nn.utils.rnn" -> "collections" [];
	"torch.nn.attention" -> "torch" [];
	"torch.backends.cudnn.rnn" -> "torch" [];
	"torch.fx._lazy_graph_module" -> "torch" [];
	"torch.fx.passes.utils.matcher_with_name_node_map_utils" -> "torch" [];
	"transformers.utils.hub" -> "urllib" [];
	"huggingface_hub.utils._validators" -> "huggingface_hub" [];
	"huggingface_hub.utils._telemetry" -> "urllib" [];
	"huggingface_hub.utils._runtime" -> "importlib" [];
	"huggingface_hub.utils._git_credential" -> "huggingface_hub" [];
	"huggingface_hub.utils._cache_manager" -> "huggingface_hub" [];
	"huggingface_hub.utils._cache_assets" -> "huggingface_hub" [];
	"huggingface_hub.utils.tqdm" -> "tqdm" [];
	"huggingface_hub.utils.tqdm" -> "huggingface_hub" [];
	"huggingface_hub.file_download" -> "urllib" [];
	"huggingface_hub.serialization._torch" -> "safetensors" [];
	"huggingface_hub.repository" -> "urllib" [];
	"huggingface_hub.lfs" -> "urllib" [];
	"tqdm.contrib.concurrent" -> "tqdm" [];
	"tqdm.contrib.concurrent" -> "concurrent" [];
	"huggingface_hub.keras_mixin" -> "collections" [];
	"huggingface_hub.inference._generated._async_client" -> "requests" [];
	"huggingface_hub.inference._generated._async_client" -> "huggingface_hub" [];
	"huggingface_hub.inference._common" -> "huggingface_hub" [];
	"huggingface_hub.inference._client" -> "huggingface_hub" [];
	"huggingface_hub.hub_mixin" -> "packaging" [];
	"huggingface_hub.hf_file_system" -> "urllib" [];
	"huggingface_hub.hf_api" -> "concurrent" [];
	"huggingface_hub.hf_api" -> "urllib" [];
	"huggingface_hub.hf_api" -> "tqdm" [];
	"huggingface_hub.utils.endpoint_helpers" -> "huggingface_hub" [];
	"huggingface_hub._snapshot_download" -> "tqdm" [];
	"huggingface_hub.commands.delete_cache" -> "huggingface_hub" [];
	"huggingface_hub._commit_scheduler" -> "concurrent" [];
	"transformers.modeling_tf_utils" -> "collections" [];
	"transformers.modeling_tf_utils" -> "packaging" [];
	"transformers.activations_tf" -> "packaging" [];
	"transformers.keras_callbacks" -> "packaging" [];
	"transformers.benchmark.benchmark_tf" -> "transformers" [];
	"transformers.benchmark.benchmark_utils" -> "torch" [];
	"transformers.benchmark.benchmark_args_utils" -> "transformers" [];
	"transformers.models.auto.modeling_tf_auto" -> "transformers" [];
	"transformers.models.auto.configuration_auto" -> "transformers" [];
	"transformers.models.auto.auto_factory" -> "transformers" [];
	"transformers.benchmark.benchmark_args_tf" -> "transformers" [];
	"transformers.utils.deprecation" -> "packaging" [];
	"transformers.integrations.fsdp" -> "transformers" [];
	"transformers.integrations.deepspeed" -> "importlib" [];
	"transformers.integrations.deepspeed" -> "transformers" [];
	"transformers.generation.logits_process" -> "transformers" [];
	"transformers.trainer_pt_utils" -> "collections" [];
	"transformers.trainer" -> "importlib" [];
	"transformers.trainer" -> "collections" [];
	"transformers.trainer" -> "safetensors" [];
	"transformers.utils.notebook" -> "transformers" [];
	"transformers.models.auto.modeling_auto" -> "transformers" [];
	"transformers.integrations.tpu" -> "transformers" [];
	"transformers.pytorch_utils" -> "safetensors" [];
	"transformers.utils.versions" -> "importlib" [];
	"transformers.modeling_utils" -> "importlib" [];
	"transformers.quantizers.base" -> "transformers" [];
	"transformers.quantizers.quantizer_torchao" -> "transformers" [];
	"transformers.quantizers.quantizer_quanto" -> "transformers" [];
	"transformers.quantizers.quantizer_hqq" -> "transformers" [];
	"transformers.quantizers.quantizer_gptq" -> "transformers" [];
	"transformers.quantizers.quantizer_fbgemm_fp8" -> "transformers" [];
	"transformers.quantizers.quantizer_eetq" -> "transformers" [];
	"transformers.quantizers.quantizer_compressed_tensors" -> "transformers" [];
	"transformers.quantizers.quantizer_bnb_8bit" -> "transformers" [];
	"transformers.quantizers.quantizer_bnb_4bit" -> "transformers" [];
	"transformers.quantizers.quantizer_bitnet" -> "transformers" [];
	"transformers.quantizers.quantizer_awq" -> "importlib" [];
	"transformers.quantizers.quantizer_awq" -> "transformers" [];
	"transformers.quantizers.quantizer_aqlm" -> "transformers" [];
	"transformers.loss.loss_rt_detr" -> "transformers" [];
	"transformers.loss.loss_for_object_detection" -> "transformers" [];
	"transformers.loss.loss_deformable_detr" -> "transformers" [];
	"transformers.data.datasets.squad" -> "transformers" [];
	"transformers.data.processors.squad" -> "transformers" [];
	"transformers.data.processors.xnli" -> "transformers" [];
	"transformers.data.processors.glue" -> "transformers" [];
	"transformers.data.processors.utils" -> "transformers" [];
	"transformers.models.bert.tokenization_bert" -> "transformers" [];
	"transformers.data.datasets.language_modeling" -> "transformers" [];
	"transformers.data.datasets.glue" -> "transformers" [];
	"transformers.cache_utils" -> "importlib" [];
	"transformers.benchmark.benchmark_args" -> "transformers" [];
	"transformers.benchmark.benchmark" -> "transformers" [];
	"transformers.models.nllb" -> "transformers" [];
	"transformers.models.nllb.tokenization_nllb_fast" -> "transformers" [];
	"transformers.models.nllb.tokenization_nllb" -> "transformers" [];
	"transformers.models.mluke" -> "transformers" [];
	"transformers.models.mluke.tokenization_mluke" -> "collections" [];
	"transformers.models.mluke.tokenization_mluke" -> "transformers" [];
	"transformers.models.mbart50" -> "transformers" [];
	"transformers.models.mbart50.tokenization_mbart50_fast" -> "transformers" [];
	"transformers.models.mbart50.tokenization_mbart50" -> "transformers" [];
	"transformers.models.gpt_sw3" -> "transformers" [];
	"transformers.models.gpt_sw3.tokenization_gpt_sw3" -> "transformers" [];
	"transformers.models.cpm" -> "transformers" [];
	"transformers.models.cpm.tokenization_cpm_fast" -> "transformers" [];
	"transformers.models.cpm.tokenization_cpm" -> "transformers" [];
	"transformers.models.code_llama" -> "transformers" [];
	"transformers.models.code_llama.tokenization_code_llama_fast" -> "transformers" [];
	"transformers.models.code_llama.tokenization_code_llama" -> "transformers" [];
	"transformers.models.bartpho" -> "transformers" [];
	"transformers.models.bartpho.tokenization_bartpho" -> "transformers" [];
	"transformers.models.barthez" -> "transformers" [];
	"transformers.models.barthez.tokenization_barthez_fast" -> "transformers" [];
	"transformers.models.barthez.tokenization_barthez" -> "transformers" [];
	"transformers.utils.quantization_config" -> "importlib" [];
	"transformers.trainer_callback" -> "tqdm" [];
	"transformers.models.auto.tokenization_auto" -> "transformers" [];
	"transformers.pipelines.zero_shot_object_detection" -> "transformers" [];
	"transformers.pipelines.zero_shot_image_classification" -> "transformers" [];
	"transformers.pipelines.zero_shot_classification" -> "transformers" [];
	"transformers.pipelines.zero_shot_audio_classification" -> "transformers" [];
	"transformers.pipelines.visual_question_answering" -> "transformers" [];
	"transformers.pipelines.video_classification" -> "transformers" [];
	"transformers.pipelines.token_classification" -> "transformers" [];
	"transformers.pipelines.text_to_audio" -> "transformers" [];
	"transformers.models.speecht5.modeling_speecht5" -> "transformers" [];
	"transformers.models.speecht5.configuration_speecht5" -> "transformers" [];
	"transformers.pipelines.text_generation" -> "transformers" [];
	"transformers.pipelines.text_classification" -> "transformers" [];
	"transformers.pipelines.text2text_generation" -> "transformers" [];
	"transformers.pipelines.table_question_answering" -> "transformers" [];
	"transformers.pipelines.question_answering" -> "collections" [];
	"transformers.pipelines.question_answering" -> "transformers" [];
	"transformers.pipelines.object_detection" -> "transformers" [];
	"transformers.pipelines.mask_generation" -> "transformers" [];
	"transformers.pipelines.image_to_text" -> "transformers" [];
	"transformers.pipelines.image_to_image" -> "transformers" [];
	"transformers.pipelines.image_segmentation" -> "transformers" [];
	"transformers.pipelines.image_feature_extraction" -> "transformers" [];
	"transformers.pipelines.image_classification" -> "transformers" [];
	"transformers.pipelines.fill_mask" -> "transformers" [];
	"transformers.pipelines.feature_extraction" -> "transformers" [];
	"transformers.pipelines.document_question_answering" -> "transformers" [];
	"transformers.pipelines.depth_estimation" -> "transformers" [];
	"transformers.pipelines.base" -> "transformers" [];
	"transformers.pipelines.automatic_speech_recognition" -> "transformers" [];
	"transformers.pipelines.audio_classification" -> "transformers" [];
	"transformers.models.auto.processing_auto" -> "transformers" [];
	"transformers.models.auto.image_processing_auto" -> "transformers" [];
	"transformers.models.auto.feature_extraction_auto" -> "transformers" [];
	"transformers.models.zoedepth" -> "transformers" [];
	"transformers.models.zoedepth.image_processing_zoedepth" -> "transformers" [];
	"transformers.models.zoedepth.modeling_zoedepth" -> "transformers" [];
	"transformers.models.zoedepth.configuration_zoedepth" -> "transformers" [];
	"transformers.models.zamba" -> "transformers" [];
	"transformers.models.zamba.modeling_zamba" -> "transformers" [];
	"transformers.models.zamba.configuration_zamba" -> "transformers" [];
	"transformers.models.yoso" -> "transformers" [];
	"transformers.models.yoso.modeling_yoso" -> "transformers" [];
	"transformers.models.yoso.configuration_yoso" -> "transformers" [];
	"transformers.models.yolos" -> "transformers" [];
	"transformers.models.yolos.modeling_yolos" -> "collections" [];
	"transformers.models.yolos.modeling_yolos" -> "transformers" [];
	"transformers.models.yolos.image_processing_yolos" -> "transformers" [];
	"transformers.models.yolos.feature_extraction_yolos" -> "transformers" [];
	"transformers.models.yolos.configuration_yolos" -> "transformers" [];
	"transformers.onnx.convert" -> "packaging" [];
	"transformers.onnx.convert" -> "transformers" [];
	"transformers.onnx.config" -> "transformers" [];
	"transformers.models.xmod" -> "transformers" [];
	"transformers.models.xmod.modeling_xmod" -> "transformers" [];
	"transformers.models.xmod.configuration_xmod" -> "transformers" [];
	"transformers.models.xlnet" -> "transformers" [];
	"transformers.models.xlnet.modeling_tf_xlnet" -> "transformers" [];
	"transformers.models.xlnet.modeling_xlnet" -> "transformers" [];
	"transformers.models.xlnet.tokenization_xlnet_fast" -> "transformers" [];
	"transformers.models.xlnet.tokenization_xlnet" -> "transformers" [];
	"transformers.models.xlnet.configuration_xlnet" -> "transformers" [];
	"transformers.models.xlm_roberta_xl" -> "transformers" [];
	"transformers.models.xlm_roberta_xl.modeling_xlm_roberta_xl" -> "transformers" [];
	"transformers.models.xlm_roberta_xl.configuration_xlm_roberta_xl" -> "transformers" [];
	"transformers.models.xlm_roberta" -> "transformers" [];
	"transformers.models.xlm_roberta.modeling_flax_xlm_roberta" -> "transformers" [];
	"transformers.models.xlm_roberta.modeling_tf_xlm_roberta" -> "transformers" [];
	"transformers.models.xlm_roberta.modeling_xlm_roberta" -> "transformers" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta_fast" -> "transformers" [];
	"transformers.models.xlm_roberta.tokenization_xlm_roberta" -> "transformers" [];
	"transformers.models.xlm_roberta.configuration_xlm_roberta" -> "transformers" [];
	"transformers.models.xlm" -> "transformers" [];
	"transformers.models.xlm.modeling_tf_xlm" -> "transformers" [];
	"transformers.models.xlm.modeling_xlm" -> "transformers" [];
	"transformers.models.xlm.tokenization_xlm" -> "transformers" [];
	"transformers.models.xlm.configuration_xlm" -> "transformers" [];
	"transformers.models.xglm" -> "transformers" [];
	"transformers.models.xglm.modeling_tf_xglm" -> "transformers" [];
	"transformers.models.xglm.modeling_flax_xglm" -> "transformers" [];
	"transformers.models.xglm.modeling_xglm" -> "transformers" [];
	"transformers.models.xglm.tokenization_xglm_fast" -> "transformers" [];
	"transformers.models.xglm.tokenization_xglm" -> "transformers" [];
	"transformers.models.xglm.configuration_xglm" -> "transformers" [];
	"transformers.models.x_clip" -> "transformers" [];
	"transformers.models.x_clip.modeling_x_clip" -> "transformers" [];
	"transformers.models.x_clip.processing_x_clip" -> "transformers" [];
	"transformers.models.x_clip.configuration_x_clip" -> "transformers" [];
	"transformers.models.whisper" -> "transformers" [];
	"transformers.models.whisper.modeling_flax_whisper" -> "transformers" [];
	"transformers.generation.flax_logits_process" -> "transformers" [];
	"transformers.models.whisper.modeling_tf_whisper" -> "transformers" [];
	"transformers.generation.tf_logits_process" -> "transformers" [];
	"transformers.models.whisper.modeling_whisper" -> "transformers" [];
	"transformers.models.whisper.generation_whisper" -> "transformers" [];
	"transformers.generation.stopping_criteria" -> "transformers" [];
	"transformers.models.whisper.tokenization_whisper_fast" -> "transformers" [];
	"transformers.models.whisper.tokenization_whisper" -> "transformers" [];
	"transformers.models.whisper.processing_whisper" -> "transformers" [];
	"transformers.models.whisper.configuration_whisper" -> "transformers" [];
	"transformers.models.wavlm" -> "transformers" [];
	"transformers.models.wavlm.modeling_wavlm" -> "transformers" [];
	"transformers.models.wavlm.configuration_wavlm" -> "transformers" [];
	"transformers.models.wav2vec2_with_lm" -> "transformers" [];
	"transformers.models.wav2vec2_with_lm.processing_wav2vec2_with_lm" -> "transformers" [];
	"transformers.models.wav2vec2_phoneme" -> "transformers" [];
	"transformers.models.wav2vec2_phoneme.tokenization_wav2vec2_phoneme" -> "transformers" [];
	"transformers.models.wav2vec2_conformer" -> "transformers" [];
	"transformers.models.wav2vec2_conformer.modeling_wav2vec2_conformer" -> "transformers" [];
	"transformers.models.wav2vec2_conformer.configuration_wav2vec2_conformer" -> "transformers" [];
	"transformers.models.wav2vec2_bert" -> "transformers" [];
	"transformers.models.wav2vec2_bert.modeling_wav2vec2_bert" -> "transformers" [];
	"transformers.models.wav2vec2_bert.processing_wav2vec2_bert" -> "transformers" [];
	"transformers.models.wav2vec2.tokenization_wav2vec2" -> "transformers" [];
	"transformers.models.seamless_m4t.feature_extraction_seamless_m4t" -> "transformers" [];
	"transformers.models.wav2vec2_bert.configuration_wav2vec2_bert" -> "transformers" [];
	"transformers.models.wav2vec2" -> "transformers" [];
	"transformers.models.wav2vec2.modeling_tf_wav2vec2" -> "transformers" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "transformers" [];
	"transformers.models.wav2vec2.modeling_wav2vec2" -> "safetensors" [];
	"transformers.models.wav2vec2.processing_wav2vec2" -> "transformers" [];
	"transformers.models.wav2vec2.feature_extraction_wav2vec2" -> "transformers" [];
	"transformers.models.wav2vec2.configuration_wav2vec2" -> "transformers" [];
	"transformers.models.vivit" -> "transformers" [];
	"transformers.models.vivit.modeling_vivit" -> "transformers" [];
	"transformers.models.vivit.image_processing_vivit" -> "transformers" [];
	"transformers.models.vivit.configuration_vivit" -> "transformers" [];
	"transformers.models.vits" -> "transformers" [];
	"transformers.models.vits.modeling_vits" -> "transformers" [];
	"transformers.models.vits.tokenization_vits" -> "transformers" [];
	"transformers.models.vits.configuration_vits" -> "transformers" [];
	"transformers.models.vitmatte" -> "transformers" [];
	"transformers.models.vitmatte.modeling_vitmatte" -> "transformers" [];
	"transformers.models.vitmatte.image_processing_vitmatte" -> "transformers" [];
	"transformers.models.vitmatte.configuration_vitmatte" -> "transformers" [];
	"transformers.models.vitdet" -> "transformers" [];
	"transformers.models.vitdet.modeling_vitdet" -> "collections" [];
	"transformers.models.vitdet.modeling_vitdet" -> "transformers" [];
	"transformers.models.vitdet.configuration_vitdet" -> "transformers" [];
	"transformers.models.vit_msn" -> "transformers" [];
	"transformers.models.vit_msn.modeling_vit_msn" -> "collections" [];
	"transformers.models.vit_msn.modeling_vit_msn" -> "transformers" [];
	"transformers.models.vit_msn.configuration_vit_msn" -> "transformers" [];
	"transformers.models.vit_mae" -> "transformers" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "collections" [];
	"transformers.models.vit_mae.modeling_tf_vit_mae" -> "transformers" [];
	"transformers.models.vit_mae.modeling_vit_mae" -> "collections" [];
	"transformers.models.vit_mae.modeling_vit_mae" -> "transformers" [];
	"transformers.models.vit_mae.configuration_vit_mae" -> "transformers" [];
	"transformers.models.vit" -> "transformers" [];
	"transformers.models.vit.modeling_flax_vit" -> "transformers" [];
	"transformers.models.vit.modeling_tf_vit" -> "collections" [];
	"transformers.models.vit.modeling_tf_vit" -> "transformers" [];
	"transformers.models.vit.modeling_vit" -> "collections" [];
	"transformers.models.vit.modeling_vit" -> "transformers" [];
	"transformers.models.vit.image_processing_vit_fast" -> "transformers" [];
	"transformers.models.vit.image_processing_vit" -> "transformers" [];
	"transformers.models.vit.feature_extraction_vit" -> "transformers" [];
	"transformers.models.vit.configuration_vit" -> "transformers" [];
	"transformers.models.visual_bert" -> "transformers" [];
	"transformers.models.visual_bert.modeling_visual_bert" -> "transformers" [];
	"transformers.models.visual_bert.configuration_visual_bert" -> "transformers" [];
	"transformers.models.vision_text_dual_encoder" -> "transformers" [];
	"transformers.models.vision_text_dual_encoder.modeling_tf_vision_text_dual_encoder" -> "transformers" [];
	"transformers.models.clip.modeling_tf_clip" -> "transformers" [];
	"transformers.models.clip.configuration_clip" -> "transformers" [];
	"transformers.models.vision_text_dual_encoder.modeling_flax_vision_text_dual_encoder" -> "transformers" [];
	"transformers.models.clip.modeling_flax_clip" -> "transformers" [];
	"transformers.models.auto.modeling_flax_auto" -> "transformers" [];
	"transformers.models.vision_text_dual_encoder.modeling_vision_text_dual_encoder" -> "transformers" [];
	"transformers.models.clip.modeling_clip" -> "transformers" [];
	"transformers.models.vision_text_dual_encoder.processing_vision_text_dual_encoder" -> "transformers" [];
	"transformers.models.vision_text_dual_encoder.configuration_vision_text_dual_encoder" -> "transformers" [];
	"transformers.models.siglip.configuration_siglip" -> "transformers" [];
	"transformers.models.chinese_clip.configuration_chinese_clip" -> "transformers" [];
	"transformers.models.vision_encoder_decoder" -> "transformers" [];
	"transformers.models.vision_encoder_decoder.modeling_flax_vision_encoder_decoder" -> "transformers" [];
	"transformers.models.vision_encoder_decoder.modeling_tf_vision_encoder_decoder" -> "transformers" [];
	"transformers.models.vipllava" -> "transformers" [];
	"transformers.models.vipllava.modeling_vipllava" -> "transformers" [];
	"transformers.models.vipllava.configuration_vipllava" -> "transformers" [];
	"transformers.models.vilt" -> "transformers" [];
	"transformers.models.vilt.modeling_vilt" -> "collections" [];
	"transformers.models.vilt.modeling_vilt" -> "transformers" [];
	"transformers.models.vilt.processing_vilt" -> "transformers" [];
	"transformers.models.vilt.image_processing_vilt" -> "transformers" [];
	"transformers.models.vilt.feature_extraction_vilt" -> "transformers" [];
	"transformers.models.vilt.configuration_vilt" -> "transformers" [];
	"transformers.models.videomae" -> "transformers" [];
	"transformers.models.videomae.image_processing_videomae" -> "transformers" [];
	"transformers.models.videomae.feature_extraction_videomae" -> "transformers" [];
	"transformers.models.videomae.modeling_videomae" -> "collections" [];
	"transformers.models.videomae.modeling_videomae" -> "transformers" [];
	"transformers.models.videomae.configuration_videomae" -> "transformers" [];
	"transformers.models.video_llava" -> "transformers" [];
	"transformers.models.video_llava.modeling_video_llava" -> "transformers" [];
	"transformers.models.video_llava.image_processing_video_llava" -> "transformers" [];
	"transformers.models.video_llava.configuration_video_llava" -> "transformers" [];
	"transformers.models.upernet" -> "transformers" [];
	"transformers.models.upernet.modeling_upernet" -> "transformers" [];
	"transformers.models.upernet.configuration_upernet" -> "transformers" [];
	"transformers.models.univnet" -> "transformers" [];
	"transformers.models.univnet.modeling_univnet" -> "transformers" [];
	"transformers.models.univnet.feature_extraction_univnet" -> "transformers" [];
	"transformers.models.univnet.configuration_univnet" -> "transformers" [];
	"transformers.models.unispeech_sat" -> "transformers" [];
	"transformers.models.unispeech_sat.modeling_unispeech_sat" -> "transformers" [];
	"transformers.models.unispeech_sat.configuration_unispeech_sat" -> "transformers" [];
	"transformers.models.unispeech" -> "transformers" [];
	"transformers.models.unispeech.modeling_unispeech" -> "transformers" [];
	"transformers.models.unispeech.configuration_unispeech" -> "transformers" [];
	"transformers.models.umt5" -> "transformers" [];
	"transformers.models.umt5.modeling_umt5" -> "transformers" [];
	"transformers.models.umt5.configuration_umt5" -> "transformers" [];
	"transformers.models.udop" -> "transformers" [];
	"transformers.models.udop.tokenization_udop_fast" -> "transformers" [];
	"transformers.models.udop.tokenization_udop" -> "transformers" [];
	"transformers.models.udop.configuration_udop" -> "transformers" [];
	"transformers.models.tvp" -> "transformers" [];
	"transformers.models.tvp.modeling_tvp" -> "transformers" [];
	"transformers.models.tvp.image_processing_tvp" -> "transformers" [];
	"transformers.models.tvp.processing_tvp" -> "transformers" [];
	"transformers.models.tvp.configuration_tvp" -> "transformers" [];
	"transformers.models.trocr" -> "transformers" [];
	"transformers.models.trocr.modeling_trocr" -> "transformers" [];
	"transformers.models.trocr.processing_trocr" -> "transformers" [];
	"transformers.models.trocr.configuration_trocr" -> "transformers" [];
	"transformers.models.timm_backbone" -> "transformers" [];
	"transformers.models.timm_backbone.modeling_timm_backbone" -> "transformers" [];
	"transformers.models.timm_backbone.configuration_timm_backbone" -> "transformers" [];
	"transformers.models.timesformer" -> "transformers" [];
	"transformers.models.timesformer.modeling_timesformer" -> "transformers" [];
	"transformers.models.timesformer.configuration_timesformer" -> "transformers" [];
	"transformers.models.time_series_transformer" -> "transformers" [];
	"transformers.models.time_series_transformer.modeling_time_series_transformer" -> "transformers" [];
	"transformers.models.time_series_transformer.configuration_time_series_transformer" -> "transformers" [];
	"transformers.models.tapas" -> "transformers" [];
	"transformers.models.tapas.modeling_tf_tapas" -> "transformers" [];
	"transformers.models.tapas.modeling_tapas" -> "transformers" [];
	"transformers.models.tapas.tokenization_tapas" -> "transformers" [];
	"transformers.models.tapas.configuration_tapas" -> "transformers" [];
	"transformers.models.table_transformer" -> "transformers" [];
	"transformers.models.table_transformer.modeling_table_transformer" -> "transformers" [];
	"transformers.models.table_transformer.configuration_table_transformer" -> "transformers" [];
	"transformers.models.t5" -> "transformers" [];
	"transformers.models.t5.modeling_flax_t5" -> "transformers" [];
	"transformers.models.t5.modeling_tf_t5" -> "transformers" [];
	"transformers.models.t5.modeling_t5" -> "transformers" [];
	"transformers.models.t5.tokenization_t5_fast" -> "transformers" [];
	"transformers.models.t5.tokenization_t5" -> "transformers" [];
	"transformers.models.t5.configuration_t5" -> "transformers" [];
	"transformers.models.switch_transformers" -> "transformers" [];
	"transformers.models.switch_transformers.modeling_switch_transformers" -> "transformers" [];
	"transformers.models.switch_transformers.configuration_switch_transformers" -> "transformers" [];
	"transformers.models.swinv2" -> "transformers" [];
	"transformers.models.swinv2.modeling_swinv2" -> "collections" [];
	"transformers.models.swinv2.modeling_swinv2" -> "transformers" [];
	"transformers.models.swinv2.configuration_swinv2" -> "transformers" [];
	"transformers.models.swin2sr" -> "transformers" [];
	"transformers.models.swin2sr.image_processing_swin2sr" -> "transformers" [];
	"transformers.models.swin2sr.modeling_swin2sr" -> "collections" [];
	"transformers.models.swin2sr.modeling_swin2sr" -> "transformers" [];
	"transformers.models.swin2sr.configuration_swin2sr" -> "transformers" [];
	"transformers.models.swin" -> "transformers" [];
	"transformers.models.swin.modeling_tf_swin" -> "collections" [];
	"transformers.models.swin.modeling_tf_swin" -> "transformers" [];
	"transformers.models.swin.modeling_swin" -> "collections" [];
	"transformers.models.swin.modeling_swin" -> "transformers" [];
	"transformers.models.swin.configuration_swin" -> "transformers" [];
	"transformers.models.swiftformer" -> "transformers" [];
	"transformers.models.swiftformer.modeling_tf_swiftformer" -> "collections" [];
	"transformers.models.swiftformer.modeling_tf_swiftformer" -> "transformers" [];
	"transformers.models.swiftformer.modeling_swiftformer" -> "collections" [];
	"transformers.models.swiftformer.modeling_swiftformer" -> "transformers" [];
	"transformers.models.swiftformer.configuration_swiftformer" -> "transformers" [];
	"transformers.models.superpoint" -> "transformers" [];
	"transformers.models.superpoint.configuration_superpoint" -> "transformers" [];
	"transformers.models.starcoder2" -> "transformers" [];
	"transformers.models.starcoder2.modeling_starcoder2" -> "transformers" [];
	"transformers.models.starcoder2.configuration_starcoder2" -> "transformers" [];
	"transformers.models.stablelm" -> "transformers" [];
	"transformers.models.stablelm.modeling_stablelm" -> "transformers" [];
	"transformers.models.stablelm.configuration_stablelm" -> "transformers" [];
	"transformers.models.squeezebert" -> "transformers" [];
	"transformers.models.squeezebert.modeling_squeezebert" -> "transformers" [];
	"transformers.models.squeezebert.tokenization_squeezebert_fast" -> "transformers" [];
	"transformers.models.squeezebert.tokenization_squeezebert" -> "transformers" [];
	"transformers.models.squeezebert.configuration_squeezebert" -> "transformers" [];
	"transformers.models.splinter" -> "transformers" [];
	"transformers.models.splinter.modeling_splinter" -> "transformers" [];
	"transformers.models.splinter.tokenization_splinter_fast" -> "transformers" [];
	"transformers.models.splinter.tokenization_splinter" -> "transformers" [];
	"transformers.models.splinter.configuration_splinter" -> "transformers" [];
	"transformers.models.speecht5" -> "transformers" [];
	"transformers.models.speecht5.tokenization_speecht5" -> "transformers" [];
	"transformers.models.speecht5.processing_speecht5" -> "transformers" [];
	"transformers.models.speecht5.feature_extraction_speecht5" -> "transformers" [];
	"transformers.models.speech_to_text" -> "transformers" [];
	"transformers.models.speech_to_text.modeling_speech_to_text" -> "transformers" [];
	"transformers.models.speech_to_text.modeling_tf_speech_to_text" -> "transformers" [];
	"transformers.models.speech_to_text.tokenization_speech_to_text" -> "transformers" [];
	"transformers.models.speech_to_text.processing_speech_to_text" -> "transformers" [];
	"transformers.models.speech_to_text.feature_extraction_speech_to_text" -> "transformers" [];
	"transformers.models.speech_to_text.configuration_speech_to_text" -> "transformers" [];
	"transformers.models.speech_encoder_decoder" -> "transformers" [];
	"transformers.models.speech_encoder_decoder.modeling_flax_speech_encoder_decoder" -> "transformers" [];
	"transformers.models.speech_encoder_decoder.modeling_speech_encoder_decoder" -> "transformers" [];
	"transformers.models.speech_encoder_decoder.configuration_speech_encoder_decoder" -> "transformers" [];
	"transformers.models.siglip" -> "transformers" [];
	"transformers.models.siglip.modeling_siglip" -> "transformers" [];
	"transformers.models.siglip.image_processing_siglip" -> "transformers" [];
	"transformers.models.siglip.tokenization_siglip" -> "transformers" [];
	"transformers.models.siglip.processing_siglip" -> "transformers" [];
	"transformers.models.sew_d" -> "transformers" [];
	"transformers.models.sew_d.modeling_sew_d" -> "collections" [];
	"transformers.models.sew_d.modeling_sew_d" -> "transformers" [];
	"transformers.models.sew_d.configuration_sew_d" -> "transformers" [];
	"transformers.models.sew" -> "transformers" [];
	"transformers.models.sew.modeling_sew" -> "transformers" [];
	"transformers.models.sew.configuration_sew" -> "transformers" [];
	"transformers.models.seggpt" -> "transformers" [];
	"transformers.models.seggpt.image_processing_seggpt" -> "transformers" [];
	"transformers.models.seggpt.modeling_seggpt" -> "collections" [];
	"transformers.models.seggpt.modeling_seggpt" -> "transformers" [];
	"transformers.models.seggpt.configuration_seggpt" -> "transformers" [];
	"transformers.models.segformer" -> "transformers" [];
	"transformers.models.segformer.modeling_tf_segformer" -> "transformers" [];
	"transformers.models.segformer.modeling_segformer" -> "transformers" [];
	"transformers.models.segformer.image_processing_segformer" -> "transformers" [];
	"transformers.models.segformer.feature_extraction_segformer" -> "transformers" [];
	"transformers.models.segformer.configuration_segformer" -> "transformers" [];
	"transformers.models.seamless_m4t_v2" -> "transformers" [];
	"transformers.models.seamless_m4t_v2.modeling_seamless_m4t_v2" -> "transformers" [];
	"transformers.models.seamless_m4t_v2.configuration_seamless_m4t_v2" -> "transformers" [];
	"transformers.models.seamless_m4t" -> "transformers" [];
	"transformers.models.seamless_m4t.modeling_seamless_m4t" -> "transformers" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t_fast" -> "transformers" [];
	"transformers.models.seamless_m4t.tokenization_seamless_m4t" -> "transformers" [];
	"transformers.models.seamless_m4t.processing_seamless_m4t" -> "transformers" [];
	"transformers.models.seamless_m4t.configuration_seamless_m4t" -> "transformers" [];
	"transformers.models.sam" -> "transformers" [];
	"transformers.models.sam.image_processing_sam" -> "transformers" [];
	"transformers.models.sam.modeling_tf_sam" -> "transformers" [];
	"transformers.models.sam.modeling_sam" -> "transformers" [];
	"transformers.models.sam.processing_sam" -> "transformers" [];
	"transformers.models.sam.configuration_sam" -> "transformers" [];
	"transformers.models.rwkv" -> "transformers" [];
	"transformers.models.rwkv.modeling_rwkv" -> "transformers" [];
	"transformers.models.rwkv.configuration_rwkv" -> "transformers" [];
	"transformers.models.rt_detr" -> "transformers" [];
	"transformers.models.rt_detr.modeling_rt_detr_resnet" -> "transformers" [];
	"transformers.models.rt_detr.modeling_rt_detr" -> "transformers" [];
	"transformers.models.rt_detr.image_processing_rt_detr" -> "transformers" [];
	"transformers.models.rt_detr.configuration_rt_detr_resnet" -> "transformers" [];
	"transformers.models.rt_detr.configuration_rt_detr" -> "transformers" [];
	"transformers.models.roformer" -> "transformers" [];
	"transformers.models.roformer.modeling_flax_roformer" -> "transformers" [];
	"transformers.models.roformer.modeling_tf_roformer" -> "transformers" [];
	"transformers.models.roformer.modeling_roformer" -> "transformers" [];
	"transformers.models.roformer.tokenization_roformer_fast" -> "transformers" [];
	"transformers.models.roformer.tokenization_roformer" -> "transformers" [];
	"transformers.models.roformer.configuration_roformer" -> "transformers" [];
	"transformers.models.roc_bert" -> "transformers" [];
	"transformers.models.roc_bert.modeling_roc_bert" -> "transformers" [];
	"transformers.models.roc_bert.tokenization_roc_bert" -> "transformers" [];
	"transformers.models.roc_bert.configuration_roc_bert" -> "transformers" [];
	"transformers.models.roberta_prelayernorm" -> "transformers" [];
	"transformers.models.roberta_prelayernorm.modeling_flax_roberta_prelayernorm" -> "transformers" [];
	"transformers.models.roberta_prelayernorm.modeling_tf_roberta_prelayernorm" -> "transformers" [];
	"transformers.models.roberta_prelayernorm.modeling_roberta_prelayernorm" -> "transformers" [];
	"transformers.models.roberta_prelayernorm.configuration_roberta_prelayernorm" -> "transformers" [];
	"transformers.models.roberta" -> "transformers" [];
	"transformers.models.roberta.modeling_flax_roberta" -> "transformers" [];
	"transformers.models.roberta.modeling_tf_roberta" -> "transformers" [];
	"transformers.models.roberta.modeling_roberta" -> "transformers" [];
	"transformers.models.roberta.tokenization_roberta_fast" -> "transformers" [];
	"transformers.models.roberta.tokenization_roberta" -> "transformers" [];
	"transformers.models.roberta.configuration_roberta" -> "transformers" [];
	"transformers.models.resnet" -> "transformers" [];
	"transformers.models.resnet.modeling_flax_resnet" -> "transformers" [];
	"transformers.models.resnet.modeling_tf_resnet" -> "transformers" [];
	"transformers.models.resnet.modeling_resnet" -> "transformers" [];
	"transformers.models.resnet.configuration_resnet" -> "transformers" [];
	"transformers.models.rembert" -> "transformers" [];
	"transformers.models.rembert.modeling_tf_rembert" -> "transformers" [];
	"transformers.models.rembert.modeling_rembert" -> "transformers" [];
	"transformers.models.rembert.tokenization_rembert_fast" -> "transformers" [];
	"transformers.models.rembert.tokenization_rembert" -> "transformers" [];
	"transformers.models.rembert.configuration_rembert" -> "transformers" [];
	"transformers.models.regnet" -> "transformers" [];
	"transformers.models.regnet.modeling_tf_regnet" -> "transformers" [];
	"transformers.models.regnet.modeling_regnet" -> "transformers" [];
	"transformers.models.regnet.configuration_regnet" -> "transformers" [];
	"transformers.models.reformer" -> "transformers" [];
	"transformers.models.reformer.modeling_reformer" -> "transformers" [];
	"transformers.models.reformer.tokenization_reformer_fast" -> "transformers" [];
	"transformers.models.reformer.tokenization_reformer" -> "transformers" [];
	"transformers.models.reformer.configuration_reformer" -> "transformers" [];
	"transformers.models.recurrent_gemma" -> "transformers" [];
	"transformers.models.recurrent_gemma.modeling_recurrent_gemma" -> "transformers" [];
	"transformers.models.recurrent_gemma.configuration_recurrent_gemma" -> "transformers" [];
	"transformers.models.rag" -> "transformers" [];
	"transformers.models.rag.modeling_tf_rag" -> "transformers" [];
	"transformers.models.rag.modeling_rag" -> "transformers" [];
	"transformers.models.rag.tokenization_rag" -> "transformers" [];
	"transformers.models.rag.retrieval_rag" -> "transformers" [];
	"transformers.models.rag.configuration_rag" -> "transformers" [];
	"transformers.models.qwen2_vl" -> "transformers" [];
	"transformers.models.qwen2_vl.image_processing_qwen2_vl" -> "transformers" [];
	"transformers.models.qwen2_vl.modeling_qwen2_vl" -> "transformers" [];
	"transformers.models.qwen2_vl.processing_qwen2_vl" -> "transformers" [];
	"transformers.models.qwen2_vl.configuration_qwen2_vl" -> "transformers" [];
	"transformers.models.qwen2_moe" -> "transformers" [];
	"transformers.models.qwen2_moe.modeling_qwen2_moe" -> "transformers" [];
	"transformers.models.qwen2_moe.configuration_qwen2_moe" -> "transformers" [];
	"transformers.models.qwen2_audio" -> "transformers" [];
	"transformers.models.qwen2_audio.modeling_qwen2_audio" -> "transformers" [];
	"transformers.models.qwen2_audio.processing_qwen2_audio" -> "transformers" [];
	"transformers.models.qwen2_audio.configuration_qwen2_audio" -> "transformers" [];
	"transformers.models.qwen2" -> "transformers" [];
	"transformers.models.qwen2.modeling_qwen2" -> "transformers" [];
	"transformers.models.qwen2.tokenization_qwen2_fast" -> "transformers" [];
	"transformers.models.qwen2.tokenization_qwen2" -> "transformers" [];
	"transformers.models.qwen2.configuration_qwen2" -> "transformers" [];
	"transformers.models.pvt_v2" -> "transformers" [];
	"transformers.models.pvt_v2.modeling_pvt_v2" -> "transformers" [];
	"transformers.models.pvt_v2.configuration_pvt_v2" -> "transformers" [];
	"transformers.models.pvt" -> "transformers" [];
	"transformers.models.pvt.modeling_pvt" -> "transformers" [];
	"transformers.models.pvt.image_processing_pvt" -> "transformers" [];
	"transformers.models.pvt.configuration_pvt" -> "transformers" [];
	"transformers.models.prophetnet" -> "transformers" [];
	"transformers.models.prophetnet.modeling_prophetnet" -> "transformers" [];
	"transformers.models.prophetnet.tokenization_prophetnet" -> "transformers" [];
	"transformers.models.prophetnet.configuration_prophetnet" -> "transformers" [];
	"transformers.models.pop2piano" -> "transformers" [];
	"transformers.models.pop2piano.processing_pop2piano" -> "transformers" [];
	"transformers.models.pop2piano.tokenization_pop2piano" -> "transformers" [];
	"transformers.models.pop2piano.feature_extraction_pop2piano" -> "transformers" [];
	"transformers.models.pop2piano.modeling_pop2piano" -> "transformers" [];
	"transformers.models.pop2piano.configuration_pop2piano" -> "transformers" [];
	"transformers.models.poolformer" -> "transformers" [];
	"transformers.models.poolformer.modeling_poolformer" -> "collections" [];
	"transformers.models.poolformer.modeling_poolformer" -> "transformers" [];
	"transformers.models.poolformer.image_processing_poolformer" -> "transformers" [];
	"transformers.models.poolformer.feature_extraction_poolformer" -> "transformers" [];
	"transformers.models.poolformer.configuration_poolformer" -> "transformers" [];
	"transformers.models.plbart" -> "transformers" [];
	"transformers.models.plbart.modeling_plbart" -> "transformers" [];
	"transformers.models.plbart.tokenization_plbart" -> "transformers" [];
	"transformers.models.plbart.configuration_plbart" -> "transformers" [];
	"transformers.models.pixtral" -> "transformers" [];
	"transformers.models.pixtral.image_processing_pixtral" -> "transformers" [];
	"transformers.models.pixtral.processing_pixtral" -> "transformers" [];
	"transformers.models.pixtral.configuration_pixtral" -> "transformers" [];
	"transformers.models.pix2struct" -> "transformers" [];
	"transformers.models.pix2struct.modeling_pix2struct" -> "transformers" [];
	"transformers.models.pix2struct.image_processing_pix2struct" -> "transformers" [];
	"transformers.models.pix2struct.processing_pix2struct" -> "transformers" [];
	"transformers.models.pix2struct.configuration_pix2struct" -> "transformers" [];
	"transformers.models.phobert" -> "transformers" [];
	"transformers.models.phobert.tokenization_phobert" -> "transformers" [];
	"transformers.models.phimoe" -> "transformers" [];
	"transformers.models.phimoe.modeling_phimoe" -> "transformers" [];
	"transformers.models.phimoe.configuration_phimoe" -> "transformers" [];
	"transformers.models.phi3" -> "transformers" [];
	"transformers.models.phi3.modeling_phi3" -> "transformers" [];
	"transformers.models.phi3.configuration_phi3" -> "transformers" [];
	"transformers.models.phi" -> "transformers" [];
	"transformers.models.phi.modeling_phi" -> "transformers" [];
	"transformers.models.phi.configuration_phi" -> "transformers" [];
	"transformers.models.persimmon" -> "transformers" [];
	"transformers.models.persimmon.modeling_persimmon" -> "transformers" [];
	"transformers.models.persimmon.configuration_persimmon" -> "transformers" [];
	"transformers.models.perceiver" -> "transformers" [];
	"transformers.models.perceiver.modeling_perceiver" -> "transformers" [];
	"transformers.models.perceiver.image_processing_perceiver" -> "transformers" [];
	"transformers.models.perceiver.feature_extraction_perceiver" -> "transformers" [];
	"transformers.models.perceiver.tokenization_perceiver" -> "transformers" [];
	"transformers.models.perceiver.configuration_perceiver" -> "transformers" [];
	"transformers.models.pegasus_x" -> "transformers" [];
	"transformers.models.pegasus_x.modeling_pegasus_x" -> "transformers" [];
	"transformers.models.pegasus_x.configuration_pegasus_x" -> "transformers" [];
	"transformers.models.pegasus" -> "transformers" [];
	"transformers.models.pegasus.modeling_flax_pegasus" -> "transformers" [];
	"transformers.models.pegasus.modeling_tf_pegasus" -> "transformers" [];
	"transformers.models.pegasus.modeling_pegasus" -> "transformers" [];
	"transformers.models.pegasus.tokenization_pegasus_fast" -> "transformers" [];
	"transformers.models.pegasus.tokenization_pegasus" -> "transformers" [];
	"transformers.models.pegasus.configuration_pegasus" -> "transformers" [];
	"transformers.models.patchtst" -> "transformers" [];
	"transformers.models.patchtst.modeling_patchtst" -> "transformers" [];
	"transformers.models.patchtst.configuration_patchtst" -> "transformers" [];
	"transformers.models.patchtsmixer" -> "transformers" [];
	"transformers.models.patchtsmixer.modeling_patchtsmixer" -> "transformers" [];
	"transformers.models.patchtsmixer.configuration_patchtsmixer" -> "transformers" [];
	"transformers.models.paligemma" -> "transformers" [];
	"transformers.models.paligemma.processing_paligemma" -> "transformers" [];
	"transformers.models.paligemma.modeling_paligemma" -> "transformers" [];
	"transformers.models.paligemma.configuration_paligemma" -> "transformers" [];
	"transformers.models.owlvit" -> "transformers" [];
	"transformers.models.owlvit.modeling_owlvit" -> "transformers" [];
	"transformers.models.owlvit.image_processing_owlvit" -> "transformers" [];
	"transformers.models.owlvit.feature_extraction_owlvit" -> "transformers" [];
	"transformers.models.owlvit.processing_owlvit" -> "transformers" [];
	"transformers.models.owlvit.configuration_owlvit" -> "transformers" [];
	"transformers.models.owlv2" -> "transformers" [];
	"transformers.models.owlv2.modeling_owlv2" -> "transformers" [];
	"transformers.models.owlv2.image_processing_owlv2" -> "transformers" [];
	"transformers.models.owlv2.processing_owlv2" -> "transformers" [];
	"transformers.models.owlv2.configuration_owlv2" -> "transformers" [];
	"transformers.models.opt" -> "transformers" [];
	"transformers.models.opt.modeling_flax_opt" -> "transformers" [];
	"transformers.models.opt.modeling_tf_opt" -> "transformers" [];
	"transformers.models.opt.modeling_opt" -> "transformers" [];
	"transformers.models.opt.configuration_opt" -> "transformers" [];
	"transformers.models.openai" -> "transformers" [];
	"transformers.models.openai.modeling_tf_openai" -> "transformers" [];
	"transformers.models.openai.modeling_openai" -> "transformers" [];
	"transformers.models.openai.tokenization_openai_fast" -> "transformers" [];
	"transformers.models.openai.tokenization_openai" -> "transformers" [];
	"transformers.models.openai.configuration_openai" -> "transformers" [];
	"transformers.models.oneformer" -> "transformers" [];
	"transformers.models.oneformer.modeling_oneformer" -> "transformers" [];
	"transformers.models.oneformer.image_processing_oneformer" -> "transformers" [];
	"transformers.models.oneformer.processing_oneformer" -> "transformers" [];
	"transformers.models.oneformer.configuration_oneformer" -> "transformers" [];
	"transformers.models.omdet_turbo" -> "transformers" [];
	"transformers.models.omdet_turbo.modeling_omdet_turbo" -> "transformers" [];
	"transformers.models.omdet_turbo.processing_omdet_turbo" -> "transformers" [];
	"transformers.models.omdet_turbo.configuration_omdet_turbo" -> "transformers" [];
	"transformers.models.olmoe" -> "transformers" [];
	"transformers.models.olmoe.modeling_olmoe" -> "transformers" [];
	"transformers.models.olmoe.configuration_olmoe" -> "transformers" [];
	"transformers.models.olmo" -> "transformers" [];
	"transformers.models.olmo.modeling_olmo" -> "transformers" [];
	"transformers.models.olmo.configuration_olmo" -> "transformers" [];
	"transformers.models.nystromformer" -> "transformers" [];
	"transformers.models.nystromformer.modeling_nystromformer" -> "transformers" [];
	"transformers.models.nystromformer.configuration_nystromformer" -> "transformers" [];
	"transformers.models.nougat" -> "transformers" [];
	"transformers.models.nougat.image_processing_nougat" -> "transformers" [];
	"transformers.models.nougat.tokenization_nougat_fast" -> "transformers" [];
	"transformers.models.nougat.processing_nougat" -> "transformers" [];
	"transformers.models.nllb_moe" -> "transformers" [];
	"transformers.models.nllb_moe.modeling_nllb_moe" -> "transformers" [];
	"transformers.models.nllb_moe.configuration_nllb_moe" -> "transformers" [];
	"transformers.models.nemotron" -> "transformers" [];
	"transformers.models.nemotron.modeling_nemotron" -> "transformers" [];
	"transformers.models.nemotron.configuration_nemotron" -> "transformers" [];
	"transformers.models.myt5" -> "transformers" [];
	"transformers.models.myt5.tokenization_myt5" -> "transformers" [];
	"transformers.models.mvp" -> "transformers" [];
	"transformers.models.mvp.modeling_mvp" -> "transformers" [];
	"transformers.models.mvp.tokenization_mvp_fast" -> "transformers" [];
	"transformers.models.mvp.tokenization_mvp" -> "transformers" [];
	"transformers.models.mvp.configuration_mvp" -> "transformers" [];
	"transformers.models.musicgen_melody" -> "transformers" [];
	"transformers.models.musicgen_melody.processing_musicgen_melody" -> "transformers" [];
	"transformers.models.musicgen_melody.feature_extraction_musicgen_melody" -> "transformers" [];
	"transformers.models.musicgen_melody.modeling_musicgen_melody" -> "transformers" [];
	"transformers.models.musicgen_melody.configuration_musicgen_melody" -> "transformers" [];
	"transformers.models.musicgen" -> "transformers" [];
	"transformers.models.musicgen.modeling_musicgen" -> "transformers" [];
	"transformers.models.musicgen.processing_musicgen" -> "transformers" [];
	"transformers.models.musicgen.configuration_musicgen" -> "transformers" [];
	"transformers.models.mt5" -> "transformers" [];
	"transformers.models.mt5.modeling_flax_mt5" -> "transformers" [];
	"transformers.models.mt5.modeling_tf_mt5" -> "transformers" [];
	"transformers.models.mt5.modeling_mt5" -> "transformers" [];
	"transformers.models.mt5.configuration_mt5" -> "transformers" [];
	"transformers.models.mra" -> "transformers" [];
	"transformers.models.mra.modeling_mra" -> "transformers" [];
	"transformers.models.mra.configuration_mra" -> "transformers" [];
	"transformers.models.mpt" -> "transformers" [];
	"transformers.models.mpt.modeling_mpt" -> "transformers" [];
	"transformers.models.mpt.configuration_mpt" -> "transformers" [];
	"transformers.models.mpnet" -> "transformers" [];
	"transformers.models.mpnet.modeling_tf_mpnet" -> "transformers" [];
	"transformers.models.mpnet.modeling_mpnet" -> "transformers" [];
	"transformers.models.mpnet.tokenization_mpnet_fast" -> "transformers" [];
	"transformers.models.mpnet.tokenization_mpnet" -> "transformers" [];
	"transformers.models.mpnet.configuration_mpnet" -> "transformers" [];
	"transformers.models.moshi" -> "transformers" [];
	"transformers.models.moshi.modeling_moshi" -> "transformers" [];
	"transformers.models.moshi.configuration_moshi" -> "transformers" [];
	"transformers.models.mobilevitv2" -> "transformers" [];
	"transformers.models.mobilevitv2.modeling_mobilevitv2" -> "transformers" [];
	"transformers.models.mobilevitv2.configuration_mobilevitv2" -> "transformers" [];
	"transformers.models.mobilevit" -> "transformers" [];
	"transformers.models.mobilevit.modeling_tf_mobilevit" -> "transformers" [];
	"transformers.models.mobilevit.modeling_mobilevit" -> "transformers" [];
	"transformers.models.mobilevit.image_processing_mobilevit" -> "transformers" [];
	"transformers.models.mobilevit.feature_extraction_mobilevit" -> "transformers" [];
	"transformers.models.mobilevit.configuration_mobilevit" -> "transformers" [];
	"transformers.models.mobilenet_v2" -> "transformers" [];
	"transformers.models.mobilenet_v2.modeling_mobilenet_v2" -> "transformers" [];
	"transformers.models.mobilenet_v2.image_processing_mobilenet_v2" -> "transformers" [];
	"transformers.models.mobilenet_v2.feature_extraction_mobilenet_v2" -> "transformers" [];
	"transformers.models.mobilenet_v2.configuration_mobilenet_v2" -> "transformers" [];
	"transformers.models.mobilenet_v1" -> "transformers" [];
	"transformers.models.mobilenet_v1.modeling_mobilenet_v1" -> "transformers" [];
	"transformers.models.mobilenet_v1.image_processing_mobilenet_v1" -> "transformers" [];
	"transformers.models.mobilenet_v1.feature_extraction_mobilenet_v1" -> "transformers" [];
	"transformers.models.mobilenet_v1.configuration_mobilenet_v1" -> "transformers" [];
	"transformers.models.mobilebert" -> "transformers" [];
	"transformers.models.mobilebert.modeling_tf_mobilebert" -> "transformers" [];
	"transformers.models.mobilebert.modeling_mobilebert" -> "transformers" [];
	"transformers.models.mobilebert.tokenization_mobilebert_fast" -> "transformers" [];
	"transformers.models.mobilebert.tokenization_mobilebert" -> "transformers" [];
	"transformers.models.mobilebert.configuration_mobilebert" -> "transformers" [];
	"transformers.models.mllama" -> "transformers" [];
	"transformers.models.mllama.image_processing_mllama" -> "transformers" [];
	"transformers.models.mllama.processing_mllama" -> "transformers" [];
	"transformers.models.mllama.configuration_mllama" -> "transformers" [];
	"transformers.models.mixtral" -> "transformers" [];
	"transformers.models.mixtral.modeling_mixtral" -> "transformers" [];
	"transformers.models.mixtral.configuration_mixtral" -> "transformers" [];
	"transformers.models.mistral" -> "transformers" [];
	"transformers.models.mistral.modeling_tf_mistral" -> "transformers" [];
	"transformers.models.mistral.modeling_flax_mistral" -> "transformers" [];
	"transformers.models.mistral.modeling_mistral" -> "transformers" [];
	"transformers.models.mistral.configuration_mistral" -> "transformers" [];
	"transformers.models.mimi" -> "transformers" [];
	"transformers.models.mimi.modeling_mimi" -> "transformers" [];
	"transformers.models.mimi.configuration_mimi" -> "transformers" [];
	"transformers.models.mgp_str" -> "transformers" [];
	"transformers.models.mgp_str.modeling_mgp_str" -> "collections" [];
	"transformers.models.mgp_str.modeling_mgp_str" -> "transformers" [];
	"transformers.models.mgp_str.tokenization_mgp_str" -> "transformers" [];
	"transformers.models.mgp_str.configuration_mgp_str" -> "transformers" [];
	"transformers.models.megatron_bert" -> "transformers" [];
	"transformers.models.megatron_bert.modeling_megatron_bert" -> "transformers" [];
	"transformers.models.megatron_bert.configuration_megatron_bert" -> "transformers" [];
	"transformers.models.mbart" -> "transformers" [];
	"transformers.models.mbart.modeling_flax_mbart" -> "transformers" [];
	"transformers.models.mbart.modeling_tf_mbart" -> "transformers" [];
	"transformers.models.mbart.modeling_mbart" -> "transformers" [];
	"transformers.models.mbart.tokenization_mbart_fast" -> "transformers" [];
	"transformers.models.mbart.tokenization_mbart" -> "transformers" [];
	"transformers.models.maskformer" -> "transformers" [];
	"transformers.models.maskformer.modeling_maskformer_swin" -> "collections" [];
	"transformers.models.maskformer.modeling_maskformer_swin" -> "transformers" [];
	"transformers.models.maskformer.modeling_maskformer" -> "transformers" [];
	"transformers.models.maskformer.feature_extraction_maskformer" -> "transformers" [];
	"transformers.models.maskformer.configuration_maskformer_swin" -> "transformers" [];
	"transformers.models.maskformer.configuration_maskformer" -> "transformers" [];
	"transformers.models.mask2former" -> "transformers" [];
	"transformers.models.mask2former.modeling_mask2former" -> "transformers" [];
	"transformers.models.mask2former.image_processing_mask2former" -> "transformers" [];
	"transformers.models.mask2former.configuration_mask2former" -> "transformers" [];
	"transformers.models.markuplm" -> "transformers" [];
	"transformers.models.markuplm.modeling_markuplm" -> "transformers" [];
	"transformers.models.markuplm.tokenization_markuplm_fast" -> "transformers" [];
	"transformers.models.markuplm.tokenization_markuplm" -> "transformers" [];
	"transformers.models.markuplm.processing_markuplm" -> "transformers" [];
	"transformers.models.markuplm.feature_extraction_markuplm" -> "transformers" [];
	"transformers.models.markuplm.configuration_markuplm" -> "transformers" [];
	"transformers.models.marian" -> "transformers" [];
	"transformers.models.marian.modeling_flax_marian" -> "transformers" [];
	"transformers.models.marian.modeling_tf_marian" -> "transformers" [];
	"transformers.models.marian.modeling_marian" -> "transformers" [];
	"transformers.models.marian.tokenization_marian" -> "transformers" [];
	"transformers.models.mamba2" -> "transformers" [];
	"transformers.models.mamba2.modeling_mamba2" -> "transformers" [];
	"transformers.models.mamba2.configuration_mamba2" -> "transformers" [];
	"transformers.models.mamba" -> "transformers" [];
	"transformers.models.mamba.modeling_mamba" -> "transformers" [];
	"transformers.models.mamba.configuration_mamba" -> "transformers" [];
	"transformers.models.m2m_100" -> "transformers" [];
	"transformers.models.m2m_100.modeling_m2m_100" -> "transformers" [];
	"transformers.models.m2m_100.tokenization_m2m_100" -> "transformers" [];
	"transformers.models.lxmert" -> "transformers" [];
	"transformers.models.lxmert.modeling_tf_lxmert" -> "transformers" [];
	"transformers.models.lxmert.modeling_lxmert" -> "transformers" [];
	"transformers.models.lxmert.tokenization_lxmert_fast" -> "transformers" [];
	"transformers.models.lxmert.tokenization_lxmert" -> "transformers" [];
	"transformers.models.lxmert.configuration_lxmert" -> "transformers" [];
	"transformers.models.luke" -> "transformers" [];
	"transformers.models.luke.modeling_luke" -> "transformers" [];
	"transformers.models.luke.tokenization_luke" -> "collections" [];
	"transformers.models.luke.tokenization_luke" -> "transformers" [];
	"transformers.models.luke.configuration_luke" -> "transformers" [];
	"transformers.models.longt5" -> "transformers" [];
	"transformers.models.longt5.modeling_flax_longt5" -> "transformers" [];
	"transformers.models.longt5.modeling_longt5" -> "transformers" [];
	"transformers.models.longt5.configuration_longt5" -> "transformers" [];
	"transformers.models.longformer" -> "transformers" [];
	"transformers.models.longformer.modeling_tf_longformer" -> "transformers" [];
	"transformers.models.longformer.modeling_longformer" -> "transformers" [];
	"transformers.models.longformer.tokenization_longformer_fast" -> "transformers" [];
	"transformers.models.longformer.tokenization_longformer" -> "transformers" [];
	"transformers.models.longformer.configuration_longformer" -> "transformers" [];
	"transformers.models.llava_onevision" -> "transformers" [];
	"transformers.models.llava_onevision.modeling_llava_onevision" -> "transformers" [];
	"transformers.models.llava_onevision.video_processing_llava_onevision" -> "transformers" [];
	"transformers.models.llava_onevision.image_processing_llava_onevision" -> "transformers" [];
	"transformers.models.llava_onevision.processing_llava_onevision" -> "transformers" [];
	"transformers.models.llava_onevision.configuration_llava_onevision" -> "transformers" [];
	"transformers.models.llava_next_video" -> "transformers" [];
	"transformers.models.llava_next_video.modeling_llava_next_video" -> "transformers" [];
	"transformers.models.llava_next_video.image_processing_llava_next_video" -> "transformers" [];
	"transformers.models.llava_next_video.processing_llava_next_video" -> "transformers" [];
	"transformers.models.llava_next_video.configuration_llava_next_video" -> "transformers" [];
	"transformers.models.llava_next" -> "transformers" [];
	"transformers.models.llava_next.image_processing_llava_next" -> "transformers" [];
	"transformers.models.llava_next.modeling_llava_next" -> "transformers" [];
	"transformers.models.llava_next.processing_llava_next" -> "transformers" [];
	"transformers.models.llava_next.configuration_llava_next" -> "transformers" [];
	"transformers.models.llava" -> "transformers" [];
	"transformers.models.llava.modeling_llava" -> "transformers" [];
	"transformers.models.llava.processing_llava" -> "transformers" [];
	"transformers.models.llava.configuration_llava" -> "transformers" [];
	"transformers.models.llama" -> "transformers" [];
	"transformers.models.llama.modeling_flax_llama" -> "transformers" [];
	"transformers.models.llama.modeling_llama" -> "transformers" [];
	"transformers.models.llama.tokenization_llama_fast" -> "transformers" [];
	"transformers.models.llama.tokenization_llama" -> "transformers" [];
	"transformers.models.llama.configuration_llama" -> "transformers" [];
	"transformers.models.lilt" -> "transformers" [];
	"transformers.models.lilt.modeling_lilt" -> "transformers" [];
	"transformers.models.lilt.configuration_lilt" -> "transformers" [];
	"transformers.models.levit" -> "transformers" [];
	"transformers.models.levit.modeling_levit" -> "transformers" [];
	"transformers.models.levit.image_processing_levit" -> "transformers" [];
	"transformers.models.levit.feature_extraction_levit" -> "transformers" [];
	"transformers.models.levit.configuration_levit" -> "transformers" [];
	"transformers.models.led" -> "transformers" [];
	"transformers.models.led.modeling_tf_led" -> "transformers" [];
	"transformers.models.led.modeling_led" -> "transformers" [];
	"transformers.models.led.tokenization_led_fast" -> "transformers" [];
	"transformers.models.led.tokenization_led" -> "transformers" [];
	"transformers.models.led.configuration_led" -> "transformers" [];
	"transformers.models.layoutxlm" -> "transformers" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm_fast" -> "transformers" [];
	"transformers.models.layoutxlm.tokenization_layoutxlm" -> "transformers" [];
	"transformers.models.layoutxlm.processing_layoutxlm" -> "transformers" [];
	"transformers.models.layoutlmv3" -> "transformers" [];
	"transformers.models.layoutlmv3.image_processing_layoutlmv3" -> "transformers" [];
	"transformers.models.layoutlmv3.feature_extraction_layoutlmv3" -> "transformers" [];
	"transformers.models.layoutlmv3.modeling_tf_layoutlmv3" -> "transformers" [];
	"transformers.models.layoutlmv3.modeling_layoutlmv3" -> "transformers" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3_fast" -> "transformers" [];
	"transformers.models.layoutlmv3.tokenization_layoutlmv3" -> "transformers" [];
	"transformers.models.layoutlmv3.processing_layoutlmv3" -> "transformers" [];
	"transformers.models.layoutlmv3.configuration_layoutlmv3" -> "transformers" [];
	"transformers.models.layoutlmv2" -> "transformers" [];
	"transformers.models.layoutlmv2.modeling_layoutlmv2" -> "transformers" [];
	"transformers.models.layoutlmv2.feature_extraction_layoutlmv2" -> "transformers" [];
	"transformers.models.layoutlmv2.image_processing_layoutlmv2" -> "transformers" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2_fast" -> "transformers" [];
	"transformers.models.layoutlmv2.tokenization_layoutlmv2" -> "transformers" [];
	"transformers.models.layoutlmv2.processing_layoutlmv2" -> "transformers" [];
	"transformers.models.layoutlmv2.configuration_layoutlmv2" -> "transformers" [];
	"transformers.models.layoutlm" -> "transformers" [];
	"transformers.models.layoutlm.modeling_tf_layoutlm" -> "transformers" [];
	"transformers.models.layoutlm.modeling_layoutlm" -> "transformers" [];
	"transformers.models.layoutlm.tokenization_layoutlm_fast" -> "transformers" [];
	"transformers.models.layoutlm.tokenization_layoutlm" -> "transformers" [];
	"transformers.models.kosmos2" -> "transformers" [];
	"transformers.models.kosmos2.modeling_kosmos2" -> "transformers" [];
	"transformers.models.kosmos2.processing_kosmos2" -> "transformers" [];
	"transformers.models.kosmos2.configuration_kosmos2" -> "transformers" [];
	"transformers.models.jetmoe" -> "transformers" [];
	"transformers.models.jetmoe.modeling_jetmoe" -> "transformers" [];
	"transformers.models.jetmoe.configuration_jetmoe" -> "transformers" [];
	"transformers.models.jamba" -> "transformers" [];
	"transformers.models.jamba.modeling_jamba" -> "transformers" [];
	"transformers.models.jamba.configuration_jamba" -> "transformers" [];
	"transformers.models.instructblipvideo" -> "transformers" [];
	"transformers.models.instructblipvideo.modeling_instructblipvideo" -> "transformers" [];
	"transformers.models.instructblipvideo.image_processing_instructblipvideo" -> "transformers" [];
	"transformers.models.instructblipvideo.processing_instructblipvideo" -> "transformers" [];
	"transformers.models.instructblipvideo.configuration_instructblipvideo" -> "transformers" [];
	"transformers.models.instructblip" -> "transformers" [];
	"transformers.models.instructblip.modeling_instructblip" -> "transformers" [];
	"transformers.models.instructblip.processing_instructblip" -> "transformers" [];
	"transformers.models.instructblip.configuration_instructblip" -> "transformers" [];
	"transformers.models.informer" -> "transformers" [];
	"transformers.models.informer.modeling_informer" -> "transformers" [];
	"transformers.models.informer.configuration_informer" -> "transformers" [];
	"transformers.models.imagegpt" -> "transformers" [];
	"transformers.models.imagegpt.modeling_imagegpt" -> "transformers" [];
	"transformers.models.imagegpt.image_processing_imagegpt" -> "transformers" [];
	"transformers.models.imagegpt.feature_extraction_imagegpt" -> "transformers" [];
	"transformers.models.idefics3" -> "transformers" [];
	"transformers.models.idefics3.processing_idefics3" -> "transformers" [];
	"transformers.models.idefics3.image_processing_idefics3" -> "transformers" [];
	"transformers.models.idefics3.configuration_idefics3" -> "transformers" [];
	"transformers.models.idefics2" -> "transformers" [];
	"transformers.models.idefics2.processing_idefics2" -> "transformers" [];
	"transformers.models.idefics2.modeling_idefics2" -> "transformers" [];
	"transformers.models.idefics2.image_processing_idefics2" -> "transformers" [];
	"transformers.models.idefics2.configuration_idefics2" -> "transformers" [];
	"transformers.models.idefics" -> "transformers" [];
	"transformers.models.idefics.vision_tf" -> "transformers" [];
	"transformers.models.idefics.perceiver_tf" -> "transformers" [];
	"transformers.models.idefics.processing_idefics" -> "urllib" [];
	"transformers.models.idefics.processing_idefics" -> "transformers" [];
	"transformers.models.idefics.modeling_idefics" -> "transformers" [];
	"transformers.models.idefics.vision" -> "transformers" [];
	"transformers.models.idefics.image_processing_idefics" -> "transformers" [];
	"transformers.models.idefics.configuration_idefics" -> "transformers" [];
	"transformers.models.ibert" -> "transformers" [];
	"transformers.models.ibert.modeling_ibert" -> "transformers" [];
	"transformers.models.ibert.quant_modules" -> "transformers" [];
	"transformers.models.ibert.configuration_ibert" -> "transformers" [];
	"transformers.models.hubert" -> "transformers" [];
	"transformers.models.hubert.modeling_tf_hubert" -> "transformers" [];
	"transformers.models.hubert.modeling_hubert" -> "transformers" [];
	"transformers.models.hubert.configuration_hubert" -> "transformers" [];
	"transformers.models.hiera" -> "transformers" [];
	"transformers.models.hiera.modeling_hiera" -> "transformers" [];
	"transformers.models.hiera.configuration_hiera" -> "transformers" [];
	"transformers.models.herbert" -> "transformers" [];
	"transformers.models.herbert.tokenization_herbert_fast" -> "transformers" [];
	"transformers.models.herbert.tokenization_herbert" -> "transformers" [];
	"transformers.models.groupvit" -> "transformers" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "collections" [];
	"transformers.models.groupvit.modeling_tf_groupvit" -> "transformers" [];
	"transformers.models.groupvit.modeling_groupvit" -> "collections" [];
	"transformers.models.groupvit.modeling_groupvit" -> "transformers" [];
	"transformers.models.groupvit.configuration_groupvit" -> "transformers" [];
	"transformers.models.grounding_dino" -> "transformers" [];
	"transformers.models.grounding_dino.image_processing_grounding_dino" -> "transformers" [];
	"transformers.models.grounding_dino.modeling_grounding_dino" -> "transformers" [];
	"transformers.models.grounding_dino.processing_grounding_dino" -> "transformers" [];
	"transformers.models.grounding_dino.configuration_grounding_dino" -> "transformers" [];
	"transformers.models.granitemoe" -> "transformers" [];
	"transformers.models.granitemoe.modeling_granitemoe" -> "transformers" [];
	"transformers.models.granitemoe.configuration_granitemoe" -> "transformers" [];
	"transformers.models.granite" -> "transformers" [];
	"transformers.models.granite.modeling_granite" -> "transformers" [];
	"transformers.models.granite.configuration_granite" -> "transformers" [];
	"transformers.models.gptj" -> "transformers" [];
	"transformers.models.gptj.modeling_flax_gptj" -> "transformers" [];
	"transformers.models.gptj.modeling_tf_gptj" -> "transformers" [];
	"transformers.models.gptj.modeling_gptj" -> "transformers" [];
	"transformers.models.gpt_neox_japanese" -> "transformers" [];
	"transformers.models.gpt_neox_japanese.modeling_gpt_neox_japanese" -> "transformers" [];
	"transformers.models.gpt_neox_japanese.tokenization_gpt_neox_japanese" -> "transformers" [];
	"transformers.models.gpt_neox_japanese.configuration_gpt_neox_japanese" -> "transformers" [];
	"transformers.models.gpt_neox" -> "transformers" [];
	"transformers.models.gpt_neox.modeling_gpt_neox" -> "transformers" [];
	"transformers.models.gpt_neox.tokenization_gpt_neox_fast" -> "transformers" [];
	"transformers.models.gpt_neox.configuration_gpt_neox" -> "transformers" [];
	"transformers.models.gpt_neo" -> "transformers" [];
	"transformers.models.gpt_neo.modeling_flax_gpt_neo" -> "transformers" [];
	"transformers.models.gpt_neo.modeling_gpt_neo" -> "transformers" [];
	"transformers.models.gpt_bigcode" -> "transformers" [];
	"transformers.models.gpt_bigcode.modeling_gpt_bigcode" -> "transformers" [];
	"transformers.models.gpt_bigcode.configuration_gpt_bigcode" -> "transformers" [];
	"transformers.models.gpt2" -> "transformers" [];
	"transformers.models.gpt2.modeling_flax_gpt2" -> "transformers" [];
	"transformers.models.gpt2.tokenization_gpt2_tf" -> "transformers" [];
	"transformers.models.gpt2.modeling_tf_gpt2" -> "transformers" [];
	"transformers.models.gpt2.modeling_gpt2" -> "transformers" [];
	"transformers.models.gpt2.tokenization_gpt2_fast" -> "transformers" [];
	"transformers.models.gpt2.tokenization_gpt2" -> "transformers" [];
	"transformers.models.glpn" -> "transformers" [];
	"transformers.models.glpn.modeling_glpn" -> "transformers" [];
	"transformers.models.glpn.image_processing_glpn" -> "transformers" [];
	"transformers.models.glpn.feature_extraction_glpn" -> "transformers" [];
	"transformers.models.glpn.configuration_glpn" -> "transformers" [];
	"transformers.models.glm" -> "transformers" [];
	"transformers.models.glm.modeling_glm" -> "transformers" [];
	"transformers.models.glm.configuration_glm" -> "transformers" [];
	"transformers.models.git" -> "transformers" [];
	"transformers.models.git.modeling_git" -> "transformers" [];
	"transformers.models.git.processing_git" -> "transformers" [];
	"transformers.models.git.configuration_git" -> "transformers" [];
	"transformers.models.gemma2" -> "transformers" [];
	"transformers.models.gemma2.modeling_gemma2" -> "transformers" [];
	"transformers.models.gemma2.configuration_gemma2" -> "transformers" [];
	"transformers.models.gemma" -> "transformers" [];
	"transformers.models.gemma.modeling_flax_gemma" -> "transformers" [];
	"transformers.models.gemma.modeling_gemma" -> "transformers" [];
	"transformers.models.gemma.tokenization_gemma_fast" -> "transformers" [];
	"transformers.models.gemma.tokenization_gemma" -> "transformers" [];
	"transformers.models.gemma.configuration_gemma" -> "transformers" [];
	"transformers.models.fuyu" -> "transformers" [];
	"transformers.models.fuyu.modeling_fuyu" -> "transformers" [];
	"transformers.models.fuyu.processing_fuyu" -> "transformers" [];
	"transformers.models.fuyu.image_processing_fuyu" -> "transformers" [];
	"transformers.models.fuyu.configuration_fuyu" -> "transformers" [];
	"transformers.models.funnel" -> "transformers" [];
	"transformers.models.funnel.modeling_tf_funnel" -> "transformers" [];
	"transformers.models.funnel.modeling_funnel" -> "transformers" [];
	"transformers.models.funnel.tokenization_funnel_fast" -> "transformers" [];
	"transformers.models.funnel.tokenization_funnel" -> "transformers" [];
	"transformers.models.funnel.configuration_funnel" -> "transformers" [];
	"transformers.models.fsmt" -> "transformers" [];
	"transformers.models.fsmt.modeling_fsmt" -> "transformers" [];
	"transformers.models.fsmt.tokenization_fsmt" -> "transformers" [];
	"transformers.models.fsmt.configuration_fsmt" -> "transformers" [];
	"transformers.models.focalnet" -> "transformers" [];
	"transformers.models.focalnet.modeling_focalnet" -> "collections" [];
	"transformers.models.focalnet.modeling_focalnet" -> "transformers" [];
	"transformers.models.focalnet.configuration_focalnet" -> "transformers" [];
	"transformers.models.fnet" -> "transformers" [];
	"transformers.models.fnet.modeling_fnet" -> "transformers" [];
	"transformers.models.fnet.tokenization_fnet_fast" -> "transformers" [];
	"transformers.models.fnet.tokenization_fnet" -> "transformers" [];
	"transformers.models.fnet.configuration_fnet" -> "transformers" [];
	"transformers.models.flava" -> "transformers" [];
	"transformers.models.flava.modeling_flava" -> "transformers" [];
	"transformers.models.flava.processing_flava" -> "transformers" [];
	"transformers.models.flava.image_processing_flava" -> "transformers" [];
	"transformers.models.flava.feature_extraction_flava" -> "transformers" [];
	"transformers.models.flava.configuration_flava" -> "transformers" [];
	"transformers.models.flaubert" -> "transformers" [];
	"transformers.models.flaubert.modeling_tf_flaubert" -> "transformers" [];
	"transformers.models.flaubert.modeling_flaubert" -> "transformers" [];
	"transformers.models.flaubert.tokenization_flaubert" -> "transformers" [];
	"transformers.models.flaubert.configuration_flaubert" -> "transformers" [];
	"transformers.models.fastspeech2_conformer" -> "transformers" [];
	"transformers.models.fastspeech2_conformer.modeling_fastspeech2_conformer" -> "transformers" [];
	"transformers.models.fastspeech2_conformer.tokenization_fastspeech2_conformer" -> "transformers" [];
	"transformers.models.fastspeech2_conformer.configuration_fastspeech2_conformer" -> "transformers" [];
	"transformers.models.falcon_mamba" -> "transformers" [];
	"transformers.models.falcon_mamba.modeling_falcon_mamba" -> "transformers" [];
	"transformers.models.falcon_mamba.configuration_falcon_mamba" -> "transformers" [];
	"transformers.models.falcon" -> "transformers" [];
	"transformers.models.falcon.modeling_falcon" -> "transformers" [];
	"transformers.models.falcon.configuration_falcon" -> "transformers" [];
	"transformers.models.esm" -> "transformers" [];
	"transformers.models.esm.modeling_tf_esm" -> "transformers" [];
	"transformers.models.esm.modeling_esmfold" -> "transformers" [];
	"transformers.models.esm.modeling_esm" -> "transformers" [];
	"transformers.models.esm.tokenization_esm" -> "transformers" [];
	"transformers.models.esm.configuration_esm" -> "transformers" [];
	"transformers.models.ernie" -> "transformers" [];
	"transformers.models.ernie.modeling_ernie" -> "transformers" [];
	"transformers.models.ernie.configuration_ernie" -> "transformers" [];
	"transformers.models.encoder_decoder" -> "transformers" [];
	"transformers.models.encoder_decoder.modeling_flax_encoder_decoder" -> "transformers" [];
	"transformers.models.encoder_decoder.modeling_tf_encoder_decoder" -> "transformers" [];
	"transformers.models.encoder_decoder.configuration_encoder_decoder" -> "transformers" [];
	"transformers.models.encodec" -> "transformers" [];
	"transformers.models.encodec.modeling_encodec" -> "transformers" [];
	"transformers.models.encodec.feature_extraction_encodec" -> "transformers" [];
	"transformers.models.encodec.configuration_encodec" -> "transformers" [];
	"transformers.models.electra" -> "transformers" [];
	"transformers.models.electra.modeling_flax_electra" -> "transformers" [];
	"transformers.models.electra.modeling_tf_electra" -> "transformers" [];
	"transformers.models.electra.modeling_electra" -> "transformers" [];
	"transformers.models.electra.tokenization_electra_fast" -> "transformers" [];
	"transformers.models.electra.tokenization_electra" -> "transformers" [];
	"transformers.models.electra.configuration_electra" -> "transformers" [];
	"transformers.models.efficientnet" -> "transformers" [];
	"transformers.models.efficientnet.modeling_efficientnet" -> "transformers" [];
	"transformers.models.efficientnet.image_processing_efficientnet" -> "transformers" [];
	"transformers.models.efficientnet.configuration_efficientnet" -> "transformers" [];
	"transformers.models.dpt" -> "transformers" [];
	"transformers.models.dpt.modeling_dpt" -> "collections" [];
	"transformers.models.dpt.modeling_dpt" -> "transformers" [];
	"transformers.models.dpt.image_processing_dpt" -> "transformers" [];
	"transformers.models.dpt.feature_extraction_dpt" -> "transformers" [];
	"transformers.models.dpt.configuration_dpt" -> "transformers" [];
	"transformers.models.dpr" -> "transformers" [];
	"transformers.models.dpr.modeling_tf_dpr" -> "transformers" [];
	"transformers.models.bert.modeling_tf_bert" -> "transformers" [];
	"transformers.models.bert.configuration_bert" -> "transformers" [];
	"transformers.models.dpr.modeling_dpr" -> "transformers" [];
	"transformers.models.bert.modeling_bert" -> "transformers" [];
	"transformers.models.dpr.tokenization_dpr_fast" -> "transformers" [];
	"transformers.models.bert.tokenization_bert_fast" -> "transformers" [];
	"transformers.models.dpr.tokenization_dpr" -> "transformers" [];
	"transformers.models.dpr.configuration_dpr" -> "transformers" [];
	"transformers.models.donut" -> "transformers" [];
	"transformers.models.donut.image_processing_donut" -> "transformers" [];
	"transformers.models.donut.feature_extraction_donut" -> "transformers" [];
	"transformers.models.donut.modeling_donut_swin" -> "collections" [];
	"transformers.models.donut.modeling_donut_swin" -> "transformers" [];
	"transformers.models.donut.processing_donut" -> "transformers" [];
	"transformers.models.donut.configuration_donut_swin" -> "transformers" [];
	"transformers.models.distilbert" -> "transformers" [];
	"transformers.models.distilbert.modeling_flax_distilbert" -> "transformers" [];
	"transformers.models.distilbert.modeling_tf_distilbert" -> "transformers" [];
	"transformers.models.distilbert.modeling_distilbert" -> "transformers" [];
	"transformers.models.distilbert.tokenization_distilbert_fast" -> "transformers" [];
	"transformers.models.distilbert.tokenization_distilbert" -> "transformers" [];
	"transformers.models.distilbert.configuration_distilbert" -> "transformers" [];
	"transformers.models.dinov2" -> "transformers" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "collections" [];
	"transformers.models.dinov2.modeling_flax_dinov2" -> "transformers" [];
	"transformers.models.dinov2.modeling_dinov2" -> "collections" [];
	"transformers.models.dinov2.modeling_dinov2" -> "transformers" [];
	"transformers.models.dinov2.configuration_dinov2" -> "transformers" [];
	"transformers.models.dinat" -> "transformers" [];
	"transformers.models.dinat.modeling_dinat" -> "transformers" [];
	"transformers.models.dinat.configuration_dinat" -> "transformers" [];
	"transformers.models.detr" -> "transformers" [];
	"transformers.models.detr.modeling_detr" -> "transformers" [];
	"transformers.models.detr.image_processing_detr_fast" -> "transformers" [];
	"transformers.models.detr.image_processing_detr" -> "transformers" [];
	"transformers.models.detr.feature_extraction_detr" -> "transformers" [];
	"transformers.models.detr.configuration_detr" -> "transformers" [];
	"transformers.models.depth_anything" -> "transformers" [];
	"transformers.models.depth_anything.modeling_depth_anything" -> "transformers" [];
	"transformers.models.depth_anything.configuration_depth_anything" -> "transformers" [];
	"transformers.models.deprecated.xlm_prophetnet" -> "transformers" [];
	"transformers.models.deprecated.xlm_prophetnet.modeling_xlm_prophetnet" -> "transformers" [];
	"transformers.models.deprecated.xlm_prophetnet.tokenization_xlm_prophetnet" -> "transformers" [];
	"transformers.models.deprecated.xlm_prophetnet.configuration_xlm_prophetnet" -> "transformers" [];
	"transformers.models.deprecated.vit_hybrid" -> "transformers" [];
	"transformers.models.deprecated.vit_hybrid.image_processing_vit_hybrid" -> "transformers" [];
	"transformers.models.deprecated.vit_hybrid.modeling_vit_hybrid" -> "collections" [];
	"transformers.models.deprecated.vit_hybrid.modeling_vit_hybrid" -> "transformers" [];
	"transformers.models.deprecated.vit_hybrid.configuration_vit_hybrid" -> "transformers" [];
	"transformers.models.deprecated.van" -> "transformers" [];
	"transformers.models.deprecated.van.modeling_van" -> "transformers" [];
	"transformers.models.deprecated.van.configuration_van" -> "transformers" [];
	"transformers.models.deprecated.tvlt" -> "transformers" [];
	"transformers.models.deprecated.tvlt.image_processing_tvlt" -> "transformers" [];
	"transformers.models.deprecated.tvlt.modeling_tvlt" -> "collections" [];
	"transformers.models.deprecated.tvlt.modeling_tvlt" -> "transformers" [];
	"transformers.models.deprecated.tvlt.feature_extraction_tvlt" -> "transformers" [];
	"transformers.models.deprecated.tvlt.processing_tvlt" -> "transformers" [];
	"transformers.models.deprecated.tvlt.configuration_tvlt" -> "transformers" [];
	"transformers.models.deprecated.transfo_xl" -> "transformers" [];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl" -> "transformers" [];
	"transformers.models.deprecated.transfo_xl.modeling_tf_transfo_xl_utilities" -> "transformers" [];
	"transformers.models.deprecated.transfo_xl.modeling_transfo_xl" -> "transformers" [];
	"transformers.models.deprecated.transfo_xl.tokenization_transfo_xl" -> "transformers" [];
	"transformers.models.deprecated.transfo_xl.configuration_transfo_xl" -> "transformers" [];
	"transformers.models.deprecated.trajectory_transformer" -> "transformers" [];
	"transformers.models.deprecated.trajectory_transformer.modeling_trajectory_transformer" -> "transformers" [];
	"transformers.models.deprecated.trajectory_transformer.configuration_trajectory_transformer" -> "transformers" [];
	"transformers.models.deprecated.tapex" -> "transformers" [];
	"transformers.models.deprecated.tapex.tokenization_tapex" -> "transformers" [];
	"transformers.models.deprecated.speech_to_text_2" -> "transformers" [];
	"transformers.models.deprecated.speech_to_text_2.modeling_speech_to_text_2" -> "transformers" [];
	"transformers.models.deprecated.speech_to_text_2.tokenization_speech_to_text_2" -> "transformers" [];
	"transformers.models.deprecated.speech_to_text_2.processing_speech_to_text_2" -> "transformers" [];
	"transformers.models.deprecated.speech_to_text_2.configuration_speech_to_text_2" -> "transformers" [];
	"transformers.models.deprecated.retribert" -> "transformers" [];
	"transformers.models.deprecated.retribert.modeling_retribert" -> "transformers" [];
	"transformers.models.deprecated.retribert.tokenization_retribert_fast" -> "transformers" [];
	"transformers.models.deprecated.retribert.tokenization_retribert" -> "transformers" [];
	"transformers.models.deprecated.retribert.configuration_retribert" -> "transformers" [];
	"transformers.models.deprecated.realm" -> "transformers" [];
	"transformers.models.deprecated.realm.modeling_realm" -> "transformers" [];
	"transformers.models.deprecated.realm.tokenization_realm" -> "transformers" [];
	"transformers.models.deprecated.realm.configuration_realm" -> "transformers" [];
	"transformers.models.deprecated.qdqbert" -> "transformers" [];
	"transformers.models.deprecated.qdqbert.modeling_qdqbert" -> "transformers" [];
	"transformers.models.deprecated.qdqbert.configuration_qdqbert" -> "transformers" [];
	"transformers.models.deprecated.open_llama.modeling_open_llama" -> "transformers" [];
	"transformers.models.deprecated.open_llama.configuration_open_llama" -> "transformers" [];
	"transformers.models.deprecated.nezha" -> "transformers" [];
	"transformers.models.deprecated.nezha.modeling_nezha" -> "transformers" [];
	"transformers.models.deprecated.nat" -> "transformers" [];
	"transformers.models.deprecated.nat.modeling_nat" -> "transformers" [];
	"transformers.models.deprecated.nat.configuration_nat" -> "transformers" [];
	"transformers.models.deprecated.mmbt" -> "transformers" [];
	"transformers.models.deprecated.mmbt.modeling_mmbt" -> "transformers" [];
	"transformers.models.deprecated.mmbt.configuration_mmbt" -> "transformers" [];
	"transformers.models.deprecated.mega" -> "transformers" [];
	"transformers.models.deprecated.mega.modeling_mega" -> "transformers" [];
	"transformers.models.deprecated.mega.configuration_mega" -> "transformers" [];
	"transformers.models.deprecated.mctct" -> "transformers" [];
	"transformers.models.deprecated.mctct.modeling_mctct" -> "transformers" [];
	"transformers.models.deprecated.mctct.processing_mctct" -> "transformers" [];
	"transformers.models.deprecated.mctct.feature_extraction_mctct" -> "transformers" [];
	"transformers.models.deprecated.mctct.configuration_mctct" -> "transformers" [];
	"transformers.models.deprecated.jukebox" -> "transformers" [];
	"transformers.models.deprecated.jukebox.modeling_jukebox" -> "transformers" [];
	"transformers.models.deprecated.jukebox.tokenization_jukebox" -> "transformers" [];
	"transformers.models.deprecated.jukebox.configuration_jukebox" -> "transformers" [];
	"transformers.models.deprecated.graphormer" -> "transformers" [];
	"transformers.models.deprecated.graphormer.modeling_graphormer" -> "transformers" [];
	"transformers.models.deprecated.graphormer.configuration_graphormer" -> "transformers" [];
	"transformers.models.deprecated.gptsan_japanese" -> "transformers" [];
	"transformers.models.deprecated.gptsan_japanese.modeling_gptsan_japanese" -> "transformers" [];
	"transformers.models.deprecated.gptsan_japanese.tokenization_gptsan_japanese" -> "transformers" [];
	"transformers.models.deprecated.gptsan_japanese.configuration_gptsan_japanese" -> "transformers" [];
	"transformers.models.deprecated.ernie_m" -> "transformers" [];
	"transformers.models.deprecated.ernie_m.modeling_ernie_m" -> "transformers" [];
	"transformers.models.deprecated.ernie_m.tokenization_ernie_m" -> "transformers" [];
	"transformers.models.deprecated.ernie_m.configuration_ernie_m" -> "transformers" [];
	"transformers.models.deprecated.efficientformer" -> "transformers" [];
	"transformers.models.deprecated.efficientformer.modeling_tf_efficientformer" -> "transformers" [];
	"transformers.models.deprecated.efficientformer.modeling_efficientformer" -> "transformers" [];
	"transformers.models.deprecated.efficientformer.image_processing_efficientformer" -> "transformers" [];
	"transformers.models.deprecated.efficientformer.configuration_efficientformer" -> "transformers" [];
	"transformers.models.deprecated.deta" -> "transformers" [];
	"transformers.models.deprecated.deta.modeling_deta" -> "transformers" [];
	"transformers.models.deprecated.deta.image_processing_deta" -> "transformers" [];
	"transformers.models.deprecated.deta.configuration_deta" -> "transformers" [];
	"transformers.models.deit" -> "transformers" [];
	"transformers.models.deit.modeling_tf_deit" -> "collections" [];
	"transformers.models.deit.modeling_tf_deit" -> "transformers" [];
	"transformers.models.deit.modeling_deit" -> "collections" [];
	"transformers.models.deit.modeling_deit" -> "transformers" [];
	"transformers.models.deit.image_processing_deit" -> "transformers" [];
	"transformers.models.deit.feature_extraction_deit" -> "transformers" [];
	"transformers.models.deit.configuration_deit" -> "transformers" [];
	"transformers.models.deformable_detr" -> "transformers" [];
	"transformers.models.deformable_detr.modeling_deformable_detr" -> "transformers" [];
	"transformers.models.deformable_detr.image_processing_deformable_detr" -> "transformers" [];
	"transformers.models.deformable_detr.feature_extraction_deformable_detr" -> "transformers" [];
	"transformers.models.deformable_detr.configuration_deformable_detr" -> "transformers" [];
	"transformers.models.decision_transformer" -> "transformers" [];
	"transformers.models.decision_transformer.modeling_decision_transformer" -> "transformers" [];
	"transformers.models.decision_transformer.configuration_decision_transformer" -> "transformers" [];
	"transformers.models.deberta_v2" -> "transformers" [];
	"transformers.models.deberta_v2.modeling_deberta_v2" -> "collections" [];
	"transformers.models.deberta_v2.modeling_deberta_v2" -> "transformers" [];
	"transformers.models.deberta_v2.modeling_tf_deberta_v2" -> "transformers" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2_fast" -> "transformers" [];
	"transformers.models.deberta_v2.tokenization_deberta_v2" -> "transformers" [];
	"transformers.models.deberta" -> "transformers" [];
	"transformers.models.deberta.modeling_tf_deberta" -> "transformers" [];
	"transformers.models.deberta.modeling_deberta" -> "collections" [];
	"transformers.models.deberta.modeling_deberta" -> "transformers" [];
	"transformers.models.deberta.tokenization_deberta_fast" -> "transformers" [];
	"transformers.models.deberta.tokenization_deberta" -> "transformers" [];
	"transformers.models.dbrx" -> "transformers" [];
	"transformers.models.dbrx.modeling_dbrx" -> "transformers" [];
	"transformers.models.dbrx.configuration_dbrx" -> "transformers" [];
	"transformers.models.data2vec" -> "transformers" [];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" -> "collections" [];
	"transformers.models.data2vec.modeling_tf_data2vec_vision" -> "transformers" [];
	"transformers.models.data2vec.modeling_data2vec_vision" -> "collections" [];
	"transformers.models.data2vec.modeling_data2vec_vision" -> "transformers" [];
	"transformers.models.data2vec.modeling_data2vec_text" -> "transformers" [];
	"transformers.models.data2vec.modeling_data2vec_audio" -> "transformers" [];
	"transformers.models.data2vec.configuration_data2vec_vision" -> "transformers" [];
	"transformers.models.data2vec.configuration_data2vec_text" -> "transformers" [];
	"transformers.models.data2vec.configuration_data2vec_audio" -> "transformers" [];
	"transformers.models.dac" -> "transformers" [];
	"transformers.models.dac.modeling_dac" -> "transformers" [];
	"transformers.models.dac.feature_extraction_dac" -> "transformers" [];
	"transformers.models.dac.configuration_dac" -> "transformers" [];
	"transformers.models.cvt" -> "transformers" [];
	"transformers.models.cvt.modeling_tf_cvt" -> "collections" [];
	"transformers.models.cvt.modeling_tf_cvt" -> "transformers" [];
	"transformers.models.cvt.modeling_cvt" -> "collections" [];
	"transformers.models.cvt.modeling_cvt" -> "transformers" [];
	"transformers.models.cvt.configuration_cvt" -> "transformers" [];
	"transformers.models.ctrl" -> "transformers" [];
	"transformers.models.ctrl.modeling_tf_ctrl" -> "transformers" [];
	"transformers.models.ctrl.modeling_ctrl" -> "transformers" [];
	"transformers.models.ctrl.tokenization_ctrl" -> "transformers" [];
	"transformers.models.ctrl.configuration_ctrl" -> "transformers" [];
	"transformers.models.cpmant" -> "transformers" [];
	"transformers.models.cpmant.modeling_cpmant" -> "transformers" [];
	"transformers.models.cpmant.tokenization_cpmant" -> "transformers" [];
	"transformers.models.cpmant.configuration_cpmant" -> "transformers" [];
	"transformers.models.convnextv2" -> "transformers" [];
	"transformers.models.convnextv2.modeling_tf_convnextv2" -> "transformers" [];
	"transformers.models.convnextv2.modeling_convnextv2" -> "transformers" [];
	"transformers.models.convnextv2.configuration_convnextv2" -> "transformers" [];
	"transformers.models.convnext" -> "transformers" [];
	"transformers.models.convnext.modeling_tf_convnext" -> "transformers" [];
	"transformers.models.convnext.modeling_convnext" -> "transformers" [];
	"transformers.models.convnext.image_processing_convnext" -> "transformers" [];
	"transformers.models.convnext.feature_extraction_convnext" -> "transformers" [];
	"transformers.models.convnext.configuration_convnext" -> "transformers" [];
	"transformers.models.convbert" -> "transformers" [];
	"transformers.models.convbert.modeling_tf_convbert" -> "transformers" [];
	"transformers.models.convbert.modeling_convbert" -> "transformers" [];
	"transformers.models.convbert.tokenization_convbert_fast" -> "transformers" [];
	"transformers.models.convbert.tokenization_convbert" -> "transformers" [];
	"transformers.models.convbert.configuration_convbert" -> "transformers" [];
	"transformers.models.conditional_detr" -> "transformers" [];
	"transformers.models.conditional_detr.modeling_conditional_detr" -> "transformers" [];
	"transformers.models.conditional_detr.image_processing_conditional_detr" -> "transformers" [];
	"transformers.models.conditional_detr.feature_extraction_conditional_detr" -> "transformers" [];
	"transformers.models.conditional_detr.configuration_conditional_detr" -> "transformers" [];
	"transformers.models.cohere" -> "transformers" [];
	"transformers.models.cohere.modeling_cohere" -> "transformers" [];
	"transformers.models.cohere.tokenization_cohere_fast" -> "transformers" [];
	"transformers.models.cohere.configuration_cohere" -> "transformers" [];
	"transformers.models.codegen" -> "transformers" [];
	"transformers.models.codegen.modeling_codegen" -> "transformers" [];
	"transformers.models.codegen.tokenization_codegen_fast" -> "transformers" [];
	"transformers.models.codegen.tokenization_codegen" -> "transformers" [];
	"transformers.models.clvp" -> "transformers" [];
	"transformers.models.clvp.modeling_clvp" -> "transformers" [];
	"transformers.models.clvp.tokenization_clvp" -> "transformers" [];
	"transformers.models.clvp.processing_clvp" -> "transformers" [];
	"transformers.models.clvp.feature_extraction_clvp" -> "transformers" [];
	"transformers.models.clvp.configuration_clvp" -> "transformers" [];
	"transformers.models.clipseg" -> "transformers" [];
	"transformers.models.clipseg.modeling_clipseg" -> "transformers" [];
	"transformers.models.clipseg.processing_clipseg" -> "transformers" [];
	"transformers.models.clipseg.configuration_clipseg" -> "transformers" [];
	"transformers.models.clip" -> "transformers" [];
	"transformers.models.clip.image_processing_clip" -> "transformers" [];
	"transformers.models.clip.feature_extraction_clip" -> "transformers" [];
	"transformers.models.clip.tokenization_clip_fast" -> "transformers" [];
	"transformers.models.clip.tokenization_clip" -> "transformers" [];
	"transformers.models.clip.processing_clip" -> "transformers" [];
	"transformers.models.clap" -> "transformers" [];
	"transformers.models.clap.modeling_clap" -> "transformers" [];
	"transformers.models.clap.feature_extraction_clap" -> "transformers" [];
	"transformers.models.clap.processing_clap" -> "transformers" [];
	"transformers.models.clap.configuration_clap" -> "transformers" [];
	"transformers.models.chinese_clip" -> "transformers" [];
	"transformers.models.chinese_clip.modeling_chinese_clip" -> "transformers" [];
	"transformers.models.chinese_clip.feature_extraction_chinese_clip" -> "transformers" [];
	"transformers.models.chinese_clip.image_processing_chinese_clip" -> "transformers" [];
	"transformers.models.chinese_clip.processing_chinese_clip" -> "transformers" [];
	"transformers.models.chameleon" -> "transformers" [];
	"transformers.models.chameleon.image_processing_chameleon" -> "transformers" [];
	"transformers.models.chameleon.modeling_chameleon" -> "transformers" [];
	"transformers.models.chameleon.processing_chameleon" -> "transformers" [];
	"transformers.models.chameleon.configuration_chameleon" -> "transformers" [];
	"transformers.models.canine" -> "transformers" [];
	"transformers.models.canine.modeling_canine" -> "transformers" [];
	"transformers.models.canine.tokenization_canine" -> "transformers" [];
	"transformers.models.canine.configuration_canine" -> "transformers" [];
	"transformers.models.camembert" -> "transformers" [];
	"transformers.models.camembert.modeling_tf_camembert" -> "transformers" [];
	"transformers.models.camembert.modeling_camembert" -> "transformers" [];
	"transformers.models.camembert.tokenization_camembert_fast" -> "transformers" [];
	"transformers.models.camembert.tokenization_camembert" -> "transformers" [];
	"transformers.models.camembert.configuration_camembert" -> "transformers" [];
	"transformers.models.byt5" -> "transformers" [];
	"transformers.models.byt5.tokenization_byt5" -> "transformers" [];
	"transformers.models.bros" -> "transformers" [];
	"transformers.models.bros.modeling_bros" -> "transformers" [];
	"transformers.models.bros.processing_bros" -> "transformers" [];
	"transformers.models.bros.configuration_bros" -> "transformers" [];
	"transformers.models.bridgetower" -> "transformers" [];
	"transformers.models.bridgetower.modeling_bridgetower" -> "transformers" [];
	"transformers.models.bridgetower.image_processing_bridgetower" -> "transformers" [];
	"transformers.models.bridgetower.processing_bridgetower" -> "transformers" [];
	"transformers.models.bridgetower.configuration_bridgetower" -> "transformers" [];
	"transformers.models.bloom" -> "transformers" [];
	"transformers.models.bloom.modeling_flax_bloom" -> "transformers" [];
	"transformers.models.bloom.modeling_bloom" -> "transformers" [];
	"transformers.models.bloom.tokenization_bloom_fast" -> "transformers" [];
	"transformers.models.blip_2" -> "transformers" [];
	"transformers.models.blip_2.modeling_blip_2" -> "transformers" [];
	"transformers.models.blip_2.processing_blip_2" -> "transformers" [];
	"transformers.models.blip_2.configuration_blip_2" -> "transformers" [];
	"transformers.models.blip" -> "transformers" [];
	"transformers.models.blip.modeling_tf_blip" -> "transformers" [];
	"transformers.models.blip.modeling_tf_blip_text" -> "transformers" [];
	"transformers.models.blip.modeling_blip" -> "transformers" [];
	"transformers.models.blip.modeling_blip_text" -> "transformers" [];
	"transformers.models.blip.image_processing_blip" -> "transformers" [];
	"transformers.models.blip.processing_blip" -> "transformers" [];
	"transformers.models.blip.configuration_blip" -> "transformers" [];
	"transformers.models.blenderbot_small" -> "transformers" [];
	"transformers.models.blenderbot_small.modeling_flax_blenderbot_small" -> "transformers" [];
	"transformers.models.blenderbot_small.modeling_tf_blenderbot_small" -> "transformers" [];
	"transformers.models.blenderbot_small.modeling_blenderbot_small" -> "transformers" [];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small_fast" -> "transformers" [];
	"transformers.models.blenderbot_small.tokenization_blenderbot_small" -> "transformers" [];
	"transformers.models.blenderbot" -> "transformers" [];
	"transformers.models.blenderbot.modeling_flax_blenderbot" -> "transformers" [];
	"transformers.models.blenderbot.modeling_tf_blenderbot" -> "transformers" [];
	"transformers.models.blenderbot.modeling_blenderbot" -> "transformers" [];
	"transformers.models.blenderbot.tokenization_blenderbot_fast" -> "transformers" [];
	"transformers.models.blenderbot.tokenization_blenderbot" -> "transformers" [];
	"transformers.models.bit" -> "transformers" [];
	"transformers.models.bit.image_processing_bit" -> "transformers" [];
	"transformers.models.bit.modeling_bit" -> "transformers" [];
	"transformers.models.bit.configuration_bit" -> "transformers" [];
	"transformers.models.biogpt" -> "transformers" [];
	"transformers.models.biogpt.modeling_biogpt" -> "transformers" [];
	"transformers.models.biogpt.tokenization_biogpt" -> "transformers" [];
	"transformers.models.biogpt.configuration_biogpt" -> "transformers" [];
	"transformers.models.bigbird_pegasus" -> "transformers" [];
	"transformers.models.bigbird_pegasus.modeling_bigbird_pegasus" -> "transformers" [];
	"transformers.models.big_bird" -> "transformers" [];
	"transformers.models.big_bird.modeling_flax_big_bird" -> "transformers" [];
	"transformers.models.big_bird.modeling_big_bird" -> "transformers" [];
	"transformers.models.big_bird.tokenization_big_bird_fast" -> "transformers" [];
	"transformers.models.big_bird.tokenization_big_bird" -> "transformers" [];
	"transformers.models.big_bird.configuration_big_bird" -> "transformers" [];
	"transformers.models.bertweet" -> "transformers" [];
	"transformers.models.bertweet.tokenization_bertweet" -> "transformers" [];
	"transformers.models.bert_japanese" -> "transformers" [];
	"transformers.models.bert_japanese.tokenization_bert_japanese" -> "transformers" [];
	"transformers.models.bert_generation" -> "transformers" [];
	"transformers.models.bert_generation.modeling_bert_generation" -> "transformers" [];
	"transformers.models.bert_generation.tokenization_bert_generation" -> "transformers" [];
	"transformers.models.bert_generation.configuration_bert_generation" -> "transformers" [];
	"transformers.models.bert" -> "transformers" [];
	"transformers.models.bert.modeling_flax_bert" -> "transformers" [];
	"transformers.models.bert.tokenization_bert_tf" -> "transformers" [];
	"transformers.models.beit" -> "transformers" [];
	"transformers.models.beit.modeling_flax_beit" -> "transformers" [];
	"transformers.models.beit.modeling_beit" -> "collections" [];
	"transformers.models.beit.modeling_beit" -> "transformers" [];
	"transformers.models.beit.image_processing_beit" -> "transformers" [];
	"transformers.models.beit.feature_extraction_beit" -> "transformers" [];
	"transformers.models.beit.configuration_beit" -> "transformers" [];
	"transformers.models.bart" -> "transformers" [];
	"transformers.models.bart.modeling_flax_bart" -> "transformers" [];
	"transformers.models.bart.modeling_tf_bart" -> "transformers" [];
	"transformers.models.bart.modeling_bart" -> "transformers" [];
	"transformers.models.bart.tokenization_bart_fast" -> "transformers" [];
	"transformers.models.bart.tokenization_bart" -> "transformers" [];
	"transformers.models.bark" -> "transformers" [];
	"transformers.models.bark.modeling_bark" -> "transformers" [];
	"transformers.models.bark.generation_configuration_bark" -> "transformers" [];
	"transformers.models.bark.processing_bark" -> "transformers" [];
	"transformers.models.bark.configuration_bark" -> "transformers" [];
	"transformers.models.autoformer" -> "transformers" [];
	"transformers.models.autoformer.modeling_autoformer" -> "transformers" [];
	"transformers.models.autoformer.configuration_autoformer" -> "transformers" [];
	"transformers.models.auto" -> "transformers" [];
	"transformers.models.audio_spectrogram_transformer" -> "transformers" [];
	"transformers.models.audio_spectrogram_transformer.modeling_audio_spectrogram_transformer" -> "transformers" [];
	"transformers.models.audio_spectrogram_transformer.feature_extraction_audio_spectrogram_transformer" -> "transformers" [];
	"transformers.models.audio_spectrogram_transformer.configuration_audio_spectrogram_transformer" -> "transformers" [];
	"transformers.models.altclip" -> "transformers" [];
	"transformers.models.altclip.processing_altclip" -> "transformers" [];
	"transformers.models.altclip.modeling_altclip" -> "transformers" [];
	"transformers.models.altclip.configuration_altclip" -> "transformers" [];
	"transformers.models.align" -> "transformers" [];
	"transformers.models.align.processing_align" -> "transformers" [];
	"transformers.models.align.modeling_align" -> "transformers" [];
	"transformers.models.align.configuration_align" -> "transformers" [];
	"transformers.models.albert" -> "transformers" [];
	"transformers.models.albert.tokenization_albert_fast" -> "transformers" [];
	"transformers.models.albert.tokenization_albert" -> "transformers" [];
	"transformers.models.albert.modeling_tf_albert" -> "transformers" [];
	"transformers.models.albert.modeling_flax_albert" -> "transformers" [];
	"transformers.models.albert.modeling_albert" -> "transformers" [];
	"transformers.models.albert.configuration_albert" -> "transformers" [];
	"transformers.integrations.quanto" -> "transformers" [];
	"transformers.integrations.peft" -> "transformers" [];
	"transformers.integrations.integration_utils" -> "importlib" [];
	"transformers.integrations.integration_utils" -> "packaging" [];
	"transformers.integrations.hqq" -> "transformers" [];
	"transformers.integrations.fbgemm_fp8" -> "transformers" [];
	"transformers.integrations.eetq" -> "transformers" [];
	"transformers.integrations.eetq" -> "torch" [];
	"transformers.integrations.bitsandbytes" -> "importlib" [];
	"transformers.integrations.bitsandbytes" -> "transformers" [];
	"transformers.integrations.bitnet" -> "transformers" [];
	"transformers.integrations.awq" -> "transformers" [];
	"transformers.integrations.aqlm" -> "transformers" [];
	"transformers.integrations.aqlm" -> "torch" [];
	"transformers.generation.flax_utils" -> "transformers" [];
	"transformers.generation.tf_utils" -> "transformers" [];
	"transformers.generation.watermarking" -> "transformers" [];
	"transformers.generation.utils" -> "transformers" [];
	"transformers.generation.candidate_generator" -> "transformers" [];
	"transformers.generation.beam_search" -> "transformers" [];
	"transformers.data.data_collator" -> "collections" [];
	"transformers.data.data_collator" -> "transformers" [];
	"transformers.data.metrics" -> "transformers" [];
	"transformers.agents.text_to_speech" -> "transformers" [];
	"transformers.agents.image_question_answering" -> "transformers" [];
	"transformers.agents.document_question_answering" -> "transformers" [];
	"transformers.agents.default_tools" -> "importlib" [];
	"transformers.agents.default_tools" -> "transformers" [];
	"transformers.agents.python_interpreter" -> "collections" [];
	"transformers.agents.python_interpreter" -> "transformers" [];
	"transformers.agents.tools" -> "transformers" [];
	"transformers.agents.agent_types" -> "transformers" [];
	"transformers.agents.prompts" -> "transformers" [];
	"transformers.utils.logging" -> "huggingface_hub" [];
	"torch.xpu._gpu_trace" -> "torch" [];
	"torch.utils.model_zoo" -> "torch" [];
	"torch.utils.model_dump" -> "urllib" [];
	"torch.utils.model_dump" -> "importlib" [];
	"torch.testing._internal.logging_utils" -> "unittest" [];
	"torch.testing._internal.logging_utils" -> "torch" [];
	"torch.testing._internal.opinfo.core" -> "torchgen" [];
	"torch.testing._internal.opinfo.definitions._masked" -> "collections" [];
	"torch.testing._internal.distributed.rpc.rpc_test" -> "concurrent" [];
	"torch.testing._internal.distributed.distributed_utils" -> "torch" [];
	"torch.testing._internal.distributed.checkpoint_utils" -> "torch" [];
	"torch.testing._internal.dist_utils" -> "torch" [];
	"torch.testing._internal.data.network2" -> "torch" [];
	"torch.testing._internal.data.network1" -> "torch" [];
	"torch.nn.utils.prune" -> "collections" [];
	"torch.multiprocessing.queue" -> "multiprocessing" [];
	"torch.multiprocessing.pool" -> "multiprocessing" [];
	"torch.jit.generate_bytecode" -> "torch" [];
	"torch.fx.experimental.unification.core" -> "collections" [];
	"torch.fx.experimental.debug" -> "torch" [];
	"torch.distributed.tensor.debug._visualize_sharding" -> "torch" [];
	"torch.distributed.tensor.debug._op_coverage" -> "functorch" [];
	"torch.distributed.rpc._testing.faulty_agent_backend_registry" -> "torch" [];
	"torch.distributed.elastic.utils.distributed" -> "torch" [];
	"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" -> "torch" [];
	"torch.distributed.elastic.rendezvous.etcd_store" -> "torch" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "torch" [];
	"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "torch" [];
	"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "torch" [];
	"torch.distributed.elastic.rendezvous.api" -> "torch" [];
	"torch.distributed.elastic.multiprocessing.api" -> "torch" [];
	"torch.distributed.checkpoint._checkpointer" -> "concurrent" [];
	"torch.distributed.checkpoint._checkpointer" -> "torch" [];
	"torch.distributed._shard.sharded_optim" -> "torch" [];
	"torch.cuda._gpu_trace" -> "torch" [];
	"torch.ao.quantization.quantizer.utils" -> "torch" [];
	"torch.ao.quantization.fx.lower_to_qnnpack" -> "torch" [];
	"torch._numpy.testing.utils" -> "torch" [];
	"torch._inductor.codegen.cuda.cutlass_epilogue_gen" -> "unittest" [];
	"torch._export.serde.schema_check" -> "importlib" [];
	"torch._dynamo.test_minifier_common" -> "unittest" [];
	"torch._dynamo.backends.torchxla" -> "functorch" [];
	"torch._dynamo.backends.inductor" -> "torch" [];
	"torch._custom_op.functional" -> "torchgen" [];
	"torch.multiprocessing._atfork" -> "multiprocessing" [];
	"traceback" -> "collections" [];
	"<PyiModuleGraph>" -> "setuptools" [];
	"_elementtree" -> "xml" [];
	"plistlib" -> "xml" [];
	"setuptools._distutils.command.sdist" -> "setuptools" [];
	"setuptools._distutils.command.install_scripts" -> "setuptools" [];
	"setuptools._distutils.command.install_lib" -> "setuptools" [];
	"setuptools._distutils.command.install_headers" -> "setuptools" [];
	"setuptools._distutils.command.install_data" -> "setuptools" [];
	"setuptools._distutils.command.install" -> "setuptools" [];
	"setuptools._distutils.command.config" -> "setuptools" [];
	"setuptools._distutils.command.clean" -> "setuptools" [];
	"setuptools._distutils.command.check" -> "setuptools" [];
	"setuptools._distutils.command.build_scripts" -> "setuptools" [];
	"setuptools._distutils.command.build_py" -> "setuptools" [];
	"setuptools._distutils.command.build_ext" -> "setuptools" [];
	"setuptools._distutils.command.build_clib" -> "setuptools" [];
	"setuptools._distutils.command.build" -> "setuptools" [];
	"setuptools._distutils.command.bdist_rpm" -> "setuptools" [];
	"setuptools._distutils.command.bdist_dumb" -> "setuptools" [];
	"setuptools._distutils.command.bdist" -> "setuptools" [];
	"more_itertools" -> "setuptools" [];
	"importlib_resources" -> "setuptools" [];
	"importlib_metadata" -> "setuptools" [];
	"wheel" -> "setuptools" [];
	"setuptools.command.build" -> "distutils" [];
	"setuptools.config._validate_pyproject.formats" -> "setuptools" [];
	"tomli" -> "setuptools" [];
	"setuptools.command" -> "distutils" [];
	"setuptools._vendor.importlib_resources.future.adapters" -> "setuptools" [];
	"zipp" -> "setuptools" [];
	"setuptools._vendor.importlib_metadata.compat.py39" -> "setuptools" [];
	"kivy" -> "xml" [];
	"docutils.nodes" -> "xml" [];
	"docutils.utils.math.mathml_elements" -> "xml" [];
	"docutils.writers.docutils_xml" -> "xml" [];
	"docutils.writers._html_base" -> "xml" [];
	"kivy.input.providers.mactouch" -> "kivy" [];
	"kivy.input.providers.wm_pen" -> "kivy" [];
	"kivy.input.providers.wm_touch" -> "kivy" [];
	"kivy.core.video.video_ffmpeg" -> "kivy" [];
	"requests.models" -> "urllib" [];
	"urllib3.util.url" -> "urllib" [];
	"urllib3.util.timeout" -> "urllib" [];
	"urllib3.util.ssl_" -> "urllib" [];
	"urllib3.util.ssltransport" -> "urllib" [];
	"urllib3.util.retry" -> "urllib" [];
	"urllib3.http2.connection" -> "urllib" [];
	"urllib3.util.proxy" -> "urllib" [];
	"urllib3.util.response" -> "urllib" [];
	"urllib3.util.request" -> "urllib" [];
	"urllib3.util.connection" -> "urllib" [];
	"requests.adapters" -> "urllib" [];
	"urllib3.contrib.socks" -> "urllib" [];
	"requests.utils" -> "urllib" [];
	"requests.exceptions" -> "urllib" [];
	"urllib3.contrib.emscripten" -> "urllib" [];
	"urllib3.contrib.emscripten.connection" -> "urllib" [];
	"urllib3.contrib.emscripten.response" -> "urllib" [];
	"urllib3.contrib.emscripten.request" -> "urllib" [];
	"anyio.abc._tasks" -> "anyio" [];
	"anyio.abc._streams" -> "anyio" [];
	"anyio._core._tasks" -> "anyio" [];
	"anyio._core._streams" -> "anyio" [];
	"httpx._transports.wsgi" -> "http" [];
	"httpx._transports.mock" -> "http" [];
	"httpx._transports.default" -> "http" [];
	"httpx._transports.base" -> "http" [];
	"httpx._transports.asgi" -> "http" [];
	"numpy.lib._ufunclike_impl" -> "numpy" [];
	"numpy.lib._scimath_impl" -> "numpy" [];
	"numpy.lib.introspect" -> "numpy" [];
	"torch.utils.data.datapipes.datapipe" -> "torch" [];
	"torch.utils.data.graph" -> "torch" [];
	"torch.utils.data.datapipes.utils.common" -> "torch" [];
	"torch._library.triton" -> "torch" [];
	"torch._inductor.codegen.cuda_combined_scheduling" -> "torch" [];
	"torch._inductor.codegen.rocm.rocm_template_buffer" -> "torch" [];
	"torch.package.analyze.is_from_package" -> "torch" [];
	"torch.package.analyze.find_first_use_of_broken_modules" -> "torch" [];
	"torch.testing._internal.common_utils" -> "xml" [];
	"torch.ao.quantization.fx.custom_config" -> "torch" [];
	"torch.ao.ns.fx.ns_types" -> "torch" [];
	"torch.fx.experimental._config" -> "torch" [];
	"torch.export._tree_utils" -> "torch" [];
	"torch._export.pass_base" -> "functorch" [];
	"sympy.core.assumptions" -> "sympy" [];
	"sympy.core.random" -> "sympy" [];
	"sympy.matrices.dense" -> "sympy" [];
	"sympy.matrices.immutable" -> "mpmath" [];
	"sympy.matrices.sparse" -> "sympy" [];
	"sympy.matrices.utilities" -> "sympy" [];
	"sympy.matrices.expressions.special" -> "sympy" [];
	"mpmath.matrices.eigen" -> "mpmath" [];
	"mpmath.matrices.eigen_symmetric" -> "mpmath" [];
	"mpmath.matrices.linalg" -> "mpmath" [];
	"mpmath.matrices.calculus" -> "mpmath" [];
	"mpmath.calculus.odes" -> "mpmath" [];
	"mpmath.calculus.polynomials" -> "mpmath" [];
	"mpmath.calculus.extrapolation" -> "mpmath" [];
	"mpmath.calculus.differentiation" -> "mpmath" [];
	"mpmath.calculus.approximation" -> "mpmath" [];
	"mpmath.calculus.optimization" -> "mpmath" [];
	"mpmath.calculus.quadrature" -> "mpmath" [];
	"mpmath.functions.zeta" -> "mpmath" [];
	"mpmath.functions.hypergeometric" -> "mpmath" [];
	"mpmath.functions.factorials" -> "mpmath" [];
	"mpmath.functions.functions" -> "mpmath" [];
	"sympy.matrices.expressions.sets" -> "sympy" [];
	"sympy.matrices.kind" -> "sympy" [];
	"sympy.combinatorics.permutations" -> "mpmath" [];
	"sympy.combinatorics.pc_groups" -> "sympy" [];
	"sympy.printing.defaults" -> "sympy" [];
	"sympy.core._print_helpers" -> "sympy" [];
	"sympy.printing.latex" -> "mpmath" [];
	"sympy.printing.preview" -> "sympy" [];
	"sympy.sets.powerset" -> "sympy" [];
	"sympy.sets.conditionset" -> "sympy" [];
	"sympy.plotting.pygletplot" -> "sympy" [];
	"sympy.plotting.pygletplot.plot" -> "sympy" [];
	"sympy.plotting.pygletplot.plot_mode" -> "sympy" [];
	"sympy.plotting.pygletplot.plot_interval" -> "sympy" [];
	"sympy.geometry.polygon" -> "mpmath" [];
	"sympy.geometry.ellipse" -> "mpmath" [];
	"sympy.polys.domains" -> "sympy" [];
	"sympy.polys.domains.groundtypes" -> "sympy" [];
	"sympy.polys.distributedmodules" -> "sympy" [];
	"sympy.polys.polyclasses" -> "sympy" [];
	"sympy.polys.agca.ideals" -> "sympy" [];
	"sympy.combinatorics.group_constructs" -> "sympy" [];
	"sympy.polys.numberfields.galois_resolvents" -> "sympy" [];
	"sympy.polys.numberfields.primes" -> "sympy" [];
	"sympy.polys.numberfields.modules" -> "sympy" [];
	"sympy.polys.matrices.normalforms" -> "sympy" [];
	"sympy.ntheory.modular" -> "sympy" [];
	"sympy.polys.matrices.domainmatrix" -> "sympy" [];
	"sympy.polys.matrices.rref" -> "sympy" [];
	"sympy.polys.matrices.dfm" -> "sympy" [];
	"sympy.polys.matrices._dfm" -> "sympy" [];
	"sympy.polys.matrices.sdm" -> "sympy" [];
	"sympy.polys.matrices.ddm" -> "sympy" [];
	"sympy.polys.matrices.lll" -> "sympy" [];
	"sympy.polys.matrices.domainscalar" -> "sympy" [];
	"sympy.polys.numberfields.basis" -> "sympy" [];
	"sympy.polys.numberfields.utilities" -> "sympy" [];
	"sympy.printing.lambdarepr" -> "sympy" [];
	"sympy.codegen.abstract_nodes" -> "sympy" [];
	"sympy.core.traversal" -> "sympy" [];
	"sympy.matrices.expressions.applyfunc" -> "sympy" [];
	"sympy.tensor.array.expressions.arrayexpr_derivatives" -> "sympy" [];
	"sympy.tensor.array.array_derivatives" -> "sympy" [];
	"sympy.printing.cxx" -> "sympy" [];
	"sympy.codegen.cnodes" -> "sympy" [];
	"sympy.codegen.cfunctions" -> "sympy" [];
	"sympy.polys.ring_series" -> "mpmath" [];
	"sympy.ntheory.multinomial" -> "sympy" [];
	"sympy.polys.domains.gaussiandomains" -> "sympy" [];
	"sympy.geometry.util" -> "mpmath" [];
	"sympy.geometry.plane" -> "mpmath" [];
	"sympy.strategies.branch.traverse" -> "sympy" [];
	"sympy.strategies.util" -> "sympy" [];
	"sympy.strategies.rl" -> "sympy" [];
	"sympy.geometry.point" -> "mpmath" [];
	"sympy.core.evalf" -> "sympy" [];
	"sympy.plotting.pygletplot.color_scheme" -> "sympy" [];
	"sympy.plotting.textplot" -> "sympy" [];
	"sympy.plotting.plot_implicit" -> "sympy" [];
	"sympy.plotting.backends.textbackend.text" -> "sympy" [];
	"sympy.plotting.backends.base_backend" -> "sympy" [];
	"sympy.plotting.intervalmath.interval_arithmetic" -> "sympy" [];
	"sympy.plotting.intervalmath.interval_membership" -> "sympy" [];
	"sympy.plotting.utils" -> "sympy" [];
	"sympy.polys.matrices.linsolve" -> "sympy" [];
	"sympy.polys.solvers" -> "sympy" [];
	"sympy.physics.matrices" -> "sympy" [];
	"sympy.matrices.expressions.fourier" -> "sympy" [];
	"sympy.physics.units.systems.si" -> "sympy" [];
	"sympy.physics.units.systems.mks" -> "sympy" [];
	"sympy.physics.units.systems.length_weight_time" -> "sympy" [];
	"sympy.physics.units.systems.natural" -> "sympy" [];
	"sympy.physics.units.definitions.unit_definitions" -> "sympy" [];
	"sympy.physics.units.prefixes" -> "sympy" [];
	"sympy.physics.units.definitions.dimension_definitions" -> "sympy" [];
	"sympy.physics.units.quantities" -> "sympy" [];
	"sympy.physics.units.unitsystem" -> "sympy" [];
	"sympy.physics.units.dimensions" -> "sympy" [];
	"sympy.physics.control.lti" -> "mpmath" [];
	"sympy.functions.special.zeta_functions" -> "sympy" [];
	"sympy.ntheory.partitions_" -> "sympy" [];
	"sympy.ntheory.generate" -> "sympy" [];
	"sympy.vector.orienters" -> "sympy" [];
	"sympy.vector.point" -> "sympy" [];
	"sympy.vector.vector" -> "sympy" [];
	"sympy.concrete.expr_with_intlimits" -> "sympy" [];
	"sympy.printing.conventions" -> "sympy" [];
	"sympy.printing.printer" -> "sympy" [];
	"sympy.printing.precedence" -> "sympy" [];
	"sympy.printing.dot" -> "sympy" [];
	"sympy.printing.tableform" -> "sympy" [];
	"sympy.printing.gtk" -> "sympy" [];
	"sympy.printing.smtlib" -> "mpmath" [];
	"sympy.assumptions.assume" -> "sympy" [];
	"sympy.printing.mathml" -> "xml" [];
	"sympy.printing.pretty.pretty_symbology" -> "sympy" [];
	"sympy.combinatorics.coset_table" -> "sympy" [];
	"sympy.matrices.normalforms" -> "sympy" [];
	"sympy.combinatorics.homomorphisms" -> "sympy" [];
	"sympy.ntheory.primetest" -> "sympy" [];
	"sympy.ntheory.factor_" -> "sympy" [];
	"sympy.ntheory.ecm" -> "sympy" [];
	"sympy.ntheory.digits" -> "sympy" [];
	"sympy.ntheory.qs" -> "sympy" [];
	"sympy.printing.repr" -> "sympy" [];
	"sympy.polys.groebnertools" -> "sympy" [];
	"sympy.matrices.expressions._shape" -> "sympy" [];
	"sympy.matrices.expressions.transpose" -> "sympy" [];
	"sympy.matrices.expressions.determinant" -> "sympy" [];
	"sympy.matrices.expressions.trace" -> "sympy" [];
	"sympy.matrices.expressions.companion" -> "sympy" [];
	"sympy.matrices.expressions.slice" -> "sympy" [];
	"mpmath.matrices.matrices" -> "mpmath" [];
	"sympy.matrices.solvers" -> "sympy" [];
	"sympy.polys.matrices.eigen" -> "sympy" [];
	"sympy.polys.agca.extensions" -> "sympy" [];
	"sympy.matrices.repmatrix" -> "sympy" [];
	"sympy.matrices.sparsetools" -> "sympy" [];
	"sympy.matrices.graph" -> "sympy" [];
	"sympy.matrices.inverse" -> "sympy" [];
	"sympy.matrices.reductions" -> "sympy" [];
	"sympy.series.series" -> "sympy" [];
	"sympy.series.limitseq" -> "sympy" [];
	"sympy.calculus.finite_diff" -> "sympy" [];
	"sympy.calculus.euler" -> "sympy" [];
	"sympy.series.series_class" -> "sympy" [];
	"sympy.series.residues" -> "sympy" [];
	"sympy.core.mod" -> "sympy" [];
	"sympy.core.intfunc" -> "sympy" [];
	"sympy.geometry.curve" -> "mpmath" [];
	"sympy.calculus.singularities" -> "sympy" [];
	"sympy.integrals.manualintegrate" -> "sympy" [];
	"sympy.integrals.risch" -> "sympy" [];
	"sympy.polys.polymatrix" -> "sympy" [];
	"sympy.concrete.summations" -> "sympy" [];
	"sympy.solvers.bivariate" -> "sympy" [];
	"sympy.functions.special.mathieu_functions" -> "sympy" [];
	"sympy.core.mul" -> "sympy" [];
	"sympy.printing.pretty.stringpict" -> "sympy" [];
	"sympy.functions.elementary._trigonometric_special" -> "sympy" [];
	"sympy.core.exprtools" -> "sympy" [];
	"sympy.core.expr" -> "sympy" [];
	"sympy.assumptions.ask_generated" -> "sympy" [];
	"sympy.assumptions.lra_satask" -> "sympy" [];
	"sympy.matrices.expressions.factorizations" -> "sympy" [];
	"sympy.assumptions.cnf" -> "sympy" [];
	"sympy.assumptions.facts" -> "sympy" [];
	"sympy.assumptions.wrapper" -> "sympy" [];
	"sympy.logic.inference" -> "sympy" [];
	"sympy.logic.algorithms.minisat22_wrapper" -> "sympy" [];
	"sympy.logic.algorithms.pycosat_wrapper" -> "sympy" [];
	"sympy.logic.algorithms.dpll2" -> "sympy" [];
	"sympy.logic.algorithms.dpll" -> "sympy" [];
	"sympy.core.symbol" -> "sympy" [];
	"sympy.core.sympify" -> "sympy" [];
	"sympy.core.sorting" -> "sympy" [];
	"sympy.core.operations" -> "sympy" [];
	"sympy.core.kind" -> "sympy" [];
	"sympy.core.containers" -> "sympy" [];
	"sympy.core.basic" -> "sympy" [];
	"sympy.core.add" -> "sympy" [];
	"functorch.experimental" -> "torch" [];
	"torch.fx.immutable_collections" -> "torch" [];
	"torch.fx.passes.infra.pass_base" -> "torch" [];
	"torch.onnx._internal.exporter._errors" -> "torch" [];
	"torch.fx.passes.infra.partitioner" -> "torch" [];
	"torch._inductor.codegen.cuda.cuda_kernel" -> "torch" [];
	"win32com.client.selecttlb" -> "pywin" [];
	"torch._inductor.kernel.unpack_mixed_mm" -> "torch" [];
	"torch._inductor.codegen.rocm.rocm_kernel" -> "torch" [];
	"torch._inductor.codegen.rocm.rocm_template" -> "torch" [];
	"torch.fx.passes.graph_transform_observer" -> "torch" [];
	"torch.distributed.checkpoint.staging" -> "torch" [];
	"torch.distributed.checkpoint.logger" -> "torch" [];
	"torch.distributed.checkpoint.logging_handlers" -> "torch" [];
	"torch.distributed.tensor.device_mesh" -> "torch" [];
	"torch.distributed.tensor.parallel._utils" -> "torch" [];
	"torch.distributed._shard.metadata" -> "torch" [];
	"torch.distributed.tensor._ops._einsum_strategy" -> "torch" [];
	"torch._dynamo.polyfills.os" -> "torch" [];
	"torch._dynamo.polyfills.itertools" -> "torch" [];
	"torch._dynamo.polyfills.builtins" -> "torch" [];
	"torch._dynamo.variables.lazy" -> "torch" [];
	"networkx.readwrite.gexf" -> "xml" [];
	"networkx.readwrite.graphml" -> "xml" [];
	"torch._functorch.config" -> "torch" [];
	"torch._dynamo.replay_record" -> "torch" [];
	"torch._logging.structured" -> "torch" [];
	"torch.utils._triton" -> "torch" [];
	"torch._inductor.ir" -> "torchgen" [];
	"sympy.algebras.quaternion" -> "sympy" [];
	"sympy.algebras.quaternion" -> "mpmath" [];
	"huggingface_hub._commit_api" -> "tqdm" [];
	"huggingface_hub._tensorboard_logger" -> "torch" [];
	"transformers.integrations.tpu" -> "torch" [];
	"transformers.quantizers.auto" -> "transformers" [];
	"transformers.pipelines.pt_utils" -> "transformers" [];
	"transformers.generation.streamers" -> "transformers" [];
	"transformers.agents.translation" -> "transformers" [];
	"transformers.agents.speech_to_text" -> "transformers" [];
	"transformers.agents.llm_engine" -> "transformers" [];
	"torch.utils.benchmark.examples.fuzzer" -> "torch" [];
	"torch.testing._internal.triton_utils" -> "torch" [];
	"torch.testing._internal.hop_db" -> "functorch" [];
	"torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture" -> "torch" [];
	"torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture" -> "torch" [];
	"torch.fx.passes.utils.source_matcher_utils" -> "torch" [];
	"torch.fx.experimental.unify_refinements" -> "torch" [];
	"torch.fx.experimental.partitioner_utils" -> "torch" [];
	"torch.fx.experimental.migrate_gradual_types.transform_to_z3" -> "torch" [];
	"torch.fx.experimental.migrate_gradual_types.constraint_transformation" -> "torch" [];
	"torch.fx.experimental.migrate_gradual_types.constraint" -> "torch" [];
	"torch.distributed.launcher.api" -> "torch" [];
	"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "urllib" [];
	"torch.distributed.elastic.multiprocessing.tail_log" -> "concurrent" [];
	"torch.distributed.elastic.agent.server.local_elastic_agent" -> "torch" [];
	"torch._inductor.test_case" -> "torch" [];
	"torch._inductor.compile_worker.__main__" -> "torch" [];
	"torch._inductor.codegen.cuda.cutlass_epilogue_gen" -> "torch" [];
	"torch._functorch.pytree_hacks" -> "torch" [];
	"torch._export.db.examples.dynamic_shape_map" -> "functorch" [];
	"torch._export.db.examples.cond_predicate" -> "functorch" [];
	"torch._export.db.examples.cond_operands" -> "functorch" [];
	"torch._export.db.examples.cond_closed_over_variable" -> "functorch" [];
	"torch._export.db.examples.cond_branch_nonlocal_variables" -> "functorch" [];
	"torch._export.db.examples.cond_branch_nested_function" -> "functorch" [];
	"torch._export.db.examples.cond_branch_class_method" -> "functorch" [];
	"jaraco.functools" -> "setuptools" [];
	"jaraco.text" -> "setuptools" [];
	"setuptools._vendor.wheel.cli.tags" -> "setuptools" [];
	"setuptools._vendor.wheel.cli.pack" -> "setuptools" [];
	"setuptools._vendor.wheel.cli.unpack" -> "setuptools" [];
	"jaraco.context" -> "setuptools" [];
	"backports.tarfile" -> "setuptools" [];
	"torch._inductor.codegen.cuda.device_op_overrides" -> "torch" [];
	"torch.ao.quantization.fx.pattern_utils" -> "torch" [];
	"sympy.physics.units.systems.mksa" -> "sympy" [];
	"torch._functorch.python_key" -> "torch" [];
	"torch.onnx._internal.diagnostics.infra.decorator" -> "torch" [];
	"torch.onnx._internal.diagnostics.infra.context" -> "torch" [];
	"torch.onnx._internal.fx.analysis.unsupported_nodes" -> "torch" [];
	"torch.utils.tensorboard" -> "torch" [];
	"torch.distributed._shard.sharding_spec._internals" -> "torch" [];
	"torch.distributed._shard.sharded_tensor._ops._common" -> "torch" [];
	"torch._inductor.sizevars" -> "torch" [];
	"torch.utils._sympy.functions" -> "torch" [];
	"torch._inductor.extern_node_serializer" -> "torch" [];
	"torch._inductor.codegen.xpu.device_op_overrides" -> "torch" [];
	"torch.utils.data.datapipes.utils.snapshot" -> "torch" [];
	"torch.testing._internal.opinfo.refs" -> "torch" [];
	"torch.testing._internal.distributed.rpc_utils" -> "torch" [];
	"torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" -> "torch" [];
	"torch.quantization.utils" -> "torch" [];
	"torch.quantization.stubs" -> "torch" [];
	"torch.quantization.quantize_jit" -> "torch" [];
	"torch.quantization.quantize_fx" -> "torch" [];
	"torch.quantization.quantize" -> "torch" [];
	"torch.quantization.quantization_mappings" -> "torch" [];
	"torch.quantization.quant_type" -> "torch" [];
	"torch.quantization.qconfig" -> "torch" [];
	"torch.quantization.observer" -> "torch" [];
	"torch.quantization.fx.quantization_types" -> "torch" [];
	"torch.quantization.fuser_method_mappings" -> "torch" [];
	"torch.quantization.fuse_modules" -> "torch" [];
	"torch.quantization.fake_quantize" -> "torch" [];
	"torch.quantization._numeric_suite_fx" -> "torch" [];
	"torch.quantization._numeric_suite" -> "torch" [];
	"torch.nn.intrinsic.modules.fused" -> "torch" [];
	"torch.fx.passes.tests.test_pass_manager" -> "torch" [];
	"torch.distributed.elastic.agent.server.api" -> "torch" [];
	"torch.distributed._tensor.placement_types" -> "torch" [];
	"torch.distributed._tensor.api" -> "torch" [];
	"torch.cuda.comm" -> "torch" [];
	"torch.backends.xeon.run_cpu" -> "torch" [];
	"torch.ao.pruning._mappings" -> "torch" [];
	"torch._inductor.autoheuristic.artifacts._PadMMA100" -> "torch" [];
	"torch._inductor.autoheuristic.artifacts._MixedMMH100" -> "torch" [];
	"torch._inductor.autoheuristic.artifacts._MixedMMA100" -> "torch" [];
	"torch._inductor.autoheuristic.artifacts._MMRankingH100" -> "torch" [];
	"torch._inductor.autoheuristic.artifacts._MMRankingA100" -> "torch" [];
	"torch._dynamo.backends.onnxrt" -> "torch" [];
	"torch.nn.intrinsic" -> "torch" [];
	"torch.utils.data.datapipes.map.utils" -> "torch" [];
	"torch.utils.data.datapipes.map.grouping" -> "torch" [];
	"torch.utils.data.datapipes.map.combining" -> "torch" [];
	"torch.utils.data.datapipes.map.callable" -> "torch" [];
	"torch.utils.data.datapipes.iter.utils" -> "torch" [];
	"torch.utils.data.datapipes.iter.streamreader" -> "torch" [];
	"torch.utils.data.datapipes.iter.sharding" -> "torch" [];
	"torch.utils.data.datapipes.iter.selecting" -> "torch" [];
	"torch.utils.data.datapipes.iter.routeddecoder" -> "torch" [];
	"torch.utils.data.datapipes.iter.grouping" -> "torch" [];
	"torch.utils.data.datapipes.iter.fileopener" -> "torch" [];
	"torch.utils.data.datapipes.iter.filelister" -> "torch" [];
	"torch.utils.data.datapipes.iter.combining" -> "torch" [];
	"torch.utils.data.datapipes.iter.callable" -> "torch" [];
	"torch.utils.data.datapipes.dataframe.datapipes" -> "torch" [];
	"torch.utils.data.datapipes.dataframe.dataframes" -> "torch" [];
	"torch.utils.data.datapipes.dataframe.structures" -> "torch" [];
	"torch.quantization.fx.utils" -> "torch" [];
	"torch.quantization.fx.quantization_patterns" -> "torch" [];
	"torch.quantization.fx.prepare" -> "torch" [];
	"torch.quantization.fx.pattern_utils" -> "torch" [];
	"torch.quantization.fx.match_utils" -> "torch" [];
	"torch.quantization.fx.graph_module" -> "torch" [];
	"torch.quantization.fx.fusion_patterns" -> "torch" [];
	"torch.quantization.fx.fuse" -> "torch" [];
	"torch.quantization.fx.convert" -> "torch" [];
	"torch.quantization.fx._equalize" -> "torch" [];
	"torch.quantization.fx" -> "torch" [];
	"torch.nn.quantized.modules" -> "torch" [];
	"torch.nn.quantized.functional" -> "torch" [];
	"torch.nn.quantized.dynamic" -> "torch" [];
	"torch.nn.intrinsic.quantized.modules.linear_relu" -> "torch" [];
	"torch.nn.intrinsic.quantized.modules.conv_relu" -> "torch" [];
	"torch.nn.intrinsic.quantized.modules.bn_relu" -> "torch" [];
	"torch.nn.intrinsic.qat.modules.linear_relu" -> "torch" [];
	"torch.nn.intrinsic.qat.modules.linear_fused" -> "torch" [];
	"torch.nn.intrinsic.qat.modules.conv_fused" -> "torch" [];
	"torch.distributed.elastic.timer.file_based_local_timer" -> "torch" [];
	"torch.distributed.elastic.timer.debug_info_logging" -> "torch" [];
	"torch.distributed.elastic.multiprocessing.errors" -> "torch" [];
	"torch.distributed.elastic.agent.server.health_check_server" -> "torch" [];
	"torch.ao.pruning.scheduler.base_scheduler" -> "torch" [];
	"torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" -> "torch" [];
	"torch._inductor.codegen.cuda.cutlass_lib_extensions.gemm_operation_extensions" -> "torch" [];
	"torch.distributed._shard.sharded_tensor._ops" -> "torch" [];
	"torch.nn.quantized.modules.utils" -> "torch" [];
	"torch.nn.quantized.modules.rnn" -> "torch" [];
	"torch.nn.quantized.modules.normalization" -> "torch" [];
	"torch.nn.quantized.modules.linear" -> "torch" [];
	"torch.nn.quantized.modules.functional_modules" -> "torch" [];
	"torch.nn.quantized.modules.embedding_ops" -> "torch" [];
	"torch.nn.quantized.modules.dropout" -> "torch" [];
	"torch.nn.quantized.modules.conv" -> "torch" [];
	"torch.nn.quantized.modules.batchnorm" -> "torch" [];
	"torch.nn.quantized.modules.activation" -> "torch" [];
	"torch.nn.quantized.dynamic.modules" -> "torch" [];
	"torch.nn.quantizable.modules.rnn" -> "torch" [];
	"torch.nn.quantizable.modules.activation" -> "torch" [];
	"torch.nn.quantizable.modules" -> "torch" [];
	"torch.nn.qat.modules.linear" -> "torch" [];
	"torch.nn.qat.modules.embedding_ops" -> "torch" [];
	"torch.nn.qat.modules.conv" -> "torch" [];
	"torch.nn.qat.modules" -> "torch" [];
	"torch.nn.intrinsic.quantized.dynamic.modules.linear_relu" -> "torch" [];
	"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks._data_sparstity_utils" -> "torch" [];
	"torch.nn.quantized.dynamic.modules.rnn" -> "torch" [];
	"torch.nn.quantized.dynamic.modules.linear" -> "torch" [];
	"torch.nn.quantized.dynamic.modules.conv" -> "torch" [];
	"torch.nn.quantized._reference.modules.utils" -> "torch" [];
	"torch.nn.quantized._reference.modules.sparse" -> "torch" [];
	"torch.nn.quantized._reference.modules.rnn" -> "torch" [];
	"torch.nn.quantized._reference.modules.linear" -> "torch" [];
	"torch.nn.quantized._reference.modules.conv" -> "torch" [];
	"torch.nn.quantized._reference.modules" -> "torch" [];
	"torch.nn.qat.dynamic.modules.linear" -> "torch" [];
}
